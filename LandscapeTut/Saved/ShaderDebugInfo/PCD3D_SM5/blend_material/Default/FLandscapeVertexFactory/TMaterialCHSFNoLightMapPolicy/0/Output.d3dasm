; shader hash: ec2e991ca4e27313225ce9d4d738eb43
;
; Buffer Definitions:
;
; cbuffer UniformBufferConstants_View
; {
;
;   struct UniformBufferConstants_View
;   {
;
;       row_major float4x4 View_TranslatedWorldToClip;; Offset:    0
;       row_major float4x4 View_TranslatedWorldToSubpixelClip;; Offset:   64
;       row_major float4x4 View_RelativeWorldToClip;  ; Offset:  128
;       row_major float4x4 View_ClipToRelativeWorld;  ; Offset:  192
;       row_major float4x4 View_TranslatedWorldToView;; Offset:  256
;       row_major float4x4 View_ViewToTranslatedWorld;; Offset:  320
;       row_major float4x4 View_TranslatedWorldToCameraView;; Offset:  384
;       row_major float4x4 View_CameraViewToTranslatedWorld;; Offset:  448
;       row_major float4x4 View_ViewToClip;           ; Offset:  512
;       row_major float4x4 View_ViewToClipNoAA;       ; Offset:  576
;       row_major float4x4 View_ClipToView;           ; Offset:  640
;       row_major float4x4 View_ClipToTranslatedWorld;; Offset:  704
;       row_major float4x4 View_SVPositionToTranslatedWorld;; Offset:  768
;       row_major float4x4 View_ScreenToRelativeWorld;; Offset:  832
;       row_major float4x4 View_ScreenToTranslatedWorld;; Offset:  896
;       row_major float4x4 View_MobileMultiviewShadowTransform;; Offset:  960
;       float3 View_ViewTilePosition;                 ; Offset: 1024
;       float PrePadding_View_1036;                   ; Offset: 1036
;       float3 View_MatrixTilePosition;               ; Offset: 1040
;       float PrePadding_View_1052;                   ; Offset: 1052
;       float3 View_ViewForward;                      ; Offset: 1056
;       float PrePadding_View_1068;                   ; Offset: 1068
;       float3 View_ViewUp;                           ; Offset: 1072
;       float PrePadding_View_1084;                   ; Offset: 1084
;       float3 View_ViewRight;                        ; Offset: 1088
;       float PrePadding_View_1100;                   ; Offset: 1100
;       float3 View_HMDViewNoRollUp;                  ; Offset: 1104
;       float PrePadding_View_1116;                   ; Offset: 1116
;       float3 View_HMDViewNoRollRight;               ; Offset: 1120
;       float PrePadding_View_1132;                   ; Offset: 1132
;       float4 View_InvDeviceZToWorldZTransform;      ; Offset: 1136
;       float4 View_ScreenPositionScaleBias;          ; Offset: 1152
;       float3 View_RelativeWorldCameraOrigin;        ; Offset: 1168
;       float PrePadding_View_1180;                   ; Offset: 1180
;       float3 View_TranslatedWorldCameraOrigin;      ; Offset: 1184
;       float PrePadding_View_1196;                   ; Offset: 1196
;       float3 View_RelativeWorldViewOrigin;          ; Offset: 1200
;       float PrePadding_View_1212;                   ; Offset: 1212
;       float3 View_RelativePreViewTranslation;       ; Offset: 1216
;       float PrePadding_View_1228;                   ; Offset: 1228
;       row_major float4x4 View_PrevViewToClip;       ; Offset: 1232
;       row_major float4x4 View_PrevClipToView;       ; Offset: 1296
;       row_major float4x4 View_PrevTranslatedWorldToClip;; Offset: 1360
;       row_major float4x4 View_PrevTranslatedWorldToView;; Offset: 1424
;       row_major float4x4 View_PrevViewToTranslatedWorld;; Offset: 1488
;       row_major float4x4 View_PrevTranslatedWorldToCameraView;; Offset: 1552
;       row_major float4x4 View_PrevCameraViewToTranslatedWorld;; Offset: 1616
;       float3 View_PrevTranslatedWorldCameraOrigin;  ; Offset: 1680
;       float PrePadding_View_1692;                   ; Offset: 1692
;       float3 View_PrevRelativeWorldCameraOrigin;    ; Offset: 1696
;       float PrePadding_View_1708;                   ; Offset: 1708
;       float3 View_PrevRelativeWorldViewOrigin;      ; Offset: 1712
;       float PrePadding_View_1724;                   ; Offset: 1724
;       float3 View_RelativePrevPreViewTranslation;   ; Offset: 1728
;       float PrePadding_View_1740;                   ; Offset: 1740
;       row_major float4x4 View_PrevClipToRelativeWorld;; Offset: 1744
;       row_major float4x4 View_PrevScreenToTranslatedWorld;; Offset: 1808
;       row_major float4x4 View_ClipToPrevClip;       ; Offset: 1872
;       row_major float4x4 View_ClipToPrevClipWithAA; ; Offset: 1936
;       float4 View_TemporalAAJitter;                 ; Offset: 2000
;       float4 View_GlobalClippingPlane;              ; Offset: 2016
;       float2 View_FieldOfViewWideAngles;            ; Offset: 2032
;       float2 View_PrevFieldOfViewWideAngles;        ; Offset: 2040
;       float4 View_ViewRectMin;                      ; Offset: 2048
;       float4 View_ViewSizeAndInvSize;               ; Offset: 2064
;       uint4 View_ViewRectMinAndSize;                ; Offset: 2080
;       float4 View_LightProbeSizeRatioAndInvSizeRatio;; Offset: 2096
;       float4 View_BufferSizeAndInvSize;             ; Offset: 2112
;       float4 View_BufferBilinearUVMinMax;           ; Offset: 2128
;       float4 View_ScreenToViewSpace;                ; Offset: 2144
;       float2 View_BufferToSceneTextureScale;        ; Offset: 2160
;       float2 View_ResolutionFractionAndInv;         ; Offset: 2168
;       int View_NumSceneColorMSAASamples;            ; Offset: 2176
;       float View_SeparateWaterMainDirLightLuminance;; Offset: 2180
;       float View_PreExposure;                       ; Offset: 2184
;       float View_OneOverPreExposure;                ; Offset: 2188
;       float4 View_DiffuseOverrideParameter;         ; Offset: 2192
;       float4 View_SpecularOverrideParameter;        ; Offset: 2208
;       float4 View_NormalOverrideParameter;          ; Offset: 2224
;       float2 View_RoughnessOverrideParameter;       ; Offset: 2240
;       float View_PrevFrameGameTime;                 ; Offset: 2248
;       float View_PrevFrameRealTime;                 ; Offset: 2252
;       float View_OutOfBoundsMask;                   ; Offset: 2256
;       float PrePadding_View_2260;                   ; Offset: 2260
;       float PrePadding_View_2264;                   ; Offset: 2264
;       float PrePadding_View_2268;                   ; Offset: 2268
;       float3 View_WorldCameraMovementSinceLastFrame;; Offset: 2272
;       float View_CullingSign;                       ; Offset: 2284
;       float View_NearPlane;                         ; Offset: 2288
;       float View_GameTime;                          ; Offset: 2292
;       float View_RealTime;                          ; Offset: 2296
;       float View_DeltaTime;                         ; Offset: 2300
;       float View_MaterialTextureMipBias;            ; Offset: 2304
;       float View_MaterialTextureDerivativeMultiply; ; Offset: 2308
;       uint View_Random;                             ; Offset: 2312
;       uint View_FrameNumber;                        ; Offset: 2316
;       uint View_StateFrameIndexMod8;                ; Offset: 2320
;       uint View_StateFrameIndex;                    ; Offset: 2324
;       uint View_DebugViewModeMask;                  ; Offset: 2328
;       float View_CameraCut;                         ; Offset: 2332
;       float View_UnlitViewmodeMask;                 ; Offset: 2336
;       float PrePadding_View_2340;                   ; Offset: 2340
;       float PrePadding_View_2344;                   ; Offset: 2344
;       float PrePadding_View_2348;                   ; Offset: 2348
;       float4 View_DirectionalLightColor;            ; Offset: 2352
;       float3 View_DirectionalLightDirection;        ; Offset: 2368
;       float PrePadding_View_2380;                   ; Offset: 2380
;       float4 View_TranslucencyLightingVolumeMin[2]; ; Offset: 2384
;       float4 View_TranslucencyLightingVolumeInvSize[2];; Offset: 2416
;       float4 View_TemporalAAParams;                 ; Offset: 2448
;       float4 View_CircleDOFParams;                  ; Offset: 2464
;       float View_DepthOfFieldSensorWidth;           ; Offset: 2480
;       float View_DepthOfFieldFocalDistance;         ; Offset: 2484
;       float View_DepthOfFieldScale;                 ; Offset: 2488
;       float View_DepthOfFieldFocalLength;           ; Offset: 2492
;       float View_DepthOfFieldFocalRegion;           ; Offset: 2496
;       float View_DepthOfFieldNearTransitionRegion;  ; Offset: 2500
;       float View_DepthOfFieldFarTransitionRegion;   ; Offset: 2504
;       float View_MotionBlurNormalizedToPixel;       ; Offset: 2508
;       float View_GeneralPurposeTweak;               ; Offset: 2512
;       float View_GeneralPurposeTweak2;              ; Offset: 2516
;       float View_DemosaicVposOffset;                ; Offset: 2520
;       float View_DecalDepthBias;                    ; Offset: 2524
;       float3 View_IndirectLightingColorScale;       ; Offset: 2528
;       float PrePadding_View_2540;                   ; Offset: 2540
;       float3 View_PrecomputedIndirectLightingColorScale;; Offset: 2544
;       float PrePadding_View_2556;                   ; Offset: 2556
;       float3 View_PrecomputedIndirectSpecularColorScale;; Offset: 2560
;       float PrePadding_View_2572;                   ; Offset: 2572
;       float4 View_AtmosphereLightDirection[2];      ; Offset: 2576
;       float4 View_AtmosphereLightIlluminanceOnGroundPostTransmittance[2];; Offset: 2608
;       float4 View_AtmosphereLightIlluminanceOuterSpace[2];; Offset: 2640
;       float4 View_AtmosphereLightDiscLuminance[2];  ; Offset: 2672
;       float4 View_AtmosphereLightDiscCosHalfApexAngle_PPTrans[2];; Offset: 2704
;       float4 View_SkyViewLutSizeAndInvSize;         ; Offset: 2736
;       float3 View_SkyCameraTranslatedWorldOrigin;   ; Offset: 2752
;       float PrePadding_View_2764;                   ; Offset: 2764
;       float4 View_SkyPlanetTranslatedWorldCenterAndViewHeight;; Offset: 2768
;       row_major float4x4 View_SkyViewLutReferential;; Offset: 2784
;       float4 View_SkyAtmosphereSkyLuminanceFactor;  ; Offset: 2848
;       float View_SkyAtmospherePresentInScene;       ; Offset: 2864
;       float View_SkyAtmosphereHeightFogContribution;; Offset: 2868
;       float View_SkyAtmosphereBottomRadiusKm;       ; Offset: 2872
;       float View_SkyAtmosphereTopRadiusKm;          ; Offset: 2876
;       float4 View_SkyAtmosphereCameraAerialPerspectiveVolumeSizeAndInvSize;; Offset: 2880
;       float View_SkyAtmosphereAerialPerspectiveStartDepthKm;; Offset: 2896
;       float View_SkyAtmosphereCameraAerialPerspectiveVolumeDepthResolution;; Offset: 2900
;       float View_SkyAtmosphereCameraAerialPerspectiveVolumeDepthResolutionInv;; Offset: 2904
;       float View_SkyAtmosphereCameraAerialPerspectiveVolumeDepthSliceLengthKm;; Offset: 2908
;       float View_SkyAtmosphereCameraAerialPerspectiveVolumeDepthSliceLengthKmInv;; Offset: 2912
;       float View_SkyAtmosphereApplyCameraAerialPerspectiveVolume;; Offset: 2916
;       float PrePadding_View_2920;                   ; Offset: 2920
;       float PrePadding_View_2924;                   ; Offset: 2924
;       float3 View_NormalCurvatureToRoughnessScaleBias;; Offset: 2928
;       float View_RenderingReflectionCaptureMask;    ; Offset: 2940
;       float View_RealTimeReflectionCapture;         ; Offset: 2944
;       float View_RealTimeReflectionCapturePreExposure;; Offset: 2948
;       float PrePadding_View_2952;                   ; Offset: 2952
;       float PrePadding_View_2956;                   ; Offset: 2956
;       float4 View_AmbientCubemapTint;               ; Offset: 2960
;       float View_AmbientCubemapIntensity;           ; Offset: 2976
;       float View_SkyLightApplyPrecomputedBentNormalShadowingFlag;; Offset: 2980
;       float View_SkyLightAffectReflectionFlag;      ; Offset: 2984
;       float View_SkyLightAffectGlobalIlluminationFlag;; Offset: 2988
;       float4 View_SkyLightColor;                    ; Offset: 2992
;       float4 View_MobileSkyIrradianceEnvironmentMap[8];; Offset: 3008
;       float View_MobilePreviewMode;                 ; Offset: 3136
;       float View_HMDEyePaddingOffset;               ; Offset: 3140
;       float View_ReflectionCubemapMaxMip;           ; Offset: 3144
;       float View_ShowDecalsMask;                    ; Offset: 3148
;       uint View_DistanceFieldAOSpecularOcclusionMode;; Offset: 3152
;       float View_IndirectCapsuleSelfShadowingIntensity;; Offset: 3156
;       float PrePadding_View_3160;                   ; Offset: 3160
;       float PrePadding_View_3164;                   ; Offset: 3164
;       float3 View_ReflectionEnvironmentRoughnessMixingScaleBiasAndLargestWeight;; Offset: 3168
;       int View_StereoPassIndex;                     ; Offset: 3180
;       float4 View_GlobalVolumeCenterAndExtent[6];   ; Offset: 3184
;       float4 View_GlobalVolumeWorldToUVAddAndMul[6];; Offset: 3280
;       float4 View_GlobalDistanceFieldMipWorldToUVScale[6];; Offset: 3376
;       float4 View_GlobalDistanceFieldMipWorldToUVBias[6];; Offset: 3472
;       float View_GlobalDistanceFieldMipFactor;      ; Offset: 3568
;       float View_GlobalDistanceFieldMipTransition;  ; Offset: 3572
;       int View_GlobalDistanceFieldClipmapSizeInPages;; Offset: 3576
;       int PrePadding_View_3580;                     ; Offset: 3580
;       float3 View_GlobalDistanceFieldInvPageAtlasSize;; Offset: 3584
;       float PrePadding_View_3596;                   ; Offset: 3596
;       float3 View_GlobalDistanceFieldInvCoverageAtlasSize;; Offset: 3600
;       float View_GlobalVolumeDimension;             ; Offset: 3612
;       float View_GlobalVolumeTexelSize;             ; Offset: 3616
;       float View_MaxGlobalDFAOConeDistance;         ; Offset: 3620
;       uint View_NumGlobalSDFClipmaps;               ; Offset: 3624
;       float View_CoveredExpandSurfaceScale;         ; Offset: 3628
;       float View_NotCoveredExpandSurfaceScale;      ; Offset: 3632
;       float View_NotCoveredMinStepScale;            ; Offset: 3636
;       float View_DitheredTransparencyStepThreshold; ; Offset: 3640
;       float View_DitheredTransparencyTraceThreshold;; Offset: 3644
;       int2 View_CursorPosition;                     ; Offset: 3648
;       float View_bCheckerboardSubsurfaceProfileRendering;; Offset: 3656
;       float PrePadding_View_3660;                   ; Offset: 3660
;       float3 View_VolumetricFogInvGridSize;         ; Offset: 3664
;       float PrePadding_View_3676;                   ; Offset: 3676
;       float3 View_VolumetricFogGridZParams;         ; Offset: 3680
;       float PrePadding_View_3692;                   ; Offset: 3692
;       float2 View_VolumetricFogSVPosToVolumeUV;     ; Offset: 3696
;       float View_VolumetricFogMaxDistance;          ; Offset: 3704
;       float PrePadding_View_3708;                   ; Offset: 3708
;       float3 View_VolumetricLightmapWorldToUVScale; ; Offset: 3712
;       float PrePadding_View_3724;                   ; Offset: 3724
;       float3 View_VolumetricLightmapWorldToUVAdd;   ; Offset: 3728
;       float PrePadding_View_3740;                   ; Offset: 3740
;       float3 View_VolumetricLightmapIndirectionTextureSize;; Offset: 3744
;       float View_VolumetricLightmapBrickSize;       ; Offset: 3756
;       float3 View_VolumetricLightmapBrickTexelSize; ; Offset: 3760
;       float View_IndirectLightingCacheShowFlag;     ; Offset: 3772
;       float View_EyeToPixelSpreadAngle;             ; Offset: 3776
;       float PrePadding_View_3780;                   ; Offset: 3780
;       float PrePadding_View_3784;                   ; Offset: 3784
;       float PrePadding_View_3788;                   ; Offset: 3788
;       float4 View_XRPassthroughCameraUVs[2];        ; Offset: 3792
;       float View_GlobalVirtualTextureMipBias;       ; Offset: 3824
;       uint View_VirtualTextureFeedbackShift;        ; Offset: 3828
;       uint View_VirtualTextureFeedbackMask;         ; Offset: 3832
;       uint View_VirtualTextureFeedbackStride;       ; Offset: 3836
;       uint View_VirtualTextureFeedbackJitterOffset; ; Offset: 3840
;       uint View_VirtualTextureFeedbackSampleOffset; ; Offset: 3844
;       uint PrePadding_View_3848;                    ; Offset: 3848
;       uint PrePadding_View_3852;                    ; Offset: 3852
;       float4 View_RuntimeVirtualTextureMipLevel;    ; Offset: 3856
;       float2 View_RuntimeVirtualTexturePackHeight;  ; Offset: 3872
;       float PrePadding_View_3880;                   ; Offset: 3880
;       float PrePadding_View_3884;                   ; Offset: 3884
;       float4 View_RuntimeVirtualTextureDebugParams; ; Offset: 3888
;       float View_OverrideLandscapeLOD;              ; Offset: 3904
;       int View_FarShadowStaticMeshLODBias;          ; Offset: 3908
;       float View_MinRoughness;                      ; Offset: 3912
;       float PrePadding_View_3916;                   ; Offset: 3916
;       float4 View_HairRenderInfo;                   ; Offset: 3920
;       uint View_EnableSkyLight;                     ; Offset: 3936
;       uint View_HairRenderInfoBits;                 ; Offset: 3940
;       uint View_HairComponents;                     ; Offset: 3944
;       float View_bSubsurfacePostprocessEnabled;     ; Offset: 3948
;       float4 View_SSProfilesTextureSizeAndInvSize;  ; Offset: 3952
;       float4 View_SSProfilesPreIntegratedTextureSizeAndInvSize;; Offset: 3968
;       float3 View_PhysicsFieldClipmapCenter;        ; Offset: 3984
;       float View_PhysicsFieldClipmapDistance;       ; Offset: 3996
;       int View_PhysicsFieldClipmapResolution;       ; Offset: 4000
;       int View_PhysicsFieldClipmapExponent;         ; Offset: 4004
;       int View_PhysicsFieldClipmapCount;            ; Offset: 4008
;       int View_PhysicsFieldTargetCount;             ; Offset: 4012
;       int4 View_PhysicsFieldTargets[32];            ; Offset: 4016
;       uint View_InstanceSceneDataSOAStride;         ; Offset: 4528
;       uint View_GPUSceneViewId;                     ; Offset: 4532
;       float View_ViewResolutionFraction;            ; Offset: 4536
;       float View_SubSurfaceColorAsTransmittanceAtDistanceInMeters;; Offset: 4540
;       uint BindlessSampler_View_MaterialTextureBilinearWrapedSampler;; Offset: 4544
;       uint PrePadding_View_4548;                    ; Offset: 4548
;       uint BindlessSampler_View_MaterialTextureBilinearClampedSampler;; Offset: 4552
;       uint PrePadding_View_4556;                    ; Offset: 4556
;       uint BindlessResource_View_VolumetricLightmapIndirectionTexture;; Offset: 4560
;       uint PrePadding_View_4564;                    ; Offset: 4564
;       uint BindlessResource_View_VolumetricLightmapBrickAmbientVector;; Offset: 4568
;       uint PrePadding_View_4572;                    ; Offset: 4572
;       uint BindlessResource_View_VolumetricLightmapBrickSHCoefficients0;; Offset: 4576
;       uint PrePadding_View_4580;                    ; Offset: 4580
;       uint BindlessResource_View_VolumetricLightmapBrickSHCoefficients1;; Offset: 4584
;       uint PrePadding_View_4588;                    ; Offset: 4588
;       uint BindlessResource_View_VolumetricLightmapBrickSHCoefficients2;; Offset: 4592
;       uint PrePadding_View_4596;                    ; Offset: 4596
;       uint BindlessResource_View_VolumetricLightmapBrickSHCoefficients3;; Offset: 4600
;       uint PrePadding_View_4604;                    ; Offset: 4604
;       uint BindlessResource_View_VolumetricLightmapBrickSHCoefficients4;; Offset: 4608
;       uint PrePadding_View_4612;                    ; Offset: 4612
;       uint BindlessResource_View_VolumetricLightmapBrickSHCoefficients5;; Offset: 4616
;       uint PrePadding_View_4620;                    ; Offset: 4620
;       uint BindlessResource_View_SkyBentNormalBrickTexture;; Offset: 4624
;       uint PrePadding_View_4628;                    ; Offset: 4628
;       uint BindlessResource_View_DirectionalLightShadowingBrickTexture;; Offset: 4632
;       uint PrePadding_View_4636;                    ; Offset: 4636
;       uint BindlessSampler_View_VolumetricLightmapBrickAmbientVectorSampler;; Offset: 4640
;       uint PrePadding_View_4644;                    ; Offset: 4644
;       uint BindlessSampler_View_VolumetricLightmapTextureSampler0;; Offset: 4648
;       uint PrePadding_View_4652;                    ; Offset: 4652
;       uint BindlessSampler_View_VolumetricLightmapTextureSampler1;; Offset: 4656
;       uint PrePadding_View_4660;                    ; Offset: 4660
;       uint BindlessSampler_View_VolumetricLightmapTextureSampler2;; Offset: 4664
;       uint PrePadding_View_4668;                    ; Offset: 4668
;       uint BindlessSampler_View_VolumetricLightmapTextureSampler3;; Offset: 4672
;       uint PrePadding_View_4676;                    ; Offset: 4676
;       uint BindlessSampler_View_VolumetricLightmapTextureSampler4;; Offset: 4680
;       uint PrePadding_View_4684;                    ; Offset: 4684
;       uint BindlessSampler_View_VolumetricLightmapTextureSampler5;; Offset: 4688
;       uint PrePadding_View_4692;                    ; Offset: 4692
;       uint BindlessSampler_View_SkyBentNormalTextureSampler;; Offset: 4696
;       uint PrePadding_View_4700;                    ; Offset: 4700
;       uint BindlessSampler_View_DirectionalLightShadowingTextureSampler;; Offset: 4704
;       uint PrePadding_View_4708;                    ; Offset: 4708
;       uint BindlessResource_View_GlobalDistanceFieldPageAtlasTexture;; Offset: 4712
;       uint PrePadding_View_4716;                    ; Offset: 4716
;       uint BindlessResource_View_GlobalDistanceFieldCoverageAtlasTexture;; Offset: 4720
;       uint PrePadding_View_4724;                    ; Offset: 4724
;       uint BindlessResource_View_GlobalDistanceFieldPageTableTexture;; Offset: 4728
;       uint PrePadding_View_4732;                    ; Offset: 4732
;       uint BindlessResource_View_GlobalDistanceFieldMipTexture;; Offset: 4736
;       uint PrePadding_View_4740;                    ; Offset: 4740
;       uint BindlessResource_View_AtmosphereTransmittanceTexture;; Offset: 4744
;       uint PrePadding_View_4748;                    ; Offset: 4748
;       uint BindlessSampler_View_AtmosphereTransmittanceTextureSampler;; Offset: 4752
;       uint PrePadding_View_4756;                    ; Offset: 4756
;       uint BindlessResource_View_AtmosphereIrradianceTexture;; Offset: 4760
;       uint PrePadding_View_4764;                    ; Offset: 4764
;       uint BindlessSampler_View_AtmosphereIrradianceTextureSampler;; Offset: 4768
;       uint PrePadding_View_4772;                    ; Offset: 4772
;       uint BindlessResource_View_AtmosphereInscatterTexture;; Offset: 4776
;       uint PrePadding_View_4780;                    ; Offset: 4780
;       uint BindlessSampler_View_AtmosphereInscatterTextureSampler;; Offset: 4784
;       uint PrePadding_View_4788;                    ; Offset: 4788
;       uint BindlessResource_View_PerlinNoiseGradientTexture;; Offset: 4792
;       uint PrePadding_View_4796;                    ; Offset: 4796
;       uint BindlessSampler_View_PerlinNoiseGradientTextureSampler;; Offset: 4800
;       uint PrePadding_View_4804;                    ; Offset: 4804
;       uint BindlessResource_View_PerlinNoise3DTexture;; Offset: 4808
;       uint PrePadding_View_4812;                    ; Offset: 4812
;       uint BindlessSampler_View_PerlinNoise3DTextureSampler;; Offset: 4816
;       uint PrePadding_View_4820;                    ; Offset: 4820
;       uint BindlessResource_View_SobolSamplingTexture;; Offset: 4824
;       uint PrePadding_View_4828;                    ; Offset: 4828
;       uint BindlessSampler_View_SharedPointWrappedSampler;; Offset: 4832
;       uint PrePadding_View_4836;                    ; Offset: 4836
;       uint BindlessSampler_View_SharedPointClampedSampler;; Offset: 4840
;       uint PrePadding_View_4844;                    ; Offset: 4844
;       uint BindlessSampler_View_SharedBilinearWrappedSampler;; Offset: 4848
;       uint PrePadding_View_4852;                    ; Offset: 4852
;       uint BindlessSampler_View_SharedBilinearClampedSampler;; Offset: 4856
;       uint PrePadding_View_4860;                    ; Offset: 4860
;       uint BindlessSampler_View_SharedBilinearAnisoClampedSampler;; Offset: 4864
;       uint PrePadding_View_4868;                    ; Offset: 4868
;       uint BindlessSampler_View_SharedTrilinearWrappedSampler;; Offset: 4872
;       uint PrePadding_View_4876;                    ; Offset: 4876
;       uint BindlessSampler_View_SharedTrilinearClampedSampler;; Offset: 4880
;       uint PrePadding_View_4884;                    ; Offset: 4884
;       uint BindlessResource_View_PreIntegratedBRDF; ; Offset: 4888
;       uint PrePadding_View_4892;                    ; Offset: 4892
;       uint BindlessSampler_View_PreIntegratedBRDFSampler;; Offset: 4896
;       uint PrePadding_View_4900;                    ; Offset: 4900
;       uint BindlessResource_View_PrimitiveSceneData;; Offset: 4904
;       uint PrePadding_View_4908;                    ; Offset: 4908
;       uint BindlessResource_View_InstanceSceneData; ; Offset: 4912
;       uint PrePadding_View_4916;                    ; Offset: 4916
;       uint BindlessResource_View_InstancePayloadData;; Offset: 4920
;       uint PrePadding_View_4924;                    ; Offset: 4924
;       uint BindlessResource_View_LightmapSceneData; ; Offset: 4928
;       uint PrePadding_View_4932;                    ; Offset: 4932
;       uint BindlessResource_View_SkyIrradianceEnvironmentMap;; Offset: 4936
;       uint PrePadding_View_4940;                    ; Offset: 4940
;       uint BindlessResource_View_TransmittanceLutTexture;; Offset: 4944
;       uint PrePadding_View_4948;                    ; Offset: 4948
;       uint BindlessSampler_View_TransmittanceLutTextureSampler;; Offset: 4952
;       uint PrePadding_View_4956;                    ; Offset: 4956
;       uint BindlessResource_View_SkyViewLutTexture; ; Offset: 4960
;       uint PrePadding_View_4964;                    ; Offset: 4964
;       uint BindlessSampler_View_SkyViewLutTextureSampler;; Offset: 4968
;       uint PrePadding_View_4972;                    ; Offset: 4972
;       uint BindlessResource_View_DistantSkyLightLutTexture;; Offset: 4976
;       uint PrePadding_View_4980;                    ; Offset: 4980
;       uint BindlessSampler_View_DistantSkyLightLutTextureSampler;; Offset: 4984
;       uint PrePadding_View_4988;                    ; Offset: 4988
;       uint BindlessResource_View_CameraAerialPerspectiveVolume;; Offset: 4992
;       uint PrePadding_View_4996;                    ; Offset: 4996
;       uint BindlessSampler_View_CameraAerialPerspectiveVolumeSampler;; Offset: 5000
;       uint PrePadding_View_5004;                    ; Offset: 5004
;       uint BindlessResource_View_HairScatteringLUTTexture;; Offset: 5008
;       uint PrePadding_View_5012;                    ; Offset: 5012
;       uint BindlessSampler_View_HairScatteringLUTSampler;; Offset: 5016
;       uint PrePadding_View_5020;                    ; Offset: 5020
;       uint BindlessResource_View_LTCMatTexture;     ; Offset: 5024
;       uint PrePadding_View_5028;                    ; Offset: 5028
;       uint BindlessSampler_View_LTCMatSampler;      ; Offset: 5032
;       uint PrePadding_View_5036;                    ; Offset: 5036
;       uint BindlessResource_View_LTCAmpTexture;     ; Offset: 5040
;       uint PrePadding_View_5044;                    ; Offset: 5044
;       uint BindlessSampler_View_LTCAmpSampler;      ; Offset: 5048
;       uint PrePadding_View_5052;                    ; Offset: 5052
;       uint View_bShadingEnergyConservation;         ; Offset: 5056
;       uint View_bShadingEnergyPreservation;         ; Offset: 5060
;       uint BindlessResource_View_ShadingEnergyGGXSpecTexture;; Offset: 5064
;       uint PrePadding_View_5068;                    ; Offset: 5068
;       uint BindlessResource_View_ShadingEnergyGGXGlassTexture;; Offset: 5072
;       uint PrePadding_View_5076;                    ; Offset: 5076
;       uint BindlessResource_View_ShadingEnergyClothSpecTexture;; Offset: 5080
;       uint PrePadding_View_5084;                    ; Offset: 5084
;       uint BindlessResource_View_ShadingEnergyDiffuseTexture;; Offset: 5088
;       uint PrePadding_View_5092;                    ; Offset: 5092
;       uint BindlessSampler_View_ShadingEnergySampler;; Offset: 5096
;       uint PrePadding_View_5100;                    ; Offset: 5100
;       uint BindlessResource_View_SSProfilesTexture; ; Offset: 5104
;       uint PrePadding_View_5108;                    ; Offset: 5108
;       uint BindlessSampler_View_SSProfilesSampler;  ; Offset: 5112
;       uint PrePadding_View_5116;                    ; Offset: 5116
;       uint BindlessSampler_View_SSProfilesTransmissionSampler;; Offset: 5120
;       uint PrePadding_View_5124;                    ; Offset: 5124
;       uint BindlessResource_View_SSProfilesPreIntegratedTexture;; Offset: 5128
;       uint PrePadding_View_5132;                    ; Offset: 5132
;       uint BindlessSampler_View_SSProfilesPreIntegratedSampler;; Offset: 5136
;       uint PrePadding_View_5140;                    ; Offset: 5140
;       uint BindlessResource_View_WaterIndirection;  ; Offset: 5144
;       uint PrePadding_View_5148;                    ; Offset: 5148
;       uint BindlessResource_View_WaterData;         ; Offset: 5152
;       uint PrePadding_View_5156;                    ; Offset: 5156
;       uint PrePadding_View_5160;                    ; Offset: 5160
;       uint PrePadding_View_5164;                    ; Offset: 5164
;       float4 View_RectLightAtlasSizeAndInvSize;     ; Offset: 5168
;       float View_RectLightAtlasMaxMipLevel;         ; Offset: 5184
;       float PrePadding_View_5188;                   ; Offset: 5188
;       uint BindlessResource_View_RectLightAtlasTexture;; Offset: 5192
;       uint PrePadding_View_5196;                    ; Offset: 5196
;       uint BindlessSampler_View_RectLightAtlasSampler;; Offset: 5200
;       uint PrePadding_View_5204;                    ; Offset: 5204
;       uint BindlessSampler_View_LandscapeWeightmapSampler;; Offset: 5208
;       uint PrePadding_View_5212;                    ; Offset: 5212
;       uint BindlessResource_View_LandscapeIndirection;; Offset: 5216
;       uint PrePadding_View_5220;                    ; Offset: 5220
;       uint BindlessResource_View_LandscapePerComponentData;; Offset: 5224
;       uint PrePadding_View_5228;                    ; Offset: 5228
;       uint BindlessResource_View_VTFeedbackBuffer;  ; Offset: 5232
;       uint PrePadding_View_5236;                    ; Offset: 5236
;       uint BindlessResource_View_EditorVisualizeLevelInstanceIds;; Offset: 5240
;       uint PrePadding_View_5244;                    ; Offset: 5244
;       uint BindlessResource_View_EditorSelectedHitProxyIds;; Offset: 5248
;       uint PrePadding_View_5252;                    ; Offset: 5252
;       uint BindlessResource_View_PhysicsFieldClipmapBuffer;; Offset: 5256
;       uint PrePadding_View_5260;                    ; Offset: 5260
;       float3 View_TLASRelativePreViewTranslation;   ; Offset: 5264
;       float PrePadding_View_5276;                   ; Offset: 5276
;       float3 View_TLASViewTilePosition;             ; Offset: 5280
;   
;   } UniformBufferConstants_View;                    ; Offset:    0 Size:  5292
;
; }
;
; cbuffer UniformBufferConstants_LandscapeMVF
; {
;
;   struct UniformBufferConstants_LandscapeMVF
;   {
;
;       int2 LandscapeMVF_SubXY;                      ; Offset:    0
;   
;   } UniformBufferConstants_LandscapeMVF;            ; Offset:    0 Size:     8
;
; }
;
; cbuffer UniformBufferConstants_LandscapeContinuousLODParameters
; {
;
;   struct UniformBufferConstants_LandscapeContinuousLODParameters
;   {
;
;       int LandscapeContinuousLODParameters_LandscapeIndex;; Offset:    0
;       int PrePadding_LandscapeContinuousLODParameters_4;; Offset:    4
;       int2 LandscapeContinuousLODParameters_Min;    ; Offset:    8
;       int2 LandscapeContinuousLODParameters_Size;   ; Offset:   16
;       uint BindlessResource_LandscapeContinuousLODParameters_SectionLODBias;; Offset:   24
;   
;   } UniformBufferConstants_LandscapeContinuousLODParameters;; Offset:    0 Size:    28
;
; }
;
; cbuffer UniformBufferConstants_LandscapeParameters
; {
;
;   struct UniformBufferConstants_LandscapeParameters
;   {
;
;       int LandscapeParameters_ComponentBaseX;       ; Offset:    0
;       int LandscapeParameters_ComponentBaseY;       ; Offset:    4
;       int LandscapeParameters_SubsectionSizeVerts;  ; Offset:    8
;       int LandscapeParameters_NumSubsections;       ; Offset:   12
;       int LandscapeParameters_LastLOD;              ; Offset:   16
;       int PrePadding_LandscapeParameters_20;        ; Offset:   20
;       int PrePadding_LandscapeParameters_24;        ; Offset:   24
;       int PrePadding_LandscapeParameters_28;        ; Offset:   28
;       float4 LandscapeParameters_HeightmapUVScaleBias;; Offset:   32
;       float4 LandscapeParameters_WeightmapUVScaleBias;; Offset:   48
;       float4 LandscapeParameters_LandscapeLightmapScaleBias;; Offset:   64
;       float4 LandscapeParameters_SubsectionSizeVertsLayerUVPan;; Offset:   80
;       float4 LandscapeParameters_SubsectionOffsetParams;; Offset:   96
;       float4 LandscapeParameters_LightmapSubsectionOffsetParams;; Offset:  112
;       row_major float4x4 LandscapeParameters_LocalToWorldNoScaling;; Offset:  128
;       uint BindlessResource_LandscapeParameters_HeightmapTexture;; Offset:  192
;       uint PrePadding_LandscapeParameters_196;      ; Offset:  196
;       uint BindlessSampler_LandscapeParameters_HeightmapTextureSampler;; Offset:  200
;       uint PrePadding_LandscapeParameters_204;      ; Offset:  204
;       uint BindlessResource_LandscapeParameters_NormalmapTexture;; Offset:  208
;       uint PrePadding_LandscapeParameters_212;      ; Offset:  212
;       uint BindlessSampler_LandscapeParameters_NormalmapTextureSampler;; Offset:  216
;       uint PrePadding_LandscapeParameters_220;      ; Offset:  220
;       uint BindlessResource_LandscapeParameters_XYOffsetmapTexture;; Offset:  224
;       uint PrePadding_LandscapeParameters_228;      ; Offset:  228
;       uint BindlessSampler_LandscapeParameters_XYOffsetmapTextureSampler;; Offset:  232
;   
;   } UniformBufferConstants_LandscapeParameters;     ; Offset:    0 Size:   236
;
; }
;
; cbuffer UniformBufferConstants_Material
; {
;
;   struct UniformBufferConstants_Material
;   {
;
;       float4 Material_PreshaderBuffer[9];           ; Offset:    0
;       uint BindlessResource_Material_Texture2D_0;   ; Offset:  144
;       uint PrePadding_Material_148;                 ; Offset:  148
;       uint BindlessSampler_Material_Texture2D_0Sampler;; Offset:  152
;       uint PrePadding_Material_156;                 ; Offset:  156
;       uint BindlessResource_Material_Texture2D_1;   ; Offset:  160
;       uint PrePadding_Material_164;                 ; Offset:  164
;       uint BindlessSampler_Material_Texture2D_1Sampler;; Offset:  168
;       uint PrePadding_Material_172;                 ; Offset:  172
;       uint BindlessResource_Material_Texture2D_2;   ; Offset:  176
;       uint PrePadding_Material_180;                 ; Offset:  180
;       uint BindlessSampler_Material_Texture2D_2Sampler;; Offset:  184
;       uint PrePadding_Material_188;                 ; Offset:  188
;       uint BindlessResource_Material_Texture2D_3;   ; Offset:  192
;       uint PrePadding_Material_196;                 ; Offset:  196
;       uint BindlessSampler_Material_Texture2D_3Sampler;; Offset:  200
;       uint PrePadding_Material_204;                 ; Offset:  204
;       uint BindlessResource_Material_Texture2D_4;   ; Offset:  208
;       uint PrePadding_Material_212;                 ; Offset:  212
;       uint BindlessSampler_Material_Texture2D_4Sampler;; Offset:  216
;       uint PrePadding_Material_220;                 ; Offset:  220
;       uint BindlessResource_Material_Texture2D_5;   ; Offset:  224
;       uint PrePadding_Material_228;                 ; Offset:  228
;       uint BindlessSampler_Material_Texture2D_5Sampler;; Offset:  232
;       uint PrePadding_Material_236;                 ; Offset:  236
;       uint BindlessResource_Material_Texture2D_6;   ; Offset:  240
;       uint PrePadding_Material_244;                 ; Offset:  244
;       uint BindlessSampler_Material_Texture2D_6Sampler;; Offset:  248
;       uint PrePadding_Material_252;                 ; Offset:  252
;       uint BindlessResource_Material_Texture2D_7;   ; Offset:  256
;       uint PrePadding_Material_260;                 ; Offset:  260
;       uint BindlessSampler_Material_Texture2D_7Sampler;; Offset:  264
;       uint PrePadding_Material_268;                 ; Offset:  268
;       uint BindlessResource_Material_Texture2D_8;   ; Offset:  272
;       uint PrePadding_Material_276;                 ; Offset:  276
;       uint BindlessSampler_Material_Texture2D_8Sampler;; Offset:  280
;       uint PrePadding_Material_284;                 ; Offset:  284
;       uint BindlessResource_Material_Texture2D_9;   ; Offset:  288
;       uint PrePadding_Material_292;                 ; Offset:  292
;       uint BindlessSampler_Material_Texture2D_9Sampler;; Offset:  296
;       uint PrePadding_Material_300;                 ; Offset:  300
;       uint BindlessResource_Material_Texture2D_10;  ; Offset:  304
;       uint PrePadding_Material_308;                 ; Offset:  308
;       uint BindlessSampler_Material_Texture2D_10Sampler;; Offset:  312
;       uint PrePadding_Material_316;                 ; Offset:  316
;       uint BindlessResource_Material_Texture2D_11;  ; Offset:  320
;       uint PrePadding_Material_324;                 ; Offset:  324
;       uint BindlessSampler_Material_Texture2D_11Sampler;; Offset:  328
;       uint PrePadding_Material_332;                 ; Offset:  332
;       uint BindlessResource_Material_Texture2D_12;  ; Offset:  336
;       uint PrePadding_Material_340;                 ; Offset:  340
;       uint BindlessSampler_Material_Texture2D_12Sampler;; Offset:  344
;       uint PrePadding_Material_348;                 ; Offset:  348
;       uint BindlessResource_Material_Texture2D_13;  ; Offset:  352
;       uint PrePadding_Material_356;                 ; Offset:  356
;       uint BindlessSampler_Material_Texture2D_13Sampler;; Offset:  360
;       uint PrePadding_Material_364;                 ; Offset:  364
;       uint BindlessResource_Material_Texture2D_14;  ; Offset:  368
;       uint PrePadding_Material_372;                 ; Offset:  372
;       uint BindlessSampler_Material_Texture2D_14Sampler;; Offset:  376
;       uint PrePadding_Material_380;                 ; Offset:  380
;       uint BindlessResource_Material_Texture2D_15;  ; Offset:  384
;       uint PrePadding_Material_388;                 ; Offset:  388
;       uint BindlessSampler_Material_Texture2D_15Sampler;; Offset:  392
;       uint PrePadding_Material_396;                 ; Offset:  396
;       uint BindlessResource_Material_Texture2D_16;  ; Offset:  400
;       uint PrePadding_Material_404;                 ; Offset:  404
;       uint BindlessSampler_Material_Texture2D_16Sampler;; Offset:  408
;       uint PrePadding_Material_412;                 ; Offset:  412
;       uint BindlessSampler_Material_Wrap_WorldGroupSettings;; Offset:  416
;       uint PrePadding_Material_420;                 ; Offset:  420
;       uint BindlessSampler_Material_Clamp_WorldGroupSettings;; Offset:  424
;   
;   } UniformBufferConstants_Material;                ; Offset:    0 Size:   428
;
; }
;
; cbuffer HitGroupSystemRootConstants
; {
;
;   struct HitGroupSystemRootConstants
;   {
;
;       struct struct.FHitGroupSystemRootConstants
;       {
;
;           uint Config;                              ; Offset:    0
;           uint IndexBufferOffsetInBytes;            ; Offset:    4
;           uint FirstPrimitive;                      ; Offset:    8
;           uint UserData;                            ; Offset:   12
;           uint BaseInstanceIndex;                   ; Offset:   16
;           uint Pad0;                                ; Offset:   20
;       
;       } HitGroupSystemRootConstants;                ; Offset:    0
;
;   
;   } HitGroupSystemRootConstants;                    ; Offset:    0 Size:    24
;
; }
;
; Resource bind info for View_PrimitiveSceneData
; {
;
;   float4 $Element;                                  ; Offset:    0 Size:    16
;
; }
;
; Resource bind info for View_InstanceSceneData
; {
;
;   float4 $Element;                                  ; Offset:    0 Size:    16
;
; }
;
; Resource bind info for View_SkyIrradianceEnvironmentMap
; {
;
;   float4 $Element;                                  ; Offset:    0 Size:    16
;
; }
;
;
; Resource Bindings:
;
; Name                                 Type  Format         Dim      ID      HLSL Bind  Count
; ------------------------------ ---------- ------- ----------- ------- -------------- ------
; UniformBufferConstants_View       cbuffer      NA          NA     CB0            cb0     1
; UniformBufferConstants_LandscapeMVF   cbuffer      NA          NA     CB1            cb1     1
; UniformBufferConstants_LandscapeContinuousLODParameters   cbuffer      NA          NA     CB2            cb2     1
; UniformBufferConstants_LandscapeParameters   cbuffer      NA          NA     CB3            cb3     1
; UniformBufferConstants_Material   cbuffer      NA          NA     CB4            cb4     1
; HitGroupSystemRootConstants       cbuffer      NA          NA     CB5     cb0,space2     1
; View_LandscapeWeightmapSampler    sampler      NA          NA      S0             s0     1
; LandscapeParameters_HeightmapTextureSampler   sampler      NA          NA      S1             s1     1
; LandscapeParameters_NormalmapTextureSampler   sampler      NA          NA      S2             s2     1
; Material_Texture2D_2Sampler       sampler      NA          NA      S3             s3     1
; Material_Texture2D_3Sampler       sampler      NA          NA      S4             s4     1
; Material_Texture2D_4Sampler       sampler      NA          NA      S5             s5     1
; Material_Texture2D_5Sampler       sampler      NA          NA      S6             s6     1
; Material_Texture2D_6Sampler       sampler      NA          NA      S7             s7     1
; Material_Texture2D_7Sampler       sampler      NA          NA      S8             s8     1
; Material_Texture2D_8Sampler       sampler      NA          NA      S9             s9     1
; Material_Texture2D_9Sampler       sampler      NA          NA     S10            s10     1
; Material_Texture2D_10Sampler      sampler      NA          NA     S11            s11     1
; Material_Texture2D_11Sampler      sampler      NA          NA     S12            s12     1
; Material_Texture2D_12Sampler      sampler      NA          NA     S13            s13     1
; Material_Texture2D_13Sampler      sampler      NA          NA     S14            s14     1
; Material_Texture2D_14Sampler      sampler      NA          NA     S15            s15     1
; Material_Texture2D_15Sampler      sampler      NA          NA     S16            s16     1
; Material_Texture2D_16Sampler      sampler      NA          NA     S17            s17     1
; View_PrimitiveSceneData           texture  struct         r/o      T0             t0     1
; View_InstanceSceneData            texture  struct         r/o      T1             t1     1
; View_SkyIrradianceEnvironmentMap   texture  struct         r/o      T2             t2     1
; View_LandscapeIndirection         texture     u32         buf      T3             t3     1
; View_LandscapePerComponentData    texture     f32         buf      T4             t4     1
; LandscapeContinuousLODParameters_SectionLODBias   texture     f32         buf      T5             t5     1
; LandscapeParameters_HeightmapTexture   texture     f32          2d      T6             t6     1
; LandscapeParameters_NormalmapTexture   texture     f32          2d      T7             t7     1
; Material_Texture2D_0              texture     f32          2d      T8             t8     1
; Material_Texture2D_1              texture     f32          2d      T9             t9     1
; Material_Texture2D_2              texture     f32          2d     T10            t10     1
; Material_Texture2D_3              texture     f32          2d     T11            t11     1
; Material_Texture2D_4              texture     f32          2d     T12            t12     1
; Material_Texture2D_5              texture     f32          2d     T13            t13     1
; Material_Texture2D_6              texture     f32          2d     T14            t14     1
; Material_Texture2D_7              texture     f32          2d     T15            t15     1
; Material_Texture2D_8              texture     f32          2d     T16            t16     1
; Material_Texture2D_9              texture     f32          2d     T17            t17     1
; Material_Texture2D_10             texture     f32          2d     T18            t18     1
; Material_Texture2D_11             texture     f32          2d     T19            t19     1
; Material_Texture2D_12             texture     f32          2d     T20            t20     1
; Material_Texture2D_13             texture     f32          2d     T21            t21     1
; Material_Texture2D_14             texture     f32          2d     T22            t22     1
; Material_Texture2D_15             texture     f32          2d     T23            t23     1
; Material_Texture2D_16             texture     f32          2d     T24            t24     1
; HitGroupSystemIndexBuffer         texture    byte         r/o     T25      t0,space2     1
;
target datalayout = "e-m:e-p:32:32-i1:32-i8:8-i16:16-i32:32-i64:64-f16:16-f32:32-f64:64-n8:16:32:64"
target triple = "dxil-ms-dx"

%dx.types.Handle = type { i8* }
%struct.FPackedMaterialClosestHitPayload = type { %struct.FMinimalPayload, i32, float, [3 x i32], [2 x i32], i32, i32, [2 x i32], i32, [2 x i32], i32 }
%struct.FMinimalPayload = type { float }
%struct.FRayTracingIntersectionAttributes = type { <2 x i32> }
%dx.types.ResourceProperties = type { i32, i32 }
%dx.types.CBufRet.i32 = type { i32, i32, i32, i32 }
%dx.types.ResRet.i32 = type { i32, i32, i32, i32, i32 }
%dx.types.CBufRet.f32 = type { float, float, float, float }
%dx.types.ResRet.f32 = type { float, float, float, float, i32 }
%"class.StructuredBuffer<vector<float, 4> >" = type { <4 x float> }
%"class.Buffer<unsigned int>" = type { i32 }
%"class.Buffer<float>" = type { float }
%"class.Texture2D<vector<float, 4> >" = type { <4 x float>, %"class.Texture2D<vector<float, 4> >::mips_type" }
%"class.Texture2D<vector<float, 4> >::mips_type" = type { i32 }
%struct.ByteAddressBuffer = type { i32 }
%UniformBufferConstants_View = type { %class.matrix.float.4.4, %class.matrix.float.4.4, %class.matrix.float.4.4, %class.matrix.float.4.4, %class.matrix.float.4.4, %class.matrix.float.4.4, %class.matrix.float.4.4, %class.matrix.float.4.4, %class.matrix.float.4.4, %class.matrix.float.4.4, %class.matrix.float.4.4, %class.matrix.float.4.4, %class.matrix.float.4.4, %class.matrix.float.4.4, %class.matrix.float.4.4, %class.matrix.float.4.4, <3 x float>, float, <3 x float>, float, <3 x float>, float, <3 x float>, float, <3 x float>, float, <3 x float>, float, <3 x float>, float, <4 x float>, <4 x float>, <3 x float>, float, <3 x float>, float, <3 x float>, float, <3 x float>, float, %class.matrix.float.4.4, %class.matrix.float.4.4, %class.matrix.float.4.4, %class.matrix.float.4.4, %class.matrix.float.4.4, %class.matrix.float.4.4, %class.matrix.float.4.4, <3 x float>, float, <3 x float>, float, <3 x float>, float, <3 x float>, float, %class.matrix.float.4.4, %class.matrix.float.4.4, %class.matrix.float.4.4, %class.matrix.float.4.4, <4 x float>, <4 x float>, <2 x float>, <2 x float>, <4 x float>, <4 x float>, <4 x i32>, <4 x float>, <4 x float>, <4 x float>, <4 x float>, <2 x float>, <2 x float>, i32, float, float, float, <4 x float>, <4 x float>, <4 x float>, <2 x float>, float, float, float, float, float, float, <3 x float>, float, float, float, float, float, float, float, i32, i32, i32, i32, i32, float, float, float, float, float, <4 x float>, <3 x float>, float, [2 x <4 x float>], [2 x <4 x float>], <4 x float>, <4 x float>, float, float, float, float, float, float, float, float, float, float, float, float, <3 x float>, float, <3 x float>, float, <3 x float>, float, [2 x <4 x float>], [2 x <4 x float>], [2 x <4 x float>], [2 x <4 x float>], [2 x <4 x float>], <4 x float>, <3 x float>, float, <4 x float>, %class.matrix.float.4.4, <4 x float>, float, float, float, float, <4 x float>, float, float, float, float, float, float, float, float, <3 x float>, float, float, float, float, float, <4 x float>, float, float, float, float, <4 x float>, [8 x <4 x float>], float, float, float, float, i32, float, float, float, <3 x float>, i32, [6 x <4 x float>], [6 x <4 x float>], [6 x <4 x float>], [6 x <4 x float>], float, float, i32, i32, <3 x float>, float, <3 x float>, float, float, float, i32, float, float, float, float, float, <2 x i32>, float, float, <3 x float>, float, <3 x float>, float, <2 x float>, float, float, <3 x float>, float, <3 x float>, float, <3 x float>, float, <3 x float>, float, float, float, float, float, [2 x <4 x float>], float, i32, i32, i32, i32, i32, i32, i32, <4 x float>, <2 x float>, float, float, <4 x float>, float, i32, float, float, <4 x float>, i32, i32, i32, float, <4 x float>, <4 x float>, <3 x float>, float, i32, i32, i32, i32, [32 x <4 x i32>], i32, i32, float, float, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, <4 x float>, float, float, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, <3 x float>, float, <3 x float> }
%class.matrix.float.4.4 = type { [4 x <4 x float>] }
%UniformBufferConstants_LandscapeMVF = type { <2 x i32> }
%UniformBufferConstants_LandscapeContinuousLODParameters = type { i32, i32, <2 x i32>, <2 x i32>, i32 }
%UniformBufferConstants_LandscapeParameters = type { i32, i32, i32, i32, i32, i32, i32, i32, <4 x float>, <4 x float>, <4 x float>, <4 x float>, <4 x float>, <4 x float>, %class.matrix.float.4.4, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%UniformBufferConstants_Material = type { [9 x <4 x float>], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%HitGroupSystemRootConstants = type { %struct.FHitGroupSystemRootConstants }
%struct.FHitGroupSystemRootConstants = type { i32, i32, i32, i32, i32, i32 }
%struct.SamplerState = type { i32 }

@"\01?View_PrimitiveSceneData@@3V?$StructuredBuffer@V?$vector@M$03@@@@A" = external constant %dx.types.Handle, align 4
@"\01?View_InstanceSceneData@@3V?$StructuredBuffer@V?$vector@M$03@@@@A" = external constant %dx.types.Handle, align 4
@"\01?View_SkyIrradianceEnvironmentMap@@3V?$StructuredBuffer@V?$vector@M$03@@@@A" = external constant %dx.types.Handle, align 4
@"\01?View_LandscapeWeightmapSampler@@3USamplerState@@A" = external constant %dx.types.Handle, align 4
@"\01?View_LandscapeIndirection@@3V?$Buffer@I@@A" = external constant %dx.types.Handle, align 4
@"\01?View_LandscapePerComponentData@@3V?$Buffer@M@@A" = external constant %dx.types.Handle, align 4
@"\01?LandscapeContinuousLODParameters_SectionLODBias@@3V?$Buffer@M@@A" = external constant %dx.types.Handle, align 4
@"\01?LandscapeParameters_HeightmapTexture@@3V?$Texture2D@V?$vector@M$03@@@@A" = external constant %dx.types.Handle, align 4
@"\01?LandscapeParameters_HeightmapTextureSampler@@3USamplerState@@A" = external constant %dx.types.Handle, align 4
@"\01?LandscapeParameters_NormalmapTexture@@3V?$Texture2D@V?$vector@M$03@@@@A" = external constant %dx.types.Handle, align 4
@"\01?LandscapeParameters_NormalmapTextureSampler@@3USamplerState@@A" = external constant %dx.types.Handle, align 4
@"\01?Material_Texture2D_0@@3V?$Texture2D@V?$vector@M$03@@@@A" = external constant %dx.types.Handle, align 4
@"\01?Material_Texture2D_1@@3V?$Texture2D@V?$vector@M$03@@@@A" = external constant %dx.types.Handle, align 4
@"\01?Material_Texture2D_2@@3V?$Texture2D@V?$vector@M$03@@@@A" = external constant %dx.types.Handle, align 4
@"\01?Material_Texture2D_2Sampler@@3USamplerState@@A" = external constant %dx.types.Handle, align 4
@"\01?Material_Texture2D_3@@3V?$Texture2D@V?$vector@M$03@@@@A" = external constant %dx.types.Handle, align 4
@"\01?Material_Texture2D_3Sampler@@3USamplerState@@A" = external constant %dx.types.Handle, align 4
@"\01?Material_Texture2D_4@@3V?$Texture2D@V?$vector@M$03@@@@A" = external constant %dx.types.Handle, align 4
@"\01?Material_Texture2D_4Sampler@@3USamplerState@@A" = external constant %dx.types.Handle, align 4
@"\01?Material_Texture2D_5@@3V?$Texture2D@V?$vector@M$03@@@@A" = external constant %dx.types.Handle, align 4
@"\01?Material_Texture2D_5Sampler@@3USamplerState@@A" = external constant %dx.types.Handle, align 4
@"\01?Material_Texture2D_6@@3V?$Texture2D@V?$vector@M$03@@@@A" = external constant %dx.types.Handle, align 4
@"\01?Material_Texture2D_6Sampler@@3USamplerState@@A" = external constant %dx.types.Handle, align 4
@"\01?Material_Texture2D_7@@3V?$Texture2D@V?$vector@M$03@@@@A" = external constant %dx.types.Handle, align 4
@"\01?Material_Texture2D_7Sampler@@3USamplerState@@A" = external constant %dx.types.Handle, align 4
@"\01?Material_Texture2D_8@@3V?$Texture2D@V?$vector@M$03@@@@A" = external constant %dx.types.Handle, align 4
@"\01?Material_Texture2D_8Sampler@@3USamplerState@@A" = external constant %dx.types.Handle, align 4
@"\01?Material_Texture2D_9@@3V?$Texture2D@V?$vector@M$03@@@@A" = external constant %dx.types.Handle, align 4
@"\01?Material_Texture2D_9Sampler@@3USamplerState@@A" = external constant %dx.types.Handle, align 4
@"\01?Material_Texture2D_10@@3V?$Texture2D@V?$vector@M$03@@@@A" = external constant %dx.types.Handle, align 4
@"\01?Material_Texture2D_10Sampler@@3USamplerState@@A" = external constant %dx.types.Handle, align 4
@"\01?Material_Texture2D_11@@3V?$Texture2D@V?$vector@M$03@@@@A" = external constant %dx.types.Handle, align 4
@"\01?Material_Texture2D_11Sampler@@3USamplerState@@A" = external constant %dx.types.Handle, align 4
@"\01?Material_Texture2D_12@@3V?$Texture2D@V?$vector@M$03@@@@A" = external constant %dx.types.Handle, align 4
@"\01?Material_Texture2D_12Sampler@@3USamplerState@@A" = external constant %dx.types.Handle, align 4
@"\01?Material_Texture2D_13@@3V?$Texture2D@V?$vector@M$03@@@@A" = external constant %dx.types.Handle, align 4
@"\01?Material_Texture2D_13Sampler@@3USamplerState@@A" = external constant %dx.types.Handle, align 4
@"\01?Material_Texture2D_14@@3V?$Texture2D@V?$vector@M$03@@@@A" = external constant %dx.types.Handle, align 4
@"\01?Material_Texture2D_14Sampler@@3USamplerState@@A" = external constant %dx.types.Handle, align 4
@"\01?Material_Texture2D_15@@3V?$Texture2D@V?$vector@M$03@@@@A" = external constant %dx.types.Handle, align 4
@"\01?Material_Texture2D_15Sampler@@3USamplerState@@A" = external constant %dx.types.Handle, align 4
@"\01?Material_Texture2D_16@@3V?$Texture2D@V?$vector@M$03@@@@A" = external constant %dx.types.Handle, align 4
@"\01?Material_Texture2D_16Sampler@@3USamplerState@@A" = external constant %dx.types.Handle, align 4
@"\01?HitGroupSystemIndexBuffer@@3UByteAddressBuffer@@A" = external constant %dx.types.Handle, align 4
@llvm.global_ctors = appending global [0 x { i32, void ()*, i8* }] zeroinitializer
@UniformBufferConstants_View = external constant %dx.types.Handle
@UniformBufferConstants_LandscapeMVF = external constant %dx.types.Handle
@UniformBufferConstants_LandscapeContinuousLODParameters = external constant %dx.types.Handle
@UniformBufferConstants_LandscapeParameters = external constant %dx.types.Handle
@UniformBufferConstants_Material = external constant %dx.types.Handle
@HitGroupSystemRootConstants = external constant %dx.types.Handle
@NeighborOffset.i.i.i.i.0.hca = internal unnamed_addr constant [4 x i32] [i32 0, i32 -1, i32 1, i32 0]
@NeighborOffset.i.i.i.i.1.hca = internal unnamed_addr constant [4 x i32] [i32 -1, i32 0, i32 0, i32 1]

; Function Attrs: nounwind
declare void @llvm.lifetime.start(i64, i8* nocapture) #0

; Function Attrs: nounwind
declare void @llvm.lifetime.end(i64, i8* nocapture) #0

; Function Attrs: nounwind
define void @"\01?MaterialCHS@@YAXUFPackedMaterialClosestHitPayload@@UFRayTracingIntersectionAttributes@@@Z"(%struct.FPackedMaterialClosestHitPayload* noalias %PackedPayload, %struct.FRayTracingIntersectionAttributes* nocapture readonly %Attributes) #0 {
  %1 = load %dx.types.Handle, %dx.types.Handle* @"\01?Material_Texture2D_16Sampler@@3USamplerState@@A", align 4, !noalias !65
  %2 = load %dx.types.Handle, %dx.types.Handle* @"\01?Material_Texture2D_15Sampler@@3USamplerState@@A", align 4, !noalias !65
  %3 = load %dx.types.Handle, %dx.types.Handle* @"\01?Material_Texture2D_14Sampler@@3USamplerState@@A", align 4, !noalias !65
  %4 = load %dx.types.Handle, %dx.types.Handle* @"\01?Material_Texture2D_13Sampler@@3USamplerState@@A", align 4, !noalias !65
  %5 = load %dx.types.Handle, %dx.types.Handle* @"\01?Material_Texture2D_12Sampler@@3USamplerState@@A", align 4, !noalias !65
  %6 = load %dx.types.Handle, %dx.types.Handle* @"\01?Material_Texture2D_11Sampler@@3USamplerState@@A", align 4, !noalias !65
  %7 = load %dx.types.Handle, %dx.types.Handle* @"\01?Material_Texture2D_10Sampler@@3USamplerState@@A", align 4, !noalias !65
  %8 = load %dx.types.Handle, %dx.types.Handle* @"\01?Material_Texture2D_9Sampler@@3USamplerState@@A", align 4, !noalias !65
  %9 = load %dx.types.Handle, %dx.types.Handle* @"\01?Material_Texture2D_8Sampler@@3USamplerState@@A", align 4, !noalias !65
  %10 = load %dx.types.Handle, %dx.types.Handle* @"\01?Material_Texture2D_7Sampler@@3USamplerState@@A", align 4, !noalias !65
  %11 = load %dx.types.Handle, %dx.types.Handle* @"\01?Material_Texture2D_6Sampler@@3USamplerState@@A", align 4, !noalias !70
  %12 = load %dx.types.Handle, %dx.types.Handle* @"\01?Material_Texture2D_5Sampler@@3USamplerState@@A", align 4, !noalias !70
  %13 = load %dx.types.Handle, %dx.types.Handle* @"\01?Material_Texture2D_4Sampler@@3USamplerState@@A", align 4, !noalias !70
  %14 = load %dx.types.Handle, %dx.types.Handle* @"\01?Material_Texture2D_3Sampler@@3USamplerState@@A", align 4, !noalias !70
  %15 = load %dx.types.Handle, %dx.types.Handle* @"\01?Material_Texture2D_2Sampler@@3USamplerState@@A", align 4, !noalias !70
  %16 = load %dx.types.Handle, %dx.types.Handle* @"\01?LandscapeParameters_NormalmapTextureSampler@@3USamplerState@@A", align 4
  %17 = load %dx.types.Handle, %dx.types.Handle* @"\01?LandscapeParameters_HeightmapTextureSampler@@3USamplerState@@A", align 4, !noalias !72
  %18 = load %dx.types.Handle, %dx.types.Handle* @"\01?View_LandscapeWeightmapSampler@@3USamplerState@@A", align 4, !noalias !80
  %19 = load %dx.types.Handle, %dx.types.Handle* @"\01?HitGroupSystemIndexBuffer@@3UByteAddressBuffer@@A", align 4, !noalias !83
  %20 = load %dx.types.Handle, %dx.types.Handle* @"\01?Material_Texture2D_16@@3V?$Texture2D@V?$vector@M$03@@@@A", align 4, !noalias !65
  %21 = load %dx.types.Handle, %dx.types.Handle* @"\01?Material_Texture2D_15@@3V?$Texture2D@V?$vector@M$03@@@@A", align 4, !noalias !65
  %22 = load %dx.types.Handle, %dx.types.Handle* @"\01?Material_Texture2D_14@@3V?$Texture2D@V?$vector@M$03@@@@A", align 4, !noalias !65
  %23 = load %dx.types.Handle, %dx.types.Handle* @"\01?Material_Texture2D_13@@3V?$Texture2D@V?$vector@M$03@@@@A", align 4, !noalias !65
  %24 = load %dx.types.Handle, %dx.types.Handle* @"\01?Material_Texture2D_12@@3V?$Texture2D@V?$vector@M$03@@@@A", align 4, !noalias !65
  %25 = load %dx.types.Handle, %dx.types.Handle* @"\01?Material_Texture2D_11@@3V?$Texture2D@V?$vector@M$03@@@@A", align 4, !noalias !65
  %26 = load %dx.types.Handle, %dx.types.Handle* @"\01?Material_Texture2D_10@@3V?$Texture2D@V?$vector@M$03@@@@A", align 4, !noalias !65
  %27 = load %dx.types.Handle, %dx.types.Handle* @"\01?Material_Texture2D_9@@3V?$Texture2D@V?$vector@M$03@@@@A", align 4, !noalias !65
  %28 = load %dx.types.Handle, %dx.types.Handle* @"\01?Material_Texture2D_8@@3V?$Texture2D@V?$vector@M$03@@@@A", align 4, !noalias !65
  %29 = load %dx.types.Handle, %dx.types.Handle* @"\01?Material_Texture2D_7@@3V?$Texture2D@V?$vector@M$03@@@@A", align 4, !noalias !65
  %30 = load %dx.types.Handle, %dx.types.Handle* @"\01?Material_Texture2D_6@@3V?$Texture2D@V?$vector@M$03@@@@A", align 4, !noalias !70
  %31 = load %dx.types.Handle, %dx.types.Handle* @"\01?Material_Texture2D_5@@3V?$Texture2D@V?$vector@M$03@@@@A", align 4, !noalias !70
  %32 = load %dx.types.Handle, %dx.types.Handle* @"\01?Material_Texture2D_4@@3V?$Texture2D@V?$vector@M$03@@@@A", align 4, !noalias !70
  %33 = load %dx.types.Handle, %dx.types.Handle* @"\01?Material_Texture2D_3@@3V?$Texture2D@V?$vector@M$03@@@@A", align 4, !noalias !70
  %34 = load %dx.types.Handle, %dx.types.Handle* @"\01?Material_Texture2D_2@@3V?$Texture2D@V?$vector@M$03@@@@A", align 4, !noalias !70
  %35 = load %dx.types.Handle, %dx.types.Handle* @"\01?Material_Texture2D_1@@3V?$Texture2D@V?$vector@M$03@@@@A", align 4, !noalias !70
  %36 = load %dx.types.Handle, %dx.types.Handle* @"\01?Material_Texture2D_0@@3V?$Texture2D@V?$vector@M$03@@@@A", align 4, !noalias !70
  %37 = load %dx.types.Handle, %dx.types.Handle* @"\01?LandscapeParameters_NormalmapTexture@@3V?$Texture2D@V?$vector@M$03@@@@A", align 4
  %38 = load %dx.types.Handle, %dx.types.Handle* @"\01?LandscapeParameters_HeightmapTexture@@3V?$Texture2D@V?$vector@M$03@@@@A", align 4, !noalias !72
  %39 = load %dx.types.Handle, %dx.types.Handle* @"\01?LandscapeContinuousLODParameters_SectionLODBias@@3V?$Buffer@M@@A", align 4, !noalias !72
  %40 = load %dx.types.Handle, %dx.types.Handle* @"\01?View_LandscapePerComponentData@@3V?$Buffer@M@@A", align 4, !noalias !72
  %41 = load %dx.types.Handle, %dx.types.Handle* @"\01?View_LandscapeIndirection@@3V?$Buffer@I@@A", align 4, !noalias !72
  %42 = load %dx.types.Handle, %dx.types.Handle* @"\01?View_SkyIrradianceEnvironmentMap@@3V?$StructuredBuffer@V?$vector@M$03@@@@A", align 4, !noalias !90
  %43 = load %dx.types.Handle, %dx.types.Handle* @"\01?View_InstanceSceneData@@3V?$StructuredBuffer@V?$vector@M$03@@@@A", align 4, !noalias !100
  %44 = load %dx.types.Handle, %dx.types.Handle* @"\01?View_PrimitiveSceneData@@3V?$StructuredBuffer@V?$vector@M$03@@@@A", align 4
  %45 = load %dx.types.Handle, %dx.types.Handle* @HitGroupSystemRootConstants, align 4
  %46 = load %dx.types.Handle, %dx.types.Handle* @UniformBufferConstants_Material, align 4
  %47 = load %dx.types.Handle, %dx.types.Handle* @UniformBufferConstants_LandscapeParameters, align 4
  %48 = load %dx.types.Handle, %dx.types.Handle* @UniformBufferConstants_LandscapeContinuousLODParameters, align 4
  %49 = load %dx.types.Handle, %dx.types.Handle* @UniformBufferConstants_LandscapeMVF, align 4
  %50 = load %dx.types.Handle, %dx.types.Handle* @UniformBufferConstants_View, align 4
  %51 = alloca [3 x float], align 4
  %52 = alloca [3 x float], align 4
  %53 = alloca [3 x float], align 4
  %54 = alloca [3 x i32], align 4
  %55 = alloca [3 x i32], align 4
  %56 = alloca [4 x float], align 4
  %57 = alloca [3 x float], align 4
  %58 = alloca [4 x float], align 4
  %59 = call %dx.types.Handle @dx.op.createHandleForLib.dx.types.Handle(i32 160, %dx.types.Handle %45)  ; CreateHandleForLib(Resource)
  %60 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %59, %dx.types.ResourceProperties { i32 13, i32 24 })  ; AnnotateHandle(res,props)  resource: CBuffer
  %61 = call %dx.types.Handle @dx.op.createHandleForLib.dx.types.Handle(i32 160, %dx.types.Handle %46)  ; CreateHandleForLib(Resource)
  %62 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %61, %dx.types.ResourceProperties { i32 13, i32 428 })  ; AnnotateHandle(res,props)  resource: CBuffer
  %63 = call %dx.types.Handle @dx.op.createHandleForLib.dx.types.Handle(i32 160, %dx.types.Handle %47)  ; CreateHandleForLib(Resource)
  %64 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %63, %dx.types.ResourceProperties { i32 13, i32 236 })  ; AnnotateHandle(res,props)  resource: CBuffer
  %65 = call %dx.types.Handle @dx.op.createHandleForLib.dx.types.Handle(i32 160, %dx.types.Handle %48)  ; CreateHandleForLib(Resource)
  %66 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %65, %dx.types.ResourceProperties { i32 13, i32 28 })  ; AnnotateHandle(res,props)  resource: CBuffer
  %67 = call %dx.types.Handle @dx.op.createHandleForLib.dx.types.Handle(i32 160, %dx.types.Handle %49)  ; CreateHandleForLib(Resource)
  %68 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %67, %dx.types.ResourceProperties { i32 13, i32 8 })  ; AnnotateHandle(res,props)  resource: CBuffer
  %69 = call %dx.types.Handle @dx.op.createHandleForLib.dx.types.Handle(i32 160, %dx.types.Handle %50)  ; CreateHandleForLib(Resource)
  %70 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %69, %dx.types.ResourceProperties { i32 13, i32 5292 })  ; AnnotateHandle(res,props)  resource: CBuffer
  %71 = call float @dx.op.rayTCurrent.f32(i32 154)  ; RayTCurrent()
  %72 = getelementptr inbounds %struct.FPackedMaterialClosestHitPayload, %struct.FPackedMaterialClosestHitPayload* %PackedPayload, i32 0, i32 0, i32 0
  store float %71, float* %72, align 4, !tbaa !105
  %73 = getelementptr inbounds %struct.FPackedMaterialClosestHitPayload, %struct.FPackedMaterialClosestHitPayload* %PackedPayload, i32 0, i32 6
  %74 = load i32, i32* %73, align 4, !tbaa !109
  %75 = and i32 %74, 33554432
  %76 = icmp ne i32 %75, 0
  br i1 %76, label %77, label %658

; <label>:77                                      ; preds = %0
  %78 = bitcast [3 x float]* %51 to i8*
  call void @llvm.lifetime.start(i64 12, i8* %78) #0
  %79 = bitcast [3 x float]* %52 to i8*
  call void @llvm.lifetime.start(i64 12, i8* %79) #0
  %80 = bitcast [3 x float]* %53 to i8*
  call void @llvm.lifetime.start(i64 12, i8* %80) #0
  %81 = getelementptr inbounds [4 x float], [4 x float]* %58, i32 0, i32 0
  br label %82

; <label>:82                                      ; preds = %421, %77
  %83 = phi i32 [ 0, %77 ], [ %574, %421 ]
  %84 = call i32 @dx.op.primitiveIndex.i32(i32 161)  ; PrimitiveIndex()
  %85 = call %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32 59, %dx.types.Handle %64, i32 0)  ; CBufferLoadLegacy(handle,regIndex)
  %86 = extractvalue %dx.types.CBufRet.i32 %85, 1
  %87 = call %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32 59, %dx.types.Handle %66, i32 0)  ; CBufferLoadLegacy(handle,regIndex)
  %88 = extractvalue %dx.types.CBufRet.i32 %87, 3
  %89 = sub nsw i32 %86, %88
  %90 = call %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32 59, %dx.types.Handle %66, i32 1)  ; CBufferLoadLegacy(handle,regIndex)
  %91 = extractvalue %dx.types.CBufRet.i32 %90, 0
  %92 = mul nsw i32 %89, %91
  %93 = extractvalue %dx.types.CBufRet.i32 %85, 0
  %94 = extractvalue %dx.types.CBufRet.i32 %87, 2
  %95 = call %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32 59, %dx.types.Handle %64, i32 1)  ; CBufferLoadLegacy(handle,regIndex)
  %96 = extractvalue %dx.types.CBufRet.i32 %95, 0
  %97 = sitofp i32 %96 to float
  %98 = extractvalue %dx.types.CBufRet.i32 %87, 0
  %99 = call %dx.types.Handle @dx.op.createHandleForLib.dx.types.Handle(i32 160, %dx.types.Handle %41)  ; CreateHandleForLib(Resource)
  %100 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %99, %dx.types.ResourceProperties { i32 10, i32 261 })  ; AnnotateHandle(res,props)  resource: TypedBuffer<U32>
  %101 = call %dx.types.ResRet.i32 @dx.op.bufferLoad.i32(i32 68, %dx.types.Handle %100, i32 %98, i32 undef)  ; BufferLoad(srv,index,wot)
  %102 = extractvalue %dx.types.ResRet.i32 %101, 0
  %103 = add i32 %92, %93
  %104 = sub i32 %103, %94
  %105 = add i32 %104, %102
  %106 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %70, i32 244)  ; CBufferLoadLegacy(handle,regIndex)
  %107 = extractvalue %dx.types.CBufRet.f32 %106, 0
  %108 = fcmp fast oge float %107, 0.000000e+00
  %109 = call %dx.types.Handle @dx.op.createHandleForLib.dx.types.Handle(i32 160, %dx.types.Handle %40)  ; CreateHandleForLib(Resource)
  %110 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %109, %dx.types.ResourceProperties { i32 10, i32 265 })  ; AnnotateHandle(res,props)  resource: TypedBuffer<F32>
  %111 = call %dx.types.ResRet.f32 @dx.op.bufferLoad.f32(i32 68, %dx.types.Handle %110, i32 %105, i32 undef)  ; BufferLoad(srv,index,wot)
  %112 = extractvalue %dx.types.ResRet.f32 %111, 0
  %113 = select i1 %108, float %107, float %112
  %114 = call %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32 59, %dx.types.Handle %70, i32 244)  ; CBufferLoadLegacy(handle,regIndex)
  %115 = extractvalue %dx.types.CBufRet.i32 %114, 1
  %116 = sitofp i32 %115 to float
  %117 = fadd fast float %116, %113
  %118 = call float @dx.op.binary.f32(i32 36, float %117, float %97)  ; FMin(a,b)
  %119 = call float @dx.op.unary.f32(i32 27, float %118)  ; Round_ni(value)
  %120 = fptoui float %119 to i32
  %121 = extractvalue %dx.types.CBufRet.i32 %85, 2
  %122 = and i32 %120, 31
  %123 = ashr i32 %121, %122
  %124 = add nsw i32 %123, -1
  %125 = sitofp i32 %124 to float
  %126 = fadd fast float %125, 1.000000e+00
  %127 = fptoui float %126 to i32
  %128 = bitcast [3 x i32]* %54 to i8*
  call void @llvm.lifetime.start(i64 12, i8* %128) #0
  %129 = call %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32 59, %dx.types.Handle %60, i32 0)  ; CBufferLoadLegacy(handle,regIndex)
  %130 = extractvalue %dx.types.CBufRet.i32 %129, 1
  %131 = extractvalue %dx.types.CBufRet.i32 %129, 0
  %132 = and i32 %131, 255
  %133 = mul i32 %84, 3
  %134 = icmp eq i32 %132, 0
  br i1 %134, label %135, label %138

; <label>:135                                     ; preds = %82
  %136 = add i32 %133, 1
  %137 = add i32 %133, 2
  br label %163

; <label>:138                                     ; preds = %82
  %139 = icmp eq i32 %132, 2
  %140 = call %dx.types.Handle @dx.op.createHandleForLib.dx.types.Handle(i32 160, %dx.types.Handle %19)  ; CreateHandleForLib(Resource)
  %141 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %140, %dx.types.ResourceProperties { i32 11, i32 0 })  ; AnnotateHandle(res,props)  resource: ByteAddressBuffer
  br i1 %139, label %142, label %156

; <label>:142                                     ; preds = %138
  %143 = mul i32 %84, 6
  %144 = add i32 %143, %130
  %145 = and i32 %144, -4
  %146 = call %dx.types.ResRet.i32 @dx.op.rawBufferLoad.i32(i32 139, %dx.types.Handle %141, i32 %145, i32 undef, i8 3, i32 4)  ; RawBufferLoad(srv,index,elementOffset,mask,alignment)
  %147 = extractvalue %dx.types.ResRet.i32 %146, 0
  %148 = extractvalue %dx.types.ResRet.i32 %146, 1
  %149 = icmp eq i32 %145, %144
  %150 = lshr i32 %147, 16
  %151 = and i32 %148, 65535
  br i1 %149, label %152, label %154

; <label>:152                                     ; preds = %142
  %153 = and i32 %147, 65535
  br label %163

; <label>:154                                     ; preds = %142
  %155 = lshr i32 %148, 16
  br label %163

; <label>:156                                     ; preds = %138
  %157 = mul i32 %132, %133
  %158 = add i32 %157, %130
  %159 = call %dx.types.ResRet.i32 @dx.op.rawBufferLoad.i32(i32 139, %dx.types.Handle %141, i32 %158, i32 undef, i8 7, i32 4)  ; RawBufferLoad(srv,index,elementOffset,mask,alignment)
  %160 = extractvalue %dx.types.ResRet.i32 %159, 0
  %161 = extractvalue %dx.types.ResRet.i32 %159, 1
  %162 = extractvalue %dx.types.ResRet.i32 %159, 2
  br label %163

; <label>:163                                     ; preds = %156, %154, %152, %135
  %164 = phi i32 [ %133, %135 ], [ %160, %156 ], [ %153, %152 ], [ %150, %154 ]
  %165 = phi i32 [ %136, %135 ], [ %161, %156 ], [ %150, %152 ], [ %151, %154 ]
  %166 = phi i32 [ %137, %135 ], [ %162, %156 ], [ %151, %152 ], [ %155, %154 ]
  %167 = getelementptr inbounds [3 x i32], [3 x i32]* %54, i32 0, i32 0
  store i32 %164, i32* %167, align 4
  %168 = getelementptr inbounds [3 x i32], [3 x i32]* %54, i32 0, i32 1
  store i32 %165, i32* %168, align 4
  %169 = getelementptr inbounds [3 x i32], [3 x i32]* %54, i32 0, i32 2
  store i32 %166, i32* %169, align 4
  %170 = getelementptr [3 x i32], [3 x i32]* %54, i32 0, i32 %83
  %171 = load i32, i32* %170, align 4, !tbaa !109, !noalias !111
  %172 = call i32 @dx.op.instanceID.i32(i32 141)  ; InstanceID()
  %173 = urem i32 %171, %127
  %174 = uitofp i32 %173 to float
  %175 = udiv i32 %171, %127
  %176 = uitofp i32 %175 to float
  %177 = call %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32 59, %dx.types.Handle %68, i32 0)  ; CBufferLoadLegacy(handle,regIndex)
  %178 = extractvalue %dx.types.CBufRet.i32 %177, 0
  %179 = sitofp i32 %178 to float
  %180 = extractvalue %dx.types.CBufRet.i32 %177, 1
  %181 = sitofp i32 %180 to float
  call void @llvm.lifetime.end(i64 12, i8* %128) #0
  %182 = and i32 %172, 2147483647
  %183 = mul i32 %182, 42
  %184 = call %dx.types.Handle @dx.op.createHandleForLib.dx.types.Handle(i32 160, %dx.types.Handle %44)  ; CreateHandleForLib(Resource)
  %185 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %184, %dx.types.ResourceProperties { i32 12, i32 16 })  ; AnnotateHandle(res,props)  resource: StructuredBuffer<stride=16>
  %186 = call %dx.types.ResRet.f32 @dx.op.rawBufferLoad.f32(i32 139, %dx.types.Handle %185, i32 %183, i32 0, i8 15, i32 4)  ; RawBufferLoad(srv,index,elementOffset,mask,alignment)
  %187 = extractvalue %dx.types.ResRet.f32 %186, 1
  %188 = bitcast float %187 to i32
  %189 = call %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32 59, %dx.types.Handle %70, i32 283)  ; CBufferLoadLegacy(handle,regIndex)
  %190 = extractvalue %dx.types.CBufRet.i32 %189, 0
  %191 = call %dx.types.Handle @dx.op.createHandleForLib.dx.types.Handle(i32 160, %dx.types.Handle %43)  ; CreateHandleForLib(Resource)
  %192 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %191, %dx.types.ResourceProperties { i32 12, i32 16 })  ; AnnotateHandle(res,props)  resource: StructuredBuffer<stride=16>
  %193 = call %dx.types.ResRet.f32 @dx.op.rawBufferLoad.f32(i32 139, %dx.types.Handle %192, i32 %188, i32 0, i8 15, i32 4)  ; RawBufferLoad(srv,index,elementOffset,mask,alignment)
  %194 = extractvalue %dx.types.ResRet.f32 %193, 0
  %195 = bitcast float %194 to i32
  %196 = and i32 %195, 1048575
  %197 = icmp eq i32 %196, 1048575
  br i1 %197, label %306, label %198, !dx.controlflow.hints !114

; <label>:198                                     ; preds = %163
  %199 = mul nuw nsw i32 %196, 42
  %200 = or i32 %199, 1
  %201 = call %dx.types.ResRet.f32 @dx.op.rawBufferLoad.f32(i32 139, %dx.types.Handle %185, i32 %200, i32 0, i8 15, i32 4)  ; RawBufferLoad(srv,index,elementOffset,mask,alignment)
  %202 = extractvalue %dx.types.ResRet.f32 %201, 0
  %203 = extractvalue %dx.types.ResRet.f32 %201, 1
  %204 = extractvalue %dx.types.ResRet.f32 %201, 2
  %205 = add i32 %190, %188
  %206 = call %dx.types.ResRet.f32 @dx.op.rawBufferLoad.f32(i32 139, %dx.types.Handle %192, i32 %205, i32 0, i8 15, i32 4)  ; RawBufferLoad(srv,index,elementOffset,mask,alignment)
  %207 = extractvalue %dx.types.ResRet.f32 %206, 0
  %208 = extractvalue %dx.types.ResRet.f32 %206, 1
  %209 = extractvalue %dx.types.ResRet.f32 %206, 2
  %210 = extractvalue %dx.types.ResRet.f32 %206, 3
  %211 = bitcast float %207 to i32
  %212 = bitcast float %208 to i32
  %213 = bitcast float %209 to i32
  %214 = bitcast float %210 to i32
  %215 = shl i32 %190, 1
  %216 = add i32 %215, %188
  %217 = call %dx.types.ResRet.f32 @dx.op.rawBufferLoad.f32(i32 139, %dx.types.Handle %192, i32 %216, i32 0, i8 15, i32 4)  ; RawBufferLoad(srv,index,elementOffset,mask,alignment)
  %218 = extractvalue %dx.types.ResRet.f32 %217, 0
  %219 = extractvalue %dx.types.ResRet.f32 %217, 1
  %220 = extractvalue %dx.types.ResRet.f32 %217, 2
  %221 = and i32 %211, 65535
  %222 = uitofp i32 %221 to float
  %223 = lshr i32 %211, 16
  %224 = uitofp i32 %223 to float
  %225 = and i32 %212, 32767
  %226 = uitofp i32 %225 to float
  %227 = fadd fast float %222, -3.276800e+04
  %228 = fadd fast float %224, -3.276800e+04
  %229 = fadd fast float %226, -1.638400e+04
  %230 = fmul fast float %229, 0x3F06A0F8E0000000
  %231 = and i32 %212, 32768
  %232 = icmp ne i32 %231, 0
  %233 = fadd fast float %227, %228
  %234 = fmul fast float %233, 0x3F00002000000000
  %235 = fsub fast float %227, %228
  %236 = fmul fast float %235, 0x3F00002000000000
  %237 = call float @dx.op.unary.f32(i32 6, float %234)  ; FAbs(value)
  %238 = call float @dx.op.unary.f32(i32 6, float %236)  ; FAbs(value)
  %239 = call float @dx.op.dot2.f32(i32 54, float 1.000000e+00, float 1.000000e+00, float %237, float %238)  ; Dot2(ax,ay,bx,by)
  %240 = fsub fast float 2.000000e+00, %239
  %241 = call float @dx.op.dot3.f32(i32 55, float %234, float %236, float %240, float %234, float %236, float %240)  ; Dot3(ax,ay,az,bx,by,bz)
  %242 = call float @dx.op.unary.f32(i32 25, float %241)  ; Rsqrt(value)
  %243 = fmul fast float %242, %234
  %244 = fmul fast float %242, %236
  %245 = fmul fast float %242, %240
  %246 = fadd fast float %245, 1.000000e+00
  %247 = fdiv fast float 1.000000e+00, %246
  %248 = fmul fast float %244, %243
  %249 = fmul fast float %248, %247
  %250 = fsub fast float -0.000000e+00, %249
  %251 = fmul fast float %243, %243
  %252 = fmul fast float %251, %247
  %253 = fsub fast float 1.000000e+00, %252
  %254 = fmul fast float %244, %244
  %255 = fmul fast float %254, %247
  %256 = fsub fast float 1.000000e+00, %255
  %257 = fmul fast float %230, %230
  %258 = fsub fast float 1.000000e+00, %257
  %259 = call float @dx.op.unary.f32(i32 24, float %258)  ; Sqrt(value)
  %260 = select i1 %232, float %230, float %259
  %261 = select i1 %232, float %259, float %230
  %262 = fmul fast float %253, %260
  %263 = fmul fast float %260, %250
  %264 = fmul fast float %260, %243
  %265 = fmul fast float %261, %250
  %266 = fmul fast float %256, %261
  %267 = fmul fast float %244, %261
  %268 = fsub fast float -0.000000e+00, %267
  %269 = fadd fast float %262, %265
  %270 = fadd fast float %263, %266
  %271 = fsub fast float %268, %264
  %272 = fmul fast float %271, %244
  %273 = fmul fast float %270, %245
  %274 = fsub fast float %272, %273
  %275 = fmul fast float %269, %245
  %276 = fmul fast float %271, %243
  %277 = fsub fast float %275, %276
  %278 = fmul fast float %270, %243
  %279 = fmul fast float %269, %244
  %280 = fsub fast float %278, %279
  %281 = lshr i32 %214, 16
  %282 = shl i32 %281, 23
  %283 = add i32 %282, -125829120
  %284 = bitcast i32 %283 to float
  %285 = lshr i32 %213, 16
  %286 = and i32 %213, 65535
  %287 = and i32 %214, 65535
  %288 = uitofp i32 %286 to float
  %289 = uitofp i32 %285 to float
  %290 = uitofp i32 %287 to float
  %291 = fadd fast float %288, -3.276800e+04
  %292 = fadd fast float %289, -3.276800e+04
  %293 = fadd fast float %290, -3.276800e+04
  %294 = fmul fast float %284, %291
  %295 = fmul fast float %284, %292
  %296 = fmul fast float %284, %293
  %297 = fmul fast float %269, %294
  %298 = fmul fast float %270, %294
  %299 = fmul fast float %271, %294
  %300 = fmul fast float %274, %295
  %301 = fmul fast float %277, %295
  %302 = fmul fast float %280, %295
  %303 = fmul fast float %243, %296
  %304 = fmul fast float %244, %296
  %305 = fmul fast float %245, %296
  br label %306

; <label>:306                                     ; preds = %198, %163
  %307 = phi float [ %202, %198 ], [ 0.000000e+00, %163 ]
  %308 = phi float [ %203, %198 ], [ 0.000000e+00, %163 ]
  %309 = phi float [ %204, %198 ], [ 0.000000e+00, %163 ]
  %310 = phi float [ %297, %198 ], [ 0.000000e+00, %163 ]
  %311 = phi float [ %298, %198 ], [ 0.000000e+00, %163 ]
  %312 = phi float [ %299, %198 ], [ 0.000000e+00, %163 ]
  %313 = phi float [ %300, %198 ], [ 0.000000e+00, %163 ]
  %314 = phi float [ %301, %198 ], [ 0.000000e+00, %163 ]
  %315 = phi float [ %302, %198 ], [ 0.000000e+00, %163 ]
  %316 = phi float [ %303, %198 ], [ 0.000000e+00, %163 ]
  %317 = phi float [ %304, %198 ], [ 0.000000e+00, %163 ]
  %318 = phi float [ %305, %198 ], [ 0.000000e+00, %163 ]
  %319 = phi float [ %218, %198 ], [ 0.000000e+00, %163 ]
  %320 = phi float [ %219, %198 ], [ 0.000000e+00, %163 ]
  %321 = phi float [ %220, %198 ], [ 0.000000e+00, %163 ]
  %322 = sub nsw i32 %93, %94
  %323 = add nsw i32 %322, %92
  %324 = add i32 %102, %323
  %325 = call %dx.types.ResRet.f32 @dx.op.bufferLoad.f32(i32 68, %dx.types.Handle %110, i32 %324, i32 undef)  ; BufferLoad(srv,index,wot)
  %326 = extractvalue %dx.types.ResRet.f32 %325, 0
  %327 = select i1 %108, float %107, float %326
  %328 = fadd fast float %116, %327
  %329 = call float @dx.op.binary.f32(i32 36, float %328, float %97)  ; FMin(a,b)
  %330 = call float @dx.op.unary.f32(i32 27, float %329)  ; Round_ni(value)
  %331 = fptoui float %330 to i32
  %332 = and i32 %331, 31
  %333 = ashr i32 %121, %332
  %334 = add nsw i32 %333, -1
  %335 = sitofp i32 %334 to float
  %336 = fdiv fast float 1.000000e+00, %335
  %337 = call %dx.types.Handle @dx.op.createHandleForLib.dx.types.Handle(i32 160, %dx.types.Handle %39)  ; CreateHandleForLib(Resource)
  %338 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %337, %dx.types.ResourceProperties { i32 10, i32 265 })  ; AnnotateHandle(res,props)  resource: TypedBuffer<F32>
  %339 = call %dx.types.ResRet.f32 @dx.op.bufferLoad.f32(i32 68, %dx.types.Handle %338, i32 %323, i32 undef)  ; BufferLoad(srv,index,wot)
  %340 = fmul fast float %336, %174
  %341 = fmul fast float %336, %176
  %342 = fadd fast float %340, %179
  %343 = fadd fast float %341, %181
  %344 = extractvalue %dx.types.CBufRet.i32 %85, 3
  %345 = sitofp i32 %344 to float
  %346 = fdiv fast float %342, %345
  %347 = fdiv fast float %343, %345
  %348 = fsub fast float 1.000000e+00, %346
  %349 = fmul fast float %347, 2.000000e+00
  %350 = fmul fast float %348, 2.000000e+00
  %351 = fmul fast float %329, %349
  %352 = fmul fast float %329, %350
  %353 = fsub fast float 1.000000e+00, %349
  %354 = fsub fast float 1.000000e+00, %350
  call void @llvm.lifetime.start(i64 16, i8* bitcast ([4 x i32]* @NeighborOffset.i.i.i.i.0.hca to i8*)) #0
  call void @llvm.lifetime.start(i64 16, i8* bitcast ([4 x i32]* @NeighborOffset.i.i.i.i.1.hca to i8*)) #0
  %355 = bitcast [4 x float]* %58 to i8*
  call void @llvm.lifetime.start(i64 16, i8* %355) #0, !noalias !115
  br label %356

; <label>:356                                     ; preds = %416, %306
  %357 = phi i32 [ -1, %306 ], [ %420, %416 ]
  %358 = phi i32 [ 0, %306 ], [ %418, %416 ]
  %359 = phi i32 [ 0, %306 ], [ %414, %416 ]
  %360 = call %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32 59, %dx.types.Handle %64, i32 0)  ; CBufferLoadLegacy(handle,regIndex)
  %361 = extractvalue %dx.types.CBufRet.i32 %360, 0
  %362 = extractvalue %dx.types.CBufRet.i32 %360, 1
  %363 = add i32 %361, %358
  %364 = add i32 %362, %357
  %365 = call %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32 59, %dx.types.Handle %66, i32 0)  ; CBufferLoadLegacy(handle,regIndex)
  %366 = extractvalue %dx.types.CBufRet.i32 %365, 2
  %367 = extractvalue %dx.types.CBufRet.i32 %365, 3
  %368 = call i32 @dx.op.binary.i32(i32 37, i32 %366, i32 %363)  ; IMax(a,b)
  %369 = call i32 @dx.op.binary.i32(i32 37, i32 %367, i32 %364)  ; IMax(a,b)
  %370 = call %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32 59, %dx.types.Handle %66, i32 1)  ; CBufferLoadLegacy(handle,regIndex)
  %371 = extractvalue %dx.types.CBufRet.i32 %370, 0
  %372 = extractvalue %dx.types.CBufRet.i32 %370, 1
  %373 = add i32 %366, -1
  %374 = add i32 %373, %371
  %375 = add i32 %367, -1
  %376 = add i32 %375, %372
  %377 = call i32 @dx.op.binary.i32(i32 38, i32 %374, i32 %368)  ; IMin(a,b)
  %378 = call i32 @dx.op.binary.i32(i32 38, i32 %376, i32 %369)  ; IMin(a,b)
  %379 = sub nsw i32 %378, %367
  %380 = mul nsw i32 %379, %371
  %381 = sub i32 %377, %366
  %382 = add nsw i32 %381, %380
  %383 = extractvalue %dx.types.CBufRet.i32 %365, 0
  %384 = call %dx.types.Handle @dx.op.createHandleForLib.dx.types.Handle(i32 160, %dx.types.Handle %41)  ; CreateHandleForLib(Resource)
  %385 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %384, %dx.types.ResourceProperties { i32 10, i32 261 })  ; AnnotateHandle(res,props)  resource: TypedBuffer<U32>
  %386 = call %dx.types.ResRet.i32 @dx.op.bufferLoad.i32(i32 68, %dx.types.Handle %385, i32 %383, i32 undef)  ; BufferLoad(srv,index,wot)
  %387 = extractvalue %dx.types.ResRet.i32 %386, 0
  %388 = add i32 %382, %387
  %389 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %70, i32 244)  ; CBufferLoadLegacy(handle,regIndex)
  %390 = extractvalue %dx.types.CBufRet.f32 %389, 0
  %391 = fcmp fast oge float %390, 0.000000e+00
  %392 = call %dx.types.Handle @dx.op.createHandleForLib.dx.types.Handle(i32 160, %dx.types.Handle %40)  ; CreateHandleForLib(Resource)
  %393 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %392, %dx.types.ResourceProperties { i32 10, i32 265 })  ; AnnotateHandle(res,props)  resource: TypedBuffer<F32>
  %394 = call %dx.types.ResRet.f32 @dx.op.bufferLoad.f32(i32 68, %dx.types.Handle %393, i32 %388, i32 undef)  ; BufferLoad(srv,index,wot)
  %395 = extractvalue %dx.types.ResRet.f32 %394, 0
  %396 = select i1 %391, float %390, float %395
  %397 = call %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32 59, %dx.types.Handle %64, i32 1)  ; CBufferLoadLegacy(handle,regIndex)
  %398 = extractvalue %dx.types.CBufRet.i32 %397, 0
  %399 = sitofp i32 %398 to float
  %400 = add i32 %387, %323
  %401 = call %dx.types.ResRet.f32 @dx.op.bufferLoad.f32(i32 68, %dx.types.Handle %393, i32 %400, i32 undef)  ; BufferLoad(srv,index,wot)
  %402 = extractvalue %dx.types.ResRet.f32 %401, 0
  %403 = select i1 %391, float %390, float %402
  %404 = call %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32 59, %dx.types.Handle %70, i32 244)  ; CBufferLoadLegacy(handle,regIndex)
  %405 = extractvalue %dx.types.CBufRet.i32 %404, 1
  %406 = sitofp i32 %405 to float
  %407 = fadd fast float %406, %403
  %408 = call float @dx.op.binary.f32(i32 36, float %407, float %399)  ; FMin(a,b)
  %409 = call float @dx.op.binary.f32(i32 35, float %396, float %408)  ; FMax(a,b)
  %410 = getelementptr inbounds [4 x float], [4 x float]* %58, i32 0, i32 %359
  %411 = fadd fast float %406, %409
  %412 = select i1 %391, float %390, float %411
  %413 = call float @dx.op.binary.f32(i32 36, float %412, float %399)  ; FMin(a,b)
  store float %413, float* %410, align 4, !tbaa !105, !noalias !115
  %414 = add nuw nsw i32 %359, 1
  %415 = icmp eq i32 %414, 4
  br i1 %415, label %421, label %416

; <label>:416                                     ; preds = %356
  %417 = getelementptr [4 x i32], [4 x i32]* @NeighborOffset.i.i.i.i.0.hca, i32 0, i32 %414
  %418 = load i32, i32* %417, align 4
  %419 = getelementptr [4 x i32], [4 x i32]* @NeighborOffset.i.i.i.i.1.hca, i32 0, i32 %414
  %420 = load i32, i32* %419, align 4
  br label %356

; <label>:421                                     ; preds = %356
  %422 = uitofp i32 %331 to float
  %423 = extractvalue %dx.types.ResRet.f32 %339, 0
  %424 = fsub fast float 1.000000e+00, %347
  %425 = fmul fast float %346, 2.000000e+00
  %426 = fmul fast float %424, 2.000000e+00
  %427 = fmul fast float %329, %425
  %428 = fmul fast float %329, %426
  %429 = fsub fast float 1.000000e+00, %425
  %430 = fsub fast float 1.000000e+00, %426
  %431 = load float, float* %81, align 4, !tbaa !105, !noalias !115
  %432 = getelementptr inbounds [4 x float], [4 x float]* %58, i32 0, i32 1
  %433 = load float, float* %432, align 4, !tbaa !105, !noalias !115
  %434 = getelementptr inbounds [4 x float], [4 x float]* %58, i32 0, i32 2
  %435 = load float, float* %434, align 4, !tbaa !105, !noalias !115
  %436 = getelementptr inbounds [4 x float], [4 x float]* %58, i32 0, i32 3
  %437 = load float, float* %436, align 4, !tbaa !105, !noalias !115
  call void @llvm.lifetime.end(i64 16, i8* %355) #0, !noalias !115
  call void @llvm.lifetime.end(i64 16, i8* bitcast ([4 x i32]* @NeighborOffset.i.i.i.i.0.hca to i8*)) #0
  call void @llvm.lifetime.end(i64 16, i8* bitcast ([4 x i32]* @NeighborOffset.i.i.i.i.1.hca to i8*)) #0
  %438 = fmul fast float %431, %353
  %439 = fmul fast float %433, %429
  %440 = fmul fast float %435, %354
  %441 = fmul fast float %437, %430
  %442 = fadd fast float %438, %351
  %443 = fadd fast float %439, %427
  %444 = fadd fast float %440, %352
  %445 = fadd fast float %441, %428
  %446 = fadd fast float %342, %343
  %447 = fdiv fast float %446, %345
  %448 = fcmp fast ogt float %447, 1.000000e+00
  %449 = fcmp fast olt float %346, %347
  %450 = select i1 %449, float %445, float %444
  %451 = select i1 %449, float %443, float %442
  %452 = select i1 %448, float %450, float %451
  %453 = call float @dx.op.unary.f32(i32 27, float %452)  ; Round_ni(value)
  %454 = fsub fast float %452, %453
  %455 = fsub fast float %453, %422
  %456 = fsub fast float -0.000000e+00, %455
  %457 = call float @dx.op.unary.f32(i32 21, float %456)  ; Exp(value)
  %458 = fmul fast float %457, %174
  %459 = fmul fast float %457, %176
  %460 = call float @dx.op.unary.f32(i32 27, float %458)  ; Round_ni(value)
  %461 = call float @dx.op.unary.f32(i32 27, float %459)  ; Round_ni(value)
  %462 = fsub fast float -0.000000e+00, %453
  %463 = call float @dx.op.unary.f32(i32 21, float %462)  ; Exp(value)
  %464 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %64, i32 5)  ; CBufferLoadLegacy(handle,regIndex)
  %465 = extractvalue %dx.types.CBufRet.f32 %464, 0
  %466 = fmul fast float %465, %463
  %467 = fadd fast float %466, -1.000000e+00
  %468 = fmul fast float %463, 5.000000e-01
  %469 = fmul fast float %468, %465
  %470 = call float @dx.op.binary.f32(i32 35, float %469, float 2.000000e+00)  ; FMax(a,b)
  %471 = fadd fast float %470, -1.000000e+00
  %472 = extractvalue %dx.types.CBufRet.f32 %464, 1
  %473 = fmul fast float %472, %467
  %474 = fmul fast float %472, %471
  %475 = fdiv fast float %460, %473
  %476 = fdiv fast float %461, %473
  %477 = fmul fast float %460, 5.000000e-01
  %478 = fmul fast float %461, 5.000000e-01
  %479 = call float @dx.op.unary.f32(i32 27, float %477)  ; Round_ni(value)
  %480 = call float @dx.op.unary.f32(i32 27, float %478)  ; Round_ni(value)
  %481 = fdiv fast float %479, %474
  %482 = fdiv fast float %480, %474
  %483 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %64, i32 2)  ; CBufferLoadLegacy(handle,regIndex)
  %484 = extractvalue %dx.types.CBufRet.f32 %483, 0
  %485 = extractvalue %dx.types.CBufRet.f32 %483, 1
  %486 = fmul fast float %484, %475
  %487 = fmul fast float %485, %476
  %488 = extractvalue %dx.types.CBufRet.f32 %483, 2
  %489 = extractvalue %dx.types.CBufRet.f32 %483, 3
  %490 = fadd fast float %486, %488
  %491 = fadd fast float %487, %489
  %492 = fmul fast float %484, 5.000000e-01
  %493 = fmul fast float %485, 5.000000e-01
  %494 = fadd fast float %490, %492
  %495 = fadd fast float %491, %493
  %496 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %64, i32 6)  ; CBufferLoadLegacy(handle,regIndex)
  %497 = extractvalue %dx.types.CBufRet.f32 %496, 0
  %498 = extractvalue %dx.types.CBufRet.f32 %496, 1
  %499 = fmul fast float %497, %179
  %500 = fmul fast float %498, %181
  %501 = fadd fast float %494, %499
  %502 = fadd fast float %495, %500
  %503 = fsub fast float %453, %423
  %504 = call %dx.types.Handle @dx.op.createHandleForLib.dx.types.Handle(i32 160, %dx.types.Handle %38)  ; CreateHandleForLib(Resource)
  %505 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %504, %dx.types.ResourceProperties { i32 2, i32 1033 })  ; AnnotateHandle(res,props)  resource: Texture2D<4xF32>
  %506 = call %dx.types.Handle @dx.op.createHandleForLib.dx.types.Handle(i32 160, %dx.types.Handle %17)  ; CreateHandleForLib(Resource)
  %507 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %506, %dx.types.ResourceProperties { i32 14, i32 0 })  ; AnnotateHandle(res,props)  resource: SamplerState
  %508 = call %dx.types.ResRet.f32 @dx.op.sampleLevel.f32(i32 62, %dx.types.Handle %505, %dx.types.Handle %507, float %501, float %502, float undef, float undef, i32 0, i32 0, i32 undef, float %503)  ; SampleLevel(srv,sampler,coord0,coord1,coord2,coord3,offset0,offset1,offset2,LOD)
  %509 = extractvalue %dx.types.ResRet.f32 %508, 0
  %510 = extractvalue %dx.types.ResRet.f32 %508, 1
  %511 = fmul fast float %509, 6.528000e+04
  %512 = fmul fast float %510, 2.550000e+02
  %513 = fadd fast float %512, -3.276800e+04
  %514 = fadd fast float %513, %511
  %515 = fmul fast float %484, %481
  %516 = fmul fast float %485, %482
  %517 = fadd fast float %515, %488
  %518 = fadd fast float %516, %489
  %519 = fadd fast float %517, %492
  %520 = fadd fast float %518, %493
  %521 = fadd fast float %519, %499
  %522 = fadd fast float %520, %500
  %523 = fsub fast float 1.000000e+00, %423
  %524 = fadd fast float %523, %453
  %525 = call %dx.types.ResRet.f32 @dx.op.sampleLevel.f32(i32 62, %dx.types.Handle %505, %dx.types.Handle %507, float %521, float %522, float undef, float undef, i32 0, i32 0, i32 undef, float %524)  ; SampleLevel(srv,sampler,coord0,coord1,coord2,coord3,offset0,offset1,offset2,LOD)
  %526 = extractvalue %dx.types.ResRet.f32 %525, 0
  %527 = extractvalue %dx.types.ResRet.f32 %525, 1
  %528 = fmul fast float %526, 6.528000e+04
  %529 = fmul fast float %527, 2.550000e+02
  %530 = fsub fast float %481, %475
  %531 = fsub fast float %482, %476
  %532 = fsub fast float -3.276800e+04, %514
  %533 = fadd fast float %532, %529
  %534 = fadd fast float %533, %528
  %535 = fmul fast float %530, %454
  %536 = fmul fast float %531, %454
  %537 = fmul fast float %534, %454
  %538 = fadd fast float %535, %475
  %539 = fadd fast float %536, %476
  %540 = fadd fast float %537, %514
  %541 = fmul fast float %540, 7.812500e-03
  %542 = extractvalue %dx.types.CBufRet.f32 %496, 3
  %543 = fmul fast float %542, %179
  %544 = fmul fast float %542, %181
  %545 = fadd fast float %538, %543
  %546 = fadd fast float %539, %544
  %547 = fmul fast float %545, %310
  %548 = fmul fast float %545, %311
  %549 = fmul fast float %545, %312
  %550 = fmul fast float %546, %313
  %551 = fmul fast float %546, %314
  %552 = fmul fast float %546, %315
  %553 = fmul fast float %541, %316
  %554 = fmul fast float %541, %317
  %555 = fmul fast float %541, %318
  %556 = fmul fast float %307, 2.097152e+06
  %557 = fmul fast float %308, 2.097152e+06
  %558 = fmul fast float %309, 2.097152e+06
  %559 = fadd fast float %319, %556
  %560 = fadd fast float %559, %550
  %561 = fadd fast float %560, %547
  %562 = fadd fast float %561, %553
  %563 = fadd fast float %320, %557
  %564 = fadd fast float %563, %551
  %565 = fadd fast float %564, %548
  %566 = fadd fast float %565, %554
  %567 = fadd fast float %321, %558
  %568 = fadd fast float %567, %552
  %569 = fadd fast float %568, %549
  %570 = fadd fast float %569, %555
  %571 = getelementptr [3 x float], [3 x float]* %51, i32 0, i32 %83
  %572 = getelementptr [3 x float], [3 x float]* %52, i32 0, i32 %83
  %573 = getelementptr [3 x float], [3 x float]* %53, i32 0, i32 %83
  store float %562, float* %571, align 4
  store float %566, float* %572, align 4
  store float %570, float* %573, align 4
  %574 = add nuw nsw i32 %83, 1
  %575 = icmp eq i32 %574, 3
  br i1 %575, label %576, label %82

; <label>:576                                     ; preds = %421
  %577 = getelementptr [3 x float], [3 x float]* %51, i32 0, i32 1
  %578 = getelementptr [3 x float], [3 x float]* %52, i32 0, i32 1
  %579 = getelementptr [3 x float], [3 x float]* %53, i32 0, i32 1
  %580 = load float, float* %577, align 4
  %581 = load float, float* %578, align 4
  %582 = load float, float* %579, align 4
  %583 = getelementptr [3 x float], [3 x float]* %51, i32 0, i32 0
  %584 = getelementptr [3 x float], [3 x float]* %52, i32 0, i32 0
  %585 = getelementptr [3 x float], [3 x float]* %53, i32 0, i32 0
  %586 = load float, float* %583, align 4
  %587 = load float, float* %584, align 4
  %588 = load float, float* %585, align 4
  %589 = fsub fast float %580, %586
  %590 = fsub fast float %581, %587
  %591 = fsub fast float %582, %588
  %592 = getelementptr [3 x float], [3 x float]* %51, i32 0, i32 2
  %593 = getelementptr [3 x float], [3 x float]* %52, i32 0, i32 2
  %594 = getelementptr [3 x float], [3 x float]* %53, i32 0, i32 2
  %595 = load float, float* %592, align 4
  %596 = load float, float* %593, align 4
  %597 = load float, float* %594, align 4
  %598 = fsub fast float %595, %586
  %599 = fsub fast float %596, %587
  %600 = fsub fast float %597, %588
  %601 = fmul fast float %599, %591
  %602 = fmul fast float %600, %590
  %603 = fsub fast float %601, %602
  %604 = fmul fast float %600, %589
  %605 = fmul fast float %598, %591
  %606 = fsub fast float %604, %605
  %607 = fmul fast float %598, %590
  %608 = fmul fast float %599, %589
  %609 = fsub fast float %607, %608
  %610 = call float @dx.op.dot3.f32(i32 55, float %603, float %606, float %609, float %603, float %606, float %609)  ; Dot3(ax,ay,az,bx,by,bz)
  %611 = fcmp fast oeq float %610, 0.000000e+00
  %612 = uitofp i1 %611 to float
  %613 = call float @dx.op.worldRayDirection.f32(i32 148, i8 0)  ; WorldRayDirection(col)
  %614 = call float @dx.op.worldRayDirection.f32(i32 148, i8 1)  ; WorldRayDirection(col)
  %615 = call float @dx.op.worldRayDirection.f32(i32 148, i8 2)  ; WorldRayDirection(col)
  %616 = fsub fast float -0.000000e+00, %613
  %617 = fsub fast float -0.000000e+00, %614
  %618 = fsub fast float -0.000000e+00, %615
  %619 = call float @dx.op.unary.f32(i32 25, float %610)  ; Rsqrt(value)
  %620 = fmul fast float %619, %603
  %621 = fmul fast float %619, %606
  %622 = fmul fast float %619, %609
  %623 = fsub fast float %616, %620
  %624 = fsub fast float %617, %621
  %625 = fsub fast float %618, %622
  %626 = fmul fast float %623, %612
  %627 = fmul fast float %624, %612
  %628 = fmul fast float %625, %612
  %629 = fadd fast float %626, %620
  %630 = fadd fast float %627, %621
  %631 = fadd fast float %628, %622
  call void @llvm.lifetime.end(i64 12, i8* %78) #0
  call void @llvm.lifetime.end(i64 12, i8* %79) #0
  call void @llvm.lifetime.end(i64 12, i8* %80) #0
  %632 = call i32 @dx.op.instanceIndex.i32(i32 142)  ; InstanceIndex()
  %633 = call %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32 59, %dx.types.Handle %60, i32 1)  ; CBufferLoadLegacy(handle,regIndex)
  %634 = extractvalue %dx.types.CBufRet.i32 %633, 0
  %635 = sub i32 %632, %634
  %636 = call i32 @dx.op.legacyF32ToF16(i32 130, float %629)  ; LegacyF32ToF16(value)
  %637 = shl i32 %636, 16
  %638 = getelementptr inbounds %struct.FPackedMaterialClosestHitPayload, %struct.FPackedMaterialClosestHitPayload* %PackedPayload, i32 0, i32 3, i32 1
  %639 = load i32, i32* %638, align 4, !tbaa !109
  %640 = or i32 %639, %637
  store i32 %640, i32* %638, align 4, !tbaa !109
  %641 = call i32 @dx.op.legacyF32ToF16(i32 130, float %630)  ; LegacyF32ToF16(value)
  %642 = call i32 @dx.op.legacyF32ToF16(i32 130, float %631)  ; LegacyF32ToF16(value)
  %643 = shl i32 %642, 16
  %644 = getelementptr inbounds %struct.FPackedMaterialClosestHitPayload, %struct.FPackedMaterialClosestHitPayload* %PackedPayload, i32 0, i32 3, i32 2
  %645 = or i32 %643, %641
  store i32 %645, i32* %644, align 4, !tbaa !109
  %646 = mul i32 %172, 42
  %647 = call %dx.types.Handle @dx.op.createHandleForLib.dx.types.Handle(i32 160, %dx.types.Handle %44)  ; CreateHandleForLib(Resource)
  %648 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %647, %dx.types.ResourceProperties { i32 12, i32 16 })  ; AnnotateHandle(res,props)  resource: StructuredBuffer<stride=16>
  %649 = call %dx.types.ResRet.f32 @dx.op.rawBufferLoad.f32(i32 139, %dx.types.Handle %648, i32 %646, i32 0, i8 15, i32 4)  ; RawBufferLoad(srv,index,elementOffset,mask,alignment)
  %650 = extractvalue %dx.types.ResRet.f32 %649, 2
  %651 = bitcast float %650 to i32
  %652 = icmp eq i32 %651, 1
  %653 = select i1 %652, i32 0, i32 %635
  %654 = extractvalue %dx.types.ResRet.f32 %649, 1
  %655 = bitcast float %654 to i32
  %656 = add i32 %655, %653
  %657 = getelementptr inbounds %struct.FPackedMaterialClosestHitPayload, %struct.FPackedMaterialClosestHitPayload* %PackedPayload, i32 0, i32 9, i32 1
  store i32 %656, i32* %657, align 4, !tbaa !109
  br label %658

; <label>:658                                     ; preds = %576, %0
  %659 = and i32 %74, 8388608
  %660 = icmp eq i32 %659, 0
  br i1 %660, label %661, label %1577

; <label>:661                                     ; preds = %658
  %662 = getelementptr inbounds %struct.FPackedMaterialClosestHitPayload, %struct.FPackedMaterialClosestHitPayload* %PackedPayload, i32 0, i32 2
  %663 = load float, float* %662, align 4, !tbaa !105
  %664 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %70, i32 139)  ; CBufferLoadLegacy(handle,regIndex)
  %665 = extractvalue %dx.types.CBufRet.f32 %664, 0
  %666 = extractvalue %dx.types.CBufRet.f32 %664, 2
  %667 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %70, i32 140)  ; CBufferLoadLegacy(handle,regIndex)
  %668 = extractvalue %dx.types.CBufRet.f32 %667, 0
  %669 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %70, i32 187)  ; CBufferLoadLegacy(handle,regIndex)
  %670 = extractvalue %dx.types.CBufRet.f32 %669, 1
  %671 = getelementptr inbounds %struct.FPackedMaterialClosestHitPayload, %struct.FPackedMaterialClosestHitPayload* %PackedPayload, i32 0, i32 1
  %672 = load i32, i32* %671, align 4, !tbaa !109, !noalias !118
  %673 = and i32 %672, 65535
  %674 = lshr i32 %672, 16
  %675 = call float @dx.op.legacyF16ToF32(i32 131, i32 %674)  ; LegacyF16ToF32(value)
  %676 = call float @dx.op.rayTCurrent.f32(i32 154)  ; RayTCurrent()
  %677 = fmul fast float %676, %675
  %678 = getelementptr inbounds %struct.FRayTracingIntersectionAttributes, %struct.FRayTracingIntersectionAttributes* %Attributes, i32 0, i32 0
  %679 = load <2 x i32>, <2 x i32>* %678, align 4
  %680 = extractelement <2 x i32> %679, i32 0
  %681 = extractelement <2 x i32> %679, i32 1
  %682 = bitcast i32 %680 to float
  %683 = bitcast i32 %681 to float
  %684 = bitcast [3 x float]* %57 to i8*
  call void @llvm.lifetime.start(i64 12, i8* %684) #0, !noalias !121
  %685 = fsub fast float 1.000000e+00, %682
  %686 = fsub fast float %685, %683
  %687 = getelementptr inbounds [3 x float], [3 x float]* %57, i32 0, i32 0
  store float %686, float* %687, align 4
  %688 = getelementptr inbounds [3 x float], [3 x float]* %57, i32 0, i32 1
  %689 = bitcast float* %688 to i32*
  store i32 %680, i32* %689, align 4
  %690 = getelementptr inbounds [3 x float], [3 x float]* %57, i32 0, i32 2
  %691 = bitcast float* %690 to i32*
  store i32 %681, i32* %691, align 4
  br label %692

; <label>:692                                     ; preds = %906, %661
  %693 = phi float [ 0.000000e+00, %661 ], [ %1027, %906 ]
  %694 = phi float [ 0.000000e+00, %661 ], [ %1028, %906 ]
  %695 = phi float [ 0.000000e+00, %661 ], [ %1029, %906 ]
  %696 = phi float [ 0.000000e+00, %661 ], [ %1030, %906 ]
  %697 = phi float [ 0.000000e+00, %661 ], [ %1021, %906 ]
  %698 = phi float [ 0.000000e+00, %661 ], [ %1022, %906 ]
  %699 = phi i32 [ 0, %661 ], [ %1031, %906 ]
  %700 = call i32 @dx.op.primitiveIndex.i32(i32 161)  ; PrimitiveIndex()
  %701 = call %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32 59, %dx.types.Handle %64, i32 0)  ; CBufferLoadLegacy(handle,regIndex)
  %702 = extractvalue %dx.types.CBufRet.i32 %701, 1
  %703 = call %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32 59, %dx.types.Handle %66, i32 0)  ; CBufferLoadLegacy(handle,regIndex)
  %704 = extractvalue %dx.types.CBufRet.i32 %703, 3
  %705 = sub nsw i32 %702, %704
  %706 = call %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32 59, %dx.types.Handle %66, i32 1)  ; CBufferLoadLegacy(handle,regIndex)
  %707 = extractvalue %dx.types.CBufRet.i32 %706, 0
  %708 = mul nsw i32 %705, %707
  %709 = extractvalue %dx.types.CBufRet.i32 %701, 0
  %710 = extractvalue %dx.types.CBufRet.i32 %703, 2
  %711 = call %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32 59, %dx.types.Handle %64, i32 1)  ; CBufferLoadLegacy(handle,regIndex)
  %712 = extractvalue %dx.types.CBufRet.i32 %711, 0
  %713 = sitofp i32 %712 to float
  %714 = extractvalue %dx.types.CBufRet.i32 %703, 0
  %715 = call %dx.types.Handle @dx.op.createHandleForLib.dx.types.Handle(i32 160, %dx.types.Handle %41)  ; CreateHandleForLib(Resource)
  %716 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %715, %dx.types.ResourceProperties { i32 10, i32 261 })  ; AnnotateHandle(res,props)  resource: TypedBuffer<U32>
  %717 = call %dx.types.ResRet.i32 @dx.op.bufferLoad.i32(i32 68, %dx.types.Handle %716, i32 %714, i32 undef)  ; BufferLoad(srv,index,wot)
  %718 = extractvalue %dx.types.ResRet.i32 %717, 0
  %719 = add i32 %708, %709
  %720 = sub i32 %719, %710
  %721 = add i32 %720, %718
  %722 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %70, i32 244)  ; CBufferLoadLegacy(handle,regIndex)
  %723 = extractvalue %dx.types.CBufRet.f32 %722, 0
  %724 = fcmp fast oge float %723, 0.000000e+00
  %725 = call %dx.types.Handle @dx.op.createHandleForLib.dx.types.Handle(i32 160, %dx.types.Handle %40)  ; CreateHandleForLib(Resource)
  %726 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %725, %dx.types.ResourceProperties { i32 10, i32 265 })  ; AnnotateHandle(res,props)  resource: TypedBuffer<F32>
  %727 = call %dx.types.ResRet.f32 @dx.op.bufferLoad.f32(i32 68, %dx.types.Handle %726, i32 %721, i32 undef)  ; BufferLoad(srv,index,wot)
  %728 = extractvalue %dx.types.ResRet.f32 %727, 0
  %729 = select i1 %724, float %723, float %728
  %730 = call %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32 59, %dx.types.Handle %70, i32 244)  ; CBufferLoadLegacy(handle,regIndex)
  %731 = extractvalue %dx.types.CBufRet.i32 %730, 1
  %732 = sitofp i32 %731 to float
  %733 = fadd fast float %732, %729
  %734 = call float @dx.op.binary.f32(i32 36, float %733, float %713)  ; FMin(a,b)
  %735 = call float @dx.op.unary.f32(i32 27, float %734)  ; Round_ni(value)
  %736 = fptoui float %735 to i32
  %737 = extractvalue %dx.types.CBufRet.i32 %701, 2
  %738 = and i32 %736, 31
  %739 = ashr i32 %737, %738
  %740 = add nsw i32 %739, -1
  %741 = sitofp i32 %740 to float
  %742 = fadd fast float %741, 1.000000e+00
  %743 = fptoui float %742 to i32
  %744 = bitcast [3 x i32]* %55 to i8*
  call void @llvm.lifetime.start(i64 12, i8* %744) #0
  %745 = call %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32 59, %dx.types.Handle %60, i32 0)  ; CBufferLoadLegacy(handle,regIndex)
  %746 = extractvalue %dx.types.CBufRet.i32 %745, 1
  %747 = extractvalue %dx.types.CBufRet.i32 %745, 0
  %748 = and i32 %747, 255
  %749 = mul i32 %700, 3
  %750 = icmp eq i32 %748, 0
  br i1 %750, label %751, label %754

; <label>:751                                     ; preds = %692
  %752 = add i32 %749, 1
  %753 = add i32 %749, 2
  br label %779

; <label>:754                                     ; preds = %692
  %755 = icmp eq i32 %748, 2
  %756 = call %dx.types.Handle @dx.op.createHandleForLib.dx.types.Handle(i32 160, %dx.types.Handle %19)  ; CreateHandleForLib(Resource)
  %757 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %756, %dx.types.ResourceProperties { i32 11, i32 0 })  ; AnnotateHandle(res,props)  resource: ByteAddressBuffer
  br i1 %755, label %758, label %772

; <label>:758                                     ; preds = %754
  %759 = mul i32 %700, 6
  %760 = add i32 %759, %746
  %761 = and i32 %760, -4
  %762 = call %dx.types.ResRet.i32 @dx.op.rawBufferLoad.i32(i32 139, %dx.types.Handle %757, i32 %761, i32 undef, i8 3, i32 4)  ; RawBufferLoad(srv,index,elementOffset,mask,alignment)
  %763 = extractvalue %dx.types.ResRet.i32 %762, 0
  %764 = extractvalue %dx.types.ResRet.i32 %762, 1
  %765 = icmp eq i32 %761, %760
  %766 = lshr i32 %763, 16
  %767 = and i32 %764, 65535
  br i1 %765, label %768, label %770

; <label>:768                                     ; preds = %758
  %769 = and i32 %763, 65535
  br label %779

; <label>:770                                     ; preds = %758
  %771 = lshr i32 %764, 16
  br label %779

; <label>:772                                     ; preds = %754
  %773 = mul i32 %748, %749
  %774 = add i32 %773, %746
  %775 = call %dx.types.ResRet.i32 @dx.op.rawBufferLoad.i32(i32 139, %dx.types.Handle %757, i32 %774, i32 undef, i8 7, i32 4)  ; RawBufferLoad(srv,index,elementOffset,mask,alignment)
  %776 = extractvalue %dx.types.ResRet.i32 %775, 0
  %777 = extractvalue %dx.types.ResRet.i32 %775, 1
  %778 = extractvalue %dx.types.ResRet.i32 %775, 2
  br label %779

; <label>:779                                     ; preds = %772, %770, %768, %751
  %780 = phi i32 [ %749, %751 ], [ %776, %772 ], [ %769, %768 ], [ %766, %770 ]
  %781 = phi i32 [ %752, %751 ], [ %777, %772 ], [ %766, %768 ], [ %767, %770 ]
  %782 = phi i32 [ %753, %751 ], [ %778, %772 ], [ %767, %768 ], [ %771, %770 ]
  %783 = getelementptr inbounds [3 x i32], [3 x i32]* %55, i32 0, i32 0
  store i32 %780, i32* %783, align 4
  %784 = getelementptr inbounds [3 x i32], [3 x i32]* %55, i32 0, i32 1
  store i32 %781, i32* %784, align 4
  %785 = getelementptr inbounds [3 x i32], [3 x i32]* %55, i32 0, i32 2
  store i32 %782, i32* %785, align 4
  %786 = getelementptr [3 x i32], [3 x i32]* %55, i32 0, i32 %699
  %787 = load i32, i32* %786, align 4, !tbaa !109, !noalias !122
  %788 = call i32 @dx.op.instanceID.i32(i32 141)  ; InstanceID()
  %789 = urem i32 %787, %743
  %790 = uitofp i32 %789 to float
  %791 = udiv i32 %787, %743
  %792 = uitofp i32 %791 to float
  %793 = call %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32 59, %dx.types.Handle %68, i32 0)  ; CBufferLoadLegacy(handle,regIndex)
  %794 = extractvalue %dx.types.CBufRet.i32 %793, 0
  %795 = sitofp i32 %794 to float
  %796 = extractvalue %dx.types.CBufRet.i32 %793, 1
  %797 = sitofp i32 %796 to float
  call void @llvm.lifetime.end(i64 12, i8* %744) #0
  %798 = and i32 %788, 2147483647
  %799 = mul i32 %798, 42
  %800 = call %dx.types.Handle @dx.op.createHandleForLib.dx.types.Handle(i32 160, %dx.types.Handle %44)  ; CreateHandleForLib(Resource)
  %801 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %800, %dx.types.ResourceProperties { i32 12, i32 16 })  ; AnnotateHandle(res,props)  resource: StructuredBuffer<stride=16>
  %802 = call %dx.types.ResRet.f32 @dx.op.rawBufferLoad.f32(i32 139, %dx.types.Handle %801, i32 %799, i32 0, i8 15, i32 4)  ; RawBufferLoad(srv,index,elementOffset,mask,alignment)
  %803 = extractvalue %dx.types.ResRet.f32 %802, 1
  %804 = bitcast float %803 to i32
  %805 = call %dx.types.Handle @dx.op.createHandleForLib.dx.types.Handle(i32 160, %dx.types.Handle %43)  ; CreateHandleForLib(Resource)
  %806 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %805, %dx.types.ResourceProperties { i32 12, i32 16 })  ; AnnotateHandle(res,props)  resource: StructuredBuffer<stride=16>
  %807 = call %dx.types.ResRet.f32 @dx.op.rawBufferLoad.f32(i32 139, %dx.types.Handle %806, i32 %804, i32 0, i8 15, i32 4)  ; RawBufferLoad(srv,index,elementOffset,mask,alignment)
  %808 = extractvalue %dx.types.ResRet.f32 %807, 0
  %809 = bitcast float %808 to i32
  %810 = sub nsw i32 %709, %710
  %811 = add nsw i32 %810, %708
  %812 = add i32 %718, %811
  %813 = call %dx.types.ResRet.f32 @dx.op.bufferLoad.f32(i32 68, %dx.types.Handle %726, i32 %812, i32 undef)  ; BufferLoad(srv,index,wot)
  %814 = extractvalue %dx.types.ResRet.f32 %813, 0
  %815 = select i1 %724, float %723, float %814
  %816 = fadd fast float %732, %815
  %817 = call float @dx.op.binary.f32(i32 36, float %816, float %713)  ; FMin(a,b)
  %818 = call float @dx.op.unary.f32(i32 27, float %817)  ; Round_ni(value)
  %819 = fptoui float %818 to i32
  %820 = and i32 %819, 31
  %821 = ashr i32 %737, %820
  %822 = add nsw i32 %821, -1
  %823 = sitofp i32 %822 to float
  %824 = fdiv fast float 1.000000e+00, %823
  %825 = fmul fast float %824, %790
  %826 = fmul fast float %824, %792
  %827 = fadd fast float %825, %795
  %828 = fadd fast float %826, %797
  %829 = extractvalue %dx.types.CBufRet.i32 %701, 3
  %830 = sitofp i32 %829 to float
  %831 = fdiv fast float %827, %830
  %832 = fdiv fast float %828, %830
  %833 = fsub fast float 1.000000e+00, %831
  %834 = fmul fast float %832, 2.000000e+00
  %835 = fmul fast float %833, 2.000000e+00
  %836 = fmul fast float %817, %834
  %837 = fmul fast float %817, %835
  %838 = fsub fast float 1.000000e+00, %834
  %839 = fsub fast float 1.000000e+00, %835
  call void @llvm.lifetime.start(i64 16, i8* bitcast ([4 x i32]* @NeighborOffset.i.i.i.i.0.hca to i8*)) #0
  call void @llvm.lifetime.start(i64 16, i8* bitcast ([4 x i32]* @NeighborOffset.i.i.i.i.1.hca to i8*)) #0
  %840 = bitcast [4 x float]* %56 to i8*
  call void @llvm.lifetime.start(i64 16, i8* %840) #0, !noalias !72
  br label %841

; <label>:841                                     ; preds = %901, %779
  %842 = phi i32 [ -1, %779 ], [ %905, %901 ]
  %843 = phi i32 [ 0, %779 ], [ %903, %901 ]
  %844 = phi i32 [ 0, %779 ], [ %899, %901 ]
  %845 = call %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32 59, %dx.types.Handle %64, i32 0)  ; CBufferLoadLegacy(handle,regIndex)
  %846 = extractvalue %dx.types.CBufRet.i32 %845, 0
  %847 = extractvalue %dx.types.CBufRet.i32 %845, 1
  %848 = add i32 %846, %843
  %849 = add i32 %847, %842
  %850 = call %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32 59, %dx.types.Handle %66, i32 0)  ; CBufferLoadLegacy(handle,regIndex)
  %851 = extractvalue %dx.types.CBufRet.i32 %850, 2
  %852 = extractvalue %dx.types.CBufRet.i32 %850, 3
  %853 = call i32 @dx.op.binary.i32(i32 37, i32 %851, i32 %848)  ; IMax(a,b)
  %854 = call i32 @dx.op.binary.i32(i32 37, i32 %852, i32 %849)  ; IMax(a,b)
  %855 = call %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32 59, %dx.types.Handle %66, i32 1)  ; CBufferLoadLegacy(handle,regIndex)
  %856 = extractvalue %dx.types.CBufRet.i32 %855, 0
  %857 = extractvalue %dx.types.CBufRet.i32 %855, 1
  %858 = add i32 %851, -1
  %859 = add i32 %858, %856
  %860 = add i32 %852, -1
  %861 = add i32 %860, %857
  %862 = call i32 @dx.op.binary.i32(i32 38, i32 %859, i32 %853)  ; IMin(a,b)
  %863 = call i32 @dx.op.binary.i32(i32 38, i32 %861, i32 %854)  ; IMin(a,b)
  %864 = sub nsw i32 %863, %852
  %865 = mul nsw i32 %864, %856
  %866 = sub i32 %862, %851
  %867 = add nsw i32 %866, %865
  %868 = extractvalue %dx.types.CBufRet.i32 %850, 0
  %869 = call %dx.types.Handle @dx.op.createHandleForLib.dx.types.Handle(i32 160, %dx.types.Handle %41)  ; CreateHandleForLib(Resource)
  %870 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %869, %dx.types.ResourceProperties { i32 10, i32 261 })  ; AnnotateHandle(res,props)  resource: TypedBuffer<U32>
  %871 = call %dx.types.ResRet.i32 @dx.op.bufferLoad.i32(i32 68, %dx.types.Handle %870, i32 %868, i32 undef)  ; BufferLoad(srv,index,wot)
  %872 = extractvalue %dx.types.ResRet.i32 %871, 0
  %873 = add i32 %867, %872
  %874 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %70, i32 244)  ; CBufferLoadLegacy(handle,regIndex)
  %875 = extractvalue %dx.types.CBufRet.f32 %874, 0
  %876 = fcmp fast oge float %875, 0.000000e+00
  %877 = call %dx.types.Handle @dx.op.createHandleForLib.dx.types.Handle(i32 160, %dx.types.Handle %40)  ; CreateHandleForLib(Resource)
  %878 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %877, %dx.types.ResourceProperties { i32 10, i32 265 })  ; AnnotateHandle(res,props)  resource: TypedBuffer<F32>
  %879 = call %dx.types.ResRet.f32 @dx.op.bufferLoad.f32(i32 68, %dx.types.Handle %878, i32 %873, i32 undef)  ; BufferLoad(srv,index,wot)
  %880 = extractvalue %dx.types.ResRet.f32 %879, 0
  %881 = select i1 %876, float %875, float %880
  %882 = call %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32 59, %dx.types.Handle %64, i32 1)  ; CBufferLoadLegacy(handle,regIndex)
  %883 = extractvalue %dx.types.CBufRet.i32 %882, 0
  %884 = sitofp i32 %883 to float
  %885 = add i32 %872, %811
  %886 = call %dx.types.ResRet.f32 @dx.op.bufferLoad.f32(i32 68, %dx.types.Handle %878, i32 %885, i32 undef)  ; BufferLoad(srv,index,wot)
  %887 = extractvalue %dx.types.ResRet.f32 %886, 0
  %888 = select i1 %876, float %875, float %887
  %889 = call %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32 59, %dx.types.Handle %70, i32 244)  ; CBufferLoadLegacy(handle,regIndex)
  %890 = extractvalue %dx.types.CBufRet.i32 %889, 1
  %891 = sitofp i32 %890 to float
  %892 = fadd fast float %891, %888
  %893 = call float @dx.op.binary.f32(i32 36, float %892, float %884)  ; FMin(a,b)
  %894 = call float @dx.op.binary.f32(i32 35, float %881, float %893)  ; FMax(a,b)
  %895 = getelementptr inbounds [4 x float], [4 x float]* %56, i32 0, i32 %844
  %896 = fadd fast float %891, %894
  %897 = select i1 %876, float %875, float %896
  %898 = call float @dx.op.binary.f32(i32 36, float %897, float %884)  ; FMin(a,b)
  store float %898, float* %895, align 4, !tbaa !105, !noalias !72
  %899 = add nuw nsw i32 %844, 1
  %900 = icmp eq i32 %899, 4
  br i1 %900, label %906, label %901

; <label>:901                                     ; preds = %841
  %902 = getelementptr [4 x i32], [4 x i32]* @NeighborOffset.i.i.i.i.0.hca, i32 0, i32 %899
  %903 = load i32, i32* %902, align 4
  %904 = getelementptr [4 x i32], [4 x i32]* @NeighborOffset.i.i.i.i.1.hca, i32 0, i32 %899
  %905 = load i32, i32* %904, align 4
  br label %841

; <label>:906                                     ; preds = %841
  %907 = uitofp i32 %819 to float
  %908 = fsub fast float 1.000000e+00, %832
  %909 = fmul fast float %831, 2.000000e+00
  %910 = fmul fast float %908, 2.000000e+00
  %911 = fmul fast float %817, %909
  %912 = fmul fast float %817, %910
  %913 = fsub fast float 1.000000e+00, %909
  %914 = fsub fast float 1.000000e+00, %910
  %915 = getelementptr inbounds [4 x float], [4 x float]* %56, i32 0, i32 0
  %916 = load float, float* %915, align 4, !tbaa !105, !noalias !72
  %917 = getelementptr inbounds [4 x float], [4 x float]* %56, i32 0, i32 1
  %918 = load float, float* %917, align 4, !tbaa !105, !noalias !72
  %919 = getelementptr inbounds [4 x float], [4 x float]* %56, i32 0, i32 2
  %920 = load float, float* %919, align 4, !tbaa !105, !noalias !72
  %921 = getelementptr inbounds [4 x float], [4 x float]* %56, i32 0, i32 3
  %922 = load float, float* %921, align 4, !tbaa !105, !noalias !72
  call void @llvm.lifetime.end(i64 16, i8* %840) #0, !noalias !72
  call void @llvm.lifetime.end(i64 16, i8* bitcast ([4 x i32]* @NeighborOffset.i.i.i.i.0.hca to i8*)) #0
  call void @llvm.lifetime.end(i64 16, i8* bitcast ([4 x i32]* @NeighborOffset.i.i.i.i.1.hca to i8*)) #0
  %923 = fmul fast float %916, %838
  %924 = fmul fast float %918, %913
  %925 = fmul fast float %920, %839
  %926 = fmul fast float %922, %914
  %927 = fadd fast float %923, %836
  %928 = fadd fast float %924, %911
  %929 = fadd fast float %925, %837
  %930 = fadd fast float %926, %912
  %931 = fadd fast float %827, %828
  %932 = fdiv fast float %931, %830
  %933 = fcmp fast ogt float %932, 1.000000e+00
  %934 = fcmp fast olt float %831, %832
  %935 = select i1 %934, float %930, float %929
  %936 = select i1 %934, float %928, float %927
  %937 = select i1 %933, float %935, float %936
  %938 = call float @dx.op.unary.f32(i32 27, float %937)  ; Round_ni(value)
  %939 = fsub fast float %937, %938
  %940 = fsub fast float %938, %907
  %941 = fsub fast float -0.000000e+00, %940
  %942 = call float @dx.op.unary.f32(i32 21, float %941)  ; Exp(value)
  %943 = fmul fast float %942, %790
  %944 = call float @dx.op.unary.f32(i32 27, float %943)  ; Round_ni(value)
  %945 = fsub fast float -0.000000e+00, %938
  %946 = call float @dx.op.unary.f32(i32 21, float %945)  ; Exp(value)
  %947 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %64, i32 5)  ; CBufferLoadLegacy(handle,regIndex)
  %948 = extractvalue %dx.types.CBufRet.f32 %947, 0
  %949 = fmul fast float %948, %946
  %950 = fadd fast float %949, -1.000000e+00
  %951 = fmul fast float %946, 5.000000e-01
  %952 = fmul fast float %951, %948
  %953 = call float @dx.op.binary.f32(i32 35, float %952, float 2.000000e+00)  ; FMax(a,b)
  %954 = fadd fast float %953, -1.000000e+00
  %955 = extractvalue %dx.types.CBufRet.f32 %947, 1
  %956 = fmul fast float %955, %950
  %957 = fmul fast float %955, %954
  %958 = fdiv fast float %944, %956
  %959 = fmul fast float %944, 5.000000e-01
  %960 = call float @dx.op.unary.f32(i32 27, float %959)  ; Round_ni(value)
  %961 = fdiv fast float %960, %957
  %962 = fsub fast float %961, %958
  %963 = fmul fast float %962, %939
  %964 = fadd fast float %963, %958
  %965 = extractvalue %dx.types.CBufRet.f32 %947, 2
  %966 = fadd fast float %964, %965
  %967 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %64, i32 6)  ; CBufferLoadLegacy(handle,regIndex)
  %968 = extractvalue %dx.types.CBufRet.f32 %967, 3
  %969 = fmul fast float %968, %795
  %970 = fadd fast float %966, %969
  %971 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %64, i32 3)  ; CBufferLoadLegacy(handle,regIndex)
  %972 = extractvalue %dx.types.CBufRet.f32 %971, 0
  %973 = fmul fast float %972, %964
  %974 = extractvalue %dx.types.CBufRet.f32 %971, 2
  %975 = fadd fast float %973, %974
  %976 = extractvalue %dx.types.CBufRet.f32 %967, 2
  %977 = fmul fast float %976, %795
  %978 = fadd fast float %975, %977
  %979 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %64, i32 2)  ; CBufferLoadLegacy(handle,regIndex)
  %980 = extractvalue %dx.types.CBufRet.f32 %979, 0
  %981 = fmul fast float %980, %964
  %982 = extractvalue %dx.types.CBufRet.f32 %979, 2
  %983 = fadd fast float %981, %982
  %984 = fmul fast float %980, 5.000000e-01
  %985 = fadd fast float %983, %984
  %986 = extractvalue %dx.types.CBufRet.f32 %967, 0
  %987 = fmul fast float %986, %795
  %988 = fadd fast float %985, %987
  %989 = fmul fast float %942, %792
  %990 = call float @dx.op.unary.f32(i32 27, float %989)  ; Round_ni(value)
  %991 = fdiv fast float %990, %956
  %992 = fmul fast float %990, 5.000000e-01
  %993 = call float @dx.op.unary.f32(i32 27, float %992)  ; Round_ni(value)
  %994 = fdiv fast float %993, %957
  %995 = fsub fast float %994, %991
  %996 = fmul fast float %995, %939
  %997 = fadd fast float %996, %991
  %998 = extractvalue %dx.types.CBufRet.f32 %947, 3
  %999 = fadd fast float %997, %998
  %1000 = fmul fast float %968, %797
  %1001 = fadd fast float %999, %1000
  %1002 = extractvalue %dx.types.CBufRet.f32 %971, 1
  %1003 = fmul fast float %1002, %997
  %1004 = extractvalue %dx.types.CBufRet.f32 %971, 3
  %1005 = fadd fast float %1003, %1004
  %1006 = fmul fast float %976, %797
  %1007 = fadd fast float %1005, %1006
  %1008 = extractvalue %dx.types.CBufRet.f32 %979, 1
  %1009 = fmul fast float %1008, %997
  %1010 = extractvalue %dx.types.CBufRet.f32 %979, 3
  %1011 = fadd fast float %1009, %1010
  %1012 = fmul fast float %1008, 5.000000e-01
  %1013 = fadd fast float %1011, %1012
  %1014 = extractvalue %dx.types.CBufRet.f32 %967, 1
  %1015 = fmul fast float %1014, %797
  %1016 = fadd fast float %1013, %1015
  %1017 = getelementptr [3 x float], [3 x float]* %57, i32 0, i32 %699
  %1018 = load float, float* %1017, align 4, !tbaa !105, !noalias !121
  %1019 = fmul fast float %1018, %970
  %1020 = fmul fast float %1018, %1001
  %1021 = fadd fast float %1019, %697
  %1022 = fadd fast float %1020, %698
  %1023 = fmul fast float %1018, %978
  %1024 = fmul fast float %1018, %1007
  %1025 = fmul fast float %1018, %988
  %1026 = fmul fast float %1018, %1016
  %1027 = fadd fast float %1023, %693
  %1028 = fadd fast float %1024, %694
  %1029 = fadd fast float %1025, %695
  %1030 = fadd fast float %1026, %696
  %1031 = add nuw nsw i32 %699, 1
  %1032 = icmp eq i32 %1031, 3
  br i1 %1032, label %1033, label %692

; <label>:1033                                    ; preds = %906
  %1034 = and i32 %809, 1048575
  %1035 = extractvalue %dx.types.CBufRet.f32 %664, 1
  %1036 = extractvalue %dx.types.CBufRet.f32 %664, 3
  %1037 = extractvalue %dx.types.CBufRet.f32 %667, 1
  %1038 = call float @dx.op.legacyF16ToF32(i32 131, i32 %673)  ; LegacyF16ToF32(value)
  %1039 = fadd fast float %677, %1038
  call void @llvm.lifetime.end(i64 12, i8* %684) #0, !noalias !121
  %1040 = call %dx.types.Handle @dx.op.createHandleForLib.dx.types.Handle(i32 160, %dx.types.Handle %37)  ; CreateHandleForLib(Resource)
  %1041 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %1040, %dx.types.ResourceProperties { i32 2, i32 1033 })  ; AnnotateHandle(res,props)  resource: Texture2D<4xF32>
  %1042 = call %dx.types.Handle @dx.op.createHandleForLib.dx.types.Handle(i32 160, %dx.types.Handle %16)  ; CreateHandleForLib(Resource)
  %1043 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %1042, %dx.types.ResourceProperties { i32 14, i32 0 })  ; AnnotateHandle(res,props)  resource: SamplerState
  %1044 = call %dx.types.ResRet.f32 @dx.op.sampleLevel.f32(i32 62, %dx.types.Handle %1041, %dx.types.Handle %1043, float %1029, float %1030, float undef, float undef, i32 0, i32 0, i32 undef, float %663)  ; SampleLevel(srv,sampler,coord0,coord1,coord2,coord3,offset0,offset1,offset2,LOD)
  %1045 = extractvalue %dx.types.ResRet.f32 %1044, 2
  %1046 = extractvalue %dx.types.ResRet.f32 %1044, 3
  %1047 = fmul fast float %1045, 2.000000e+00
  %1048 = fmul fast float %1046, 2.000000e+00
  %1049 = fadd fast float %1047, -1.000000e+00
  %1050 = fadd fast float %1048, -1.000000e+00
  %1051 = call float @dx.op.dot2.f32(i32 54, float %1049, float %1050, float %1049, float %1050)  ; Dot2(ax,ay,bx,by)
  %1052 = fsub fast float 1.000000e+00, %1051
  %1053 = call float @dx.op.binary.f32(i32 35, float %1052, float 0.000000e+00)  ; FMax(a,b)
  %1054 = call float @dx.op.unary.f32(i32 24, float %1053)  ; Sqrt(value)
  %1055 = fsub fast float -0.000000e+00, %1049
  %1056 = call float @dx.op.dot3.f32(i32 55, float %1054, float 0.000000e+00, float %1055, float %1054, float 0.000000e+00, float %1055)  ; Dot3(ax,ay,az,bx,by,bz)
  %1057 = call float @dx.op.unary.f32(i32 25, float %1056)  ; Rsqrt(value)
  %1058 = fmul fast float %1057, %1054
  %1059 = fmul fast float %1057, %1055
  %1060 = fmul fast float %1059, %1050
  %1061 = fmul fast float %1058, %1054
  %1062 = fmul fast float %1059, %1049
  %1063 = fsub fast float %1061, %1062
  %1064 = fmul fast float %1050, %1058
  %1065 = fsub fast float -0.000000e+00, %1064
  %1066 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %64, i32 8)  ; CBufferLoadLegacy(handle,regIndex)
  %1067 = extractvalue %dx.types.CBufRet.f32 %1066, 0
  %1068 = extractvalue %dx.types.CBufRet.f32 %1066, 1
  %1069 = extractvalue %dx.types.CBufRet.f32 %1066, 2
  %1070 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %64, i32 9)  ; CBufferLoadLegacy(handle,regIndex)
  %1071 = extractvalue %dx.types.CBufRet.f32 %1070, 0
  %1072 = extractvalue %dx.types.CBufRet.f32 %1070, 1
  %1073 = extractvalue %dx.types.CBufRet.f32 %1070, 2
  %1074 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %64, i32 10)  ; CBufferLoadLegacy(handle,regIndex)
  %1075 = extractvalue %dx.types.CBufRet.f32 %1074, 0
  %1076 = extractvalue %dx.types.CBufRet.f32 %1074, 1
  %1077 = extractvalue %dx.types.CBufRet.f32 %1074, 2
  %1078 = fmul fast float %1067, %1058
  %1079 = call float @dx.op.tertiary.f32(i32 46, float %1059, float %1075, float %1078)  ; FMad(a,b,c)
  %1080 = fmul fast float %1068, %1058
  %1081 = call float @dx.op.tertiary.f32(i32 46, float %1059, float %1076, float %1080)  ; FMad(a,b,c)
  %1082 = fmul fast float %1069, %1058
  %1083 = call float @dx.op.tertiary.f32(i32 46, float %1059, float %1077, float %1082)  ; FMad(a,b,c)
  %1084 = fmul fast float %1060, %1067
  %1085 = call float @dx.op.tertiary.f32(i32 46, float %1063, float %1071, float %1084)  ; FMad(a,b,c)
  %1086 = call float @dx.op.tertiary.f32(i32 46, float %1065, float %1075, float %1085)  ; FMad(a,b,c)
  %1087 = fmul fast float %1060, %1068
  %1088 = call float @dx.op.tertiary.f32(i32 46, float %1063, float %1072, float %1087)  ; FMad(a,b,c)
  %1089 = call float @dx.op.tertiary.f32(i32 46, float %1065, float %1076, float %1088)  ; FMad(a,b,c)
  %1090 = fmul fast float %1060, %1069
  %1091 = call float @dx.op.tertiary.f32(i32 46, float %1063, float %1073, float %1090)  ; FMad(a,b,c)
  %1092 = call float @dx.op.tertiary.f32(i32 46, float %1065, float %1077, float %1091)  ; FMad(a,b,c)
  %1093 = fmul fast float %1067, %1049
  %1094 = call float @dx.op.tertiary.f32(i32 46, float %1050, float %1071, float %1093)  ; FMad(a,b,c)
  %1095 = call float @dx.op.tertiary.f32(i32 46, float %1054, float %1075, float %1094)  ; FMad(a,b,c)
  %1096 = fmul fast float %1068, %1049
  %1097 = call float @dx.op.tertiary.f32(i32 46, float %1050, float %1072, float %1096)  ; FMad(a,b,c)
  %1098 = call float @dx.op.tertiary.f32(i32 46, float %1054, float %1076, float %1097)  ; FMad(a,b,c)
  %1099 = fmul fast float %1069, %1049
  %1100 = call float @dx.op.tertiary.f32(i32 46, float %1050, float %1073, float %1099)  ; FMad(a,b,c)
  %1101 = call float @dx.op.tertiary.f32(i32 46, float %1054, float %1077, float %1100)  ; FMad(a,b,c)
  %1102 = call i32 @dx.op.hitKind.i32(i32 143)  ; HitKind()
  %1103 = icmp eq i32 %1102, 254
  %1104 = select i1 %1103, float 1.000000e+00, float -1.000000e+00
  %1105 = call %dx.types.Handle @dx.op.createHandleForLib.dx.types.Handle(i32 160, %dx.types.Handle %36)  ; CreateHandleForLib(Resource)
  %1106 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %1105, %dx.types.ResourceProperties { i32 2, i32 1033 })  ; AnnotateHandle(res,props)  resource: Texture2D<4xF32>
  %1107 = call %dx.types.Handle @dx.op.createHandleForLib.dx.types.Handle(i32 160, %dx.types.Handle %18)  ; CreateHandleForLib(Resource)
  %1108 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %1107, %dx.types.ResourceProperties { i32 14, i32 0 })  ; AnnotateHandle(res,props)  resource: SamplerState
  %1109 = call %dx.types.ResRet.f32 @dx.op.sampleLevel.f32(i32 62, %dx.types.Handle %1106, %dx.types.Handle %1108, float %1027, float %1028, float undef, float undef, i32 0, i32 0, i32 undef, float %663)  ; SampleLevel(srv,sampler,coord0,coord1,coord2,coord3,offset0,offset1,offset2,LOD)
  %1110 = extractvalue %dx.types.ResRet.f32 %1109, 0
  %1111 = extractvalue %dx.types.ResRet.f32 %1109, 1
  %1112 = extractvalue %dx.types.ResRet.f32 %1109, 2
  %1113 = extractvalue %dx.types.ResRet.f32 %1109, 3
  %1114 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %62, i32 1)  ; CBufferLoadLegacy(handle,regIndex)
  %1115 = extractvalue %dx.types.CBufRet.f32 %1114, 0
  %1116 = extractvalue %dx.types.CBufRet.f32 %1114, 1
  %1117 = extractvalue %dx.types.CBufRet.f32 %1114, 2
  %1118 = extractvalue %dx.types.CBufRet.f32 %1114, 3
  %1119 = call float @dx.op.dot4.f32(i32 56, float %1110, float %1111, float %1112, float %1113, float %1115, float %1116, float %1117, float %1118)  ; Dot4(ax,ay,az,aw,bx,by,bz,bw)
  %1120 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %62, i32 2)  ; CBufferLoadLegacy(handle,regIndex)
  %1121 = extractvalue %dx.types.CBufRet.f32 %1120, 0
  %1122 = extractvalue %dx.types.CBufRet.f32 %1120, 1
  %1123 = extractvalue %dx.types.CBufRet.f32 %1120, 2
  %1124 = extractvalue %dx.types.CBufRet.f32 %1120, 3
  %1125 = call float @dx.op.dot4.f32(i32 56, float %1110, float %1111, float %1112, float %1113, float %1121, float %1122, float %1123, float %1124)  ; Dot4(ax,ay,az,aw,bx,by,bz,bw)
  %1126 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %62, i32 3)  ; CBufferLoadLegacy(handle,regIndex)
  %1127 = extractvalue %dx.types.CBufRet.f32 %1126, 0
  %1128 = extractvalue %dx.types.CBufRet.f32 %1126, 1
  %1129 = extractvalue %dx.types.CBufRet.f32 %1126, 2
  %1130 = extractvalue %dx.types.CBufRet.f32 %1126, 3
  %1131 = call float @dx.op.dot4.f32(i32 56, float %1110, float %1111, float %1112, float %1113, float %1127, float %1128, float %1129, float %1130)  ; Dot4(ax,ay,az,aw,bx,by,bz,bw)
  %1132 = call %dx.types.Handle @dx.op.createHandleForLib.dx.types.Handle(i32 160, %dx.types.Handle %35)  ; CreateHandleForLib(Resource)
  %1133 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %1132, %dx.types.ResourceProperties { i32 2, i32 1033 })  ; AnnotateHandle(res,props)  resource: Texture2D<4xF32>
  %1134 = call %dx.types.ResRet.f32 @dx.op.sampleLevel.f32(i32 62, %dx.types.Handle %1133, %dx.types.Handle %1108, float %1027, float %1028, float undef, float undef, i32 0, i32 0, i32 undef, float %663)  ; SampleLevel(srv,sampler,coord0,coord1,coord2,coord3,offset0,offset1,offset2,LOD)
  %1135 = extractvalue %dx.types.ResRet.f32 %1134, 0
  %1136 = extractvalue %dx.types.ResRet.f32 %1134, 1
  %1137 = extractvalue %dx.types.ResRet.f32 %1134, 2
  %1138 = extractvalue %dx.types.ResRet.f32 %1134, 3
  %1139 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %62, i32 4)  ; CBufferLoadLegacy(handle,regIndex)
  %1140 = extractvalue %dx.types.CBufRet.f32 %1139, 0
  %1141 = extractvalue %dx.types.CBufRet.f32 %1139, 1
  %1142 = extractvalue %dx.types.CBufRet.f32 %1139, 2
  %1143 = extractvalue %dx.types.CBufRet.f32 %1139, 3
  %1144 = call float @dx.op.dot4.f32(i32 56, float %1135, float %1136, float %1137, float %1138, float %1140, float %1141, float %1142, float %1143)  ; Dot4(ax,ay,az,aw,bx,by,bz,bw)
  %1145 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %62, i32 5)  ; CBufferLoadLegacy(handle,regIndex)
  %1146 = extractvalue %dx.types.CBufRet.f32 %1145, 0
  %1147 = extractvalue %dx.types.CBufRet.f32 %1145, 1
  %1148 = extractvalue %dx.types.CBufRet.f32 %1145, 2
  %1149 = extractvalue %dx.types.CBufRet.f32 %1145, 3
  %1150 = call float @dx.op.dot4.f32(i32 56, float %1110, float %1111, float %1112, float %1113, float %1146, float %1147, float %1148, float %1149)  ; Dot4(ax,ay,az,aw,bx,by,bz,bw)
  %1151 = call float @dx.op.dot2.f32(i32 54, float %1021, float %1022, float -0.000000e+00, float 1.000000e+00)  ; Dot2(ax,ay,bx,by)
  %1152 = call float @dx.op.dot2.f32(i32 54, float %1021, float %1022, float 1.000000e+00, float 0.000000e+00)  ; Dot2(ax,ay,bx,by)
  %1153 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %62, i32 6)  ; CBufferLoadLegacy(handle,regIndex)
  %1154 = extractvalue %dx.types.CBufRet.f32 %1153, 0
  %1155 = fmul fast float %1154, %1152
  %1156 = fmul fast float %1154, %1151
  %1157 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %70, i32 144)  ; CBufferLoadLegacy(handle,regIndex)
  %1158 = extractvalue %dx.types.CBufRet.f32 %1157, 0
  %1159 = fadd fast float %1158, %663
  %1160 = call %dx.types.Handle @dx.op.createHandleForLib.dx.types.Handle(i32 160, %dx.types.Handle %34)  ; CreateHandleForLib(Resource)
  %1161 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %1160, %dx.types.ResourceProperties { i32 2, i32 1033 })  ; AnnotateHandle(res,props)  resource: Texture2D<4xF32>
  %1162 = call %dx.types.Handle @dx.op.createHandleForLib.dx.types.Handle(i32 160, %dx.types.Handle %15)  ; CreateHandleForLib(Resource)
  %1163 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %1162, %dx.types.ResourceProperties { i32 14, i32 0 })  ; AnnotateHandle(res,props)  resource: SamplerState
  %1164 = call %dx.types.ResRet.f32 @dx.op.sampleLevel.f32(i32 62, %dx.types.Handle %1161, %dx.types.Handle %1163, float %1155, float %1156, float undef, float undef, i32 0, i32 0, i32 undef, float %1159)  ; SampleLevel(srv,sampler,coord0,coord1,coord2,coord3,offset0,offset1,offset2,LOD)
  %1165 = extractvalue %dx.types.ResRet.f32 %1164, 0
  %1166 = extractvalue %dx.types.ResRet.f32 %1164, 1
  %1167 = fmul fast float %1165, 2.000000e+00
  %1168 = fmul fast float %1166, 2.000000e+00
  %1169 = fadd fast float %1167, -1.000000e+00
  %1170 = fadd fast float %1168, -1.000000e+00
  %1171 = call float @dx.op.dot2.f32(i32 54, float %1169, float %1170, float %1169, float %1170)  ; Dot2(ax,ay,bx,by)
  %1172 = fsub fast float 1.000000e+00, %1171
  %1173 = call float @dx.op.unary.f32(i32 7, float %1172)  ; Saturate(value)
  %1174 = call float @dx.op.unary.f32(i32 24, float %1173)  ; Sqrt(value)
  %1175 = fmul fast float %1169, %1119
  %1176 = fmul fast float %1170, %1119
  %1177 = fmul fast float %1174, %1119
  %1178 = extractvalue %dx.types.CBufRet.f32 %1153, 1
  %1179 = fmul fast float %1178, %1152
  %1180 = fmul fast float %1178, %1151
  %1181 = call %dx.types.Handle @dx.op.createHandleForLib.dx.types.Handle(i32 160, %dx.types.Handle %33)  ; CreateHandleForLib(Resource)
  %1182 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %1181, %dx.types.ResourceProperties { i32 2, i32 1033 })  ; AnnotateHandle(res,props)  resource: Texture2D<4xF32>
  %1183 = call %dx.types.Handle @dx.op.createHandleForLib.dx.types.Handle(i32 160, %dx.types.Handle %14)  ; CreateHandleForLib(Resource)
  %1184 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %1183, %dx.types.ResourceProperties { i32 14, i32 0 })  ; AnnotateHandle(res,props)  resource: SamplerState
  %1185 = call %dx.types.ResRet.f32 @dx.op.sampleLevel.f32(i32 62, %dx.types.Handle %1182, %dx.types.Handle %1184, float %1179, float %1180, float undef, float undef, i32 0, i32 0, i32 undef, float %1159)  ; SampleLevel(srv,sampler,coord0,coord1,coord2,coord3,offset0,offset1,offset2,LOD)
  %1186 = extractvalue %dx.types.ResRet.f32 %1185, 0
  %1187 = extractvalue %dx.types.ResRet.f32 %1185, 1
  %1188 = fmul fast float %1186, 2.000000e+00
  %1189 = fmul fast float %1187, 2.000000e+00
  %1190 = fadd fast float %1188, -1.000000e+00
  %1191 = fadd fast float %1189, -1.000000e+00
  %1192 = call float @dx.op.dot2.f32(i32 54, float %1190, float %1191, float %1190, float %1191)  ; Dot2(ax,ay,bx,by)
  %1193 = fsub fast float 1.000000e+00, %1192
  %1194 = call float @dx.op.unary.f32(i32 7, float %1193)  ; Saturate(value)
  %1195 = call float @dx.op.unary.f32(i32 24, float %1194)  ; Sqrt(value)
  %1196 = fmul fast float %1190, %1125
  %1197 = fmul fast float %1191, %1125
  %1198 = fmul fast float %1195, %1125
  %1199 = fadd fast float %1196, %1175
  %1200 = fadd fast float %1197, %1176
  %1201 = fadd fast float %1198, %1177
  %1202 = extractvalue %dx.types.CBufRet.f32 %1153, 2
  %1203 = fmul fast float %1202, %1152
  %1204 = fmul fast float %1202, %1151
  %1205 = call %dx.types.Handle @dx.op.createHandleForLib.dx.types.Handle(i32 160, %dx.types.Handle %32)  ; CreateHandleForLib(Resource)
  %1206 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %1205, %dx.types.ResourceProperties { i32 2, i32 1033 })  ; AnnotateHandle(res,props)  resource: Texture2D<4xF32>
  %1207 = call %dx.types.Handle @dx.op.createHandleForLib.dx.types.Handle(i32 160, %dx.types.Handle %13)  ; CreateHandleForLib(Resource)
  %1208 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %1207, %dx.types.ResourceProperties { i32 14, i32 0 })  ; AnnotateHandle(res,props)  resource: SamplerState
  %1209 = call %dx.types.ResRet.f32 @dx.op.sampleLevel.f32(i32 62, %dx.types.Handle %1206, %dx.types.Handle %1208, float %1203, float %1204, float undef, float undef, i32 0, i32 0, i32 undef, float %1159)  ; SampleLevel(srv,sampler,coord0,coord1,coord2,coord3,offset0,offset1,offset2,LOD)
  %1210 = extractvalue %dx.types.ResRet.f32 %1209, 0
  %1211 = extractvalue %dx.types.ResRet.f32 %1209, 1
  %1212 = fmul fast float %1210, 2.000000e+00
  %1213 = fmul fast float %1211, 2.000000e+00
  %1214 = fadd fast float %1212, -1.000000e+00
  %1215 = fadd fast float %1213, -1.000000e+00
  %1216 = call float @dx.op.dot2.f32(i32 54, float %1214, float %1215, float %1214, float %1215)  ; Dot2(ax,ay,bx,by)
  %1217 = fsub fast float 1.000000e+00, %1216
  %1218 = call float @dx.op.unary.f32(i32 7, float %1217)  ; Saturate(value)
  %1219 = call float @dx.op.unary.f32(i32 24, float %1218)  ; Sqrt(value)
  %1220 = fmul fast float %1214, %1131
  %1221 = fmul fast float %1215, %1131
  %1222 = fmul fast float %1219, %1131
  %1223 = fadd fast float %1199, %1220
  %1224 = fadd fast float %1200, %1221
  %1225 = fadd fast float %1201, %1222
  %1226 = extractvalue %dx.types.CBufRet.f32 %1153, 3
  %1227 = fmul fast float %1226, %1152
  %1228 = fmul fast float %1226, %1151
  %1229 = call %dx.types.Handle @dx.op.createHandleForLib.dx.types.Handle(i32 160, %dx.types.Handle %31)  ; CreateHandleForLib(Resource)
  %1230 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %1229, %dx.types.ResourceProperties { i32 2, i32 1033 })  ; AnnotateHandle(res,props)  resource: Texture2D<4xF32>
  %1231 = call %dx.types.Handle @dx.op.createHandleForLib.dx.types.Handle(i32 160, %dx.types.Handle %12)  ; CreateHandleForLib(Resource)
  %1232 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %1231, %dx.types.ResourceProperties { i32 14, i32 0 })  ; AnnotateHandle(res,props)  resource: SamplerState
  %1233 = call %dx.types.ResRet.f32 @dx.op.sampleLevel.f32(i32 62, %dx.types.Handle %1230, %dx.types.Handle %1232, float %1227, float %1228, float undef, float undef, i32 0, i32 0, i32 undef, float %1159)  ; SampleLevel(srv,sampler,coord0,coord1,coord2,coord3,offset0,offset1,offset2,LOD)
  %1234 = extractvalue %dx.types.ResRet.f32 %1233, 0
  %1235 = extractvalue %dx.types.ResRet.f32 %1233, 1
  %1236 = fmul fast float %1234, 2.000000e+00
  %1237 = fmul fast float %1235, 2.000000e+00
  %1238 = fadd fast float %1236, -1.000000e+00
  %1239 = fadd fast float %1237, -1.000000e+00
  %1240 = call float @dx.op.dot2.f32(i32 54, float %1238, float %1239, float %1238, float %1239)  ; Dot2(ax,ay,bx,by)
  %1241 = fsub fast float 1.000000e+00, %1240
  %1242 = call float @dx.op.unary.f32(i32 7, float %1241)  ; Saturate(value)
  %1243 = call float @dx.op.unary.f32(i32 24, float %1242)  ; Sqrt(value)
  %1244 = fmul fast float %1238, %1144
  %1245 = fmul fast float %1239, %1144
  %1246 = fmul fast float %1243, %1144
  %1247 = fadd fast float %1223, %1244
  %1248 = fadd fast float %1224, %1245
  %1249 = fadd fast float %1225, %1246
  %1250 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %62, i32 7)  ; CBufferLoadLegacy(handle,regIndex)
  %1251 = extractvalue %dx.types.CBufRet.f32 %1250, 0
  %1252 = fmul fast float %1251, %1152
  %1253 = fmul fast float %1251, %1151
  %1254 = call %dx.types.Handle @dx.op.createHandleForLib.dx.types.Handle(i32 160, %dx.types.Handle %30)  ; CreateHandleForLib(Resource)
  %1255 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %1254, %dx.types.ResourceProperties { i32 2, i32 1033 })  ; AnnotateHandle(res,props)  resource: Texture2D<4xF32>
  %1256 = call %dx.types.Handle @dx.op.createHandleForLib.dx.types.Handle(i32 160, %dx.types.Handle %11)  ; CreateHandleForLib(Resource)
  %1257 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %1256, %dx.types.ResourceProperties { i32 14, i32 0 })  ; AnnotateHandle(res,props)  resource: SamplerState
  %1258 = call %dx.types.ResRet.f32 @dx.op.sampleLevel.f32(i32 62, %dx.types.Handle %1255, %dx.types.Handle %1257, float %1252, float %1253, float undef, float undef, i32 0, i32 0, i32 undef, float %1159)  ; SampleLevel(srv,sampler,coord0,coord1,coord2,coord3,offset0,offset1,offset2,LOD)
  %1259 = extractvalue %dx.types.ResRet.f32 %1258, 0
  %1260 = extractvalue %dx.types.ResRet.f32 %1258, 1
  %1261 = fmul fast float %1259, 2.000000e+00
  %1262 = fmul fast float %1260, 2.000000e+00
  %1263 = fadd fast float %1261, -1.000000e+00
  %1264 = fadd fast float %1262, -1.000000e+00
  %1265 = call float @dx.op.dot2.f32(i32 54, float %1263, float %1264, float %1263, float %1264)  ; Dot2(ax,ay,bx,by)
  %1266 = fsub fast float 1.000000e+00, %1265
  %1267 = call float @dx.op.unary.f32(i32 7, float %1266)  ; Saturate(value)
  %1268 = call float @dx.op.unary.f32(i32 24, float %1267)  ; Sqrt(value)
  %1269 = fmul fast float %1263, %1150
  %1270 = fmul fast float %1264, %1150
  %1271 = fmul fast float %1268, %1150
  %1272 = fadd fast float %1247, %1269
  %1273 = fadd fast float %1248, %1270
  %1274 = fadd fast float %1249, %1271
  %1275 = fmul fast float %1272, %1036
  %1276 = fmul fast float %1273, %1036
  %1277 = fmul fast float %1274, %1036
  %1278 = fadd fast float %1275, %665
  %1279 = fadd fast float %1276, %1035
  %1280 = fadd fast float %1277, %666
  %1281 = call float @dx.op.dot3.f32(i32 55, float %1278, float %1279, float %1280, float %1278, float %1279, float %1280)  ; Dot3(ax,ay,az,bx,by,bz)
  %1282 = call float @dx.op.unary.f32(i32 25, float %1281)  ; Rsqrt(value)
  %1283 = fmul fast float %1278, %1282
  %1284 = fmul fast float %1279, %1282
  %1285 = fmul fast float %1280, %1282
  %1286 = fmul fast float %1283, %1079
  %1287 = call float @dx.op.tertiary.f32(i32 46, float %1284, float %1086, float %1286)  ; FMad(a,b,c)
  %1288 = call float @dx.op.tertiary.f32(i32 46, float %1285, float %1095, float %1287)  ; FMad(a,b,c)
  %1289 = fmul fast float %1283, %1081
  %1290 = call float @dx.op.tertiary.f32(i32 46, float %1284, float %1089, float %1289)  ; FMad(a,b,c)
  %1291 = call float @dx.op.tertiary.f32(i32 46, float %1285, float %1098, float %1290)  ; FMad(a,b,c)
  %1292 = fmul fast float %1283, %1083
  %1293 = call float @dx.op.tertiary.f32(i32 46, float %1284, float %1092, float %1292)  ; FMad(a,b,c)
  %1294 = call float @dx.op.tertiary.f32(i32 46, float %1285, float %1101, float %1293)  ; FMad(a,b,c)
  %1295 = call float @dx.op.dot3.f32(i32 55, float %1288, float %1291, float %1294, float %1288, float %1291, float %1294)  ; Dot3(ax,ay,az,bx,by,bz)
  %1296 = call float @dx.op.unary.f32(i32 25, float %1295)  ; Rsqrt(value)
  %1297 = fmul fast float %1288, %1104
  %1298 = fmul fast float %1297, %1296
  %1299 = fmul fast float %1291, %1104
  %1300 = fmul fast float %1299, %1296
  %1301 = fmul fast float %1294, %1104
  %1302 = fmul fast float %1301, %1296
  %1303 = extractvalue %dx.types.CBufRet.f32 %1250, 1
  %1304 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %62, i32 8)  ; CBufferLoadLegacy(handle,regIndex)
  %1305 = extractvalue %dx.types.CBufRet.f32 %1304, 0
  %1306 = extractvalue %dx.types.CBufRet.f32 %1304, 1
  %1307 = extractvalue %dx.types.CBufRet.f32 %1304, 2
  %1308 = fmul fast float %1305, %1303
  %1309 = fmul fast float %1306, %1303
  %1310 = fmul fast float %1307, %1303
  %1311 = call %dx.types.Handle @dx.op.createHandleForLib.dx.types.Handle(i32 160, %dx.types.Handle %29)  ; CreateHandleForLib(Resource)
  %1312 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %1311, %dx.types.ResourceProperties { i32 2, i32 1033 })  ; AnnotateHandle(res,props)  resource: Texture2D<4xF32>
  %1313 = call %dx.types.Handle @dx.op.createHandleForLib.dx.types.Handle(i32 160, %dx.types.Handle %10)  ; CreateHandleForLib(Resource)
  %1314 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %1313, %dx.types.ResourceProperties { i32 14, i32 0 })  ; AnnotateHandle(res,props)  resource: SamplerState
  %1315 = call %dx.types.ResRet.f32 @dx.op.sampleLevel.f32(i32 62, %dx.types.Handle %1312, %dx.types.Handle %1314, float %1155, float %1156, float undef, float undef, i32 0, i32 0, i32 undef, float %1159)  ; SampleLevel(srv,sampler,coord0,coord1,coord2,coord3,offset0,offset1,offset2,LOD)
  %1316 = extractvalue %dx.types.ResRet.f32 %1315, 0
  %1317 = extractvalue %dx.types.ResRet.f32 %1315, 1
  %1318 = extractvalue %dx.types.ResRet.f32 %1315, 2
  %1319 = fmul fast float %1316, %1119
  %1320 = fmul fast float %1317, %1119
  %1321 = fmul fast float %1318, %1119
  %1322 = call %dx.types.Handle @dx.op.createHandleForLib.dx.types.Handle(i32 160, %dx.types.Handle %28)  ; CreateHandleForLib(Resource)
  %1323 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %1322, %dx.types.ResourceProperties { i32 2, i32 1033 })  ; AnnotateHandle(res,props)  resource: Texture2D<4xF32>
  %1324 = call %dx.types.Handle @dx.op.createHandleForLib.dx.types.Handle(i32 160, %dx.types.Handle %9)  ; CreateHandleForLib(Resource)
  %1325 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %1324, %dx.types.ResourceProperties { i32 14, i32 0 })  ; AnnotateHandle(res,props)  resource: SamplerState
  %1326 = call %dx.types.ResRet.f32 @dx.op.sampleLevel.f32(i32 62, %dx.types.Handle %1323, %dx.types.Handle %1325, float %1179, float %1180, float undef, float undef, i32 0, i32 0, i32 undef, float %1159)  ; SampleLevel(srv,sampler,coord0,coord1,coord2,coord3,offset0,offset1,offset2,LOD)
  %1327 = extractvalue %dx.types.ResRet.f32 %1326, 0
  %1328 = extractvalue %dx.types.ResRet.f32 %1326, 1
  %1329 = extractvalue %dx.types.ResRet.f32 %1326, 2
  %1330 = fmul fast float %1327, %1125
  %1331 = fmul fast float %1328, %1125
  %1332 = fmul fast float %1329, %1125
  %1333 = fadd fast float %1330, %1319
  %1334 = fadd fast float %1331, %1320
  %1335 = fadd fast float %1332, %1321
  %1336 = call %dx.types.Handle @dx.op.createHandleForLib.dx.types.Handle(i32 160, %dx.types.Handle %27)  ; CreateHandleForLib(Resource)
  %1337 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %1336, %dx.types.ResourceProperties { i32 2, i32 1033 })  ; AnnotateHandle(res,props)  resource: Texture2D<4xF32>
  %1338 = call %dx.types.Handle @dx.op.createHandleForLib.dx.types.Handle(i32 160, %dx.types.Handle %8)  ; CreateHandleForLib(Resource)
  %1339 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %1338, %dx.types.ResourceProperties { i32 14, i32 0 })  ; AnnotateHandle(res,props)  resource: SamplerState
  %1340 = call %dx.types.ResRet.f32 @dx.op.sampleLevel.f32(i32 62, %dx.types.Handle %1337, %dx.types.Handle %1339, float %1203, float %1204, float undef, float undef, i32 0, i32 0, i32 undef, float %1159)  ; SampleLevel(srv,sampler,coord0,coord1,coord2,coord3,offset0,offset1,offset2,LOD)
  %1341 = extractvalue %dx.types.ResRet.f32 %1340, 0
  %1342 = extractvalue %dx.types.ResRet.f32 %1340, 1
  %1343 = extractvalue %dx.types.ResRet.f32 %1340, 2
  %1344 = fmul fast float %1341, %1131
  %1345 = fmul fast float %1342, %1131
  %1346 = fmul fast float %1343, %1131
  %1347 = fadd fast float %1333, %1344
  %1348 = fadd fast float %1334, %1345
  %1349 = fadd fast float %1335, %1346
  %1350 = call %dx.types.Handle @dx.op.createHandleForLib.dx.types.Handle(i32 160, %dx.types.Handle %26)  ; CreateHandleForLib(Resource)
  %1351 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %1350, %dx.types.ResourceProperties { i32 2, i32 1033 })  ; AnnotateHandle(res,props)  resource: Texture2D<4xF32>
  %1352 = call %dx.types.Handle @dx.op.createHandleForLib.dx.types.Handle(i32 160, %dx.types.Handle %7)  ; CreateHandleForLib(Resource)
  %1353 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %1352, %dx.types.ResourceProperties { i32 14, i32 0 })  ; AnnotateHandle(res,props)  resource: SamplerState
  %1354 = call %dx.types.ResRet.f32 @dx.op.sampleLevel.f32(i32 62, %dx.types.Handle %1351, %dx.types.Handle %1353, float %1227, float %1228, float undef, float undef, i32 0, i32 0, i32 undef, float %1159)  ; SampleLevel(srv,sampler,coord0,coord1,coord2,coord3,offset0,offset1,offset2,LOD)
  %1355 = extractvalue %dx.types.ResRet.f32 %1354, 0
  %1356 = extractvalue %dx.types.ResRet.f32 %1354, 1
  %1357 = extractvalue %dx.types.ResRet.f32 %1354, 2
  %1358 = fmul fast float %1355, %1144
  %1359 = fmul fast float %1356, %1144
  %1360 = fmul fast float %1357, %1144
  %1361 = fadd fast float %1347, %1358
  %1362 = fadd fast float %1348, %1359
  %1363 = fadd fast float %1349, %1360
  %1364 = call %dx.types.Handle @dx.op.createHandleForLib.dx.types.Handle(i32 160, %dx.types.Handle %25)  ; CreateHandleForLib(Resource)
  %1365 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %1364, %dx.types.ResourceProperties { i32 2, i32 1033 })  ; AnnotateHandle(res,props)  resource: Texture2D<4xF32>
  %1366 = call %dx.types.Handle @dx.op.createHandleForLib.dx.types.Handle(i32 160, %dx.types.Handle %6)  ; CreateHandleForLib(Resource)
  %1367 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %1366, %dx.types.ResourceProperties { i32 14, i32 0 })  ; AnnotateHandle(res,props)  resource: SamplerState
  %1368 = call %dx.types.ResRet.f32 @dx.op.sampleLevel.f32(i32 62, %dx.types.Handle %1365, %dx.types.Handle %1367, float %1252, float %1253, float undef, float undef, i32 0, i32 0, i32 undef, float %1159)  ; SampleLevel(srv,sampler,coord0,coord1,coord2,coord3,offset0,offset1,offset2,LOD)
  %1369 = extractvalue %dx.types.ResRet.f32 %1368, 0
  %1370 = extractvalue %dx.types.ResRet.f32 %1368, 1
  %1371 = extractvalue %dx.types.ResRet.f32 %1368, 2
  %1372 = fmul fast float %1369, %1150
  %1373 = fmul fast float %1370, %1150
  %1374 = fmul fast float %1371, %1150
  %1375 = fadd fast float %1361, %1372
  %1376 = fadd fast float %1362, %1373
  %1377 = fadd fast float %1363, %1374
  %1378 = call %dx.types.Handle @dx.op.createHandleForLib.dx.types.Handle(i32 160, %dx.types.Handle %24)  ; CreateHandleForLib(Resource)
  %1379 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %1378, %dx.types.ResourceProperties { i32 2, i32 1033 })  ; AnnotateHandle(res,props)  resource: Texture2D<4xF32>
  %1380 = call %dx.types.Handle @dx.op.createHandleForLib.dx.types.Handle(i32 160, %dx.types.Handle %5)  ; CreateHandleForLib(Resource)
  %1381 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %1380, %dx.types.ResourceProperties { i32 14, i32 0 })  ; AnnotateHandle(res,props)  resource: SamplerState
  %1382 = call %dx.types.ResRet.f32 @dx.op.sampleLevel.f32(i32 62, %dx.types.Handle %1379, %dx.types.Handle %1381, float %1155, float %1156, float undef, float undef, i32 0, i32 0, i32 undef, float %1159)  ; SampleLevel(srv,sampler,coord0,coord1,coord2,coord3,offset0,offset1,offset2,LOD)
  %1383 = extractvalue %dx.types.ResRet.f32 %1382, 0
  %1384 = fmul fast float %1383, %1119
  %1385 = call %dx.types.Handle @dx.op.createHandleForLib.dx.types.Handle(i32 160, %dx.types.Handle %23)  ; CreateHandleForLib(Resource)
  %1386 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %1385, %dx.types.ResourceProperties { i32 2, i32 1033 })  ; AnnotateHandle(res,props)  resource: Texture2D<4xF32>
  %1387 = call %dx.types.Handle @dx.op.createHandleForLib.dx.types.Handle(i32 160, %dx.types.Handle %4)  ; CreateHandleForLib(Resource)
  %1388 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %1387, %dx.types.ResourceProperties { i32 14, i32 0 })  ; AnnotateHandle(res,props)  resource: SamplerState
  %1389 = call %dx.types.ResRet.f32 @dx.op.sampleLevel.f32(i32 62, %dx.types.Handle %1386, %dx.types.Handle %1388, float %1179, float %1180, float undef, float undef, i32 0, i32 0, i32 undef, float %1159)  ; SampleLevel(srv,sampler,coord0,coord1,coord2,coord3,offset0,offset1,offset2,LOD)
  %1390 = extractvalue %dx.types.ResRet.f32 %1389, 0
  %1391 = fmul fast float %1390, %1125
  %1392 = fadd fast float %1391, %1384
  %1393 = call %dx.types.Handle @dx.op.createHandleForLib.dx.types.Handle(i32 160, %dx.types.Handle %22)  ; CreateHandleForLib(Resource)
  %1394 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %1393, %dx.types.ResourceProperties { i32 2, i32 1033 })  ; AnnotateHandle(res,props)  resource: Texture2D<4xF32>
  %1395 = call %dx.types.Handle @dx.op.createHandleForLib.dx.types.Handle(i32 160, %dx.types.Handle %3)  ; CreateHandleForLib(Resource)
  %1396 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %1395, %dx.types.ResourceProperties { i32 14, i32 0 })  ; AnnotateHandle(res,props)  resource: SamplerState
  %1397 = call %dx.types.ResRet.f32 @dx.op.sampleLevel.f32(i32 62, %dx.types.Handle %1394, %dx.types.Handle %1396, float %1203, float %1204, float undef, float undef, i32 0, i32 0, i32 undef, float %1159)  ; SampleLevel(srv,sampler,coord0,coord1,coord2,coord3,offset0,offset1,offset2,LOD)
  %1398 = extractvalue %dx.types.ResRet.f32 %1397, 0
  %1399 = fmul fast float %1398, %1131
  %1400 = fadd fast float %1392, %1399
  %1401 = call %dx.types.Handle @dx.op.createHandleForLib.dx.types.Handle(i32 160, %dx.types.Handle %21)  ; CreateHandleForLib(Resource)
  %1402 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %1401, %dx.types.ResourceProperties { i32 2, i32 1033 })  ; AnnotateHandle(res,props)  resource: Texture2D<4xF32>
  %1403 = call %dx.types.Handle @dx.op.createHandleForLib.dx.types.Handle(i32 160, %dx.types.Handle %2)  ; CreateHandleForLib(Resource)
  %1404 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %1403, %dx.types.ResourceProperties { i32 14, i32 0 })  ; AnnotateHandle(res,props)  resource: SamplerState
  %1405 = call %dx.types.ResRet.f32 @dx.op.sampleLevel.f32(i32 62, %dx.types.Handle %1402, %dx.types.Handle %1404, float %1227, float %1228, float undef, float undef, i32 0, i32 0, i32 undef, float %1159)  ; SampleLevel(srv,sampler,coord0,coord1,coord2,coord3,offset0,offset1,offset2,LOD)
  %1406 = extractvalue %dx.types.ResRet.f32 %1405, 0
  %1407 = fmul fast float %1406, %1144
  %1408 = fadd fast float %1400, %1407
  %1409 = call %dx.types.Handle @dx.op.createHandleForLib.dx.types.Handle(i32 160, %dx.types.Handle %20)  ; CreateHandleForLib(Resource)
  %1410 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %1409, %dx.types.ResourceProperties { i32 2, i32 1033 })  ; AnnotateHandle(res,props)  resource: Texture2D<4xF32>
  %1411 = call %dx.types.Handle @dx.op.createHandleForLib.dx.types.Handle(i32 160, %dx.types.Handle %1)  ; CreateHandleForLib(Resource)
  %1412 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %1411, %dx.types.ResourceProperties { i32 14, i32 0 })  ; AnnotateHandle(res,props)  resource: SamplerState
  %1413 = call %dx.types.ResRet.f32 @dx.op.sampleLevel.f32(i32 62, %dx.types.Handle %1410, %dx.types.Handle %1412, float %1252, float %1253, float undef, float undef, i32 0, i32 0, i32 undef, float %1159)  ; SampleLevel(srv,sampler,coord0,coord1,coord2,coord3,offset0,offset1,offset2,LOD)
  %1414 = extractvalue %dx.types.ResRet.f32 %1413, 0
  %1415 = fmul fast float %1414, %1150
  %1416 = fadd fast float %1408, %1415
  %1417 = mul nuw nsw i32 %1034, 42
  %1418 = call %dx.types.ResRet.f32 @dx.op.rawBufferLoad.f32(i32 139, %dx.types.Handle %801, i32 %1417, i32 0, i8 15, i32 4)  ; RawBufferLoad(srv,index,elementOffset,mask,alignment)
  %1419 = extractvalue %dx.types.ResRet.f32 %1418, 0
  %1420 = bitcast float %1419 to i32
  %1421 = call float @dx.op.rayTCurrent.f32(i32 154)  ; RayTCurrent()
  %1422 = zext i1 %1103 to i32
  %1423 = and i32 %74, 16777216
  %1424 = icmp eq i32 %1423, 0
  %1425 = call float @dx.op.unary.f32(i32 7, float %1375)  ; Saturate(value)
  %1426 = call float @dx.op.unary.f32(i32 7, float %1376)  ; Saturate(value)
  %1427 = call float @dx.op.unary.f32(i32 7, float %1377)  ; Saturate(value)
  %1428 = call float @dx.op.unary.f32(i32 7, float %1416)  ; Saturate(value)
  %1429 = fmul fast float %1428, %1037
  %1430 = fadd fast float %1429, %668
  %1431 = call float @dx.op.dot3.f32(i32 55, float %1298, float %1300, float %1302, float %1298, float %1300, float %1302)  ; Dot3(ax,ay,az,bx,by,bz)
  %1432 = call float @dx.op.unary.f32(i32 25, float %1431)  ; Rsqrt(value)
  %1433 = fmul fast float %1432, %1298
  %1434 = fmul fast float %1432, %1300
  %1435 = fmul fast float %1432, %1302
  %1436 = call float @dx.op.binary.f32(i32 35, float %1308, float 0.000000e+00)  ; FMax(a,b)
  %1437 = call float @dx.op.binary.f32(i32 35, float %1309, float 0.000000e+00)  ; FMax(a,b)
  %1438 = call float @dx.op.binary.f32(i32 35, float %1310, float 0.000000e+00)  ; FMax(a,b)
  br i1 %1424, label %1506, label %1439

; <label>:1439                                    ; preds = %1033
  %1440 = extractvalue %dx.types.CBufRet.f32 %669, 2
  %1441 = extractvalue %dx.types.CBufRet.f32 %669, 0
  %1442 = call %dx.types.Handle @dx.op.createHandleForLib.dx.types.Handle(i32 160, %dx.types.Handle %42)  ; CreateHandleForLib(Resource)
  %1443 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %1442, %dx.types.ResourceProperties { i32 12, i32 16 })  ; AnnotateHandle(res,props)  resource: StructuredBuffer<stride=16>
  %1444 = call %dx.types.ResRet.f32 @dx.op.rawBufferLoad.f32(i32 139, %dx.types.Handle %1443, i32 0, i32 0, i8 15, i32 4)  ; RawBufferLoad(srv,index,elementOffset,mask,alignment)
  %1445 = extractvalue %dx.types.ResRet.f32 %1444, 0
  %1446 = extractvalue %dx.types.ResRet.f32 %1444, 1
  %1447 = extractvalue %dx.types.ResRet.f32 %1444, 2
  %1448 = extractvalue %dx.types.ResRet.f32 %1444, 3
  %1449 = call float @dx.op.dot4.f32(i32 56, float %1445, float %1446, float %1447, float %1448, float %1433, float %1434, float %1435, float 1.000000e+00)  ; Dot4(ax,ay,az,aw,bx,by,bz,bw)
  %1450 = call %dx.types.ResRet.f32 @dx.op.rawBufferLoad.f32(i32 139, %dx.types.Handle %1443, i32 1, i32 0, i8 15, i32 4)  ; RawBufferLoad(srv,index,elementOffset,mask,alignment)
  %1451 = extractvalue %dx.types.ResRet.f32 %1450, 0
  %1452 = extractvalue %dx.types.ResRet.f32 %1450, 1
  %1453 = extractvalue %dx.types.ResRet.f32 %1450, 2
  %1454 = extractvalue %dx.types.ResRet.f32 %1450, 3
  %1455 = call float @dx.op.dot4.f32(i32 56, float %1451, float %1452, float %1453, float %1454, float %1433, float %1434, float %1435, float 1.000000e+00)  ; Dot4(ax,ay,az,aw,bx,by,bz,bw)
  %1456 = call %dx.types.ResRet.f32 @dx.op.rawBufferLoad.f32(i32 139, %dx.types.Handle %1443, i32 2, i32 0, i8 15, i32 4)  ; RawBufferLoad(srv,index,elementOffset,mask,alignment)
  %1457 = extractvalue %dx.types.ResRet.f32 %1456, 0
  %1458 = extractvalue %dx.types.ResRet.f32 %1456, 1
  %1459 = extractvalue %dx.types.ResRet.f32 %1456, 2
  %1460 = extractvalue %dx.types.ResRet.f32 %1456, 3
  %1461 = call float @dx.op.dot4.f32(i32 56, float %1457, float %1458, float %1459, float %1460, float %1433, float %1434, float %1435, float 1.000000e+00)  ; Dot4(ax,ay,az,aw,bx,by,bz,bw)
  %1462 = fmul fast float %1433, %1434
  %1463 = fmul fast float %1434, %1435
  %1464 = fmul fast float %1435, %1435
  %1465 = fmul fast float %1435, %1433
  %1466 = call %dx.types.ResRet.f32 @dx.op.rawBufferLoad.f32(i32 139, %dx.types.Handle %1443, i32 3, i32 0, i8 15, i32 4)  ; RawBufferLoad(srv,index,elementOffset,mask,alignment)
  %1467 = extractvalue %dx.types.ResRet.f32 %1466, 0
  %1468 = extractvalue %dx.types.ResRet.f32 %1466, 1
  %1469 = extractvalue %dx.types.ResRet.f32 %1466, 2
  %1470 = extractvalue %dx.types.ResRet.f32 %1466, 3
  %1471 = call float @dx.op.dot4.f32(i32 56, float %1467, float %1468, float %1469, float %1470, float %1462, float %1463, float %1464, float %1465)  ; Dot4(ax,ay,az,aw,bx,by,bz,bw)
  %1472 = call %dx.types.ResRet.f32 @dx.op.rawBufferLoad.f32(i32 139, %dx.types.Handle %1443, i32 4, i32 0, i8 15, i32 4)  ; RawBufferLoad(srv,index,elementOffset,mask,alignment)
  %1473 = extractvalue %dx.types.ResRet.f32 %1472, 0
  %1474 = extractvalue %dx.types.ResRet.f32 %1472, 1
  %1475 = extractvalue %dx.types.ResRet.f32 %1472, 2
  %1476 = extractvalue %dx.types.ResRet.f32 %1472, 3
  %1477 = call float @dx.op.dot4.f32(i32 56, float %1473, float %1474, float %1475, float %1476, float %1462, float %1463, float %1464, float %1465)  ; Dot4(ax,ay,az,aw,bx,by,bz,bw)
  %1478 = call %dx.types.ResRet.f32 @dx.op.rawBufferLoad.f32(i32 139, %dx.types.Handle %1443, i32 5, i32 0, i8 15, i32 4)  ; RawBufferLoad(srv,index,elementOffset,mask,alignment)
  %1479 = extractvalue %dx.types.ResRet.f32 %1478, 0
  %1480 = extractvalue %dx.types.ResRet.f32 %1478, 1
  %1481 = extractvalue %dx.types.ResRet.f32 %1478, 2
  %1482 = extractvalue %dx.types.ResRet.f32 %1478, 3
  %1483 = call float @dx.op.dot4.f32(i32 56, float %1479, float %1480, float %1481, float %1482, float %1462, float %1463, float %1464, float %1465)  ; Dot4(ax,ay,az,aw,bx,by,bz,bw)
  %1484 = fmul fast float %1433, %1433
  %1485 = fmul fast float %1434, %1434
  %1486 = fsub fast float %1484, %1485
  %1487 = call %dx.types.ResRet.f32 @dx.op.rawBufferLoad.f32(i32 139, %dx.types.Handle %1443, i32 6, i32 0, i8 15, i32 4)  ; RawBufferLoad(srv,index,elementOffset,mask,alignment)
  %1488 = extractvalue %dx.types.ResRet.f32 %1487, 0
  %1489 = extractvalue %dx.types.ResRet.f32 %1487, 1
  %1490 = extractvalue %dx.types.ResRet.f32 %1487, 2
  %1491 = fmul fast float %1488, %1486
  %1492 = fmul fast float %1489, %1486
  %1493 = fmul fast float %1490, %1486
  %1494 = fadd fast float %1471, %1449
  %1495 = fadd fast float %1477, %1455
  %1496 = fadd fast float %1483, %1461
  %1497 = fadd fast float %1494, %1491
  %1498 = fadd fast float %1495, %1492
  %1499 = fadd fast float %1496, %1493
  %1500 = call float @dx.op.binary.f32(i32 35, float 0.000000e+00, float %1497)  ; FMax(a,b)
  %1501 = call float @dx.op.binary.f32(i32 35, float 0.000000e+00, float %1498)  ; FMax(a,b)
  %1502 = call float @dx.op.binary.f32(i32 35, float 0.000000e+00, float %1499)  ; FMax(a,b)
  %1503 = fmul fast float %1500, %1441
  %1504 = fmul fast float %1501, %670
  %1505 = fmul fast float %1502, %1440
  br label %1506

; <label>:1506                                    ; preds = %1439, %1033
  %1507 = phi float [ %1503, %1439 ], [ 0.000000e+00, %1033 ]
  %1508 = phi float [ %1504, %1439 ], [ 0.000000e+00, %1033 ]
  %1509 = phi float [ %1505, %1439 ], [ 0.000000e+00, %1033 ]
  %1510 = call i32 @dx.op.legacyF32ToF16(i32 130, float %1039)  ; LegacyF32ToF16(value)
  %1511 = call i32 @dx.op.legacyF32ToF16(i32 130, float %675)  ; LegacyF32ToF16(value)
  %1512 = shl i32 %1511, 16
  %1513 = or i32 %1512, %1510
  %1514 = call i32 @dx.op.legacyF32ToF16(i32 130, float %1436)  ; LegacyF32ToF16(value)
  %1515 = call i32 @dx.op.legacyF32ToF16(i32 130, float %1437)  ; LegacyF32ToF16(value)
  %1516 = shl i32 %1515, 16
  %1517 = or i32 %1516, %1514
  %1518 = call i32 @dx.op.legacyF32ToF16(i32 130, float %1438)  ; LegacyF32ToF16(value)
  %1519 = call i32 @dx.op.legacyF32ToF16(i32 130, float %1433)  ; LegacyF32ToF16(value)
  %1520 = shl i32 %1519, 16
  %1521 = or i32 %1520, %1518
  %1522 = call i32 @dx.op.legacyF32ToF16(i32 130, float %1434)  ; LegacyF32ToF16(value)
  %1523 = call i32 @dx.op.legacyF32ToF16(i32 130, float %1435)  ; LegacyF32ToF16(value)
  %1524 = shl i32 %1523, 16
  %1525 = or i32 %1524, %1522
  %1526 = call i32 @dx.op.legacyF32ToF16(i32 130, float %1425)  ; LegacyF32ToF16(value)
  %1527 = call i32 @dx.op.legacyF32ToF16(i32 130, float %1426)  ; LegacyF32ToF16(value)
  %1528 = shl i32 %1527, 16
  %1529 = or i32 %1528, %1526
  %1530 = call i32 @dx.op.legacyF32ToF16(i32 130, float %1427)  ; LegacyF32ToF16(value)
  %1531 = call i32 @dx.op.legacyF32ToF16(i32 130, float 1.000000e+00)  ; LegacyF32ToF16(value)
  %1532 = shl i32 %1531, 16
  %1533 = or i32 %1532, %1530
  %1534 = call i32 @dx.op.legacyF32ToF16(i32 130, float %1430)  ; LegacyF32ToF16(value)
  %1535 = shl i32 %1534, 16
  %1536 = or i32 %1535, 32768
  %1537 = shl nuw nsw i32 %1422, 23
  %1538 = shl i32 %1420, 19
  %1539 = and i32 %1538, -536870912
  %1540 = or i32 %1537, %1539
  %1541 = or i32 %1540, %1531
  %1542 = or i32 %1541, 65536
  %1543 = call i32 @dx.op.legacyF32ToF16(i32 130, float %1507)  ; LegacyF32ToF16(value)
  %1544 = call i32 @dx.op.legacyF32ToF16(i32 130, float %1508)  ; LegacyF32ToF16(value)
  %1545 = shl i32 %1544, 16
  %1546 = or i32 %1545, %1543
  %1547 = call i32 @dx.op.legacyF32ToF16(i32 130, float %1509)  ; LegacyF32ToF16(value)
  %1548 = call i32 @dx.op.legacyF32ToF16(i32 130, float 0.000000e+00)  ; LegacyF32ToF16(value)
  %1549 = shl i32 %1548, 16
  %1550 = or i32 %1549, %1548
  store float %1421, float* %72, align 4
  store i32 %1513, i32* %671, align 4
  store float 0.000000e+00, float* %662, align 4
  %1551 = getelementptr inbounds %struct.FPackedMaterialClosestHitPayload, %struct.FPackedMaterialClosestHitPayload* %PackedPayload, i32 0, i32 3, i32 0
  store i32 %1517, i32* %1551, align 4
  %1552 = getelementptr inbounds %struct.FPackedMaterialClosestHitPayload, %struct.FPackedMaterialClosestHitPayload* %PackedPayload, i32 0, i32 3, i32 1
  store i32 %1521, i32* %1552, align 4
  %1553 = getelementptr inbounds %struct.FPackedMaterialClosestHitPayload, %struct.FPackedMaterialClosestHitPayload* %PackedPayload, i32 0, i32 3, i32 2
  store i32 %1525, i32* %1553, align 4
  %1554 = getelementptr inbounds %struct.FPackedMaterialClosestHitPayload, %struct.FPackedMaterialClosestHitPayload* %PackedPayload, i32 0, i32 4, i32 0
  store i32 %1529, i32* %1554, align 4
  %1555 = getelementptr inbounds %struct.FPackedMaterialClosestHitPayload, %struct.FPackedMaterialClosestHitPayload* %PackedPayload, i32 0, i32 4, i32 1
  store i32 %1533, i32* %1555, align 4
  %1556 = getelementptr inbounds %struct.FPackedMaterialClosestHitPayload, %struct.FPackedMaterialClosestHitPayload* %PackedPayload, i32 0, i32 5
  store i32 %1536, i32* %1556, align 4
  store i32 %1542, i32* %73, align 4
  %1557 = getelementptr inbounds %struct.FPackedMaterialClosestHitPayload, %struct.FPackedMaterialClosestHitPayload* %PackedPayload, i32 0, i32 7, i32 0
  store i32 %1546, i32* %1557, align 4
  %1558 = getelementptr inbounds %struct.FPackedMaterialClosestHitPayload, %struct.FPackedMaterialClosestHitPayload* %PackedPayload, i32 0, i32 7, i32 1
  store i32 %1547, i32* %1558, align 4
  %1559 = getelementptr inbounds %struct.FPackedMaterialClosestHitPayload, %struct.FPackedMaterialClosestHitPayload* %PackedPayload, i32 0, i32 8
  store i32 6911, i32* %1559, align 4
  %1560 = getelementptr inbounds %struct.FPackedMaterialClosestHitPayload, %struct.FPackedMaterialClosestHitPayload* %PackedPayload, i32 0, i32 9, i32 0
  store i32 %1550, i32* %1560, align 4
  %1561 = getelementptr inbounds %struct.FPackedMaterialClosestHitPayload, %struct.FPackedMaterialClosestHitPayload* %PackedPayload, i32 0, i32 9, i32 1
  store i32 %1550, i32* %1561, align 4
  %1562 = getelementptr inbounds %struct.FPackedMaterialClosestHitPayload, %struct.FPackedMaterialClosestHitPayload* %PackedPayload, i32 0, i32 10
  store i32 0, i32* %1562, align 4
  br i1 %76, label %1563, label %1577

; <label>:1563                                    ; preds = %1506
  %1564 = call i32 @dx.op.instanceIndex.i32(i32 142)  ; InstanceIndex()
  %1565 = call %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32 59, %dx.types.Handle %60, i32 1)  ; CBufferLoadLegacy(handle,regIndex)
  %1566 = extractvalue %dx.types.CBufRet.i32 %1565, 0
  %1567 = sub i32 %1564, %1566
  %1568 = mul i32 %788, 42
  %1569 = call %dx.types.ResRet.f32 @dx.op.rawBufferLoad.f32(i32 139, %dx.types.Handle %801, i32 %1568, i32 0, i8 15, i32 4)  ; RawBufferLoad(srv,index,elementOffset,mask,alignment)
  %1570 = extractvalue %dx.types.ResRet.f32 %1569, 2
  %1571 = bitcast float %1570 to i32
  %1572 = icmp eq i32 %1571, 1
  %1573 = select i1 %1572, i32 0, i32 %1567
  %1574 = extractvalue %dx.types.ResRet.f32 %1569, 1
  %1575 = bitcast float %1574 to i32
  %1576 = add i32 %1575, %1573
  store i32 %1576, i32* %1561, align 4, !tbaa !109
  br label %1577

; <label>:1577                                    ; preds = %1563, %1506, %658
  ret void
}

; Function Attrs: nounwind readnone
declare float @dx.op.binary.f32(i32, float, float) #1

; Function Attrs: nounwind readnone
declare float @dx.op.unary.f32(i32, float) #1

; Function Attrs: nounwind readnone
declare i32 @dx.op.instanceID.i32(i32) #1

; Function Attrs: nounwind readnone
declare i32 @dx.op.primitiveIndex.i32(i32) #1

; Function Attrs: nounwind readnone
declare i32 @dx.op.hitKind.i32(i32) #1

; Function Attrs: nounwind readnone
declare i32 @dx.op.instanceIndex.i32(i32) #1

; Function Attrs: nounwind readnone
declare float @dx.op.dot3.f32(i32, float, float, float, float, float, float) #1

; Function Attrs: nounwind readnone
declare i32 @dx.op.legacyF32ToF16(i32, float) #1

; Function Attrs: nounwind readonly
declare %dx.types.ResRet.f32 @dx.op.sampleLevel.f32(i32, %dx.types.Handle, %dx.types.Handle, float, float, float, float, i32, i32, i32, float) #2

; Function Attrs: nounwind readnone
declare float @dx.op.dot2.f32(i32, float, float, float, float) #1

; Function Attrs: nounwind readnone
declare float @dx.op.dot4.f32(i32, float, float, float, float, float, float, float, float) #1

; Function Attrs: nounwind readnone
declare float @dx.op.legacyF16ToF32(i32, i32) #1

; Function Attrs: nounwind readnone
declare float @dx.op.worldRayDirection.f32(i32, i8) #1

; Function Attrs: nounwind readonly
declare %dx.types.ResRet.i32 @dx.op.rawBufferLoad.i32(i32, %dx.types.Handle, i32, i32, i8, i32) #2

; Function Attrs: nounwind readonly
declare %dx.types.ResRet.f32 @dx.op.bufferLoad.f32(i32, %dx.types.Handle, i32, i32) #2

; Function Attrs: nounwind readonly
declare %dx.types.ResRet.f32 @dx.op.rawBufferLoad.f32(i32, %dx.types.Handle, i32, i32, i8, i32) #2

; Function Attrs: nounwind readonly
declare %dx.types.ResRet.i32 @dx.op.bufferLoad.i32(i32, %dx.types.Handle, i32, i32) #2

; Function Attrs: nounwind readnone
declare i32 @dx.op.binary.i32(i32, i32, i32) #1

; Function Attrs: nounwind readonly
declare float @dx.op.rayTCurrent.f32(i32) #2

; Function Attrs: nounwind readonly
declare %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32, %dx.types.Handle, i32) #2

; Function Attrs: nounwind readonly
declare %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32, %dx.types.Handle, i32) #2

; Function Attrs: nounwind readnone
declare float @dx.op.tertiary.f32(i32, float, float, float) #1

; Function Attrs: nounwind readnone
declare %dx.types.Handle @dx.op.annotateHandle(i32, %dx.types.Handle, %dx.types.ResourceProperties) #1

; Function Attrs: nounwind readonly
declare %dx.types.Handle @dx.op.createHandleForLib.dx.types.Handle(i32, %dx.types.Handle) #2

attributes #0 = { nounwind }
attributes #1 = { nounwind readnone }
attributes #2 = { nounwind readonly }

!llvm.ident = !{!0}
!dx.version = !{!1}
!dx.valver = !{!1}
!dx.shaderModel = !{!2}
!dx.resources = !{!3}
!dx.entryPoints = !{!60, !63}

!0 = !{!"clang version 3.7.0 (tags/RELEASE_370/final)"}
!1 = !{i32 1, i32 6}
!2 = !{!"lib", i32 6, i32 6}
!3 = !{!4, null, !34, !41}
!4 = !{!5, !7, !8, !9, !11, !13, !14, !15, !16, !17, !18, !19, !20, !21, !22, !23, !24, !25, !26, !27, !28, !29, !30, !31, !32, !33}
!5 = !{i32 0, %"class.StructuredBuffer<vector<float, 4> >"* bitcast (%dx.types.Handle* @"\01?View_PrimitiveSceneData@@3V?$StructuredBuffer@V?$vector@M$03@@@@A" to %"class.StructuredBuffer<vector<float, 4> >"*), !"View_PrimitiveSceneData", i32 0, i32 0, i32 1, i32 12, i32 0, !6}
!6 = !{i32 1, i32 16}
!7 = !{i32 1, %"class.StructuredBuffer<vector<float, 4> >"* bitcast (%dx.types.Handle* @"\01?View_InstanceSceneData@@3V?$StructuredBuffer@V?$vector@M$03@@@@A" to %"class.StructuredBuffer<vector<float, 4> >"*), !"View_InstanceSceneData", i32 0, i32 1, i32 1, i32 12, i32 0, !6}
!8 = !{i32 2, %"class.StructuredBuffer<vector<float, 4> >"* bitcast (%dx.types.Handle* @"\01?View_SkyIrradianceEnvironmentMap@@3V?$StructuredBuffer@V?$vector@M$03@@@@A" to %"class.StructuredBuffer<vector<float, 4> >"*), !"View_SkyIrradianceEnvironmentMap", i32 0, i32 2, i32 1, i32 12, i32 0, !6}
!9 = !{i32 3, %"class.Buffer<unsigned int>"* bitcast (%dx.types.Handle* @"\01?View_LandscapeIndirection@@3V?$Buffer@I@@A" to %"class.Buffer<unsigned int>"*), !"View_LandscapeIndirection", i32 0, i32 3, i32 1, i32 10, i32 0, !10}
!10 = !{i32 0, i32 5}
!11 = !{i32 4, %"class.Buffer<float>"* bitcast (%dx.types.Handle* @"\01?View_LandscapePerComponentData@@3V?$Buffer@M@@A" to %"class.Buffer<float>"*), !"View_LandscapePerComponentData", i32 0, i32 4, i32 1, i32 10, i32 0, !12}
!12 = !{i32 0, i32 9}
!13 = !{i32 5, %"class.Buffer<float>"* bitcast (%dx.types.Handle* @"\01?LandscapeContinuousLODParameters_SectionLODBias@@3V?$Buffer@M@@A" to %"class.Buffer<float>"*), !"LandscapeContinuousLODParameters_SectionLODBias", i32 0, i32 5, i32 1, i32 10, i32 0, !12}
!14 = !{i32 6, %"class.Texture2D<vector<float, 4> >"* bitcast (%dx.types.Handle* @"\01?LandscapeParameters_HeightmapTexture@@3V?$Texture2D@V?$vector@M$03@@@@A" to %"class.Texture2D<vector<float, 4> >"*), !"LandscapeParameters_HeightmapTexture", i32 0, i32 6, i32 1, i32 2, i32 0, !12}
!15 = !{i32 7, %"class.Texture2D<vector<float, 4> >"* bitcast (%dx.types.Handle* @"\01?LandscapeParameters_NormalmapTexture@@3V?$Texture2D@V?$vector@M$03@@@@A" to %"class.Texture2D<vector<float, 4> >"*), !"LandscapeParameters_NormalmapTexture", i32 0, i32 7, i32 1, i32 2, i32 0, !12}
!16 = !{i32 8, %"class.Texture2D<vector<float, 4> >"* bitcast (%dx.types.Handle* @"\01?Material_Texture2D_0@@3V?$Texture2D@V?$vector@M$03@@@@A" to %"class.Texture2D<vector<float, 4> >"*), !"Material_Texture2D_0", i32 0, i32 8, i32 1, i32 2, i32 0, !12}
!17 = !{i32 9, %"class.Texture2D<vector<float, 4> >"* bitcast (%dx.types.Handle* @"\01?Material_Texture2D_1@@3V?$Texture2D@V?$vector@M$03@@@@A" to %"class.Texture2D<vector<float, 4> >"*), !"Material_Texture2D_1", i32 0, i32 9, i32 1, i32 2, i32 0, !12}
!18 = !{i32 10, %"class.Texture2D<vector<float, 4> >"* bitcast (%dx.types.Handle* @"\01?Material_Texture2D_2@@3V?$Texture2D@V?$vector@M$03@@@@A" to %"class.Texture2D<vector<float, 4> >"*), !"Material_Texture2D_2", i32 0, i32 10, i32 1, i32 2, i32 0, !12}
!19 = !{i32 11, %"class.Texture2D<vector<float, 4> >"* bitcast (%dx.types.Handle* @"\01?Material_Texture2D_3@@3V?$Texture2D@V?$vector@M$03@@@@A" to %"class.Texture2D<vector<float, 4> >"*), !"Material_Texture2D_3", i32 0, i32 11, i32 1, i32 2, i32 0, !12}
!20 = !{i32 12, %"class.Texture2D<vector<float, 4> >"* bitcast (%dx.types.Handle* @"\01?Material_Texture2D_4@@3V?$Texture2D@V?$vector@M$03@@@@A" to %"class.Texture2D<vector<float, 4> >"*), !"Material_Texture2D_4", i32 0, i32 12, i32 1, i32 2, i32 0, !12}
!21 = !{i32 13, %"class.Texture2D<vector<float, 4> >"* bitcast (%dx.types.Handle* @"\01?Material_Texture2D_5@@3V?$Texture2D@V?$vector@M$03@@@@A" to %"class.Texture2D<vector<float, 4> >"*), !"Material_Texture2D_5", i32 0, i32 13, i32 1, i32 2, i32 0, !12}
!22 = !{i32 14, %"class.Texture2D<vector<float, 4> >"* bitcast (%dx.types.Handle* @"\01?Material_Texture2D_6@@3V?$Texture2D@V?$vector@M$03@@@@A" to %"class.Texture2D<vector<float, 4> >"*), !"Material_Texture2D_6", i32 0, i32 14, i32 1, i32 2, i32 0, !12}
!23 = !{i32 15, %"class.Texture2D<vector<float, 4> >"* bitcast (%dx.types.Handle* @"\01?Material_Texture2D_7@@3V?$Texture2D@V?$vector@M$03@@@@A" to %"class.Texture2D<vector<float, 4> >"*), !"Material_Texture2D_7", i32 0, i32 15, i32 1, i32 2, i32 0, !12}
!24 = !{i32 16, %"class.Texture2D<vector<float, 4> >"* bitcast (%dx.types.Handle* @"\01?Material_Texture2D_8@@3V?$Texture2D@V?$vector@M$03@@@@A" to %"class.Texture2D<vector<float, 4> >"*), !"Material_Texture2D_8", i32 0, i32 16, i32 1, i32 2, i32 0, !12}
!25 = !{i32 17, %"class.Texture2D<vector<float, 4> >"* bitcast (%dx.types.Handle* @"\01?Material_Texture2D_9@@3V?$Texture2D@V?$vector@M$03@@@@A" to %"class.Texture2D<vector<float, 4> >"*), !"Material_Texture2D_9", i32 0, i32 17, i32 1, i32 2, i32 0, !12}
!26 = !{i32 18, %"class.Texture2D<vector<float, 4> >"* bitcast (%dx.types.Handle* @"\01?Material_Texture2D_10@@3V?$Texture2D@V?$vector@M$03@@@@A" to %"class.Texture2D<vector<float, 4> >"*), !"Material_Texture2D_10", i32 0, i32 18, i32 1, i32 2, i32 0, !12}
!27 = !{i32 19, %"class.Texture2D<vector<float, 4> >"* bitcast (%dx.types.Handle* @"\01?Material_Texture2D_11@@3V?$Texture2D@V?$vector@M$03@@@@A" to %"class.Texture2D<vector<float, 4> >"*), !"Material_Texture2D_11", i32 0, i32 19, i32 1, i32 2, i32 0, !12}
!28 = !{i32 20, %"class.Texture2D<vector<float, 4> >"* bitcast (%dx.types.Handle* @"\01?Material_Texture2D_12@@3V?$Texture2D@V?$vector@M$03@@@@A" to %"class.Texture2D<vector<float, 4> >"*), !"Material_Texture2D_12", i32 0, i32 20, i32 1, i32 2, i32 0, !12}
!29 = !{i32 21, %"class.Texture2D<vector<float, 4> >"* bitcast (%dx.types.Handle* @"\01?Material_Texture2D_13@@3V?$Texture2D@V?$vector@M$03@@@@A" to %"class.Texture2D<vector<float, 4> >"*), !"Material_Texture2D_13", i32 0, i32 21, i32 1, i32 2, i32 0, !12}
!30 = !{i32 22, %"class.Texture2D<vector<float, 4> >"* bitcast (%dx.types.Handle* @"\01?Material_Texture2D_14@@3V?$Texture2D@V?$vector@M$03@@@@A" to %"class.Texture2D<vector<float, 4> >"*), !"Material_Texture2D_14", i32 0, i32 22, i32 1, i32 2, i32 0, !12}
!31 = !{i32 23, %"class.Texture2D<vector<float, 4> >"* bitcast (%dx.types.Handle* @"\01?Material_Texture2D_15@@3V?$Texture2D@V?$vector@M$03@@@@A" to %"class.Texture2D<vector<float, 4> >"*), !"Material_Texture2D_15", i32 0, i32 23, i32 1, i32 2, i32 0, !12}
!32 = !{i32 24, %"class.Texture2D<vector<float, 4> >"* bitcast (%dx.types.Handle* @"\01?Material_Texture2D_16@@3V?$Texture2D@V?$vector@M$03@@@@A" to %"class.Texture2D<vector<float, 4> >"*), !"Material_Texture2D_16", i32 0, i32 24, i32 1, i32 2, i32 0, !12}
!33 = !{i32 25, %struct.ByteAddressBuffer* bitcast (%dx.types.Handle* @"\01?HitGroupSystemIndexBuffer@@3UByteAddressBuffer@@A" to %struct.ByteAddressBuffer*), !"HitGroupSystemIndexBuffer", i32 2, i32 0, i32 1, i32 11, i32 0, null}
!34 = !{!35, !36, !37, !38, !39, !40}
!35 = !{i32 0, %UniformBufferConstants_View* bitcast (%dx.types.Handle* @UniformBufferConstants_View to %UniformBufferConstants_View*), !"UniformBufferConstants_View", i32 0, i32 0, i32 1, i32 5292, null}
!36 = !{i32 1, %UniformBufferConstants_LandscapeMVF* bitcast (%dx.types.Handle* @UniformBufferConstants_LandscapeMVF to %UniformBufferConstants_LandscapeMVF*), !"UniformBufferConstants_LandscapeMVF", i32 0, i32 1, i32 1, i32 8, null}
!37 = !{i32 2, %UniformBufferConstants_LandscapeContinuousLODParameters* bitcast (%dx.types.Handle* @UniformBufferConstants_LandscapeContinuousLODParameters to %UniformBufferConstants_LandscapeContinuousLODParameters*), !"UniformBufferConstants_LandscapeContinuousLODParameters", i32 0, i32 2, i32 1, i32 28, null}
!38 = !{i32 3, %UniformBufferConstants_LandscapeParameters* bitcast (%dx.types.Handle* @UniformBufferConstants_LandscapeParameters to %UniformBufferConstants_LandscapeParameters*), !"UniformBufferConstants_LandscapeParameters", i32 0, i32 3, i32 1, i32 236, null}
!39 = !{i32 4, %UniformBufferConstants_Material* bitcast (%dx.types.Handle* @UniformBufferConstants_Material to %UniformBufferConstants_Material*), !"UniformBufferConstants_Material", i32 0, i32 4, i32 1, i32 428, null}
!40 = !{i32 5, %HitGroupSystemRootConstants* bitcast (%dx.types.Handle* @HitGroupSystemRootConstants to %HitGroupSystemRootConstants*), !"HitGroupSystemRootConstants", i32 2, i32 0, i32 1, i32 24, null}
!41 = !{!42, !43, !44, !45, !46, !47, !48, !49, !50, !51, !52, !53, !54, !55, !56, !57, !58, !59}
!42 = !{i32 0, %struct.SamplerState* bitcast (%dx.types.Handle* @"\01?View_LandscapeWeightmapSampler@@3USamplerState@@A" to %struct.SamplerState*), !"View_LandscapeWeightmapSampler", i32 0, i32 0, i32 1, i32 0, null}
!43 = !{i32 1, %struct.SamplerState* bitcast (%dx.types.Handle* @"\01?LandscapeParameters_HeightmapTextureSampler@@3USamplerState@@A" to %struct.SamplerState*), !"LandscapeParameters_HeightmapTextureSampler", i32 0, i32 1, i32 1, i32 0, null}
!44 = !{i32 2, %struct.SamplerState* bitcast (%dx.types.Handle* @"\01?LandscapeParameters_NormalmapTextureSampler@@3USamplerState@@A" to %struct.SamplerState*), !"LandscapeParameters_NormalmapTextureSampler", i32 0, i32 2, i32 1, i32 0, null}
!45 = !{i32 3, %struct.SamplerState* bitcast (%dx.types.Handle* @"\01?Material_Texture2D_2Sampler@@3USamplerState@@A" to %struct.SamplerState*), !"Material_Texture2D_2Sampler", i32 0, i32 3, i32 1, i32 0, null}
!46 = !{i32 4, %struct.SamplerState* bitcast (%dx.types.Handle* @"\01?Material_Texture2D_3Sampler@@3USamplerState@@A" to %struct.SamplerState*), !"Material_Texture2D_3Sampler", i32 0, i32 4, i32 1, i32 0, null}
!47 = !{i32 5, %struct.SamplerState* bitcast (%dx.types.Handle* @"\01?Material_Texture2D_4Sampler@@3USamplerState@@A" to %struct.SamplerState*), !"Material_Texture2D_4Sampler", i32 0, i32 5, i32 1, i32 0, null}
!48 = !{i32 6, %struct.SamplerState* bitcast (%dx.types.Handle* @"\01?Material_Texture2D_5Sampler@@3USamplerState@@A" to %struct.SamplerState*), !"Material_Texture2D_5Sampler", i32 0, i32 6, i32 1, i32 0, null}
!49 = !{i32 7, %struct.SamplerState* bitcast (%dx.types.Handle* @"\01?Material_Texture2D_6Sampler@@3USamplerState@@A" to %struct.SamplerState*), !"Material_Texture2D_6Sampler", i32 0, i32 7, i32 1, i32 0, null}
!50 = !{i32 8, %struct.SamplerState* bitcast (%dx.types.Handle* @"\01?Material_Texture2D_7Sampler@@3USamplerState@@A" to %struct.SamplerState*), !"Material_Texture2D_7Sampler", i32 0, i32 8, i32 1, i32 0, null}
!51 = !{i32 9, %struct.SamplerState* bitcast (%dx.types.Handle* @"\01?Material_Texture2D_8Sampler@@3USamplerState@@A" to %struct.SamplerState*), !"Material_Texture2D_8Sampler", i32 0, i32 9, i32 1, i32 0, null}
!52 = !{i32 10, %struct.SamplerState* bitcast (%dx.types.Handle* @"\01?Material_Texture2D_9Sampler@@3USamplerState@@A" to %struct.SamplerState*), !"Material_Texture2D_9Sampler", i32 0, i32 10, i32 1, i32 0, null}
!53 = !{i32 11, %struct.SamplerState* bitcast (%dx.types.Handle* @"\01?Material_Texture2D_10Sampler@@3USamplerState@@A" to %struct.SamplerState*), !"Material_Texture2D_10Sampler", i32 0, i32 11, i32 1, i32 0, null}
!54 = !{i32 12, %struct.SamplerState* bitcast (%dx.types.Handle* @"\01?Material_Texture2D_11Sampler@@3USamplerState@@A" to %struct.SamplerState*), !"Material_Texture2D_11Sampler", i32 0, i32 12, i32 1, i32 0, null}
!55 = !{i32 13, %struct.SamplerState* bitcast (%dx.types.Handle* @"\01?Material_Texture2D_12Sampler@@3USamplerState@@A" to %struct.SamplerState*), !"Material_Texture2D_12Sampler", i32 0, i32 13, i32 1, i32 0, null}
!56 = !{i32 14, %struct.SamplerState* bitcast (%dx.types.Handle* @"\01?Material_Texture2D_13Sampler@@3USamplerState@@A" to %struct.SamplerState*), !"Material_Texture2D_13Sampler", i32 0, i32 14, i32 1, i32 0, null}
!57 = !{i32 15, %struct.SamplerState* bitcast (%dx.types.Handle* @"\01?Material_Texture2D_14Sampler@@3USamplerState@@A" to %struct.SamplerState*), !"Material_Texture2D_14Sampler", i32 0, i32 15, i32 1, i32 0, null}
!58 = !{i32 16, %struct.SamplerState* bitcast (%dx.types.Handle* @"\01?Material_Texture2D_15Sampler@@3USamplerState@@A" to %struct.SamplerState*), !"Material_Texture2D_15Sampler", i32 0, i32 16, i32 1, i32 0, null}
!59 = !{i32 17, %struct.SamplerState* bitcast (%dx.types.Handle* @"\01?Material_Texture2D_16Sampler@@3USamplerState@@A" to %struct.SamplerState*), !"Material_Texture2D_16Sampler", i32 0, i32 17, i32 1, i32 0, null}
!60 = !{null, !"", null, !3, !61}
!61 = !{i32 0, i64 8388624, i32 5, !62}
!62 = !{i32 0}
!63 = !{void (%struct.FPackedMaterialClosestHitPayload*, %struct.FRayTracingIntersectionAttributes*)* @"\01?MaterialCHS@@YAXUFPackedMaterialClosestHitPayload@@UFRayTracingIntersectionAttributes@@@Z", !"\01?MaterialCHS@@YAXUFPackedMaterialClosestHitPayload@@UFRayTracingIntersectionAttributes@@@Z", null, null, !64}
!64 = !{i32 8, i32 10, i32 6, i32 64, i32 7, i32 8, i32 5, !62}
!65 = !{!66, !68}
!66 = distinct !{!66, !67, !"\01?internal.CalcPixelMaterialInputs@@YAXUFMaterialPixelParameters@@UFPixelMaterialInputs@@@Z: %PixelMaterialInputs"}
!67 = distinct !{!67, !"\01?internal.CalcPixelMaterialInputs@@YAXUFMaterialPixelParameters@@UFPixelMaterialInputs@@@Z"}
!68 = distinct !{!68, !69, !"\01?internal.CalcMaterialParametersEx@@YAXUFMaterialPixelParameters@@UFPixelMaterialInputs@@V?$vector@M$03@@2_NV?$vector@M$02@@4@Z: %PixelMaterialInputs"}
!69 = distinct !{!69, !"\01?internal.CalcMaterialParametersEx@@YAXUFMaterialPixelParameters@@UFPixelMaterialInputs@@V?$vector@M$03@@2_NV?$vector@M$02@@4@Z"}
!70 = !{!71, !66, !68}
!71 = distinct !{!71, !67, !"\01?internal.CalcPixelMaterialInputs@@YAXUFMaterialPixelParameters@@UFPixelMaterialInputs@@@Z: %Parameters"}
!72 = !{!73, !75, !77, !78}
!73 = distinct !{!73, !74, !"\01?internal.GetVertexFactoryIntermediates@@YA?AUFVertexFactoryIntermediates@@UFVertexFactoryInput@@@Z: %agg.result"}
!74 = distinct !{!74, !"\01?internal.GetVertexFactoryIntermediates@@YA?AUFVertexFactoryIntermediates@@UFVertexFactoryInput@@@Z"}
!75 = distinct !{!75, !76, !"\01?internal.CalcInterpolants@@YAXUFRayCone@@UFRayTracingIntersectionAttributes@@UFVertexFactoryInterpolantsVSToPS@@AIAV?$vector@M$02@@@Z: %Interpolants"}
!76 = distinct !{!76, !"\01?internal.CalcInterpolants@@YAXUFRayCone@@UFRayTracingIntersectionAttributes@@UFVertexFactoryInterpolantsVSToPS@@AIAV?$vector@M$02@@@Z"}
!77 = distinct !{!77, !76, !"\01?internal.CalcInterpolants@@YAXUFRayCone@@UFRayTracingIntersectionAttributes@@UFVertexFactoryInterpolantsVSToPS@@AIAV?$vector@M$02@@@Z: %FaceNormal"}
!78 = distinct !{!78, !79, !"\01?internal.CalcInterpolants@@YAXUFRayCone@@UFRayTracingIntersectionAttributes@@UFVertexFactoryInterpolantsVSToPS@@@Z: %Interpolants"}
!79 = distinct !{!79, !"\01?internal.CalcInterpolants@@YAXUFRayCone@@UFRayTracingIntersectionAttributes@@UFVertexFactoryInterpolantsVSToPS@@@Z"}
!80 = !{!81, !71, !66, !68}
!81 = distinct !{!81, !82, !"\01?internal.GetMaterialSharedSampler@@YA?AUSamplerState@@U1@0@Z: %agg.result"}
!82 = distinct !{!82, !"\01?internal.GetMaterialSharedSampler@@YA?AUSamplerState@@U1@0@Z"}
!83 = !{!84, !86, !88, !75, !77, !78}
!84 = distinct !{!84, !85, !"\01?internal.LoadTriangleBaseAttributes@@YA?AUFTriangleBaseAttributes@@UByteAddressBuffer@@II0III@Z: %agg.result"}
!85 = distinct !{!85, !"\01?internal.LoadTriangleBaseAttributes@@YA?AUFTriangleBaseAttributes@@UByteAddressBuffer@@II0III@Z"}
!86 = distinct !{!86, !87, !"\01?internal.LoadTriangleBaseAttributes@@YA?AUFTriangleBaseAttributes@@I@Z: %agg.result"}
!87 = distinct !{!87, !"\01?internal.LoadTriangleBaseAttributes@@YA?AUFTriangleBaseAttributes@@I@Z"}
!88 = distinct !{!88, !89, !"\01?internal.LoadVertexFactoryInputForHGS@@YA?AUFVertexFactoryInput@@IH@Z: %agg.result"}
!89 = distinct !{!89, !"\01?internal.LoadVertexFactoryInputForHGS@@YA?AUFVertexFactoryInput@@IH@Z"}
!90 = !{!91, !93, !94, !96, !97, !98}
!91 = distinct !{!91, !92, !"\01?internal.GetSkyLighting@@YAXUFMaterialPixelParameters@@MV?$vector@M$02@@V?$vector@M$01@@I1I_NAIAV2@4@Z: %OutDiffuseLighting"}
!92 = distinct !{!92, !"\01?internal.GetSkyLighting@@YAXUFMaterialPixelParameters@@MV?$vector@M$02@@V?$vector@M$01@@I1I_NAIAV2@4@Z"}
!93 = distinct !{!93, !92, !"\01?internal.GetSkyLighting@@YAXUFMaterialPixelParameters@@MV?$vector@M$02@@V?$vector@M$01@@I1I_NAIAV2@4@Z: %OutSubsurfaceLighting"}
!94 = distinct !{!94, !95, !"\01?internal.GetPrecomputedIndirectLightingAndSkyLight@@YAXUFMaterialPixelParameters@@UFVertexFactoryInterpolantsVSToPS@@MV?$vector@M$02@@2I_NAIAV3@4AIAM@Z: %OutDiffuseLighting"}
!95 = distinct !{!95, !"\01?internal.GetPrecomputedIndirectLightingAndSkyLight@@YAXUFMaterialPixelParameters@@UFVertexFactoryInterpolantsVSToPS@@MV?$vector@M$02@@2I_NAIAV3@4AIAM@Z"}
!96 = distinct !{!96, !95, !"\01?internal.GetPrecomputedIndirectLightingAndSkyLight@@YAXUFMaterialPixelParameters@@UFVertexFactoryInterpolantsVSToPS@@MV?$vector@M$02@@2I_NAIAV3@4AIAM@Z: %OutSubsurfaceLighting"}
!97 = distinct !{!97, !95, !"\01?internal.GetPrecomputedIndirectLightingAndSkyLight@@YAXUFMaterialPixelParameters@@UFVertexFactoryInterpolantsVSToPS@@MV?$vector@M$02@@2I_NAIAV3@4AIAM@Z: %OutIndirectIrradiance"}
!98 = distinct !{!98, !99, !"\01?internal.GetMaterialPayload@@YAXUFPixelMaterialInputs@@UFMaterialPixelParameters@@UFVertexFactoryInterpolantsVSToPS@@_NUFMaterialClosestHitPayload@@@Z: %Payload"}
!99 = distinct !{!99, !"\01?internal.GetMaterialPayload@@YAXUFPixelMaterialInputs@@UFMaterialPixelParameters@@UFVertexFactoryInterpolantsVSToPS@@_NUFMaterialClosestHitPayload@@@Z"}
!100 = !{!101, !103, !73, !75, !77, !78}
!101 = distinct !{!101, !102, !"\01?internal.GetInstanceSceneData@@YA?AUFInstanceSceneData@@II_N@Z: %agg.result"}
!102 = distinct !{!102, !"\01?internal.GetInstanceSceneData@@YA?AUFInstanceSceneData@@II_N@Z"}
!103 = distinct !{!103, !104, !"\01?internal.GetSceneDataIntermediates@@YA?AUFSceneDataIntermediates@@II@Z: %agg.result"}
!104 = distinct !{!104, !"\01?internal.GetSceneDataIntermediates@@YA?AUFSceneDataIntermediates@@II@Z"}
!105 = !{!106, !106, i64 0}
!106 = !{!"float", !107, i64 0}
!107 = !{!"omnipotent char", !108, i64 0}
!108 = !{!"Simple C/C++ TBAA"}
!109 = !{!110, !110, i64 0}
!110 = !{!"int", !107, i64 0}
!111 = !{!112}
!112 = distinct !{!112, !113, !"\01?internal.LoadVertexFactoryInputForHGS@@YA?AUFVertexFactoryInput@@IH@Z: %agg.result"}
!113 = distinct !{!113, !"\01?internal.LoadVertexFactoryInputForHGS@@YA?AUFVertexFactoryInput@@IH@Z"}
!114 = distinct !{!114, !"dx.controlflow.hints", i32 1}
!115 = !{!116}
!116 = distinct !{!116, !117, !"\01?internal.GetVertexFactoryIntermediates@@YA?AUFVertexFactoryIntermediates@@UFVertexFactoryInput@@@Z: %agg.result"}
!117 = distinct !{!117, !"\01?internal.GetVertexFactoryIntermediates@@YA?AUFVertexFactoryIntermediates@@UFVertexFactoryInput@@@Z"}
!118 = !{!119}
!119 = distinct !{!119, !120, !"\01?internal.GetRayCone@FPackedMaterialClosestHitPayload@@QAA?AUFRayCone@@XZ: %agg.result"}
!120 = distinct !{!120, !"\01?internal.GetRayCone@FPackedMaterialClosestHitPayload@@QAA?AUFRayCone@@XZ"}
!121 = !{!75, !77, !78}
!122 = !{!88, !75, !77, !78}
