; shader hash: 32436877f34874a1c69a97c720efeafd
;
; Buffer Definitions:
;
; cbuffer UniformBufferConstants_View
; {
;
;   struct UniformBufferConstants_View
;   {
;
;       row_major float4x4 View_TranslatedWorldToClip;; Offset:    0
;       row_major float4x4 View_TranslatedWorldToSubpixelClip;; Offset:   64
;       row_major float4x4 View_RelativeWorldToClip;  ; Offset:  128
;       row_major float4x4 View_ClipToRelativeWorld;  ; Offset:  192
;       row_major float4x4 View_TranslatedWorldToView;; Offset:  256
;       row_major float4x4 View_ViewToTranslatedWorld;; Offset:  320
;       row_major float4x4 View_TranslatedWorldToCameraView;; Offset:  384
;       row_major float4x4 View_CameraViewToTranslatedWorld;; Offset:  448
;       row_major float4x4 View_ViewToClip;           ; Offset:  512
;       row_major float4x4 View_ViewToClipNoAA;       ; Offset:  576
;       row_major float4x4 View_ClipToView;           ; Offset:  640
;       row_major float4x4 View_ClipToTranslatedWorld;; Offset:  704
;       row_major float4x4 View_SVPositionToTranslatedWorld;; Offset:  768
;       row_major float4x4 View_ScreenToRelativeWorld;; Offset:  832
;       row_major float4x4 View_ScreenToTranslatedWorld;; Offset:  896
;       row_major float4x4 View_MobileMultiviewShadowTransform;; Offset:  960
;       float3 View_ViewTilePosition;                 ; Offset: 1024
;       float PrePadding_View_1036;                   ; Offset: 1036
;       float3 View_MatrixTilePosition;               ; Offset: 1040
;       float PrePadding_View_1052;                   ; Offset: 1052
;       float3 View_ViewForward;                      ; Offset: 1056
;       float PrePadding_View_1068;                   ; Offset: 1068
;       float3 View_ViewUp;                           ; Offset: 1072
;       float PrePadding_View_1084;                   ; Offset: 1084
;       float3 View_ViewRight;                        ; Offset: 1088
;       float PrePadding_View_1100;                   ; Offset: 1100
;       float3 View_HMDViewNoRollUp;                  ; Offset: 1104
;       float PrePadding_View_1116;                   ; Offset: 1116
;       float3 View_HMDViewNoRollRight;               ; Offset: 1120
;       float PrePadding_View_1132;                   ; Offset: 1132
;       float4 View_InvDeviceZToWorldZTransform;      ; Offset: 1136
;       float4 View_ScreenPositionScaleBias;          ; Offset: 1152
;       float3 View_RelativeWorldCameraOrigin;        ; Offset: 1168
;       float PrePadding_View_1180;                   ; Offset: 1180
;       float3 View_TranslatedWorldCameraOrigin;      ; Offset: 1184
;       float PrePadding_View_1196;                   ; Offset: 1196
;       float3 View_RelativeWorldViewOrigin;          ; Offset: 1200
;       float PrePadding_View_1212;                   ; Offset: 1212
;       float3 View_RelativePreViewTranslation;       ; Offset: 1216
;       float PrePadding_View_1228;                   ; Offset: 1228
;       row_major float4x4 View_PrevViewToClip;       ; Offset: 1232
;       row_major float4x4 View_PrevClipToView;       ; Offset: 1296
;       row_major float4x4 View_PrevTranslatedWorldToClip;; Offset: 1360
;       row_major float4x4 View_PrevTranslatedWorldToView;; Offset: 1424
;       row_major float4x4 View_PrevViewToTranslatedWorld;; Offset: 1488
;       row_major float4x4 View_PrevTranslatedWorldToCameraView;; Offset: 1552
;       row_major float4x4 View_PrevCameraViewToTranslatedWorld;; Offset: 1616
;       float3 View_PrevTranslatedWorldCameraOrigin;  ; Offset: 1680
;       float PrePadding_View_1692;                   ; Offset: 1692
;       float3 View_PrevRelativeWorldCameraOrigin;    ; Offset: 1696
;       float PrePadding_View_1708;                   ; Offset: 1708
;       float3 View_PrevRelativeWorldViewOrigin;      ; Offset: 1712
;       float PrePadding_View_1724;                   ; Offset: 1724
;       float3 View_RelativePrevPreViewTranslation;   ; Offset: 1728
;       float PrePadding_View_1740;                   ; Offset: 1740
;       row_major float4x4 View_PrevClipToRelativeWorld;; Offset: 1744
;       row_major float4x4 View_PrevScreenToTranslatedWorld;; Offset: 1808
;       row_major float4x4 View_ClipToPrevClip;       ; Offset: 1872
;       row_major float4x4 View_ClipToPrevClipWithAA; ; Offset: 1936
;       float4 View_TemporalAAJitter;                 ; Offset: 2000
;       float4 View_GlobalClippingPlane;              ; Offset: 2016
;       float2 View_FieldOfViewWideAngles;            ; Offset: 2032
;       float2 View_PrevFieldOfViewWideAngles;        ; Offset: 2040
;       float4 View_ViewRectMin;                      ; Offset: 2048
;       float4 View_ViewSizeAndInvSize;               ; Offset: 2064
;       uint4 View_ViewRectMinAndSize;                ; Offset: 2080
;       float4 View_LightProbeSizeRatioAndInvSizeRatio;; Offset: 2096
;       float4 View_BufferSizeAndInvSize;             ; Offset: 2112
;       float4 View_BufferBilinearUVMinMax;           ; Offset: 2128
;       float4 View_ScreenToViewSpace;                ; Offset: 2144
;       float2 View_BufferToSceneTextureScale;        ; Offset: 2160
;       float2 View_ResolutionFractionAndInv;         ; Offset: 2168
;       int View_NumSceneColorMSAASamples;            ; Offset: 2176
;       float View_SeparateWaterMainDirLightLuminance;; Offset: 2180
;       float View_PreExposure;                       ; Offset: 2184
;       float View_OneOverPreExposure;                ; Offset: 2188
;       float4 View_DiffuseOverrideParameter;         ; Offset: 2192
;       float4 View_SpecularOverrideParameter;        ; Offset: 2208
;       float4 View_NormalOverrideParameter;          ; Offset: 2224
;       float2 View_RoughnessOverrideParameter;       ; Offset: 2240
;       float View_PrevFrameGameTime;                 ; Offset: 2248
;       float View_PrevFrameRealTime;                 ; Offset: 2252
;       float View_OutOfBoundsMask;                   ; Offset: 2256
;       float PrePadding_View_2260;                   ; Offset: 2260
;       float PrePadding_View_2264;                   ; Offset: 2264
;       float PrePadding_View_2268;                   ; Offset: 2268
;       float3 View_WorldCameraMovementSinceLastFrame;; Offset: 2272
;       float View_CullingSign;                       ; Offset: 2284
;       float View_NearPlane;                         ; Offset: 2288
;       float View_GameTime;                          ; Offset: 2292
;       float View_RealTime;                          ; Offset: 2296
;       float View_DeltaTime;                         ; Offset: 2300
;       float View_MaterialTextureMipBias;            ; Offset: 2304
;       float View_MaterialTextureDerivativeMultiply; ; Offset: 2308
;       uint View_Random;                             ; Offset: 2312
;       uint View_FrameNumber;                        ; Offset: 2316
;       uint View_StateFrameIndexMod8;                ; Offset: 2320
;       uint View_StateFrameIndex;                    ; Offset: 2324
;       uint View_DebugViewModeMask;                  ; Offset: 2328
;       float View_CameraCut;                         ; Offset: 2332
;       float View_UnlitViewmodeMask;                 ; Offset: 2336
;       float PrePadding_View_2340;                   ; Offset: 2340
;       float PrePadding_View_2344;                   ; Offset: 2344
;       float PrePadding_View_2348;                   ; Offset: 2348
;       float4 View_DirectionalLightColor;            ; Offset: 2352
;       float3 View_DirectionalLightDirection;        ; Offset: 2368
;       float PrePadding_View_2380;                   ; Offset: 2380
;       float4 View_TranslucencyLightingVolumeMin[2]; ; Offset: 2384
;       float4 View_TranslucencyLightingVolumeInvSize[2];; Offset: 2416
;       float4 View_TemporalAAParams;                 ; Offset: 2448
;       float4 View_CircleDOFParams;                  ; Offset: 2464
;       float View_DepthOfFieldSensorWidth;           ; Offset: 2480
;       float View_DepthOfFieldFocalDistance;         ; Offset: 2484
;       float View_DepthOfFieldScale;                 ; Offset: 2488
;       float View_DepthOfFieldFocalLength;           ; Offset: 2492
;       float View_DepthOfFieldFocalRegion;           ; Offset: 2496
;       float View_DepthOfFieldNearTransitionRegion;  ; Offset: 2500
;       float View_DepthOfFieldFarTransitionRegion;   ; Offset: 2504
;       float View_MotionBlurNormalizedToPixel;       ; Offset: 2508
;       float View_GeneralPurposeTweak;               ; Offset: 2512
;       float View_GeneralPurposeTweak2;              ; Offset: 2516
;       float View_DemosaicVposOffset;                ; Offset: 2520
;       float View_DecalDepthBias;                    ; Offset: 2524
;       float3 View_IndirectLightingColorScale;       ; Offset: 2528
;       float PrePadding_View_2540;                   ; Offset: 2540
;       float3 View_PrecomputedIndirectLightingColorScale;; Offset: 2544
;       float PrePadding_View_2556;                   ; Offset: 2556
;       float3 View_PrecomputedIndirectSpecularColorScale;; Offset: 2560
;       float PrePadding_View_2572;                   ; Offset: 2572
;       float4 View_AtmosphereLightDirection[2];      ; Offset: 2576
;       float4 View_AtmosphereLightIlluminanceOnGroundPostTransmittance[2];; Offset: 2608
;       float4 View_AtmosphereLightIlluminanceOuterSpace[2];; Offset: 2640
;       float4 View_AtmosphereLightDiscLuminance[2];  ; Offset: 2672
;       float4 View_AtmosphereLightDiscCosHalfApexAngle_PPTrans[2];; Offset: 2704
;       float4 View_SkyViewLutSizeAndInvSize;         ; Offset: 2736
;       float3 View_SkyCameraTranslatedWorldOrigin;   ; Offset: 2752
;       float PrePadding_View_2764;                   ; Offset: 2764
;       float4 View_SkyPlanetTranslatedWorldCenterAndViewHeight;; Offset: 2768
;       row_major float4x4 View_SkyViewLutReferential;; Offset: 2784
;       float4 View_SkyAtmosphereSkyLuminanceFactor;  ; Offset: 2848
;       float View_SkyAtmospherePresentInScene;       ; Offset: 2864
;       float View_SkyAtmosphereHeightFogContribution;; Offset: 2868
;       float View_SkyAtmosphereBottomRadiusKm;       ; Offset: 2872
;       float View_SkyAtmosphereTopRadiusKm;          ; Offset: 2876
;       float4 View_SkyAtmosphereCameraAerialPerspectiveVolumeSizeAndInvSize;; Offset: 2880
;       float View_SkyAtmosphereAerialPerspectiveStartDepthKm;; Offset: 2896
;       float View_SkyAtmosphereCameraAerialPerspectiveVolumeDepthResolution;; Offset: 2900
;       float View_SkyAtmosphereCameraAerialPerspectiveVolumeDepthResolutionInv;; Offset: 2904
;       float View_SkyAtmosphereCameraAerialPerspectiveVolumeDepthSliceLengthKm;; Offset: 2908
;       float View_SkyAtmosphereCameraAerialPerspectiveVolumeDepthSliceLengthKmInv;; Offset: 2912
;       float View_SkyAtmosphereApplyCameraAerialPerspectiveVolume;; Offset: 2916
;       float PrePadding_View_2920;                   ; Offset: 2920
;       float PrePadding_View_2924;                   ; Offset: 2924
;       float3 View_NormalCurvatureToRoughnessScaleBias;; Offset: 2928
;       float View_RenderingReflectionCaptureMask;    ; Offset: 2940
;       float View_RealTimeReflectionCapture;         ; Offset: 2944
;       float View_RealTimeReflectionCapturePreExposure;; Offset: 2948
;       float PrePadding_View_2952;                   ; Offset: 2952
;       float PrePadding_View_2956;                   ; Offset: 2956
;       float4 View_AmbientCubemapTint;               ; Offset: 2960
;       float View_AmbientCubemapIntensity;           ; Offset: 2976
;       float View_SkyLightApplyPrecomputedBentNormalShadowingFlag;; Offset: 2980
;       float View_SkyLightAffectReflectionFlag;      ; Offset: 2984
;       float View_SkyLightAffectGlobalIlluminationFlag;; Offset: 2988
;       float4 View_SkyLightColor;                    ; Offset: 2992
;       float4 View_MobileSkyIrradianceEnvironmentMap[8];; Offset: 3008
;       float View_MobilePreviewMode;                 ; Offset: 3136
;       float View_HMDEyePaddingOffset;               ; Offset: 3140
;       float View_ReflectionCubemapMaxMip;           ; Offset: 3144
;       float View_ShowDecalsMask;                    ; Offset: 3148
;       uint View_DistanceFieldAOSpecularOcclusionMode;; Offset: 3152
;       float View_IndirectCapsuleSelfShadowingIntensity;; Offset: 3156
;       float PrePadding_View_3160;                   ; Offset: 3160
;       float PrePadding_View_3164;                   ; Offset: 3164
;       float3 View_ReflectionEnvironmentRoughnessMixingScaleBiasAndLargestWeight;; Offset: 3168
;       int View_StereoPassIndex;                     ; Offset: 3180
;       float4 View_GlobalVolumeCenterAndExtent[6];   ; Offset: 3184
;       float4 View_GlobalVolumeWorldToUVAddAndMul[6];; Offset: 3280
;       float4 View_GlobalDistanceFieldMipWorldToUVScale[6];; Offset: 3376
;       float4 View_GlobalDistanceFieldMipWorldToUVBias[6];; Offset: 3472
;       float View_GlobalDistanceFieldMipFactor;      ; Offset: 3568
;       float View_GlobalDistanceFieldMipTransition;  ; Offset: 3572
;       int View_GlobalDistanceFieldClipmapSizeInPages;; Offset: 3576
;       int PrePadding_View_3580;                     ; Offset: 3580
;       float3 View_GlobalDistanceFieldInvPageAtlasSize;; Offset: 3584
;       float PrePadding_View_3596;                   ; Offset: 3596
;       float3 View_GlobalDistanceFieldInvCoverageAtlasSize;; Offset: 3600
;       float View_GlobalVolumeDimension;             ; Offset: 3612
;       float View_GlobalVolumeTexelSize;             ; Offset: 3616
;       float View_MaxGlobalDFAOConeDistance;         ; Offset: 3620
;       uint View_NumGlobalSDFClipmaps;               ; Offset: 3624
;       float View_CoveredExpandSurfaceScale;         ; Offset: 3628
;       float View_NotCoveredExpandSurfaceScale;      ; Offset: 3632
;       float View_NotCoveredMinStepScale;            ; Offset: 3636
;       float View_DitheredTransparencyStepThreshold; ; Offset: 3640
;       float View_DitheredTransparencyTraceThreshold;; Offset: 3644
;       int2 View_CursorPosition;                     ; Offset: 3648
;       float View_bCheckerboardSubsurfaceProfileRendering;; Offset: 3656
;       float PrePadding_View_3660;                   ; Offset: 3660
;       float3 View_VolumetricFogInvGridSize;         ; Offset: 3664
;       float PrePadding_View_3676;                   ; Offset: 3676
;       float3 View_VolumetricFogGridZParams;         ; Offset: 3680
;       float PrePadding_View_3692;                   ; Offset: 3692
;       float2 View_VolumetricFogSVPosToVolumeUV;     ; Offset: 3696
;       float View_VolumetricFogMaxDistance;          ; Offset: 3704
;       float PrePadding_View_3708;                   ; Offset: 3708
;       float3 View_VolumetricLightmapWorldToUVScale; ; Offset: 3712
;       float PrePadding_View_3724;                   ; Offset: 3724
;       float3 View_VolumetricLightmapWorldToUVAdd;   ; Offset: 3728
;       float PrePadding_View_3740;                   ; Offset: 3740
;       float3 View_VolumetricLightmapIndirectionTextureSize;; Offset: 3744
;       float View_VolumetricLightmapBrickSize;       ; Offset: 3756
;       float3 View_VolumetricLightmapBrickTexelSize; ; Offset: 3760
;       float View_IndirectLightingCacheShowFlag;     ; Offset: 3772
;       float View_EyeToPixelSpreadAngle;             ; Offset: 3776
;       float PrePadding_View_3780;                   ; Offset: 3780
;       float PrePadding_View_3784;                   ; Offset: 3784
;       float PrePadding_View_3788;                   ; Offset: 3788
;       float4 View_XRPassthroughCameraUVs[2];        ; Offset: 3792
;       float View_GlobalVirtualTextureMipBias;       ; Offset: 3824
;       uint View_VirtualTextureFeedbackShift;        ; Offset: 3828
;       uint View_VirtualTextureFeedbackMask;         ; Offset: 3832
;       uint View_VirtualTextureFeedbackStride;       ; Offset: 3836
;       uint View_VirtualTextureFeedbackJitterOffset; ; Offset: 3840
;       uint View_VirtualTextureFeedbackSampleOffset; ; Offset: 3844
;       uint PrePadding_View_3848;                    ; Offset: 3848
;       uint PrePadding_View_3852;                    ; Offset: 3852
;       float4 View_RuntimeVirtualTextureMipLevel;    ; Offset: 3856
;       float2 View_RuntimeVirtualTexturePackHeight;  ; Offset: 3872
;       float PrePadding_View_3880;                   ; Offset: 3880
;       float PrePadding_View_3884;                   ; Offset: 3884
;       float4 View_RuntimeVirtualTextureDebugParams; ; Offset: 3888
;       float View_OverrideLandscapeLOD;              ; Offset: 3904
;       int View_FarShadowStaticMeshLODBias;          ; Offset: 3908
;       float View_MinRoughness;                      ; Offset: 3912
;       float PrePadding_View_3916;                   ; Offset: 3916
;       float4 View_HairRenderInfo;                   ; Offset: 3920
;       uint View_EnableSkyLight;                     ; Offset: 3936
;       uint View_HairRenderInfoBits;                 ; Offset: 3940
;       uint View_HairComponents;                     ; Offset: 3944
;       float View_bSubsurfacePostprocessEnabled;     ; Offset: 3948
;       float4 View_SSProfilesTextureSizeAndInvSize;  ; Offset: 3952
;       float4 View_SSProfilesPreIntegratedTextureSizeAndInvSize;; Offset: 3968
;       float3 View_PhysicsFieldClipmapCenter;        ; Offset: 3984
;       float View_PhysicsFieldClipmapDistance;       ; Offset: 3996
;       int View_PhysicsFieldClipmapResolution;       ; Offset: 4000
;       int View_PhysicsFieldClipmapExponent;         ; Offset: 4004
;       int View_PhysicsFieldClipmapCount;            ; Offset: 4008
;       int View_PhysicsFieldTargetCount;             ; Offset: 4012
;       int4 View_PhysicsFieldTargets[32];            ; Offset: 4016
;       uint View_InstanceSceneDataSOAStride;         ; Offset: 4528
;       uint View_GPUSceneViewId;                     ; Offset: 4532
;       float View_ViewResolutionFraction;            ; Offset: 4536
;       float View_SubSurfaceColorAsTransmittanceAtDistanceInMeters;; Offset: 4540
;       uint BindlessSampler_View_MaterialTextureBilinearWrapedSampler;; Offset: 4544
;       uint PrePadding_View_4548;                    ; Offset: 4548
;       uint BindlessSampler_View_MaterialTextureBilinearClampedSampler;; Offset: 4552
;       uint PrePadding_View_4556;                    ; Offset: 4556
;       uint BindlessResource_View_VolumetricLightmapIndirectionTexture;; Offset: 4560
;       uint PrePadding_View_4564;                    ; Offset: 4564
;       uint BindlessResource_View_VolumetricLightmapBrickAmbientVector;; Offset: 4568
;       uint PrePadding_View_4572;                    ; Offset: 4572
;       uint BindlessResource_View_VolumetricLightmapBrickSHCoefficients0;; Offset: 4576
;       uint PrePadding_View_4580;                    ; Offset: 4580
;       uint BindlessResource_View_VolumetricLightmapBrickSHCoefficients1;; Offset: 4584
;       uint PrePadding_View_4588;                    ; Offset: 4588
;       uint BindlessResource_View_VolumetricLightmapBrickSHCoefficients2;; Offset: 4592
;       uint PrePadding_View_4596;                    ; Offset: 4596
;       uint BindlessResource_View_VolumetricLightmapBrickSHCoefficients3;; Offset: 4600
;       uint PrePadding_View_4604;                    ; Offset: 4604
;       uint BindlessResource_View_VolumetricLightmapBrickSHCoefficients4;; Offset: 4608
;       uint PrePadding_View_4612;                    ; Offset: 4612
;       uint BindlessResource_View_VolumetricLightmapBrickSHCoefficients5;; Offset: 4616
;       uint PrePadding_View_4620;                    ; Offset: 4620
;       uint BindlessResource_View_SkyBentNormalBrickTexture;; Offset: 4624
;       uint PrePadding_View_4628;                    ; Offset: 4628
;       uint BindlessResource_View_DirectionalLightShadowingBrickTexture;; Offset: 4632
;       uint PrePadding_View_4636;                    ; Offset: 4636
;       uint BindlessSampler_View_VolumetricLightmapBrickAmbientVectorSampler;; Offset: 4640
;       uint PrePadding_View_4644;                    ; Offset: 4644
;       uint BindlessSampler_View_VolumetricLightmapTextureSampler0;; Offset: 4648
;       uint PrePadding_View_4652;                    ; Offset: 4652
;       uint BindlessSampler_View_VolumetricLightmapTextureSampler1;; Offset: 4656
;       uint PrePadding_View_4660;                    ; Offset: 4660
;       uint BindlessSampler_View_VolumetricLightmapTextureSampler2;; Offset: 4664
;       uint PrePadding_View_4668;                    ; Offset: 4668
;       uint BindlessSampler_View_VolumetricLightmapTextureSampler3;; Offset: 4672
;       uint PrePadding_View_4676;                    ; Offset: 4676
;       uint BindlessSampler_View_VolumetricLightmapTextureSampler4;; Offset: 4680
;       uint PrePadding_View_4684;                    ; Offset: 4684
;       uint BindlessSampler_View_VolumetricLightmapTextureSampler5;; Offset: 4688
;       uint PrePadding_View_4692;                    ; Offset: 4692
;       uint BindlessSampler_View_SkyBentNormalTextureSampler;; Offset: 4696
;       uint PrePadding_View_4700;                    ; Offset: 4700
;       uint BindlessSampler_View_DirectionalLightShadowingTextureSampler;; Offset: 4704
;       uint PrePadding_View_4708;                    ; Offset: 4708
;       uint BindlessResource_View_GlobalDistanceFieldPageAtlasTexture;; Offset: 4712
;       uint PrePadding_View_4716;                    ; Offset: 4716
;       uint BindlessResource_View_GlobalDistanceFieldCoverageAtlasTexture;; Offset: 4720
;       uint PrePadding_View_4724;                    ; Offset: 4724
;       uint BindlessResource_View_GlobalDistanceFieldPageTableTexture;; Offset: 4728
;       uint PrePadding_View_4732;                    ; Offset: 4732
;       uint BindlessResource_View_GlobalDistanceFieldMipTexture;; Offset: 4736
;       uint PrePadding_View_4740;                    ; Offset: 4740
;       uint BindlessResource_View_AtmosphereTransmittanceTexture;; Offset: 4744
;       uint PrePadding_View_4748;                    ; Offset: 4748
;       uint BindlessSampler_View_AtmosphereTransmittanceTextureSampler;; Offset: 4752
;       uint PrePadding_View_4756;                    ; Offset: 4756
;       uint BindlessResource_View_AtmosphereIrradianceTexture;; Offset: 4760
;       uint PrePadding_View_4764;                    ; Offset: 4764
;       uint BindlessSampler_View_AtmosphereIrradianceTextureSampler;; Offset: 4768
;       uint PrePadding_View_4772;                    ; Offset: 4772
;       uint BindlessResource_View_AtmosphereInscatterTexture;; Offset: 4776
;       uint PrePadding_View_4780;                    ; Offset: 4780
;       uint BindlessSampler_View_AtmosphereInscatterTextureSampler;; Offset: 4784
;       uint PrePadding_View_4788;                    ; Offset: 4788
;       uint BindlessResource_View_PerlinNoiseGradientTexture;; Offset: 4792
;       uint PrePadding_View_4796;                    ; Offset: 4796
;       uint BindlessSampler_View_PerlinNoiseGradientTextureSampler;; Offset: 4800
;       uint PrePadding_View_4804;                    ; Offset: 4804
;       uint BindlessResource_View_PerlinNoise3DTexture;; Offset: 4808
;       uint PrePadding_View_4812;                    ; Offset: 4812
;       uint BindlessSampler_View_PerlinNoise3DTextureSampler;; Offset: 4816
;       uint PrePadding_View_4820;                    ; Offset: 4820
;       uint BindlessResource_View_SobolSamplingTexture;; Offset: 4824
;       uint PrePadding_View_4828;                    ; Offset: 4828
;       uint BindlessSampler_View_SharedPointWrappedSampler;; Offset: 4832
;       uint PrePadding_View_4836;                    ; Offset: 4836
;       uint BindlessSampler_View_SharedPointClampedSampler;; Offset: 4840
;       uint PrePadding_View_4844;                    ; Offset: 4844
;       uint BindlessSampler_View_SharedBilinearWrappedSampler;; Offset: 4848
;       uint PrePadding_View_4852;                    ; Offset: 4852
;       uint BindlessSampler_View_SharedBilinearClampedSampler;; Offset: 4856
;       uint PrePadding_View_4860;                    ; Offset: 4860
;       uint BindlessSampler_View_SharedBilinearAnisoClampedSampler;; Offset: 4864
;       uint PrePadding_View_4868;                    ; Offset: 4868
;       uint BindlessSampler_View_SharedTrilinearWrappedSampler;; Offset: 4872
;       uint PrePadding_View_4876;                    ; Offset: 4876
;       uint BindlessSampler_View_SharedTrilinearClampedSampler;; Offset: 4880
;       uint PrePadding_View_4884;                    ; Offset: 4884
;       uint BindlessResource_View_PreIntegratedBRDF; ; Offset: 4888
;       uint PrePadding_View_4892;                    ; Offset: 4892
;       uint BindlessSampler_View_PreIntegratedBRDFSampler;; Offset: 4896
;       uint PrePadding_View_4900;                    ; Offset: 4900
;       uint BindlessResource_View_PrimitiveSceneData;; Offset: 4904
;       uint PrePadding_View_4908;                    ; Offset: 4908
;       uint BindlessResource_View_InstanceSceneData; ; Offset: 4912
;       uint PrePadding_View_4916;                    ; Offset: 4916
;       uint BindlessResource_View_InstancePayloadData;; Offset: 4920
;       uint PrePadding_View_4924;                    ; Offset: 4924
;       uint BindlessResource_View_LightmapSceneData; ; Offset: 4928
;       uint PrePadding_View_4932;                    ; Offset: 4932
;       uint BindlessResource_View_SkyIrradianceEnvironmentMap;; Offset: 4936
;       uint PrePadding_View_4940;                    ; Offset: 4940
;       uint BindlessResource_View_TransmittanceLutTexture;; Offset: 4944
;       uint PrePadding_View_4948;                    ; Offset: 4948
;       uint BindlessSampler_View_TransmittanceLutTextureSampler;; Offset: 4952
;       uint PrePadding_View_4956;                    ; Offset: 4956
;       uint BindlessResource_View_SkyViewLutTexture; ; Offset: 4960
;       uint PrePadding_View_4964;                    ; Offset: 4964
;       uint BindlessSampler_View_SkyViewLutTextureSampler;; Offset: 4968
;       uint PrePadding_View_4972;                    ; Offset: 4972
;       uint BindlessResource_View_DistantSkyLightLutTexture;; Offset: 4976
;       uint PrePadding_View_4980;                    ; Offset: 4980
;       uint BindlessSampler_View_DistantSkyLightLutTextureSampler;; Offset: 4984
;       uint PrePadding_View_4988;                    ; Offset: 4988
;       uint BindlessResource_View_CameraAerialPerspectiveVolume;; Offset: 4992
;       uint PrePadding_View_4996;                    ; Offset: 4996
;       uint BindlessSampler_View_CameraAerialPerspectiveVolumeSampler;; Offset: 5000
;       uint PrePadding_View_5004;                    ; Offset: 5004
;       uint BindlessResource_View_HairScatteringLUTTexture;; Offset: 5008
;       uint PrePadding_View_5012;                    ; Offset: 5012
;       uint BindlessSampler_View_HairScatteringLUTSampler;; Offset: 5016
;       uint PrePadding_View_5020;                    ; Offset: 5020
;       uint BindlessResource_View_LTCMatTexture;     ; Offset: 5024
;       uint PrePadding_View_5028;                    ; Offset: 5028
;       uint BindlessSampler_View_LTCMatSampler;      ; Offset: 5032
;       uint PrePadding_View_5036;                    ; Offset: 5036
;       uint BindlessResource_View_LTCAmpTexture;     ; Offset: 5040
;       uint PrePadding_View_5044;                    ; Offset: 5044
;       uint BindlessSampler_View_LTCAmpSampler;      ; Offset: 5048
;       uint PrePadding_View_5052;                    ; Offset: 5052
;       uint View_bShadingEnergyConservation;         ; Offset: 5056
;       uint View_bShadingEnergyPreservation;         ; Offset: 5060
;       uint BindlessResource_View_ShadingEnergyGGXSpecTexture;; Offset: 5064
;       uint PrePadding_View_5068;                    ; Offset: 5068
;       uint BindlessResource_View_ShadingEnergyGGXGlassTexture;; Offset: 5072
;       uint PrePadding_View_5076;                    ; Offset: 5076
;       uint BindlessResource_View_ShadingEnergyClothSpecTexture;; Offset: 5080
;       uint PrePadding_View_5084;                    ; Offset: 5084
;       uint BindlessResource_View_ShadingEnergyDiffuseTexture;; Offset: 5088
;       uint PrePadding_View_5092;                    ; Offset: 5092
;       uint BindlessSampler_View_ShadingEnergySampler;; Offset: 5096
;       uint PrePadding_View_5100;                    ; Offset: 5100
;       uint BindlessResource_View_SSProfilesTexture; ; Offset: 5104
;       uint PrePadding_View_5108;                    ; Offset: 5108
;       uint BindlessSampler_View_SSProfilesSampler;  ; Offset: 5112
;       uint PrePadding_View_5116;                    ; Offset: 5116
;       uint BindlessSampler_View_SSProfilesTransmissionSampler;; Offset: 5120
;       uint PrePadding_View_5124;                    ; Offset: 5124
;       uint BindlessResource_View_SSProfilesPreIntegratedTexture;; Offset: 5128
;       uint PrePadding_View_5132;                    ; Offset: 5132
;       uint BindlessSampler_View_SSProfilesPreIntegratedSampler;; Offset: 5136
;       uint PrePadding_View_5140;                    ; Offset: 5140
;       uint BindlessResource_View_WaterIndirection;  ; Offset: 5144
;       uint PrePadding_View_5148;                    ; Offset: 5148
;       uint BindlessResource_View_WaterData;         ; Offset: 5152
;       uint PrePadding_View_5156;                    ; Offset: 5156
;       uint PrePadding_View_5160;                    ; Offset: 5160
;       uint PrePadding_View_5164;                    ; Offset: 5164
;       float4 View_RectLightAtlasSizeAndInvSize;     ; Offset: 5168
;       float View_RectLightAtlasMaxMipLevel;         ; Offset: 5184
;       float PrePadding_View_5188;                   ; Offset: 5188
;       uint BindlessResource_View_RectLightAtlasTexture;; Offset: 5192
;       uint PrePadding_View_5196;                    ; Offset: 5196
;       uint BindlessSampler_View_RectLightAtlasSampler;; Offset: 5200
;       uint PrePadding_View_5204;                    ; Offset: 5204
;       uint BindlessSampler_View_LandscapeWeightmapSampler;; Offset: 5208
;       uint PrePadding_View_5212;                    ; Offset: 5212
;       uint BindlessResource_View_LandscapeIndirection;; Offset: 5216
;       uint PrePadding_View_5220;                    ; Offset: 5220
;       uint BindlessResource_View_LandscapePerComponentData;; Offset: 5224
;       uint PrePadding_View_5228;                    ; Offset: 5228
;       uint BindlessResource_View_VTFeedbackBuffer;  ; Offset: 5232
;       uint PrePadding_View_5236;                    ; Offset: 5236
;       uint BindlessResource_View_EditorVisualizeLevelInstanceIds;; Offset: 5240
;       uint PrePadding_View_5244;                    ; Offset: 5244
;       uint BindlessResource_View_EditorSelectedHitProxyIds;; Offset: 5248
;       uint PrePadding_View_5252;                    ; Offset: 5252
;       uint BindlessResource_View_PhysicsFieldClipmapBuffer;; Offset: 5256
;       uint PrePadding_View_5260;                    ; Offset: 5260
;       float3 View_TLASRelativePreViewTranslation;   ; Offset: 5264
;       float PrePadding_View_5276;                   ; Offset: 5276
;       float3 View_TLASViewTilePosition;             ; Offset: 5280
;   
;   } UniformBufferConstants_View;                    ; Offset:    0 Size:  5292
;
; }
;
; cbuffer UniformBufferConstants_LandscapeMVF
; {
;
;   struct UniformBufferConstants_LandscapeMVF
;   {
;
;       int2 LandscapeMVF_SubXY;                      ; Offset:    0
;   
;   } UniformBufferConstants_LandscapeMVF;            ; Offset:    0 Size:     8
;
; }
;
; cbuffer UniformBufferConstants_LandscapeContinuousLODParameters
; {
;
;   struct UniformBufferConstants_LandscapeContinuousLODParameters
;   {
;
;       int LandscapeContinuousLODParameters_LandscapeIndex;; Offset:    0
;       int PrePadding_LandscapeContinuousLODParameters_4;; Offset:    4
;       int2 LandscapeContinuousLODParameters_Min;    ; Offset:    8
;       int2 LandscapeContinuousLODParameters_Size;   ; Offset:   16
;       uint BindlessResource_LandscapeContinuousLODParameters_SectionLODBias;; Offset:   24
;   
;   } UniformBufferConstants_LandscapeContinuousLODParameters;; Offset:    0 Size:    28
;
; }
;
; cbuffer UniformBufferConstants_LandscapeParameters
; {
;
;   struct UniformBufferConstants_LandscapeParameters
;   {
;
;       int LandscapeParameters_ComponentBaseX;       ; Offset:    0
;       int LandscapeParameters_ComponentBaseY;       ; Offset:    4
;       int LandscapeParameters_SubsectionSizeVerts;  ; Offset:    8
;       int LandscapeParameters_NumSubsections;       ; Offset:   12
;       int LandscapeParameters_LastLOD;              ; Offset:   16
;       int PrePadding_LandscapeParameters_20;        ; Offset:   20
;       int PrePadding_LandscapeParameters_24;        ; Offset:   24
;       int PrePadding_LandscapeParameters_28;        ; Offset:   28
;       float4 LandscapeParameters_HeightmapUVScaleBias;; Offset:   32
;       float4 LandscapeParameters_WeightmapUVScaleBias;; Offset:   48
;       float4 LandscapeParameters_LandscapeLightmapScaleBias;; Offset:   64
;       float4 LandscapeParameters_SubsectionSizeVertsLayerUVPan;; Offset:   80
;       float4 LandscapeParameters_SubsectionOffsetParams;; Offset:   96
;       float4 LandscapeParameters_LightmapSubsectionOffsetParams;; Offset:  112
;       row_major float4x4 LandscapeParameters_LocalToWorldNoScaling;; Offset:  128
;       uint BindlessResource_LandscapeParameters_HeightmapTexture;; Offset:  192
;       uint PrePadding_LandscapeParameters_196;      ; Offset:  196
;       uint BindlessSampler_LandscapeParameters_HeightmapTextureSampler;; Offset:  200
;       uint PrePadding_LandscapeParameters_204;      ; Offset:  204
;       uint BindlessResource_LandscapeParameters_NormalmapTexture;; Offset:  208
;       uint PrePadding_LandscapeParameters_212;      ; Offset:  212
;       uint BindlessSampler_LandscapeParameters_NormalmapTextureSampler;; Offset:  216
;       uint PrePadding_LandscapeParameters_220;      ; Offset:  220
;       uint BindlessResource_LandscapeParameters_XYOffsetmapTexture;; Offset:  224
;       uint PrePadding_LandscapeParameters_228;      ; Offset:  228
;       uint BindlessSampler_LandscapeParameters_XYOffsetmapTextureSampler;; Offset:  232
;   
;   } UniformBufferConstants_LandscapeParameters;     ; Offset:    0 Size:   236
;
; }
;
; cbuffer UniformBufferConstants_Material
; {
;
;   struct UniformBufferConstants_Material
;   {
;
;       float4 Material_PreshaderBuffer[9];           ; Offset:    0
;       uint BindlessResource_Material_Texture2D_0;   ; Offset:  144
;       uint PrePadding_Material_148;                 ; Offset:  148
;       uint BindlessSampler_Material_Texture2D_0Sampler;; Offset:  152
;       uint PrePadding_Material_156;                 ; Offset:  156
;       uint BindlessResource_Material_Texture2D_1;   ; Offset:  160
;       uint PrePadding_Material_164;                 ; Offset:  164
;       uint BindlessSampler_Material_Texture2D_1Sampler;; Offset:  168
;       uint PrePadding_Material_172;                 ; Offset:  172
;       uint BindlessResource_Material_Texture2D_2;   ; Offset:  176
;       uint PrePadding_Material_180;                 ; Offset:  180
;       uint BindlessSampler_Material_Texture2D_2Sampler;; Offset:  184
;       uint PrePadding_Material_188;                 ; Offset:  188
;       uint BindlessResource_Material_Texture2D_3;   ; Offset:  192
;       uint PrePadding_Material_196;                 ; Offset:  196
;       uint BindlessSampler_Material_Texture2D_3Sampler;; Offset:  200
;       uint PrePadding_Material_204;                 ; Offset:  204
;       uint BindlessResource_Material_Texture2D_4;   ; Offset:  208
;       uint PrePadding_Material_212;                 ; Offset:  212
;       uint BindlessSampler_Material_Texture2D_4Sampler;; Offset:  216
;       uint PrePadding_Material_220;                 ; Offset:  220
;       uint BindlessResource_Material_Texture2D_5;   ; Offset:  224
;       uint PrePadding_Material_228;                 ; Offset:  228
;       uint BindlessSampler_Material_Texture2D_5Sampler;; Offset:  232
;       uint PrePadding_Material_236;                 ; Offset:  236
;       uint BindlessResource_Material_Texture2D_6;   ; Offset:  240
;       uint PrePadding_Material_244;                 ; Offset:  244
;       uint BindlessSampler_Material_Texture2D_6Sampler;; Offset:  248
;       uint PrePadding_Material_252;                 ; Offset:  252
;       uint BindlessResource_Material_Texture2D_7;   ; Offset:  256
;       uint PrePadding_Material_260;                 ; Offset:  260
;       uint BindlessSampler_Material_Texture2D_7Sampler;; Offset:  264
;       uint PrePadding_Material_268;                 ; Offset:  268
;       uint BindlessResource_Material_Texture2D_8;   ; Offset:  272
;       uint PrePadding_Material_276;                 ; Offset:  276
;       uint BindlessSampler_Material_Texture2D_8Sampler;; Offset:  280
;       uint PrePadding_Material_284;                 ; Offset:  284
;       uint BindlessResource_Material_Texture2D_9;   ; Offset:  288
;       uint PrePadding_Material_292;                 ; Offset:  292
;       uint BindlessSampler_Material_Texture2D_9Sampler;; Offset:  296
;       uint PrePadding_Material_300;                 ; Offset:  300
;       uint BindlessResource_Material_Texture2D_10;  ; Offset:  304
;       uint PrePadding_Material_308;                 ; Offset:  308
;       uint BindlessSampler_Material_Texture2D_10Sampler;; Offset:  312
;       uint PrePadding_Material_316;                 ; Offset:  316
;       uint BindlessResource_Material_Texture2D_11;  ; Offset:  320
;       uint PrePadding_Material_324;                 ; Offset:  324
;       uint BindlessSampler_Material_Texture2D_11Sampler;; Offset:  328
;       uint PrePadding_Material_332;                 ; Offset:  332
;       uint BindlessResource_Material_Texture2D_12;  ; Offset:  336
;       uint PrePadding_Material_340;                 ; Offset:  340
;       uint BindlessSampler_Material_Texture2D_12Sampler;; Offset:  344
;       uint PrePadding_Material_348;                 ; Offset:  348
;       uint BindlessResource_Material_Texture2D_13;  ; Offset:  352
;       uint PrePadding_Material_356;                 ; Offset:  356
;       uint BindlessSampler_Material_Texture2D_13Sampler;; Offset:  360
;       uint PrePadding_Material_364;                 ; Offset:  364
;       uint BindlessResource_Material_Texture2D_14;  ; Offset:  368
;       uint PrePadding_Material_372;                 ; Offset:  372
;       uint BindlessSampler_Material_Texture2D_14Sampler;; Offset:  376
;       uint PrePadding_Material_380;                 ; Offset:  380
;       uint BindlessResource_Material_Texture2D_15;  ; Offset:  384
;       uint PrePadding_Material_388;                 ; Offset:  388
;       uint BindlessSampler_Material_Texture2D_15Sampler;; Offset:  392
;       uint PrePadding_Material_396;                 ; Offset:  396
;       uint BindlessResource_Material_Texture2D_16;  ; Offset:  400
;       uint PrePadding_Material_404;                 ; Offset:  404
;       uint BindlessSampler_Material_Texture2D_16Sampler;; Offset:  408
;       uint PrePadding_Material_412;                 ; Offset:  412
;       uint BindlessSampler_Material_Wrap_WorldGroupSettings;; Offset:  416
;       uint PrePadding_Material_420;                 ; Offset:  420
;       uint BindlessSampler_Material_Clamp_WorldGroupSettings;; Offset:  424
;   
;   } UniformBufferConstants_Material;                ; Offset:    0 Size:   428
;
; }
;
; cbuffer HitGroupSystemRootConstants
; {
;
;   struct HitGroupSystemRootConstants
;   {
;
;       struct struct.FHitGroupSystemRootConstants
;       {
;
;           uint Config;                              ; Offset:    0
;           uint IndexBufferOffsetInBytes;            ; Offset:    4
;           uint FirstPrimitive;                      ; Offset:    8
;           uint UserData;                            ; Offset:   12
;           uint BaseInstanceIndex;                   ; Offset:   16
;           uint Pad0;                                ; Offset:   20
;       
;       } HitGroupSystemRootConstants;                ; Offset:    0
;
;   
;   } HitGroupSystemRootConstants;                    ; Offset:    0 Size:    24
;
; }
;
; Resource bind info for View_PrimitiveSceneData
; {
;
;   float4 $Element;                                  ; Offset:    0 Size:    16
;
; }
;
; Resource bind info for View_InstanceSceneData
; {
;
;   float4 $Element;                                  ; Offset:    0 Size:    16
;
; }
;
; Resource bind info for View_SkyIrradianceEnvironmentMap
; {
;
;   float4 $Element;                                  ; Offset:    0 Size:    16
;
; }
;
;
; Resource Bindings:
;
; Name                                 Type  Format         Dim      ID      HLSL Bind  Count
; ------------------------------ ---------- ------- ----------- ------- -------------- ------
; UniformBufferConstants_View       cbuffer      NA          NA     CB0            cb0     1
; UniformBufferConstants_LandscapeMVF   cbuffer      NA          NA     CB1            cb1     1
; UniformBufferConstants_LandscapeContinuousLODParameters   cbuffer      NA          NA     CB2            cb2     1
; UniformBufferConstants_LandscapeParameters   cbuffer      NA          NA     CB3            cb3     1
; UniformBufferConstants_Material   cbuffer      NA          NA     CB4            cb4     1
; HitGroupSystemRootConstants       cbuffer      NA          NA     CB5     cb0,space2     1
; View_SharedBilinearClampedSampler   sampler      NA          NA      S0             s0     1
; View_LandscapeWeightmapSampler    sampler      NA          NA      S1             s1     1
; LandscapeParameters_HeightmapTextureSampler   sampler      NA          NA      S2             s2     1
; LandscapeParameters_NormalmapTextureSampler   sampler      NA          NA      S3             s3     1
; Material_Texture2D_2Sampler       sampler      NA          NA      S4             s4     1
; Material_Texture2D_3Sampler       sampler      NA          NA      S5             s5     1
; Material_Texture2D_4Sampler       sampler      NA          NA      S6             s6     1
; Material_Texture2D_5Sampler       sampler      NA          NA      S7             s7     1
; Material_Texture2D_6Sampler       sampler      NA          NA      S8             s8     1
; Material_Texture2D_7Sampler       sampler      NA          NA      S9             s9     1
; Material_Texture2D_8Sampler       sampler      NA          NA     S10            s10     1
; Material_Texture2D_9Sampler       sampler      NA          NA     S11            s11     1
; Material_Texture2D_10Sampler      sampler      NA          NA     S12            s12     1
; Material_Texture2D_11Sampler      sampler      NA          NA     S13            s13     1
; Material_Texture2D_12Sampler      sampler      NA          NA     S14            s14     1
; Material_Texture2D_13Sampler      sampler      NA          NA     S15            s15     1
; Material_Texture2D_14Sampler      sampler      NA          NA     S16            s16     1
; Material_Texture2D_15Sampler      sampler      NA          NA     S17            s17     1
; Material_Texture2D_16Sampler      sampler      NA          NA     S18            s18     1
; View_VolumetricLightmapIndirectionTexture   texture     u32          3d      T0             t0     1
; View_VolumetricLightmapBrickAmbientVector   texture     f32          3d      T1             t1     1
; View_VolumetricLightmapBrickSHCoefficients0   texture     f32          3d      T2             t2     1
; View_VolumetricLightmapBrickSHCoefficients1   texture     f32          3d      T3             t3     1
; View_VolumetricLightmapBrickSHCoefficients2   texture     f32          3d      T4             t4     1
; View_VolumetricLightmapBrickSHCoefficients3   texture     f32          3d      T5             t5     1
; View_VolumetricLightmapBrickSHCoefficients4   texture     f32          3d      T6             t6     1
; View_VolumetricLightmapBrickSHCoefficients5   texture     f32          3d      T7             t7     1
; View_SkyBentNormalBrickTexture    texture     f32          3d      T8             t8     1
; View_PrimitiveSceneData           texture  struct         r/o      T9             t9     1
; View_InstanceSceneData            texture  struct         r/o     T10            t10     1
; View_SkyIrradianceEnvironmentMap   texture  struct         r/o     T11            t11     1
; View_LandscapeIndirection         texture     u32         buf     T12            t12     1
; View_LandscapePerComponentData    texture     f32         buf     T13            t13     1
; LandscapeContinuousLODParameters_SectionLODBias   texture     f32         buf     T14            t14     1
; LandscapeParameters_HeightmapTexture   texture     f32          2d     T15            t15     1
; LandscapeParameters_NormalmapTexture   texture     f32          2d     T16            t16     1
; Material_Texture2D_0              texture     f32          2d     T17            t17     1
; Material_Texture2D_1              texture     f32          2d     T18            t18     1
; Material_Texture2D_2              texture     f32          2d     T19            t19     1
; Material_Texture2D_3              texture     f32          2d     T20            t20     1
; Material_Texture2D_4              texture     f32          2d     T21            t21     1
; Material_Texture2D_5              texture     f32          2d     T22            t22     1
; Material_Texture2D_6              texture     f32          2d     T23            t23     1
; Material_Texture2D_7              texture     f32          2d     T24            t24     1
; Material_Texture2D_8              texture     f32          2d     T25            t25     1
; Material_Texture2D_9              texture     f32          2d     T26            t26     1
; Material_Texture2D_10             texture     f32          2d     T27            t27     1
; Material_Texture2D_11             texture     f32          2d     T28            t28     1
; Material_Texture2D_12             texture     f32          2d     T29            t29     1
; Material_Texture2D_13             texture     f32          2d     T30            t30     1
; Material_Texture2D_14             texture     f32          2d     T31            t31     1
; Material_Texture2D_15             texture     f32          2d     T32            t32     1
; Material_Texture2D_16             texture     f32          2d     T33            t33     1
; HitGroupSystemIndexBuffer         texture    byte         r/o     T34      t0,space2     1
;
target datalayout = "e-m:e-p:32:32-i1:32-i8:8-i16:16-i32:32-i64:64-f16:16-f32:32-f64:64-n8:16:32:64"
target triple = "dxil-ms-dx"

%dx.types.Handle = type { i8* }
%struct.FPackedMaterialClosestHitPayload = type { %struct.FMinimalPayload, i32, float, [3 x i32], [2 x i32], i32, i32, [2 x i32], i32, [2 x i32], i32 }
%struct.FMinimalPayload = type { float }
%struct.FRayTracingIntersectionAttributes = type { <2 x i32> }
%dx.types.ResourceProperties = type { i32, i32 }
%dx.types.CBufRet.i32 = type { i32, i32, i32, i32 }
%dx.types.ResRet.i32 = type { i32, i32, i32, i32, i32 }
%dx.types.CBufRet.f32 = type { float, float, float, float }
%dx.types.ResRet.f32 = type { float, float, float, float, i32 }
%"class.Texture3D<vector<unsigned int, 4> >" = type { <4 x i32>, %"class.Texture3D<vector<unsigned int, 4> >::mips_type" }
%"class.Texture3D<vector<unsigned int, 4> >::mips_type" = type { i32 }
%"class.Texture3D<vector<float, 4> >" = type { <4 x float>, %"class.Texture3D<vector<float, 4> >::mips_type" }
%"class.Texture3D<vector<float, 4> >::mips_type" = type { i32 }
%"class.StructuredBuffer<vector<float, 4> >" = type { <4 x float> }
%"class.Buffer<unsigned int>" = type { i32 }
%"class.Buffer<float>" = type { float }
%"class.Texture2D<vector<float, 4> >" = type { <4 x float>, %"class.Texture2D<vector<float, 4> >::mips_type" }
%"class.Texture2D<vector<float, 4> >::mips_type" = type { i32 }
%struct.ByteAddressBuffer = type { i32 }
%UniformBufferConstants_View = type { %class.matrix.float.4.4, %class.matrix.float.4.4, %class.matrix.float.4.4, %class.matrix.float.4.4, %class.matrix.float.4.4, %class.matrix.float.4.4, %class.matrix.float.4.4, %class.matrix.float.4.4, %class.matrix.float.4.4, %class.matrix.float.4.4, %class.matrix.float.4.4, %class.matrix.float.4.4, %class.matrix.float.4.4, %class.matrix.float.4.4, %class.matrix.float.4.4, %class.matrix.float.4.4, <3 x float>, float, <3 x float>, float, <3 x float>, float, <3 x float>, float, <3 x float>, float, <3 x float>, float, <3 x float>, float, <4 x float>, <4 x float>, <3 x float>, float, <3 x float>, float, <3 x float>, float, <3 x float>, float, %class.matrix.float.4.4, %class.matrix.float.4.4, %class.matrix.float.4.4, %class.matrix.float.4.4, %class.matrix.float.4.4, %class.matrix.float.4.4, %class.matrix.float.4.4, <3 x float>, float, <3 x float>, float, <3 x float>, float, <3 x float>, float, %class.matrix.float.4.4, %class.matrix.float.4.4, %class.matrix.float.4.4, %class.matrix.float.4.4, <4 x float>, <4 x float>, <2 x float>, <2 x float>, <4 x float>, <4 x float>, <4 x i32>, <4 x float>, <4 x float>, <4 x float>, <4 x float>, <2 x float>, <2 x float>, i32, float, float, float, <4 x float>, <4 x float>, <4 x float>, <2 x float>, float, float, float, float, float, float, <3 x float>, float, float, float, float, float, float, float, i32, i32, i32, i32, i32, float, float, float, float, float, <4 x float>, <3 x float>, float, [2 x <4 x float>], [2 x <4 x float>], <4 x float>, <4 x float>, float, float, float, float, float, float, float, float, float, float, float, float, <3 x float>, float, <3 x float>, float, <3 x float>, float, [2 x <4 x float>], [2 x <4 x float>], [2 x <4 x float>], [2 x <4 x float>], [2 x <4 x float>], <4 x float>, <3 x float>, float, <4 x float>, %class.matrix.float.4.4, <4 x float>, float, float, float, float, <4 x float>, float, float, float, float, float, float, float, float, <3 x float>, float, float, float, float, float, <4 x float>, float, float, float, float, <4 x float>, [8 x <4 x float>], float, float, float, float, i32, float, float, float, <3 x float>, i32, [6 x <4 x float>], [6 x <4 x float>], [6 x <4 x float>], [6 x <4 x float>], float, float, i32, i32, <3 x float>, float, <3 x float>, float, float, float, i32, float, float, float, float, float, <2 x i32>, float, float, <3 x float>, float, <3 x float>, float, <2 x float>, float, float, <3 x float>, float, <3 x float>, float, <3 x float>, float, <3 x float>, float, float, float, float, float, [2 x <4 x float>], float, i32, i32, i32, i32, i32, i32, i32, <4 x float>, <2 x float>, float, float, <4 x float>, float, i32, float, float, <4 x float>, i32, i32, i32, float, <4 x float>, <4 x float>, <3 x float>, float, i32, i32, i32, i32, [32 x <4 x i32>], i32, i32, float, float, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, <4 x float>, float, float, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, <3 x float>, float, <3 x float> }
%class.matrix.float.4.4 = type { [4 x <4 x float>] }
%UniformBufferConstants_LandscapeMVF = type { <2 x i32> }
%UniformBufferConstants_LandscapeContinuousLODParameters = type { i32, i32, <2 x i32>, <2 x i32>, i32 }
%UniformBufferConstants_LandscapeParameters = type { i32, i32, i32, i32, i32, i32, i32, i32, <4 x float>, <4 x float>, <4 x float>, <4 x float>, <4 x float>, <4 x float>, %class.matrix.float.4.4, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%UniformBufferConstants_Material = type { [9 x <4 x float>], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%HitGroupSystemRootConstants = type { %struct.FHitGroupSystemRootConstants }
%struct.FHitGroupSystemRootConstants = type { i32, i32, i32, i32, i32, i32 }
%struct.SamplerState = type { i32 }

@"\01?View_VolumetricLightmapIndirectionTexture@@3V?$Texture3D@V?$vector@I$03@@@@A" = external constant %dx.types.Handle, align 4
@"\01?View_VolumetricLightmapBrickAmbientVector@@3V?$Texture3D@V?$vector@M$03@@@@A" = external constant %dx.types.Handle, align 4
@"\01?View_VolumetricLightmapBrickSHCoefficients0@@3V?$Texture3D@V?$vector@M$03@@@@A" = external constant %dx.types.Handle, align 4
@"\01?View_VolumetricLightmapBrickSHCoefficients1@@3V?$Texture3D@V?$vector@M$03@@@@A" = external constant %dx.types.Handle, align 4
@"\01?View_VolumetricLightmapBrickSHCoefficients2@@3V?$Texture3D@V?$vector@M$03@@@@A" = external constant %dx.types.Handle, align 4
@"\01?View_VolumetricLightmapBrickSHCoefficients3@@3V?$Texture3D@V?$vector@M$03@@@@A" = external constant %dx.types.Handle, align 4
@"\01?View_VolumetricLightmapBrickSHCoefficients4@@3V?$Texture3D@V?$vector@M$03@@@@A" = external constant %dx.types.Handle, align 4
@"\01?View_VolumetricLightmapBrickSHCoefficients5@@3V?$Texture3D@V?$vector@M$03@@@@A" = external constant %dx.types.Handle, align 4
@"\01?View_SkyBentNormalBrickTexture@@3V?$Texture3D@V?$vector@M$03@@@@A" = external constant %dx.types.Handle, align 4
@"\01?View_SharedBilinearClampedSampler@@3USamplerState@@A" = external constant %dx.types.Handle, align 4
@"\01?View_PrimitiveSceneData@@3V?$StructuredBuffer@V?$vector@M$03@@@@A" = external constant %dx.types.Handle, align 4
@"\01?View_InstanceSceneData@@3V?$StructuredBuffer@V?$vector@M$03@@@@A" = external constant %dx.types.Handle, align 4
@"\01?View_SkyIrradianceEnvironmentMap@@3V?$StructuredBuffer@V?$vector@M$03@@@@A" = external constant %dx.types.Handle, align 4
@"\01?View_LandscapeWeightmapSampler@@3USamplerState@@A" = external constant %dx.types.Handle, align 4
@"\01?View_LandscapeIndirection@@3V?$Buffer@I@@A" = external constant %dx.types.Handle, align 4
@"\01?View_LandscapePerComponentData@@3V?$Buffer@M@@A" = external constant %dx.types.Handle, align 4
@"\01?LandscapeContinuousLODParameters_SectionLODBias@@3V?$Buffer@M@@A" = external constant %dx.types.Handle, align 4
@"\01?LandscapeParameters_HeightmapTexture@@3V?$Texture2D@V?$vector@M$03@@@@A" = external constant %dx.types.Handle, align 4
@"\01?LandscapeParameters_HeightmapTextureSampler@@3USamplerState@@A" = external constant %dx.types.Handle, align 4
@"\01?LandscapeParameters_NormalmapTexture@@3V?$Texture2D@V?$vector@M$03@@@@A" = external constant %dx.types.Handle, align 4
@"\01?LandscapeParameters_NormalmapTextureSampler@@3USamplerState@@A" = external constant %dx.types.Handle, align 4
@"\01?Material_Texture2D_0@@3V?$Texture2D@V?$vector@M$03@@@@A" = external constant %dx.types.Handle, align 4
@"\01?Material_Texture2D_1@@3V?$Texture2D@V?$vector@M$03@@@@A" = external constant %dx.types.Handle, align 4
@"\01?Material_Texture2D_2@@3V?$Texture2D@V?$vector@M$03@@@@A" = external constant %dx.types.Handle, align 4
@"\01?Material_Texture2D_2Sampler@@3USamplerState@@A" = external constant %dx.types.Handle, align 4
@"\01?Material_Texture2D_3@@3V?$Texture2D@V?$vector@M$03@@@@A" = external constant %dx.types.Handle, align 4
@"\01?Material_Texture2D_3Sampler@@3USamplerState@@A" = external constant %dx.types.Handle, align 4
@"\01?Material_Texture2D_4@@3V?$Texture2D@V?$vector@M$03@@@@A" = external constant %dx.types.Handle, align 4
@"\01?Material_Texture2D_4Sampler@@3USamplerState@@A" = external constant %dx.types.Handle, align 4
@"\01?Material_Texture2D_5@@3V?$Texture2D@V?$vector@M$03@@@@A" = external constant %dx.types.Handle, align 4
@"\01?Material_Texture2D_5Sampler@@3USamplerState@@A" = external constant %dx.types.Handle, align 4
@"\01?Material_Texture2D_6@@3V?$Texture2D@V?$vector@M$03@@@@A" = external constant %dx.types.Handle, align 4
@"\01?Material_Texture2D_6Sampler@@3USamplerState@@A" = external constant %dx.types.Handle, align 4
@"\01?Material_Texture2D_7@@3V?$Texture2D@V?$vector@M$03@@@@A" = external constant %dx.types.Handle, align 4
@"\01?Material_Texture2D_7Sampler@@3USamplerState@@A" = external constant %dx.types.Handle, align 4
@"\01?Material_Texture2D_8@@3V?$Texture2D@V?$vector@M$03@@@@A" = external constant %dx.types.Handle, align 4
@"\01?Material_Texture2D_8Sampler@@3USamplerState@@A" = external constant %dx.types.Handle, align 4
@"\01?Material_Texture2D_9@@3V?$Texture2D@V?$vector@M$03@@@@A" = external constant %dx.types.Handle, align 4
@"\01?Material_Texture2D_9Sampler@@3USamplerState@@A" = external constant %dx.types.Handle, align 4
@"\01?Material_Texture2D_10@@3V?$Texture2D@V?$vector@M$03@@@@A" = external constant %dx.types.Handle, align 4
@"\01?Material_Texture2D_10Sampler@@3USamplerState@@A" = external constant %dx.types.Handle, align 4
@"\01?Material_Texture2D_11@@3V?$Texture2D@V?$vector@M$03@@@@A" = external constant %dx.types.Handle, align 4
@"\01?Material_Texture2D_11Sampler@@3USamplerState@@A" = external constant %dx.types.Handle, align 4
@"\01?Material_Texture2D_12@@3V?$Texture2D@V?$vector@M$03@@@@A" = external constant %dx.types.Handle, align 4
@"\01?Material_Texture2D_12Sampler@@3USamplerState@@A" = external constant %dx.types.Handle, align 4
@"\01?Material_Texture2D_13@@3V?$Texture2D@V?$vector@M$03@@@@A" = external constant %dx.types.Handle, align 4
@"\01?Material_Texture2D_13Sampler@@3USamplerState@@A" = external constant %dx.types.Handle, align 4
@"\01?Material_Texture2D_14@@3V?$Texture2D@V?$vector@M$03@@@@A" = external constant %dx.types.Handle, align 4
@"\01?Material_Texture2D_14Sampler@@3USamplerState@@A" = external constant %dx.types.Handle, align 4
@"\01?Material_Texture2D_15@@3V?$Texture2D@V?$vector@M$03@@@@A" = external constant %dx.types.Handle, align 4
@"\01?Material_Texture2D_15Sampler@@3USamplerState@@A" = external constant %dx.types.Handle, align 4
@"\01?Material_Texture2D_16@@3V?$Texture2D@V?$vector@M$03@@@@A" = external constant %dx.types.Handle, align 4
@"\01?Material_Texture2D_16Sampler@@3USamplerState@@A" = external constant %dx.types.Handle, align 4
@"\01?HitGroupSystemIndexBuffer@@3UByteAddressBuffer@@A" = external constant %dx.types.Handle, align 4
@llvm.global_ctors = appending global [0 x { i32, void ()*, i8* }] zeroinitializer
@UniformBufferConstants_View = external constant %dx.types.Handle
@UniformBufferConstants_LandscapeMVF = external constant %dx.types.Handle
@UniformBufferConstants_LandscapeContinuousLODParameters = external constant %dx.types.Handle
@UniformBufferConstants_LandscapeParameters = external constant %dx.types.Handle
@UniformBufferConstants_Material = external constant %dx.types.Handle
@HitGroupSystemRootConstants = external constant %dx.types.Handle
@NeighborOffset.i.i.i.i.0.hca = internal unnamed_addr constant [4 x i32] [i32 0, i32 -1, i32 1, i32 0]
@NeighborOffset.i.i.i.i.1.hca = internal unnamed_addr constant [4 x i32] [i32 -1, i32 0, i32 0, i32 1]

; Function Attrs: nounwind
declare void @llvm.lifetime.start(i64, i8* nocapture) #0

; Function Attrs: nounwind
declare void @llvm.lifetime.end(i64, i8* nocapture) #0

; Function Attrs: nounwind
define void @"\01?MaterialCHS@@YAXUFPackedMaterialClosestHitPayload@@UFRayTracingIntersectionAttributes@@@Z"(%struct.FPackedMaterialClosestHitPayload* noalias %PackedPayload, %struct.FRayTracingIntersectionAttributes* nocapture readonly %Attributes) #0 {
  %1 = load %dx.types.Handle, %dx.types.Handle* @"\01?Material_Texture2D_16Sampler@@3USamplerState@@A", align 4, !noalias !75
  %2 = load %dx.types.Handle, %dx.types.Handle* @"\01?Material_Texture2D_15Sampler@@3USamplerState@@A", align 4, !noalias !75
  %3 = load %dx.types.Handle, %dx.types.Handle* @"\01?Material_Texture2D_14Sampler@@3USamplerState@@A", align 4, !noalias !75
  %4 = load %dx.types.Handle, %dx.types.Handle* @"\01?Material_Texture2D_13Sampler@@3USamplerState@@A", align 4, !noalias !75
  %5 = load %dx.types.Handle, %dx.types.Handle* @"\01?Material_Texture2D_12Sampler@@3USamplerState@@A", align 4, !noalias !75
  %6 = load %dx.types.Handle, %dx.types.Handle* @"\01?Material_Texture2D_11Sampler@@3USamplerState@@A", align 4, !noalias !75
  %7 = load %dx.types.Handle, %dx.types.Handle* @"\01?Material_Texture2D_10Sampler@@3USamplerState@@A", align 4, !noalias !75
  %8 = load %dx.types.Handle, %dx.types.Handle* @"\01?Material_Texture2D_9Sampler@@3USamplerState@@A", align 4, !noalias !75
  %9 = load %dx.types.Handle, %dx.types.Handle* @"\01?Material_Texture2D_8Sampler@@3USamplerState@@A", align 4, !noalias !75
  %10 = load %dx.types.Handle, %dx.types.Handle* @"\01?Material_Texture2D_7Sampler@@3USamplerState@@A", align 4, !noalias !75
  %11 = load %dx.types.Handle, %dx.types.Handle* @"\01?Material_Texture2D_6Sampler@@3USamplerState@@A", align 4, !noalias !80
  %12 = load %dx.types.Handle, %dx.types.Handle* @"\01?Material_Texture2D_5Sampler@@3USamplerState@@A", align 4, !noalias !80
  %13 = load %dx.types.Handle, %dx.types.Handle* @"\01?Material_Texture2D_4Sampler@@3USamplerState@@A", align 4, !noalias !80
  %14 = load %dx.types.Handle, %dx.types.Handle* @"\01?Material_Texture2D_3Sampler@@3USamplerState@@A", align 4, !noalias !80
  %15 = load %dx.types.Handle, %dx.types.Handle* @"\01?Material_Texture2D_2Sampler@@3USamplerState@@A", align 4, !noalias !80
  %16 = load %dx.types.Handle, %dx.types.Handle* @"\01?LandscapeParameters_NormalmapTextureSampler@@3USamplerState@@A", align 4
  %17 = load %dx.types.Handle, %dx.types.Handle* @"\01?LandscapeParameters_HeightmapTextureSampler@@3USamplerState@@A", align 4, !noalias !82
  %18 = load %dx.types.Handle, %dx.types.Handle* @"\01?View_LandscapeWeightmapSampler@@3USamplerState@@A", align 4, !noalias !90
  %19 = load %dx.types.Handle, %dx.types.Handle* @"\01?View_SharedBilinearClampedSampler@@3USamplerState@@A", align 4, !noalias !93
  %20 = load %dx.types.Handle, %dx.types.Handle* @"\01?HitGroupSystemIndexBuffer@@3UByteAddressBuffer@@A", align 4, !noalias !103
  %21 = load %dx.types.Handle, %dx.types.Handle* @"\01?Material_Texture2D_16@@3V?$Texture2D@V?$vector@M$03@@@@A", align 4, !noalias !75
  %22 = load %dx.types.Handle, %dx.types.Handle* @"\01?Material_Texture2D_15@@3V?$Texture2D@V?$vector@M$03@@@@A", align 4, !noalias !75
  %23 = load %dx.types.Handle, %dx.types.Handle* @"\01?Material_Texture2D_14@@3V?$Texture2D@V?$vector@M$03@@@@A", align 4, !noalias !75
  %24 = load %dx.types.Handle, %dx.types.Handle* @"\01?Material_Texture2D_13@@3V?$Texture2D@V?$vector@M$03@@@@A", align 4, !noalias !75
  %25 = load %dx.types.Handle, %dx.types.Handle* @"\01?Material_Texture2D_12@@3V?$Texture2D@V?$vector@M$03@@@@A", align 4, !noalias !75
  %26 = load %dx.types.Handle, %dx.types.Handle* @"\01?Material_Texture2D_11@@3V?$Texture2D@V?$vector@M$03@@@@A", align 4, !noalias !75
  %27 = load %dx.types.Handle, %dx.types.Handle* @"\01?Material_Texture2D_10@@3V?$Texture2D@V?$vector@M$03@@@@A", align 4, !noalias !75
  %28 = load %dx.types.Handle, %dx.types.Handle* @"\01?Material_Texture2D_9@@3V?$Texture2D@V?$vector@M$03@@@@A", align 4, !noalias !75
  %29 = load %dx.types.Handle, %dx.types.Handle* @"\01?Material_Texture2D_8@@3V?$Texture2D@V?$vector@M$03@@@@A", align 4, !noalias !75
  %30 = load %dx.types.Handle, %dx.types.Handle* @"\01?Material_Texture2D_7@@3V?$Texture2D@V?$vector@M$03@@@@A", align 4, !noalias !75
  %31 = load %dx.types.Handle, %dx.types.Handle* @"\01?Material_Texture2D_6@@3V?$Texture2D@V?$vector@M$03@@@@A", align 4, !noalias !80
  %32 = load %dx.types.Handle, %dx.types.Handle* @"\01?Material_Texture2D_5@@3V?$Texture2D@V?$vector@M$03@@@@A", align 4, !noalias !80
  %33 = load %dx.types.Handle, %dx.types.Handle* @"\01?Material_Texture2D_4@@3V?$Texture2D@V?$vector@M$03@@@@A", align 4, !noalias !80
  %34 = load %dx.types.Handle, %dx.types.Handle* @"\01?Material_Texture2D_3@@3V?$Texture2D@V?$vector@M$03@@@@A", align 4, !noalias !80
  %35 = load %dx.types.Handle, %dx.types.Handle* @"\01?Material_Texture2D_2@@3V?$Texture2D@V?$vector@M$03@@@@A", align 4, !noalias !80
  %36 = load %dx.types.Handle, %dx.types.Handle* @"\01?Material_Texture2D_1@@3V?$Texture2D@V?$vector@M$03@@@@A", align 4, !noalias !80
  %37 = load %dx.types.Handle, %dx.types.Handle* @"\01?Material_Texture2D_0@@3V?$Texture2D@V?$vector@M$03@@@@A", align 4, !noalias !80
  %38 = load %dx.types.Handle, %dx.types.Handle* @"\01?LandscapeParameters_NormalmapTexture@@3V?$Texture2D@V?$vector@M$03@@@@A", align 4
  %39 = load %dx.types.Handle, %dx.types.Handle* @"\01?LandscapeParameters_HeightmapTexture@@3V?$Texture2D@V?$vector@M$03@@@@A", align 4, !noalias !82
  %40 = load %dx.types.Handle, %dx.types.Handle* @"\01?LandscapeContinuousLODParameters_SectionLODBias@@3V?$Buffer@M@@A", align 4, !noalias !82
  %41 = load %dx.types.Handle, %dx.types.Handle* @"\01?View_LandscapePerComponentData@@3V?$Buffer@M@@A", align 4, !noalias !82
  %42 = load %dx.types.Handle, %dx.types.Handle* @"\01?View_LandscapeIndirection@@3V?$Buffer@I@@A", align 4, !noalias !82
  %43 = load %dx.types.Handle, %dx.types.Handle* @"\01?View_SkyIrradianceEnvironmentMap@@3V?$StructuredBuffer@V?$vector@M$03@@@@A", align 4, !noalias !93
  %44 = load %dx.types.Handle, %dx.types.Handle* @"\01?View_InstanceSceneData@@3V?$StructuredBuffer@V?$vector@M$03@@@@A", align 4, !noalias !110
  %45 = load %dx.types.Handle, %dx.types.Handle* @"\01?View_PrimitiveSceneData@@3V?$StructuredBuffer@V?$vector@M$03@@@@A", align 4
  %46 = load %dx.types.Handle, %dx.types.Handle* @"\01?View_SkyBentNormalBrickTexture@@3V?$Texture3D@V?$vector@M$03@@@@A", align 4, !noalias !93
  %47 = load %dx.types.Handle, %dx.types.Handle* @"\01?View_VolumetricLightmapBrickSHCoefficients5@@3V?$Texture3D@V?$vector@M$03@@@@A", align 4, !noalias !115
  %48 = load %dx.types.Handle, %dx.types.Handle* @"\01?View_VolumetricLightmapBrickSHCoefficients4@@3V?$Texture3D@V?$vector@M$03@@@@A", align 4, !noalias !118
  %49 = load %dx.types.Handle, %dx.types.Handle* @"\01?View_VolumetricLightmapBrickSHCoefficients3@@3V?$Texture3D@V?$vector@M$03@@@@A", align 4, !noalias !115
  %50 = load %dx.types.Handle, %dx.types.Handle* @"\01?View_VolumetricLightmapBrickSHCoefficients2@@3V?$Texture3D@V?$vector@M$03@@@@A", align 4, !noalias !118
  %51 = load %dx.types.Handle, %dx.types.Handle* @"\01?View_VolumetricLightmapBrickSHCoefficients1@@3V?$Texture3D@V?$vector@M$03@@@@A", align 4, !noalias !115
  %52 = load %dx.types.Handle, %dx.types.Handle* @"\01?View_VolumetricLightmapBrickSHCoefficients0@@3V?$Texture3D@V?$vector@M$03@@@@A", align 4, !noalias !118
  %53 = load %dx.types.Handle, %dx.types.Handle* @"\01?View_VolumetricLightmapBrickAmbientVector@@3V?$Texture3D@V?$vector@M$03@@@@A", align 4, !noalias !118
  %54 = load %dx.types.Handle, %dx.types.Handle* @"\01?View_VolumetricLightmapIndirectionTexture@@3V?$Texture3D@V?$vector@I$03@@@@A", align 4, !noalias !124
  %55 = load %dx.types.Handle, %dx.types.Handle* @HitGroupSystemRootConstants, align 4
  %56 = load %dx.types.Handle, %dx.types.Handle* @UniformBufferConstants_Material, align 4
  %57 = load %dx.types.Handle, %dx.types.Handle* @UniformBufferConstants_LandscapeParameters, align 4
  %58 = load %dx.types.Handle, %dx.types.Handle* @UniformBufferConstants_LandscapeContinuousLODParameters, align 4
  %59 = load %dx.types.Handle, %dx.types.Handle* @UniformBufferConstants_LandscapeMVF, align 4
  %60 = load %dx.types.Handle, %dx.types.Handle* @UniformBufferConstants_View, align 4
  %61 = alloca [3 x float], align 4
  %62 = alloca [3 x float], align 4
  %63 = alloca [3 x float], align 4
  %64 = alloca [3 x i32], align 4
  %65 = alloca [3 x i32], align 4
  %66 = alloca [4 x float], align 4
  %67 = alloca [3 x float], align 4
  %68 = alloca [4 x float], align 4
  %69 = call %dx.types.Handle @dx.op.createHandleForLib.dx.types.Handle(i32 160, %dx.types.Handle %55)  ; CreateHandleForLib(Resource)
  %70 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %69, %dx.types.ResourceProperties { i32 13, i32 24 })  ; AnnotateHandle(res,props)  resource: CBuffer
  %71 = call %dx.types.Handle @dx.op.createHandleForLib.dx.types.Handle(i32 160, %dx.types.Handle %56)  ; CreateHandleForLib(Resource)
  %72 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %71, %dx.types.ResourceProperties { i32 13, i32 428 })  ; AnnotateHandle(res,props)  resource: CBuffer
  %73 = call %dx.types.Handle @dx.op.createHandleForLib.dx.types.Handle(i32 160, %dx.types.Handle %57)  ; CreateHandleForLib(Resource)
  %74 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %73, %dx.types.ResourceProperties { i32 13, i32 236 })  ; AnnotateHandle(res,props)  resource: CBuffer
  %75 = call %dx.types.Handle @dx.op.createHandleForLib.dx.types.Handle(i32 160, %dx.types.Handle %58)  ; CreateHandleForLib(Resource)
  %76 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %75, %dx.types.ResourceProperties { i32 13, i32 28 })  ; AnnotateHandle(res,props)  resource: CBuffer
  %77 = call %dx.types.Handle @dx.op.createHandleForLib.dx.types.Handle(i32 160, %dx.types.Handle %59)  ; CreateHandleForLib(Resource)
  %78 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %77, %dx.types.ResourceProperties { i32 13, i32 8 })  ; AnnotateHandle(res,props)  resource: CBuffer
  %79 = call %dx.types.Handle @dx.op.createHandleForLib.dx.types.Handle(i32 160, %dx.types.Handle %60)  ; CreateHandleForLib(Resource)
  %80 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %79, %dx.types.ResourceProperties { i32 13, i32 5292 })  ; AnnotateHandle(res,props)  resource: CBuffer
  %81 = call float @dx.op.rayTCurrent.f32(i32 154)  ; RayTCurrent()
  %82 = getelementptr inbounds %struct.FPackedMaterialClosestHitPayload, %struct.FPackedMaterialClosestHitPayload* %PackedPayload, i32 0, i32 0, i32 0
  store float %81, float* %82, align 4, !tbaa !125
  %83 = getelementptr inbounds %struct.FPackedMaterialClosestHitPayload, %struct.FPackedMaterialClosestHitPayload* %PackedPayload, i32 0, i32 6
  %84 = load i32, i32* %83, align 4, !tbaa !129
  %85 = and i32 %84, 33554432
  %86 = icmp ne i32 %85, 0
  br i1 %86, label %87, label %668

; <label>:87                                      ; preds = %0
  %88 = bitcast [3 x float]* %61 to i8*
  call void @llvm.lifetime.start(i64 12, i8* %88) #0
  %89 = bitcast [3 x float]* %62 to i8*
  call void @llvm.lifetime.start(i64 12, i8* %89) #0
  %90 = bitcast [3 x float]* %63 to i8*
  call void @llvm.lifetime.start(i64 12, i8* %90) #0
  %91 = getelementptr inbounds [4 x float], [4 x float]* %68, i32 0, i32 0
  br label %92

; <label>:92                                      ; preds = %431, %87
  %93 = phi i32 [ 0, %87 ], [ %584, %431 ]
  %94 = call i32 @dx.op.primitiveIndex.i32(i32 161)  ; PrimitiveIndex()
  %95 = call %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32 59, %dx.types.Handle %74, i32 0)  ; CBufferLoadLegacy(handle,regIndex)
  %96 = extractvalue %dx.types.CBufRet.i32 %95, 1
  %97 = call %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32 59, %dx.types.Handle %76, i32 0)  ; CBufferLoadLegacy(handle,regIndex)
  %98 = extractvalue %dx.types.CBufRet.i32 %97, 3
  %99 = sub nsw i32 %96, %98
  %100 = call %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32 59, %dx.types.Handle %76, i32 1)  ; CBufferLoadLegacy(handle,regIndex)
  %101 = extractvalue %dx.types.CBufRet.i32 %100, 0
  %102 = mul nsw i32 %99, %101
  %103 = extractvalue %dx.types.CBufRet.i32 %95, 0
  %104 = extractvalue %dx.types.CBufRet.i32 %97, 2
  %105 = call %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32 59, %dx.types.Handle %74, i32 1)  ; CBufferLoadLegacy(handle,regIndex)
  %106 = extractvalue %dx.types.CBufRet.i32 %105, 0
  %107 = sitofp i32 %106 to float
  %108 = extractvalue %dx.types.CBufRet.i32 %97, 0
  %109 = call %dx.types.Handle @dx.op.createHandleForLib.dx.types.Handle(i32 160, %dx.types.Handle %42)  ; CreateHandleForLib(Resource)
  %110 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %109, %dx.types.ResourceProperties { i32 10, i32 261 })  ; AnnotateHandle(res,props)  resource: TypedBuffer<U32>
  %111 = call %dx.types.ResRet.i32 @dx.op.bufferLoad.i32(i32 68, %dx.types.Handle %110, i32 %108, i32 undef)  ; BufferLoad(srv,index,wot)
  %112 = extractvalue %dx.types.ResRet.i32 %111, 0
  %113 = add i32 %102, %103
  %114 = sub i32 %113, %104
  %115 = add i32 %114, %112
  %116 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %80, i32 244)  ; CBufferLoadLegacy(handle,regIndex)
  %117 = extractvalue %dx.types.CBufRet.f32 %116, 0
  %118 = fcmp fast oge float %117, 0.000000e+00
  %119 = call %dx.types.Handle @dx.op.createHandleForLib.dx.types.Handle(i32 160, %dx.types.Handle %41)  ; CreateHandleForLib(Resource)
  %120 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %119, %dx.types.ResourceProperties { i32 10, i32 265 })  ; AnnotateHandle(res,props)  resource: TypedBuffer<F32>
  %121 = call %dx.types.ResRet.f32 @dx.op.bufferLoad.f32(i32 68, %dx.types.Handle %120, i32 %115, i32 undef)  ; BufferLoad(srv,index,wot)
  %122 = extractvalue %dx.types.ResRet.f32 %121, 0
  %123 = select i1 %118, float %117, float %122
  %124 = call %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32 59, %dx.types.Handle %80, i32 244)  ; CBufferLoadLegacy(handle,regIndex)
  %125 = extractvalue %dx.types.CBufRet.i32 %124, 1
  %126 = sitofp i32 %125 to float
  %127 = fadd fast float %126, %123
  %128 = call float @dx.op.binary.f32(i32 36, float %127, float %107)  ; FMin(a,b)
  %129 = call float @dx.op.unary.f32(i32 27, float %128)  ; Round_ni(value)
  %130 = fptoui float %129 to i32
  %131 = extractvalue %dx.types.CBufRet.i32 %95, 2
  %132 = and i32 %130, 31
  %133 = ashr i32 %131, %132
  %134 = add nsw i32 %133, -1
  %135 = sitofp i32 %134 to float
  %136 = fadd fast float %135, 1.000000e+00
  %137 = fptoui float %136 to i32
  %138 = bitcast [3 x i32]* %64 to i8*
  call void @llvm.lifetime.start(i64 12, i8* %138) #0
  %139 = call %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32 59, %dx.types.Handle %70, i32 0)  ; CBufferLoadLegacy(handle,regIndex)
  %140 = extractvalue %dx.types.CBufRet.i32 %139, 1
  %141 = extractvalue %dx.types.CBufRet.i32 %139, 0
  %142 = and i32 %141, 255
  %143 = mul i32 %94, 3
  %144 = icmp eq i32 %142, 0
  br i1 %144, label %145, label %148

; <label>:145                                     ; preds = %92
  %146 = add i32 %143, 1
  %147 = add i32 %143, 2
  br label %173

; <label>:148                                     ; preds = %92
  %149 = icmp eq i32 %142, 2
  %150 = call %dx.types.Handle @dx.op.createHandleForLib.dx.types.Handle(i32 160, %dx.types.Handle %20)  ; CreateHandleForLib(Resource)
  %151 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %150, %dx.types.ResourceProperties { i32 11, i32 0 })  ; AnnotateHandle(res,props)  resource: ByteAddressBuffer
  br i1 %149, label %152, label %166

; <label>:152                                     ; preds = %148
  %153 = mul i32 %94, 6
  %154 = add i32 %153, %140
  %155 = and i32 %154, -4
  %156 = call %dx.types.ResRet.i32 @dx.op.rawBufferLoad.i32(i32 139, %dx.types.Handle %151, i32 %155, i32 undef, i8 3, i32 4)  ; RawBufferLoad(srv,index,elementOffset,mask,alignment)
  %157 = extractvalue %dx.types.ResRet.i32 %156, 0
  %158 = extractvalue %dx.types.ResRet.i32 %156, 1
  %159 = icmp eq i32 %155, %154
  %160 = lshr i32 %157, 16
  %161 = and i32 %158, 65535
  br i1 %159, label %162, label %164

; <label>:162                                     ; preds = %152
  %163 = and i32 %157, 65535
  br label %173

; <label>:164                                     ; preds = %152
  %165 = lshr i32 %158, 16
  br label %173

; <label>:166                                     ; preds = %148
  %167 = mul i32 %142, %143
  %168 = add i32 %167, %140
  %169 = call %dx.types.ResRet.i32 @dx.op.rawBufferLoad.i32(i32 139, %dx.types.Handle %151, i32 %168, i32 undef, i8 7, i32 4)  ; RawBufferLoad(srv,index,elementOffset,mask,alignment)
  %170 = extractvalue %dx.types.ResRet.i32 %169, 0
  %171 = extractvalue %dx.types.ResRet.i32 %169, 1
  %172 = extractvalue %dx.types.ResRet.i32 %169, 2
  br label %173

; <label>:173                                     ; preds = %166, %164, %162, %145
  %174 = phi i32 [ %143, %145 ], [ %170, %166 ], [ %163, %162 ], [ %160, %164 ]
  %175 = phi i32 [ %146, %145 ], [ %171, %166 ], [ %160, %162 ], [ %161, %164 ]
  %176 = phi i32 [ %147, %145 ], [ %172, %166 ], [ %161, %162 ], [ %165, %164 ]
  %177 = getelementptr inbounds [3 x i32], [3 x i32]* %64, i32 0, i32 0
  store i32 %174, i32* %177, align 4
  %178 = getelementptr inbounds [3 x i32], [3 x i32]* %64, i32 0, i32 1
  store i32 %175, i32* %178, align 4
  %179 = getelementptr inbounds [3 x i32], [3 x i32]* %64, i32 0, i32 2
  store i32 %176, i32* %179, align 4
  %180 = getelementptr [3 x i32], [3 x i32]* %64, i32 0, i32 %93
  %181 = load i32, i32* %180, align 4, !tbaa !129, !noalias !131
  %182 = call i32 @dx.op.instanceID.i32(i32 141)  ; InstanceID()
  %183 = urem i32 %181, %137
  %184 = uitofp i32 %183 to float
  %185 = udiv i32 %181, %137
  %186 = uitofp i32 %185 to float
  %187 = call %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32 59, %dx.types.Handle %78, i32 0)  ; CBufferLoadLegacy(handle,regIndex)
  %188 = extractvalue %dx.types.CBufRet.i32 %187, 0
  %189 = sitofp i32 %188 to float
  %190 = extractvalue %dx.types.CBufRet.i32 %187, 1
  %191 = sitofp i32 %190 to float
  call void @llvm.lifetime.end(i64 12, i8* %138) #0
  %192 = and i32 %182, 2147483647
  %193 = mul i32 %192, 42
  %194 = call %dx.types.Handle @dx.op.createHandleForLib.dx.types.Handle(i32 160, %dx.types.Handle %45)  ; CreateHandleForLib(Resource)
  %195 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %194, %dx.types.ResourceProperties { i32 12, i32 16 })  ; AnnotateHandle(res,props)  resource: StructuredBuffer<stride=16>
  %196 = call %dx.types.ResRet.f32 @dx.op.rawBufferLoad.f32(i32 139, %dx.types.Handle %195, i32 %193, i32 0, i8 15, i32 4)  ; RawBufferLoad(srv,index,elementOffset,mask,alignment)
  %197 = extractvalue %dx.types.ResRet.f32 %196, 1
  %198 = bitcast float %197 to i32
  %199 = call %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32 59, %dx.types.Handle %80, i32 283)  ; CBufferLoadLegacy(handle,regIndex)
  %200 = extractvalue %dx.types.CBufRet.i32 %199, 0
  %201 = call %dx.types.Handle @dx.op.createHandleForLib.dx.types.Handle(i32 160, %dx.types.Handle %44)  ; CreateHandleForLib(Resource)
  %202 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %201, %dx.types.ResourceProperties { i32 12, i32 16 })  ; AnnotateHandle(res,props)  resource: StructuredBuffer<stride=16>
  %203 = call %dx.types.ResRet.f32 @dx.op.rawBufferLoad.f32(i32 139, %dx.types.Handle %202, i32 %198, i32 0, i8 15, i32 4)  ; RawBufferLoad(srv,index,elementOffset,mask,alignment)
  %204 = extractvalue %dx.types.ResRet.f32 %203, 0
  %205 = bitcast float %204 to i32
  %206 = and i32 %205, 1048575
  %207 = icmp eq i32 %206, 1048575
  br i1 %207, label %316, label %208, !dx.controlflow.hints !134

; <label>:208                                     ; preds = %173
  %209 = mul nuw nsw i32 %206, 42
  %210 = or i32 %209, 1
  %211 = call %dx.types.ResRet.f32 @dx.op.rawBufferLoad.f32(i32 139, %dx.types.Handle %195, i32 %210, i32 0, i8 15, i32 4)  ; RawBufferLoad(srv,index,elementOffset,mask,alignment)
  %212 = extractvalue %dx.types.ResRet.f32 %211, 0
  %213 = extractvalue %dx.types.ResRet.f32 %211, 1
  %214 = extractvalue %dx.types.ResRet.f32 %211, 2
  %215 = add i32 %200, %198
  %216 = call %dx.types.ResRet.f32 @dx.op.rawBufferLoad.f32(i32 139, %dx.types.Handle %202, i32 %215, i32 0, i8 15, i32 4)  ; RawBufferLoad(srv,index,elementOffset,mask,alignment)
  %217 = extractvalue %dx.types.ResRet.f32 %216, 0
  %218 = extractvalue %dx.types.ResRet.f32 %216, 1
  %219 = extractvalue %dx.types.ResRet.f32 %216, 2
  %220 = extractvalue %dx.types.ResRet.f32 %216, 3
  %221 = bitcast float %217 to i32
  %222 = bitcast float %218 to i32
  %223 = bitcast float %219 to i32
  %224 = bitcast float %220 to i32
  %225 = shl i32 %200, 1
  %226 = add i32 %225, %198
  %227 = call %dx.types.ResRet.f32 @dx.op.rawBufferLoad.f32(i32 139, %dx.types.Handle %202, i32 %226, i32 0, i8 15, i32 4)  ; RawBufferLoad(srv,index,elementOffset,mask,alignment)
  %228 = extractvalue %dx.types.ResRet.f32 %227, 0
  %229 = extractvalue %dx.types.ResRet.f32 %227, 1
  %230 = extractvalue %dx.types.ResRet.f32 %227, 2
  %231 = and i32 %221, 65535
  %232 = uitofp i32 %231 to float
  %233 = lshr i32 %221, 16
  %234 = uitofp i32 %233 to float
  %235 = and i32 %222, 32767
  %236 = uitofp i32 %235 to float
  %237 = fadd fast float %232, -3.276800e+04
  %238 = fadd fast float %234, -3.276800e+04
  %239 = fadd fast float %236, -1.638400e+04
  %240 = fmul fast float %239, 0x3F06A0F8E0000000
  %241 = and i32 %222, 32768
  %242 = icmp ne i32 %241, 0
  %243 = fadd fast float %237, %238
  %244 = fmul fast float %243, 0x3F00002000000000
  %245 = fsub fast float %237, %238
  %246 = fmul fast float %245, 0x3F00002000000000
  %247 = call float @dx.op.unary.f32(i32 6, float %244)  ; FAbs(value)
  %248 = call float @dx.op.unary.f32(i32 6, float %246)  ; FAbs(value)
  %249 = call float @dx.op.dot2.f32(i32 54, float 1.000000e+00, float 1.000000e+00, float %247, float %248)  ; Dot2(ax,ay,bx,by)
  %250 = fsub fast float 2.000000e+00, %249
  %251 = call float @dx.op.dot3.f32(i32 55, float %244, float %246, float %250, float %244, float %246, float %250)  ; Dot3(ax,ay,az,bx,by,bz)
  %252 = call float @dx.op.unary.f32(i32 25, float %251)  ; Rsqrt(value)
  %253 = fmul fast float %252, %244
  %254 = fmul fast float %252, %246
  %255 = fmul fast float %252, %250
  %256 = fadd fast float %255, 1.000000e+00
  %257 = fdiv fast float 1.000000e+00, %256
  %258 = fmul fast float %254, %253
  %259 = fmul fast float %258, %257
  %260 = fsub fast float -0.000000e+00, %259
  %261 = fmul fast float %253, %253
  %262 = fmul fast float %261, %257
  %263 = fsub fast float 1.000000e+00, %262
  %264 = fmul fast float %254, %254
  %265 = fmul fast float %264, %257
  %266 = fsub fast float 1.000000e+00, %265
  %267 = fmul fast float %240, %240
  %268 = fsub fast float 1.000000e+00, %267
  %269 = call float @dx.op.unary.f32(i32 24, float %268)  ; Sqrt(value)
  %270 = select i1 %242, float %240, float %269
  %271 = select i1 %242, float %269, float %240
  %272 = fmul fast float %263, %270
  %273 = fmul fast float %270, %260
  %274 = fmul fast float %270, %253
  %275 = fmul fast float %271, %260
  %276 = fmul fast float %266, %271
  %277 = fmul fast float %254, %271
  %278 = fsub fast float -0.000000e+00, %277
  %279 = fadd fast float %272, %275
  %280 = fadd fast float %273, %276
  %281 = fsub fast float %278, %274
  %282 = fmul fast float %281, %254
  %283 = fmul fast float %280, %255
  %284 = fsub fast float %282, %283
  %285 = fmul fast float %279, %255
  %286 = fmul fast float %281, %253
  %287 = fsub fast float %285, %286
  %288 = fmul fast float %280, %253
  %289 = fmul fast float %279, %254
  %290 = fsub fast float %288, %289
  %291 = lshr i32 %224, 16
  %292 = shl i32 %291, 23
  %293 = add i32 %292, -125829120
  %294 = bitcast i32 %293 to float
  %295 = lshr i32 %223, 16
  %296 = and i32 %223, 65535
  %297 = and i32 %224, 65535
  %298 = uitofp i32 %296 to float
  %299 = uitofp i32 %295 to float
  %300 = uitofp i32 %297 to float
  %301 = fadd fast float %298, -3.276800e+04
  %302 = fadd fast float %299, -3.276800e+04
  %303 = fadd fast float %300, -3.276800e+04
  %304 = fmul fast float %294, %301
  %305 = fmul fast float %294, %302
  %306 = fmul fast float %294, %303
  %307 = fmul fast float %279, %304
  %308 = fmul fast float %280, %304
  %309 = fmul fast float %281, %304
  %310 = fmul fast float %284, %305
  %311 = fmul fast float %287, %305
  %312 = fmul fast float %290, %305
  %313 = fmul fast float %253, %306
  %314 = fmul fast float %254, %306
  %315 = fmul fast float %255, %306
  br label %316

; <label>:316                                     ; preds = %208, %173
  %317 = phi float [ %212, %208 ], [ 0.000000e+00, %173 ]
  %318 = phi float [ %213, %208 ], [ 0.000000e+00, %173 ]
  %319 = phi float [ %214, %208 ], [ 0.000000e+00, %173 ]
  %320 = phi float [ %307, %208 ], [ 0.000000e+00, %173 ]
  %321 = phi float [ %308, %208 ], [ 0.000000e+00, %173 ]
  %322 = phi float [ %309, %208 ], [ 0.000000e+00, %173 ]
  %323 = phi float [ %310, %208 ], [ 0.000000e+00, %173 ]
  %324 = phi float [ %311, %208 ], [ 0.000000e+00, %173 ]
  %325 = phi float [ %312, %208 ], [ 0.000000e+00, %173 ]
  %326 = phi float [ %313, %208 ], [ 0.000000e+00, %173 ]
  %327 = phi float [ %314, %208 ], [ 0.000000e+00, %173 ]
  %328 = phi float [ %315, %208 ], [ 0.000000e+00, %173 ]
  %329 = phi float [ %228, %208 ], [ 0.000000e+00, %173 ]
  %330 = phi float [ %229, %208 ], [ 0.000000e+00, %173 ]
  %331 = phi float [ %230, %208 ], [ 0.000000e+00, %173 ]
  %332 = sub nsw i32 %103, %104
  %333 = add nsw i32 %332, %102
  %334 = add i32 %112, %333
  %335 = call %dx.types.ResRet.f32 @dx.op.bufferLoad.f32(i32 68, %dx.types.Handle %120, i32 %334, i32 undef)  ; BufferLoad(srv,index,wot)
  %336 = extractvalue %dx.types.ResRet.f32 %335, 0
  %337 = select i1 %118, float %117, float %336
  %338 = fadd fast float %126, %337
  %339 = call float @dx.op.binary.f32(i32 36, float %338, float %107)  ; FMin(a,b)
  %340 = call float @dx.op.unary.f32(i32 27, float %339)  ; Round_ni(value)
  %341 = fptoui float %340 to i32
  %342 = and i32 %341, 31
  %343 = ashr i32 %131, %342
  %344 = add nsw i32 %343, -1
  %345 = sitofp i32 %344 to float
  %346 = fdiv fast float 1.000000e+00, %345
  %347 = call %dx.types.Handle @dx.op.createHandleForLib.dx.types.Handle(i32 160, %dx.types.Handle %40)  ; CreateHandleForLib(Resource)
  %348 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %347, %dx.types.ResourceProperties { i32 10, i32 265 })  ; AnnotateHandle(res,props)  resource: TypedBuffer<F32>
  %349 = call %dx.types.ResRet.f32 @dx.op.bufferLoad.f32(i32 68, %dx.types.Handle %348, i32 %333, i32 undef)  ; BufferLoad(srv,index,wot)
  %350 = fmul fast float %346, %184
  %351 = fmul fast float %346, %186
  %352 = fadd fast float %350, %189
  %353 = fadd fast float %351, %191
  %354 = extractvalue %dx.types.CBufRet.i32 %95, 3
  %355 = sitofp i32 %354 to float
  %356 = fdiv fast float %352, %355
  %357 = fdiv fast float %353, %355
  %358 = fsub fast float 1.000000e+00, %356
  %359 = fmul fast float %357, 2.000000e+00
  %360 = fmul fast float %358, 2.000000e+00
  %361 = fmul fast float %339, %359
  %362 = fmul fast float %339, %360
  %363 = fsub fast float 1.000000e+00, %359
  %364 = fsub fast float 1.000000e+00, %360
  call void @llvm.lifetime.start(i64 16, i8* bitcast ([4 x i32]* @NeighborOffset.i.i.i.i.0.hca to i8*)) #0
  call void @llvm.lifetime.start(i64 16, i8* bitcast ([4 x i32]* @NeighborOffset.i.i.i.i.1.hca to i8*)) #0
  %365 = bitcast [4 x float]* %68 to i8*
  call void @llvm.lifetime.start(i64 16, i8* %365) #0, !noalias !135
  br label %366

; <label>:366                                     ; preds = %426, %316
  %367 = phi i32 [ -1, %316 ], [ %430, %426 ]
  %368 = phi i32 [ 0, %316 ], [ %428, %426 ]
  %369 = phi i32 [ 0, %316 ], [ %424, %426 ]
  %370 = call %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32 59, %dx.types.Handle %74, i32 0)  ; CBufferLoadLegacy(handle,regIndex)
  %371 = extractvalue %dx.types.CBufRet.i32 %370, 0
  %372 = extractvalue %dx.types.CBufRet.i32 %370, 1
  %373 = add i32 %371, %368
  %374 = add i32 %372, %367
  %375 = call %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32 59, %dx.types.Handle %76, i32 0)  ; CBufferLoadLegacy(handle,regIndex)
  %376 = extractvalue %dx.types.CBufRet.i32 %375, 2
  %377 = extractvalue %dx.types.CBufRet.i32 %375, 3
  %378 = call i32 @dx.op.binary.i32(i32 37, i32 %376, i32 %373)  ; IMax(a,b)
  %379 = call i32 @dx.op.binary.i32(i32 37, i32 %377, i32 %374)  ; IMax(a,b)
  %380 = call %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32 59, %dx.types.Handle %76, i32 1)  ; CBufferLoadLegacy(handle,regIndex)
  %381 = extractvalue %dx.types.CBufRet.i32 %380, 0
  %382 = extractvalue %dx.types.CBufRet.i32 %380, 1
  %383 = add i32 %376, -1
  %384 = add i32 %383, %381
  %385 = add i32 %377, -1
  %386 = add i32 %385, %382
  %387 = call i32 @dx.op.binary.i32(i32 38, i32 %384, i32 %378)  ; IMin(a,b)
  %388 = call i32 @dx.op.binary.i32(i32 38, i32 %386, i32 %379)  ; IMin(a,b)
  %389 = sub nsw i32 %388, %377
  %390 = mul nsw i32 %389, %381
  %391 = sub i32 %387, %376
  %392 = add nsw i32 %391, %390
  %393 = extractvalue %dx.types.CBufRet.i32 %375, 0
  %394 = call %dx.types.Handle @dx.op.createHandleForLib.dx.types.Handle(i32 160, %dx.types.Handle %42)  ; CreateHandleForLib(Resource)
  %395 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %394, %dx.types.ResourceProperties { i32 10, i32 261 })  ; AnnotateHandle(res,props)  resource: TypedBuffer<U32>
  %396 = call %dx.types.ResRet.i32 @dx.op.bufferLoad.i32(i32 68, %dx.types.Handle %395, i32 %393, i32 undef)  ; BufferLoad(srv,index,wot)
  %397 = extractvalue %dx.types.ResRet.i32 %396, 0
  %398 = add i32 %392, %397
  %399 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %80, i32 244)  ; CBufferLoadLegacy(handle,regIndex)
  %400 = extractvalue %dx.types.CBufRet.f32 %399, 0
  %401 = fcmp fast oge float %400, 0.000000e+00
  %402 = call %dx.types.Handle @dx.op.createHandleForLib.dx.types.Handle(i32 160, %dx.types.Handle %41)  ; CreateHandleForLib(Resource)
  %403 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %402, %dx.types.ResourceProperties { i32 10, i32 265 })  ; AnnotateHandle(res,props)  resource: TypedBuffer<F32>
  %404 = call %dx.types.ResRet.f32 @dx.op.bufferLoad.f32(i32 68, %dx.types.Handle %403, i32 %398, i32 undef)  ; BufferLoad(srv,index,wot)
  %405 = extractvalue %dx.types.ResRet.f32 %404, 0
  %406 = select i1 %401, float %400, float %405
  %407 = call %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32 59, %dx.types.Handle %74, i32 1)  ; CBufferLoadLegacy(handle,regIndex)
  %408 = extractvalue %dx.types.CBufRet.i32 %407, 0
  %409 = sitofp i32 %408 to float
  %410 = add i32 %397, %333
  %411 = call %dx.types.ResRet.f32 @dx.op.bufferLoad.f32(i32 68, %dx.types.Handle %403, i32 %410, i32 undef)  ; BufferLoad(srv,index,wot)
  %412 = extractvalue %dx.types.ResRet.f32 %411, 0
  %413 = select i1 %401, float %400, float %412
  %414 = call %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32 59, %dx.types.Handle %80, i32 244)  ; CBufferLoadLegacy(handle,regIndex)
  %415 = extractvalue %dx.types.CBufRet.i32 %414, 1
  %416 = sitofp i32 %415 to float
  %417 = fadd fast float %416, %413
  %418 = call float @dx.op.binary.f32(i32 36, float %417, float %409)  ; FMin(a,b)
  %419 = call float @dx.op.binary.f32(i32 35, float %406, float %418)  ; FMax(a,b)
  %420 = getelementptr inbounds [4 x float], [4 x float]* %68, i32 0, i32 %369
  %421 = fadd fast float %416, %419
  %422 = select i1 %401, float %400, float %421
  %423 = call float @dx.op.binary.f32(i32 36, float %422, float %409)  ; FMin(a,b)
  store float %423, float* %420, align 4, !tbaa !125, !noalias !135
  %424 = add nuw nsw i32 %369, 1
  %425 = icmp eq i32 %424, 4
  br i1 %425, label %431, label %426

; <label>:426                                     ; preds = %366
  %427 = getelementptr [4 x i32], [4 x i32]* @NeighborOffset.i.i.i.i.0.hca, i32 0, i32 %424
  %428 = load i32, i32* %427, align 4
  %429 = getelementptr [4 x i32], [4 x i32]* @NeighborOffset.i.i.i.i.1.hca, i32 0, i32 %424
  %430 = load i32, i32* %429, align 4
  br label %366

; <label>:431                                     ; preds = %366
  %432 = uitofp i32 %341 to float
  %433 = extractvalue %dx.types.ResRet.f32 %349, 0
  %434 = fsub fast float 1.000000e+00, %357
  %435 = fmul fast float %356, 2.000000e+00
  %436 = fmul fast float %434, 2.000000e+00
  %437 = fmul fast float %339, %435
  %438 = fmul fast float %339, %436
  %439 = fsub fast float 1.000000e+00, %435
  %440 = fsub fast float 1.000000e+00, %436
  %441 = load float, float* %91, align 4, !tbaa !125, !noalias !135
  %442 = getelementptr inbounds [4 x float], [4 x float]* %68, i32 0, i32 1
  %443 = load float, float* %442, align 4, !tbaa !125, !noalias !135
  %444 = getelementptr inbounds [4 x float], [4 x float]* %68, i32 0, i32 2
  %445 = load float, float* %444, align 4, !tbaa !125, !noalias !135
  %446 = getelementptr inbounds [4 x float], [4 x float]* %68, i32 0, i32 3
  %447 = load float, float* %446, align 4, !tbaa !125, !noalias !135
  call void @llvm.lifetime.end(i64 16, i8* %365) #0, !noalias !135
  call void @llvm.lifetime.end(i64 16, i8* bitcast ([4 x i32]* @NeighborOffset.i.i.i.i.0.hca to i8*)) #0
  call void @llvm.lifetime.end(i64 16, i8* bitcast ([4 x i32]* @NeighborOffset.i.i.i.i.1.hca to i8*)) #0
  %448 = fmul fast float %441, %363
  %449 = fmul fast float %443, %439
  %450 = fmul fast float %445, %364
  %451 = fmul fast float %447, %440
  %452 = fadd fast float %448, %361
  %453 = fadd fast float %449, %437
  %454 = fadd fast float %450, %362
  %455 = fadd fast float %451, %438
  %456 = fadd fast float %352, %353
  %457 = fdiv fast float %456, %355
  %458 = fcmp fast ogt float %457, 1.000000e+00
  %459 = fcmp fast olt float %356, %357
  %460 = select i1 %459, float %455, float %454
  %461 = select i1 %459, float %453, float %452
  %462 = select i1 %458, float %460, float %461
  %463 = call float @dx.op.unary.f32(i32 27, float %462)  ; Round_ni(value)
  %464 = fsub fast float %462, %463
  %465 = fsub fast float %463, %432
  %466 = fsub fast float -0.000000e+00, %465
  %467 = call float @dx.op.unary.f32(i32 21, float %466)  ; Exp(value)
  %468 = fmul fast float %467, %184
  %469 = fmul fast float %467, %186
  %470 = call float @dx.op.unary.f32(i32 27, float %468)  ; Round_ni(value)
  %471 = call float @dx.op.unary.f32(i32 27, float %469)  ; Round_ni(value)
  %472 = fsub fast float -0.000000e+00, %463
  %473 = call float @dx.op.unary.f32(i32 21, float %472)  ; Exp(value)
  %474 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %74, i32 5)  ; CBufferLoadLegacy(handle,regIndex)
  %475 = extractvalue %dx.types.CBufRet.f32 %474, 0
  %476 = fmul fast float %475, %473
  %477 = fadd fast float %476, -1.000000e+00
  %478 = fmul fast float %473, 5.000000e-01
  %479 = fmul fast float %478, %475
  %480 = call float @dx.op.binary.f32(i32 35, float %479, float 2.000000e+00)  ; FMax(a,b)
  %481 = fadd fast float %480, -1.000000e+00
  %482 = extractvalue %dx.types.CBufRet.f32 %474, 1
  %483 = fmul fast float %482, %477
  %484 = fmul fast float %482, %481
  %485 = fdiv fast float %470, %483
  %486 = fdiv fast float %471, %483
  %487 = fmul fast float %470, 5.000000e-01
  %488 = fmul fast float %471, 5.000000e-01
  %489 = call float @dx.op.unary.f32(i32 27, float %487)  ; Round_ni(value)
  %490 = call float @dx.op.unary.f32(i32 27, float %488)  ; Round_ni(value)
  %491 = fdiv fast float %489, %484
  %492 = fdiv fast float %490, %484
  %493 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %74, i32 2)  ; CBufferLoadLegacy(handle,regIndex)
  %494 = extractvalue %dx.types.CBufRet.f32 %493, 0
  %495 = extractvalue %dx.types.CBufRet.f32 %493, 1
  %496 = fmul fast float %494, %485
  %497 = fmul fast float %495, %486
  %498 = extractvalue %dx.types.CBufRet.f32 %493, 2
  %499 = extractvalue %dx.types.CBufRet.f32 %493, 3
  %500 = fadd fast float %496, %498
  %501 = fadd fast float %497, %499
  %502 = fmul fast float %494, 5.000000e-01
  %503 = fmul fast float %495, 5.000000e-01
  %504 = fadd fast float %500, %502
  %505 = fadd fast float %501, %503
  %506 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %74, i32 6)  ; CBufferLoadLegacy(handle,regIndex)
  %507 = extractvalue %dx.types.CBufRet.f32 %506, 0
  %508 = extractvalue %dx.types.CBufRet.f32 %506, 1
  %509 = fmul fast float %507, %189
  %510 = fmul fast float %508, %191
  %511 = fadd fast float %504, %509
  %512 = fadd fast float %505, %510
  %513 = fsub fast float %463, %433
  %514 = call %dx.types.Handle @dx.op.createHandleForLib.dx.types.Handle(i32 160, %dx.types.Handle %39)  ; CreateHandleForLib(Resource)
  %515 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %514, %dx.types.ResourceProperties { i32 2, i32 1033 })  ; AnnotateHandle(res,props)  resource: Texture2D<4xF32>
  %516 = call %dx.types.Handle @dx.op.createHandleForLib.dx.types.Handle(i32 160, %dx.types.Handle %17)  ; CreateHandleForLib(Resource)
  %517 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %516, %dx.types.ResourceProperties { i32 14, i32 0 })  ; AnnotateHandle(res,props)  resource: SamplerState
  %518 = call %dx.types.ResRet.f32 @dx.op.sampleLevel.f32(i32 62, %dx.types.Handle %515, %dx.types.Handle %517, float %511, float %512, float undef, float undef, i32 0, i32 0, i32 undef, float %513)  ; SampleLevel(srv,sampler,coord0,coord1,coord2,coord3,offset0,offset1,offset2,LOD)
  %519 = extractvalue %dx.types.ResRet.f32 %518, 0
  %520 = extractvalue %dx.types.ResRet.f32 %518, 1
  %521 = fmul fast float %519, 6.528000e+04
  %522 = fmul fast float %520, 2.550000e+02
  %523 = fadd fast float %522, -3.276800e+04
  %524 = fadd fast float %523, %521
  %525 = fmul fast float %494, %491
  %526 = fmul fast float %495, %492
  %527 = fadd fast float %525, %498
  %528 = fadd fast float %526, %499
  %529 = fadd fast float %527, %502
  %530 = fadd fast float %528, %503
  %531 = fadd fast float %529, %509
  %532 = fadd fast float %530, %510
  %533 = fsub fast float 1.000000e+00, %433
  %534 = fadd fast float %533, %463
  %535 = call %dx.types.ResRet.f32 @dx.op.sampleLevel.f32(i32 62, %dx.types.Handle %515, %dx.types.Handle %517, float %531, float %532, float undef, float undef, i32 0, i32 0, i32 undef, float %534)  ; SampleLevel(srv,sampler,coord0,coord1,coord2,coord3,offset0,offset1,offset2,LOD)
  %536 = extractvalue %dx.types.ResRet.f32 %535, 0
  %537 = extractvalue %dx.types.ResRet.f32 %535, 1
  %538 = fmul fast float %536, 6.528000e+04
  %539 = fmul fast float %537, 2.550000e+02
  %540 = fsub fast float %491, %485
  %541 = fsub fast float %492, %486
  %542 = fsub fast float -3.276800e+04, %524
  %543 = fadd fast float %542, %539
  %544 = fadd fast float %543, %538
  %545 = fmul fast float %540, %464
  %546 = fmul fast float %541, %464
  %547 = fmul fast float %544, %464
  %548 = fadd fast float %545, %485
  %549 = fadd fast float %546, %486
  %550 = fadd fast float %547, %524
  %551 = fmul fast float %550, 7.812500e-03
  %552 = extractvalue %dx.types.CBufRet.f32 %506, 3
  %553 = fmul fast float %552, %189
  %554 = fmul fast float %552, %191
  %555 = fadd fast float %548, %553
  %556 = fadd fast float %549, %554
  %557 = fmul fast float %555, %320
  %558 = fmul fast float %555, %321
  %559 = fmul fast float %555, %322
  %560 = fmul fast float %556, %323
  %561 = fmul fast float %556, %324
  %562 = fmul fast float %556, %325
  %563 = fmul fast float %551, %326
  %564 = fmul fast float %551, %327
  %565 = fmul fast float %551, %328
  %566 = fmul fast float %317, 2.097152e+06
  %567 = fmul fast float %318, 2.097152e+06
  %568 = fmul fast float %319, 2.097152e+06
  %569 = fadd fast float %329, %566
  %570 = fadd fast float %569, %560
  %571 = fadd fast float %570, %557
  %572 = fadd fast float %571, %563
  %573 = fadd fast float %330, %567
  %574 = fadd fast float %573, %561
  %575 = fadd fast float %574, %558
  %576 = fadd fast float %575, %564
  %577 = fadd fast float %331, %568
  %578 = fadd fast float %577, %562
  %579 = fadd fast float %578, %559
  %580 = fadd fast float %579, %565
  %581 = getelementptr [3 x float], [3 x float]* %61, i32 0, i32 %93
  %582 = getelementptr [3 x float], [3 x float]* %62, i32 0, i32 %93
  %583 = getelementptr [3 x float], [3 x float]* %63, i32 0, i32 %93
  store float %572, float* %581, align 4
  store float %576, float* %582, align 4
  store float %580, float* %583, align 4
  %584 = add nuw nsw i32 %93, 1
  %585 = icmp eq i32 %584, 3
  br i1 %585, label %586, label %92

; <label>:586                                     ; preds = %431
  %587 = getelementptr [3 x float], [3 x float]* %61, i32 0, i32 1
  %588 = getelementptr [3 x float], [3 x float]* %62, i32 0, i32 1
  %589 = getelementptr [3 x float], [3 x float]* %63, i32 0, i32 1
  %590 = load float, float* %587, align 4
  %591 = load float, float* %588, align 4
  %592 = load float, float* %589, align 4
  %593 = getelementptr [3 x float], [3 x float]* %61, i32 0, i32 0
  %594 = getelementptr [3 x float], [3 x float]* %62, i32 0, i32 0
  %595 = getelementptr [3 x float], [3 x float]* %63, i32 0, i32 0
  %596 = load float, float* %593, align 4
  %597 = load float, float* %594, align 4
  %598 = load float, float* %595, align 4
  %599 = fsub fast float %590, %596
  %600 = fsub fast float %591, %597
  %601 = fsub fast float %592, %598
  %602 = getelementptr [3 x float], [3 x float]* %61, i32 0, i32 2
  %603 = getelementptr [3 x float], [3 x float]* %62, i32 0, i32 2
  %604 = getelementptr [3 x float], [3 x float]* %63, i32 0, i32 2
  %605 = load float, float* %602, align 4
  %606 = load float, float* %603, align 4
  %607 = load float, float* %604, align 4
  %608 = fsub fast float %605, %596
  %609 = fsub fast float %606, %597
  %610 = fsub fast float %607, %598
  %611 = fmul fast float %609, %601
  %612 = fmul fast float %610, %600
  %613 = fsub fast float %611, %612
  %614 = fmul fast float %610, %599
  %615 = fmul fast float %608, %601
  %616 = fsub fast float %614, %615
  %617 = fmul fast float %608, %600
  %618 = fmul fast float %609, %599
  %619 = fsub fast float %617, %618
  %620 = call float @dx.op.dot3.f32(i32 55, float %613, float %616, float %619, float %613, float %616, float %619)  ; Dot3(ax,ay,az,bx,by,bz)
  %621 = fcmp fast oeq float %620, 0.000000e+00
  %622 = uitofp i1 %621 to float
  %623 = call float @dx.op.worldRayDirection.f32(i32 148, i8 0)  ; WorldRayDirection(col)
  %624 = call float @dx.op.worldRayDirection.f32(i32 148, i8 1)  ; WorldRayDirection(col)
  %625 = call float @dx.op.worldRayDirection.f32(i32 148, i8 2)  ; WorldRayDirection(col)
  %626 = fsub fast float -0.000000e+00, %623
  %627 = fsub fast float -0.000000e+00, %624
  %628 = fsub fast float -0.000000e+00, %625
  %629 = call float @dx.op.unary.f32(i32 25, float %620)  ; Rsqrt(value)
  %630 = fmul fast float %629, %613
  %631 = fmul fast float %629, %616
  %632 = fmul fast float %629, %619
  %633 = fsub fast float %626, %630
  %634 = fsub fast float %627, %631
  %635 = fsub fast float %628, %632
  %636 = fmul fast float %633, %622
  %637 = fmul fast float %634, %622
  %638 = fmul fast float %635, %622
  %639 = fadd fast float %636, %630
  %640 = fadd fast float %637, %631
  %641 = fadd fast float %638, %632
  call void @llvm.lifetime.end(i64 12, i8* %88) #0
  call void @llvm.lifetime.end(i64 12, i8* %89) #0
  call void @llvm.lifetime.end(i64 12, i8* %90) #0
  %642 = call i32 @dx.op.instanceIndex.i32(i32 142)  ; InstanceIndex()
  %643 = call %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32 59, %dx.types.Handle %70, i32 1)  ; CBufferLoadLegacy(handle,regIndex)
  %644 = extractvalue %dx.types.CBufRet.i32 %643, 0
  %645 = sub i32 %642, %644
  %646 = call i32 @dx.op.legacyF32ToF16(i32 130, float %639)  ; LegacyF32ToF16(value)
  %647 = shl i32 %646, 16
  %648 = getelementptr inbounds %struct.FPackedMaterialClosestHitPayload, %struct.FPackedMaterialClosestHitPayload* %PackedPayload, i32 0, i32 3, i32 1
  %649 = load i32, i32* %648, align 4, !tbaa !129
  %650 = or i32 %649, %647
  store i32 %650, i32* %648, align 4, !tbaa !129
  %651 = call i32 @dx.op.legacyF32ToF16(i32 130, float %640)  ; LegacyF32ToF16(value)
  %652 = call i32 @dx.op.legacyF32ToF16(i32 130, float %641)  ; LegacyF32ToF16(value)
  %653 = shl i32 %652, 16
  %654 = getelementptr inbounds %struct.FPackedMaterialClosestHitPayload, %struct.FPackedMaterialClosestHitPayload* %PackedPayload, i32 0, i32 3, i32 2
  %655 = or i32 %653, %651
  store i32 %655, i32* %654, align 4, !tbaa !129
  %656 = mul i32 %182, 42
  %657 = call %dx.types.Handle @dx.op.createHandleForLib.dx.types.Handle(i32 160, %dx.types.Handle %45)  ; CreateHandleForLib(Resource)
  %658 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %657, %dx.types.ResourceProperties { i32 12, i32 16 })  ; AnnotateHandle(res,props)  resource: StructuredBuffer<stride=16>
  %659 = call %dx.types.ResRet.f32 @dx.op.rawBufferLoad.f32(i32 139, %dx.types.Handle %658, i32 %656, i32 0, i8 15, i32 4)  ; RawBufferLoad(srv,index,elementOffset,mask,alignment)
  %660 = extractvalue %dx.types.ResRet.f32 %659, 2
  %661 = bitcast float %660 to i32
  %662 = icmp eq i32 %661, 1
  %663 = select i1 %662, i32 0, i32 %645
  %664 = extractvalue %dx.types.ResRet.f32 %659, 1
  %665 = bitcast float %664 to i32
  %666 = add i32 %665, %663
  %667 = getelementptr inbounds %struct.FPackedMaterialClosestHitPayload, %struct.FPackedMaterialClosestHitPayload* %PackedPayload, i32 0, i32 9, i32 1
  store i32 %666, i32* %667, align 4, !tbaa !129
  br label %668

; <label>:668                                     ; preds = %586, %0
  %669 = and i32 %84, 8388608
  %670 = icmp eq i32 %669, 0
  br i1 %670, label %671, label %1945

; <label>:671                                     ; preds = %668
  %672 = getelementptr inbounds %struct.FPackedMaterialClosestHitPayload, %struct.FPackedMaterialClosestHitPayload* %PackedPayload, i32 0, i32 2
  %673 = load float, float* %672, align 4, !tbaa !125
  %674 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %80, i32 64)  ; CBufferLoadLegacy(handle,regIndex)
  %675 = extractvalue %dx.types.CBufRet.f32 %674, 1
  %676 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %80, i32 76)  ; CBufferLoadLegacy(handle,regIndex)
  %677 = extractvalue %dx.types.CBufRet.f32 %676, 1
  %678 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %80, i32 139)  ; CBufferLoadLegacy(handle,regIndex)
  %679 = extractvalue %dx.types.CBufRet.f32 %678, 0
  %680 = extractvalue %dx.types.CBufRet.f32 %678, 2
  %681 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %80, i32 140)  ; CBufferLoadLegacy(handle,regIndex)
  %682 = extractvalue %dx.types.CBufRet.f32 %681, 0
  %683 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %80, i32 187)  ; CBufferLoadLegacy(handle,regIndex)
  %684 = extractvalue %dx.types.CBufRet.f32 %683, 1
  %685 = getelementptr inbounds %struct.FPackedMaterialClosestHitPayload, %struct.FPackedMaterialClosestHitPayload* %PackedPayload, i32 0, i32 1
  %686 = load i32, i32* %685, align 4, !tbaa !129, !noalias !138
  %687 = and i32 %686, 65535
  %688 = lshr i32 %686, 16
  %689 = call float @dx.op.legacyF16ToF32(i32 131, i32 %688)  ; LegacyF16ToF32(value)
  %690 = call float @dx.op.rayTCurrent.f32(i32 154)  ; RayTCurrent()
  %691 = fmul fast float %690, %689
  %692 = getelementptr inbounds %struct.FRayTracingIntersectionAttributes, %struct.FRayTracingIntersectionAttributes* %Attributes, i32 0, i32 0
  %693 = load <2 x i32>, <2 x i32>* %692, align 4
  %694 = extractelement <2 x i32> %693, i32 0
  %695 = extractelement <2 x i32> %693, i32 1
  %696 = bitcast i32 %694 to float
  %697 = bitcast i32 %695 to float
  %698 = bitcast [3 x float]* %67 to i8*
  call void @llvm.lifetime.start(i64 12, i8* %698) #0, !noalias !141
  %699 = fsub fast float 1.000000e+00, %696
  %700 = fsub fast float %699, %697
  %701 = getelementptr inbounds [3 x float], [3 x float]* %67, i32 0, i32 0
  store float %700, float* %701, align 4
  %702 = getelementptr inbounds [3 x float], [3 x float]* %67, i32 0, i32 1
  %703 = bitcast float* %702 to i32*
  store i32 %694, i32* %703, align 4
  %704 = getelementptr inbounds [3 x float], [3 x float]* %67, i32 0, i32 2
  %705 = bitcast float* %704 to i32*
  store i32 %695, i32* %705, align 4
  br label %706

; <label>:706                                     ; preds = %920, %671
  %707 = phi float [ 0.000000e+00, %671 ], [ %1041, %920 ]
  %708 = phi float [ 0.000000e+00, %671 ], [ %1042, %920 ]
  %709 = phi float [ 0.000000e+00, %671 ], [ %1043, %920 ]
  %710 = phi float [ 0.000000e+00, %671 ], [ %1044, %920 ]
  %711 = phi float [ 0.000000e+00, %671 ], [ %1035, %920 ]
  %712 = phi float [ 0.000000e+00, %671 ], [ %1036, %920 ]
  %713 = phi i32 [ 0, %671 ], [ %1045, %920 ]
  %714 = call i32 @dx.op.primitiveIndex.i32(i32 161)  ; PrimitiveIndex()
  %715 = call %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32 59, %dx.types.Handle %74, i32 0)  ; CBufferLoadLegacy(handle,regIndex)
  %716 = extractvalue %dx.types.CBufRet.i32 %715, 1
  %717 = call %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32 59, %dx.types.Handle %76, i32 0)  ; CBufferLoadLegacy(handle,regIndex)
  %718 = extractvalue %dx.types.CBufRet.i32 %717, 3
  %719 = sub nsw i32 %716, %718
  %720 = call %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32 59, %dx.types.Handle %76, i32 1)  ; CBufferLoadLegacy(handle,regIndex)
  %721 = extractvalue %dx.types.CBufRet.i32 %720, 0
  %722 = mul nsw i32 %719, %721
  %723 = extractvalue %dx.types.CBufRet.i32 %715, 0
  %724 = extractvalue %dx.types.CBufRet.i32 %717, 2
  %725 = call %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32 59, %dx.types.Handle %74, i32 1)  ; CBufferLoadLegacy(handle,regIndex)
  %726 = extractvalue %dx.types.CBufRet.i32 %725, 0
  %727 = sitofp i32 %726 to float
  %728 = extractvalue %dx.types.CBufRet.i32 %717, 0
  %729 = call %dx.types.Handle @dx.op.createHandleForLib.dx.types.Handle(i32 160, %dx.types.Handle %42)  ; CreateHandleForLib(Resource)
  %730 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %729, %dx.types.ResourceProperties { i32 10, i32 261 })  ; AnnotateHandle(res,props)  resource: TypedBuffer<U32>
  %731 = call %dx.types.ResRet.i32 @dx.op.bufferLoad.i32(i32 68, %dx.types.Handle %730, i32 %728, i32 undef)  ; BufferLoad(srv,index,wot)
  %732 = extractvalue %dx.types.ResRet.i32 %731, 0
  %733 = add i32 %722, %723
  %734 = sub i32 %733, %724
  %735 = add i32 %734, %732
  %736 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %80, i32 244)  ; CBufferLoadLegacy(handle,regIndex)
  %737 = extractvalue %dx.types.CBufRet.f32 %736, 0
  %738 = fcmp fast oge float %737, 0.000000e+00
  %739 = call %dx.types.Handle @dx.op.createHandleForLib.dx.types.Handle(i32 160, %dx.types.Handle %41)  ; CreateHandleForLib(Resource)
  %740 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %739, %dx.types.ResourceProperties { i32 10, i32 265 })  ; AnnotateHandle(res,props)  resource: TypedBuffer<F32>
  %741 = call %dx.types.ResRet.f32 @dx.op.bufferLoad.f32(i32 68, %dx.types.Handle %740, i32 %735, i32 undef)  ; BufferLoad(srv,index,wot)
  %742 = extractvalue %dx.types.ResRet.f32 %741, 0
  %743 = select i1 %738, float %737, float %742
  %744 = call %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32 59, %dx.types.Handle %80, i32 244)  ; CBufferLoadLegacy(handle,regIndex)
  %745 = extractvalue %dx.types.CBufRet.i32 %744, 1
  %746 = sitofp i32 %745 to float
  %747 = fadd fast float %746, %743
  %748 = call float @dx.op.binary.f32(i32 36, float %747, float %727)  ; FMin(a,b)
  %749 = call float @dx.op.unary.f32(i32 27, float %748)  ; Round_ni(value)
  %750 = fptoui float %749 to i32
  %751 = extractvalue %dx.types.CBufRet.i32 %715, 2
  %752 = and i32 %750, 31
  %753 = ashr i32 %751, %752
  %754 = add nsw i32 %753, -1
  %755 = sitofp i32 %754 to float
  %756 = fadd fast float %755, 1.000000e+00
  %757 = fptoui float %756 to i32
  %758 = bitcast [3 x i32]* %65 to i8*
  call void @llvm.lifetime.start(i64 12, i8* %758) #0
  %759 = call %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32 59, %dx.types.Handle %70, i32 0)  ; CBufferLoadLegacy(handle,regIndex)
  %760 = extractvalue %dx.types.CBufRet.i32 %759, 1
  %761 = extractvalue %dx.types.CBufRet.i32 %759, 0
  %762 = and i32 %761, 255
  %763 = mul i32 %714, 3
  %764 = icmp eq i32 %762, 0
  br i1 %764, label %765, label %768

; <label>:765                                     ; preds = %706
  %766 = add i32 %763, 1
  %767 = add i32 %763, 2
  br label %793

; <label>:768                                     ; preds = %706
  %769 = icmp eq i32 %762, 2
  %770 = call %dx.types.Handle @dx.op.createHandleForLib.dx.types.Handle(i32 160, %dx.types.Handle %20)  ; CreateHandleForLib(Resource)
  %771 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %770, %dx.types.ResourceProperties { i32 11, i32 0 })  ; AnnotateHandle(res,props)  resource: ByteAddressBuffer
  br i1 %769, label %772, label %786

; <label>:772                                     ; preds = %768
  %773 = mul i32 %714, 6
  %774 = add i32 %773, %760
  %775 = and i32 %774, -4
  %776 = call %dx.types.ResRet.i32 @dx.op.rawBufferLoad.i32(i32 139, %dx.types.Handle %771, i32 %775, i32 undef, i8 3, i32 4)  ; RawBufferLoad(srv,index,elementOffset,mask,alignment)
  %777 = extractvalue %dx.types.ResRet.i32 %776, 0
  %778 = extractvalue %dx.types.ResRet.i32 %776, 1
  %779 = icmp eq i32 %775, %774
  %780 = lshr i32 %777, 16
  %781 = and i32 %778, 65535
  br i1 %779, label %782, label %784

; <label>:782                                     ; preds = %772
  %783 = and i32 %777, 65535
  br label %793

; <label>:784                                     ; preds = %772
  %785 = lshr i32 %778, 16
  br label %793

; <label>:786                                     ; preds = %768
  %787 = mul i32 %762, %763
  %788 = add i32 %787, %760
  %789 = call %dx.types.ResRet.i32 @dx.op.rawBufferLoad.i32(i32 139, %dx.types.Handle %771, i32 %788, i32 undef, i8 7, i32 4)  ; RawBufferLoad(srv,index,elementOffset,mask,alignment)
  %790 = extractvalue %dx.types.ResRet.i32 %789, 0
  %791 = extractvalue %dx.types.ResRet.i32 %789, 1
  %792 = extractvalue %dx.types.ResRet.i32 %789, 2
  br label %793

; <label>:793                                     ; preds = %786, %784, %782, %765
  %794 = phi i32 [ %763, %765 ], [ %790, %786 ], [ %783, %782 ], [ %780, %784 ]
  %795 = phi i32 [ %766, %765 ], [ %791, %786 ], [ %780, %782 ], [ %781, %784 ]
  %796 = phi i32 [ %767, %765 ], [ %792, %786 ], [ %781, %782 ], [ %785, %784 ]
  %797 = getelementptr inbounds [3 x i32], [3 x i32]* %65, i32 0, i32 0
  store i32 %794, i32* %797, align 4
  %798 = getelementptr inbounds [3 x i32], [3 x i32]* %65, i32 0, i32 1
  store i32 %795, i32* %798, align 4
  %799 = getelementptr inbounds [3 x i32], [3 x i32]* %65, i32 0, i32 2
  store i32 %796, i32* %799, align 4
  %800 = getelementptr [3 x i32], [3 x i32]* %65, i32 0, i32 %713
  %801 = load i32, i32* %800, align 4, !tbaa !129, !noalias !142
  %802 = call i32 @dx.op.instanceID.i32(i32 141)  ; InstanceID()
  %803 = urem i32 %801, %757
  %804 = uitofp i32 %803 to float
  %805 = udiv i32 %801, %757
  %806 = uitofp i32 %805 to float
  %807 = call %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32 59, %dx.types.Handle %78, i32 0)  ; CBufferLoadLegacy(handle,regIndex)
  %808 = extractvalue %dx.types.CBufRet.i32 %807, 0
  %809 = sitofp i32 %808 to float
  %810 = extractvalue %dx.types.CBufRet.i32 %807, 1
  %811 = sitofp i32 %810 to float
  call void @llvm.lifetime.end(i64 12, i8* %758) #0
  %812 = and i32 %802, 2147483647
  %813 = mul i32 %812, 42
  %814 = call %dx.types.Handle @dx.op.createHandleForLib.dx.types.Handle(i32 160, %dx.types.Handle %45)  ; CreateHandleForLib(Resource)
  %815 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %814, %dx.types.ResourceProperties { i32 12, i32 16 })  ; AnnotateHandle(res,props)  resource: StructuredBuffer<stride=16>
  %816 = call %dx.types.ResRet.f32 @dx.op.rawBufferLoad.f32(i32 139, %dx.types.Handle %815, i32 %813, i32 0, i8 15, i32 4)  ; RawBufferLoad(srv,index,elementOffset,mask,alignment)
  %817 = extractvalue %dx.types.ResRet.f32 %816, 1
  %818 = bitcast float %817 to i32
  %819 = call %dx.types.Handle @dx.op.createHandleForLib.dx.types.Handle(i32 160, %dx.types.Handle %44)  ; CreateHandleForLib(Resource)
  %820 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %819, %dx.types.ResourceProperties { i32 12, i32 16 })  ; AnnotateHandle(res,props)  resource: StructuredBuffer<stride=16>
  %821 = call %dx.types.ResRet.f32 @dx.op.rawBufferLoad.f32(i32 139, %dx.types.Handle %820, i32 %818, i32 0, i8 15, i32 4)  ; RawBufferLoad(srv,index,elementOffset,mask,alignment)
  %822 = extractvalue %dx.types.ResRet.f32 %821, 0
  %823 = bitcast float %822 to i32
  %824 = sub nsw i32 %723, %724
  %825 = add nsw i32 %824, %722
  %826 = add i32 %732, %825
  %827 = call %dx.types.ResRet.f32 @dx.op.bufferLoad.f32(i32 68, %dx.types.Handle %740, i32 %826, i32 undef)  ; BufferLoad(srv,index,wot)
  %828 = extractvalue %dx.types.ResRet.f32 %827, 0
  %829 = select i1 %738, float %737, float %828
  %830 = fadd fast float %746, %829
  %831 = call float @dx.op.binary.f32(i32 36, float %830, float %727)  ; FMin(a,b)
  %832 = call float @dx.op.unary.f32(i32 27, float %831)  ; Round_ni(value)
  %833 = fptoui float %832 to i32
  %834 = and i32 %833, 31
  %835 = ashr i32 %751, %834
  %836 = add nsw i32 %835, -1
  %837 = sitofp i32 %836 to float
  %838 = fdiv fast float 1.000000e+00, %837
  %839 = fmul fast float %838, %804
  %840 = fmul fast float %838, %806
  %841 = fadd fast float %839, %809
  %842 = fadd fast float %840, %811
  %843 = extractvalue %dx.types.CBufRet.i32 %715, 3
  %844 = sitofp i32 %843 to float
  %845 = fdiv fast float %841, %844
  %846 = fdiv fast float %842, %844
  %847 = fsub fast float 1.000000e+00, %845
  %848 = fmul fast float %846, 2.000000e+00
  %849 = fmul fast float %847, 2.000000e+00
  %850 = fmul fast float %831, %848
  %851 = fmul fast float %831, %849
  %852 = fsub fast float 1.000000e+00, %848
  %853 = fsub fast float 1.000000e+00, %849
  call void @llvm.lifetime.start(i64 16, i8* bitcast ([4 x i32]* @NeighborOffset.i.i.i.i.0.hca to i8*)) #0
  call void @llvm.lifetime.start(i64 16, i8* bitcast ([4 x i32]* @NeighborOffset.i.i.i.i.1.hca to i8*)) #0
  %854 = bitcast [4 x float]* %66 to i8*
  call void @llvm.lifetime.start(i64 16, i8* %854) #0, !noalias !82
  br label %855

; <label>:855                                     ; preds = %915, %793
  %856 = phi i32 [ -1, %793 ], [ %919, %915 ]
  %857 = phi i32 [ 0, %793 ], [ %917, %915 ]
  %858 = phi i32 [ 0, %793 ], [ %913, %915 ]
  %859 = call %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32 59, %dx.types.Handle %74, i32 0)  ; CBufferLoadLegacy(handle,regIndex)
  %860 = extractvalue %dx.types.CBufRet.i32 %859, 0
  %861 = extractvalue %dx.types.CBufRet.i32 %859, 1
  %862 = add i32 %860, %857
  %863 = add i32 %861, %856
  %864 = call %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32 59, %dx.types.Handle %76, i32 0)  ; CBufferLoadLegacy(handle,regIndex)
  %865 = extractvalue %dx.types.CBufRet.i32 %864, 2
  %866 = extractvalue %dx.types.CBufRet.i32 %864, 3
  %867 = call i32 @dx.op.binary.i32(i32 37, i32 %865, i32 %862)  ; IMax(a,b)
  %868 = call i32 @dx.op.binary.i32(i32 37, i32 %866, i32 %863)  ; IMax(a,b)
  %869 = call %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32 59, %dx.types.Handle %76, i32 1)  ; CBufferLoadLegacy(handle,regIndex)
  %870 = extractvalue %dx.types.CBufRet.i32 %869, 0
  %871 = extractvalue %dx.types.CBufRet.i32 %869, 1
  %872 = add i32 %865, -1
  %873 = add i32 %872, %870
  %874 = add i32 %866, -1
  %875 = add i32 %874, %871
  %876 = call i32 @dx.op.binary.i32(i32 38, i32 %873, i32 %867)  ; IMin(a,b)
  %877 = call i32 @dx.op.binary.i32(i32 38, i32 %875, i32 %868)  ; IMin(a,b)
  %878 = sub nsw i32 %877, %866
  %879 = mul nsw i32 %878, %870
  %880 = sub i32 %876, %865
  %881 = add nsw i32 %880, %879
  %882 = extractvalue %dx.types.CBufRet.i32 %864, 0
  %883 = call %dx.types.Handle @dx.op.createHandleForLib.dx.types.Handle(i32 160, %dx.types.Handle %42)  ; CreateHandleForLib(Resource)
  %884 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %883, %dx.types.ResourceProperties { i32 10, i32 261 })  ; AnnotateHandle(res,props)  resource: TypedBuffer<U32>
  %885 = call %dx.types.ResRet.i32 @dx.op.bufferLoad.i32(i32 68, %dx.types.Handle %884, i32 %882, i32 undef)  ; BufferLoad(srv,index,wot)
  %886 = extractvalue %dx.types.ResRet.i32 %885, 0
  %887 = add i32 %881, %886
  %888 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %80, i32 244)  ; CBufferLoadLegacy(handle,regIndex)
  %889 = extractvalue %dx.types.CBufRet.f32 %888, 0
  %890 = fcmp fast oge float %889, 0.000000e+00
  %891 = call %dx.types.Handle @dx.op.createHandleForLib.dx.types.Handle(i32 160, %dx.types.Handle %41)  ; CreateHandleForLib(Resource)
  %892 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %891, %dx.types.ResourceProperties { i32 10, i32 265 })  ; AnnotateHandle(res,props)  resource: TypedBuffer<F32>
  %893 = call %dx.types.ResRet.f32 @dx.op.bufferLoad.f32(i32 68, %dx.types.Handle %892, i32 %887, i32 undef)  ; BufferLoad(srv,index,wot)
  %894 = extractvalue %dx.types.ResRet.f32 %893, 0
  %895 = select i1 %890, float %889, float %894
  %896 = call %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32 59, %dx.types.Handle %74, i32 1)  ; CBufferLoadLegacy(handle,regIndex)
  %897 = extractvalue %dx.types.CBufRet.i32 %896, 0
  %898 = sitofp i32 %897 to float
  %899 = add i32 %886, %825
  %900 = call %dx.types.ResRet.f32 @dx.op.bufferLoad.f32(i32 68, %dx.types.Handle %892, i32 %899, i32 undef)  ; BufferLoad(srv,index,wot)
  %901 = extractvalue %dx.types.ResRet.f32 %900, 0
  %902 = select i1 %890, float %889, float %901
  %903 = call %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32 59, %dx.types.Handle %80, i32 244)  ; CBufferLoadLegacy(handle,regIndex)
  %904 = extractvalue %dx.types.CBufRet.i32 %903, 1
  %905 = sitofp i32 %904 to float
  %906 = fadd fast float %905, %902
  %907 = call float @dx.op.binary.f32(i32 36, float %906, float %898)  ; FMin(a,b)
  %908 = call float @dx.op.binary.f32(i32 35, float %895, float %907)  ; FMax(a,b)
  %909 = getelementptr inbounds [4 x float], [4 x float]* %66, i32 0, i32 %858
  %910 = fadd fast float %905, %908
  %911 = select i1 %890, float %889, float %910
  %912 = call float @dx.op.binary.f32(i32 36, float %911, float %898)  ; FMin(a,b)
  store float %912, float* %909, align 4, !tbaa !125, !noalias !82
  %913 = add nuw nsw i32 %858, 1
  %914 = icmp eq i32 %913, 4
  br i1 %914, label %920, label %915

; <label>:915                                     ; preds = %855
  %916 = getelementptr [4 x i32], [4 x i32]* @NeighborOffset.i.i.i.i.0.hca, i32 0, i32 %913
  %917 = load i32, i32* %916, align 4
  %918 = getelementptr [4 x i32], [4 x i32]* @NeighborOffset.i.i.i.i.1.hca, i32 0, i32 %913
  %919 = load i32, i32* %918, align 4
  br label %855

; <label>:920                                     ; preds = %855
  %921 = uitofp i32 %833 to float
  %922 = fsub fast float 1.000000e+00, %846
  %923 = fmul fast float %845, 2.000000e+00
  %924 = fmul fast float %922, 2.000000e+00
  %925 = fmul fast float %831, %923
  %926 = fmul fast float %831, %924
  %927 = fsub fast float 1.000000e+00, %923
  %928 = fsub fast float 1.000000e+00, %924
  %929 = getelementptr inbounds [4 x float], [4 x float]* %66, i32 0, i32 0
  %930 = load float, float* %929, align 4, !tbaa !125, !noalias !82
  %931 = getelementptr inbounds [4 x float], [4 x float]* %66, i32 0, i32 1
  %932 = load float, float* %931, align 4, !tbaa !125, !noalias !82
  %933 = getelementptr inbounds [4 x float], [4 x float]* %66, i32 0, i32 2
  %934 = load float, float* %933, align 4, !tbaa !125, !noalias !82
  %935 = getelementptr inbounds [4 x float], [4 x float]* %66, i32 0, i32 3
  %936 = load float, float* %935, align 4, !tbaa !125, !noalias !82
  call void @llvm.lifetime.end(i64 16, i8* %854) #0, !noalias !82
  call void @llvm.lifetime.end(i64 16, i8* bitcast ([4 x i32]* @NeighborOffset.i.i.i.i.0.hca to i8*)) #0
  call void @llvm.lifetime.end(i64 16, i8* bitcast ([4 x i32]* @NeighborOffset.i.i.i.i.1.hca to i8*)) #0
  %937 = fmul fast float %930, %852
  %938 = fmul fast float %932, %927
  %939 = fmul fast float %934, %853
  %940 = fmul fast float %936, %928
  %941 = fadd fast float %937, %850
  %942 = fadd fast float %938, %925
  %943 = fadd fast float %939, %851
  %944 = fadd fast float %940, %926
  %945 = fadd fast float %841, %842
  %946 = fdiv fast float %945, %844
  %947 = fcmp fast ogt float %946, 1.000000e+00
  %948 = fcmp fast olt float %845, %846
  %949 = select i1 %948, float %944, float %943
  %950 = select i1 %948, float %942, float %941
  %951 = select i1 %947, float %949, float %950
  %952 = call float @dx.op.unary.f32(i32 27, float %951)  ; Round_ni(value)
  %953 = fsub fast float %951, %952
  %954 = fsub fast float %952, %921
  %955 = fsub fast float -0.000000e+00, %954
  %956 = call float @dx.op.unary.f32(i32 21, float %955)  ; Exp(value)
  %957 = fmul fast float %956, %804
  %958 = call float @dx.op.unary.f32(i32 27, float %957)  ; Round_ni(value)
  %959 = fsub fast float -0.000000e+00, %952
  %960 = call float @dx.op.unary.f32(i32 21, float %959)  ; Exp(value)
  %961 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %74, i32 5)  ; CBufferLoadLegacy(handle,regIndex)
  %962 = extractvalue %dx.types.CBufRet.f32 %961, 0
  %963 = fmul fast float %962, %960
  %964 = fadd fast float %963, -1.000000e+00
  %965 = fmul fast float %960, 5.000000e-01
  %966 = fmul fast float %965, %962
  %967 = call float @dx.op.binary.f32(i32 35, float %966, float 2.000000e+00)  ; FMax(a,b)
  %968 = fadd fast float %967, -1.000000e+00
  %969 = extractvalue %dx.types.CBufRet.f32 %961, 1
  %970 = fmul fast float %969, %964
  %971 = fmul fast float %969, %968
  %972 = fdiv fast float %958, %970
  %973 = fmul fast float %958, 5.000000e-01
  %974 = call float @dx.op.unary.f32(i32 27, float %973)  ; Round_ni(value)
  %975 = fdiv fast float %974, %971
  %976 = fsub fast float %975, %972
  %977 = fmul fast float %976, %953
  %978 = fadd fast float %977, %972
  %979 = extractvalue %dx.types.CBufRet.f32 %961, 2
  %980 = fadd fast float %978, %979
  %981 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %74, i32 6)  ; CBufferLoadLegacy(handle,regIndex)
  %982 = extractvalue %dx.types.CBufRet.f32 %981, 3
  %983 = fmul fast float %982, %809
  %984 = fadd fast float %980, %983
  %985 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %74, i32 3)  ; CBufferLoadLegacy(handle,regIndex)
  %986 = extractvalue %dx.types.CBufRet.f32 %985, 0
  %987 = fmul fast float %986, %978
  %988 = extractvalue %dx.types.CBufRet.f32 %985, 2
  %989 = fadd fast float %987, %988
  %990 = extractvalue %dx.types.CBufRet.f32 %981, 2
  %991 = fmul fast float %990, %809
  %992 = fadd fast float %989, %991
  %993 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %74, i32 2)  ; CBufferLoadLegacy(handle,regIndex)
  %994 = extractvalue %dx.types.CBufRet.f32 %993, 0
  %995 = fmul fast float %994, %978
  %996 = extractvalue %dx.types.CBufRet.f32 %993, 2
  %997 = fadd fast float %995, %996
  %998 = fmul fast float %994, 5.000000e-01
  %999 = fadd fast float %997, %998
  %1000 = extractvalue %dx.types.CBufRet.f32 %981, 0
  %1001 = fmul fast float %1000, %809
  %1002 = fadd fast float %999, %1001
  %1003 = fmul fast float %956, %806
  %1004 = call float @dx.op.unary.f32(i32 27, float %1003)  ; Round_ni(value)
  %1005 = fdiv fast float %1004, %970
  %1006 = fmul fast float %1004, 5.000000e-01
  %1007 = call float @dx.op.unary.f32(i32 27, float %1006)  ; Round_ni(value)
  %1008 = fdiv fast float %1007, %971
  %1009 = fsub fast float %1008, %1005
  %1010 = fmul fast float %1009, %953
  %1011 = fadd fast float %1010, %1005
  %1012 = extractvalue %dx.types.CBufRet.f32 %961, 3
  %1013 = fadd fast float %1011, %1012
  %1014 = fmul fast float %982, %811
  %1015 = fadd fast float %1013, %1014
  %1016 = extractvalue %dx.types.CBufRet.f32 %985, 1
  %1017 = fmul fast float %1016, %1011
  %1018 = extractvalue %dx.types.CBufRet.f32 %985, 3
  %1019 = fadd fast float %1017, %1018
  %1020 = fmul fast float %990, %811
  %1021 = fadd fast float %1019, %1020
  %1022 = extractvalue %dx.types.CBufRet.f32 %993, 1
  %1023 = fmul fast float %1022, %1011
  %1024 = extractvalue %dx.types.CBufRet.f32 %993, 3
  %1025 = fadd fast float %1023, %1024
  %1026 = fmul fast float %1022, 5.000000e-01
  %1027 = fadd fast float %1025, %1026
  %1028 = extractvalue %dx.types.CBufRet.f32 %981, 1
  %1029 = fmul fast float %1028, %811
  %1030 = fadd fast float %1027, %1029
  %1031 = getelementptr [3 x float], [3 x float]* %67, i32 0, i32 %713
  %1032 = load float, float* %1031, align 4, !tbaa !125, !noalias !141
  %1033 = fmul fast float %1032, %984
  %1034 = fmul fast float %1032, %1015
  %1035 = fadd fast float %1033, %711
  %1036 = fadd fast float %1034, %712
  %1037 = fmul fast float %1032, %992
  %1038 = fmul fast float %1032, %1021
  %1039 = fmul fast float %1032, %1002
  %1040 = fmul fast float %1032, %1030
  %1041 = fadd fast float %1037, %707
  %1042 = fadd fast float %1038, %708
  %1043 = fadd fast float %1039, %709
  %1044 = fadd fast float %1040, %710
  %1045 = add nuw nsw i32 %713, 1
  %1046 = icmp eq i32 %1045, 3
  br i1 %1046, label %1047, label %706

; <label>:1047                                    ; preds = %920
  %1048 = and i32 %823, 1048575
  %1049 = extractvalue %dx.types.CBufRet.f32 %674, 0
  %1050 = extractvalue %dx.types.CBufRet.f32 %674, 2
  %1051 = extractvalue %dx.types.CBufRet.f32 %676, 0
  %1052 = extractvalue %dx.types.CBufRet.f32 %676, 2
  %1053 = extractvalue %dx.types.CBufRet.f32 %678, 1
  %1054 = extractvalue %dx.types.CBufRet.f32 %678, 3
  %1055 = extractvalue %dx.types.CBufRet.f32 %681, 1
  %1056 = extractvalue %dx.types.CBufRet.f32 %683, 0
  %1057 = extractvalue %dx.types.CBufRet.f32 %683, 2
  %1058 = call float @dx.op.legacyF16ToF32(i32 131, i32 %687)  ; LegacyF16ToF32(value)
  %1059 = fadd fast float %691, %1058
  call void @llvm.lifetime.end(i64 12, i8* %698) #0, !noalias !141
  %1060 = call %dx.types.Handle @dx.op.createHandleForLib.dx.types.Handle(i32 160, %dx.types.Handle %38)  ; CreateHandleForLib(Resource)
  %1061 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %1060, %dx.types.ResourceProperties { i32 2, i32 1033 })  ; AnnotateHandle(res,props)  resource: Texture2D<4xF32>
  %1062 = call %dx.types.Handle @dx.op.createHandleForLib.dx.types.Handle(i32 160, %dx.types.Handle %16)  ; CreateHandleForLib(Resource)
  %1063 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %1062, %dx.types.ResourceProperties { i32 14, i32 0 })  ; AnnotateHandle(res,props)  resource: SamplerState
  %1064 = call %dx.types.ResRet.f32 @dx.op.sampleLevel.f32(i32 62, %dx.types.Handle %1061, %dx.types.Handle %1063, float %1043, float %1044, float undef, float undef, i32 0, i32 0, i32 undef, float %673)  ; SampleLevel(srv,sampler,coord0,coord1,coord2,coord3,offset0,offset1,offset2,LOD)
  %1065 = extractvalue %dx.types.ResRet.f32 %1064, 2
  %1066 = extractvalue %dx.types.ResRet.f32 %1064, 3
  %1067 = fmul fast float %1065, 2.000000e+00
  %1068 = fmul fast float %1066, 2.000000e+00
  %1069 = fadd fast float %1067, -1.000000e+00
  %1070 = fadd fast float %1068, -1.000000e+00
  %1071 = call float @dx.op.dot2.f32(i32 54, float %1069, float %1070, float %1069, float %1070)  ; Dot2(ax,ay,bx,by)
  %1072 = fsub fast float 1.000000e+00, %1071
  %1073 = call float @dx.op.binary.f32(i32 35, float %1072, float 0.000000e+00)  ; FMax(a,b)
  %1074 = call float @dx.op.unary.f32(i32 24, float %1073)  ; Sqrt(value)
  %1075 = fsub fast float -0.000000e+00, %1069
  %1076 = call float @dx.op.dot3.f32(i32 55, float %1074, float 0.000000e+00, float %1075, float %1074, float 0.000000e+00, float %1075)  ; Dot3(ax,ay,az,bx,by,bz)
  %1077 = call float @dx.op.unary.f32(i32 25, float %1076)  ; Rsqrt(value)
  %1078 = fmul fast float %1077, %1074
  %1079 = fmul fast float %1077, %1075
  %1080 = fmul fast float %1079, %1070
  %1081 = fmul fast float %1078, %1074
  %1082 = fmul fast float %1079, %1069
  %1083 = fsub fast float %1081, %1082
  %1084 = fmul fast float %1070, %1078
  %1085 = fsub fast float -0.000000e+00, %1084
  %1086 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %74, i32 8)  ; CBufferLoadLegacy(handle,regIndex)
  %1087 = extractvalue %dx.types.CBufRet.f32 %1086, 0
  %1088 = extractvalue %dx.types.CBufRet.f32 %1086, 1
  %1089 = extractvalue %dx.types.CBufRet.f32 %1086, 2
  %1090 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %74, i32 9)  ; CBufferLoadLegacy(handle,regIndex)
  %1091 = extractvalue %dx.types.CBufRet.f32 %1090, 0
  %1092 = extractvalue %dx.types.CBufRet.f32 %1090, 1
  %1093 = extractvalue %dx.types.CBufRet.f32 %1090, 2
  %1094 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %74, i32 10)  ; CBufferLoadLegacy(handle,regIndex)
  %1095 = extractvalue %dx.types.CBufRet.f32 %1094, 0
  %1096 = extractvalue %dx.types.CBufRet.f32 %1094, 1
  %1097 = extractvalue %dx.types.CBufRet.f32 %1094, 2
  %1098 = fmul fast float %1087, %1078
  %1099 = call float @dx.op.tertiary.f32(i32 46, float %1079, float %1095, float %1098)  ; FMad(a,b,c)
  %1100 = fmul fast float %1088, %1078
  %1101 = call float @dx.op.tertiary.f32(i32 46, float %1079, float %1096, float %1100)  ; FMad(a,b,c)
  %1102 = fmul fast float %1089, %1078
  %1103 = call float @dx.op.tertiary.f32(i32 46, float %1079, float %1097, float %1102)  ; FMad(a,b,c)
  %1104 = fmul fast float %1080, %1087
  %1105 = call float @dx.op.tertiary.f32(i32 46, float %1083, float %1091, float %1104)  ; FMad(a,b,c)
  %1106 = call float @dx.op.tertiary.f32(i32 46, float %1085, float %1095, float %1105)  ; FMad(a,b,c)
  %1107 = fmul fast float %1080, %1088
  %1108 = call float @dx.op.tertiary.f32(i32 46, float %1083, float %1092, float %1107)  ; FMad(a,b,c)
  %1109 = call float @dx.op.tertiary.f32(i32 46, float %1085, float %1096, float %1108)  ; FMad(a,b,c)
  %1110 = fmul fast float %1080, %1089
  %1111 = call float @dx.op.tertiary.f32(i32 46, float %1083, float %1093, float %1110)  ; FMad(a,b,c)
  %1112 = call float @dx.op.tertiary.f32(i32 46, float %1085, float %1097, float %1111)  ; FMad(a,b,c)
  %1113 = fmul fast float %1087, %1069
  %1114 = call float @dx.op.tertiary.f32(i32 46, float %1070, float %1091, float %1113)  ; FMad(a,b,c)
  %1115 = call float @dx.op.tertiary.f32(i32 46, float %1074, float %1095, float %1114)  ; FMad(a,b,c)
  %1116 = fmul fast float %1088, %1069
  %1117 = call float @dx.op.tertiary.f32(i32 46, float %1070, float %1092, float %1116)  ; FMad(a,b,c)
  %1118 = call float @dx.op.tertiary.f32(i32 46, float %1074, float %1096, float %1117)  ; FMad(a,b,c)
  %1119 = fmul fast float %1089, %1069
  %1120 = call float @dx.op.tertiary.f32(i32 46, float %1070, float %1093, float %1119)  ; FMad(a,b,c)
  %1121 = call float @dx.op.tertiary.f32(i32 46, float %1074, float %1097, float %1120)  ; FMad(a,b,c)
  %1122 = call float @dx.op.worldRayOrigin.f32(i32 147, i8 0)  ; WorldRayOrigin(col)
  %1123 = call float @dx.op.worldRayOrigin.f32(i32 147, i8 1)  ; WorldRayOrigin(col)
  %1124 = call float @dx.op.worldRayOrigin.f32(i32 147, i8 2)  ; WorldRayOrigin(col)
  %1125 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %80, i32 329)  ; CBufferLoadLegacy(handle,regIndex)
  %1126 = extractvalue %dx.types.CBufRet.f32 %1125, 0
  %1127 = extractvalue %dx.types.CBufRet.f32 %1125, 1
  %1128 = extractvalue %dx.types.CBufRet.f32 %1125, 2
  %1129 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %80, i32 330)  ; CBufferLoadLegacy(handle,regIndex)
  %1130 = extractvalue %dx.types.CBufRet.f32 %1129, 0
  %1131 = extractvalue %dx.types.CBufRet.f32 %1129, 1
  %1132 = extractvalue %dx.types.CBufRet.f32 %1129, 2
  %1133 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %80, i32 64)  ; CBufferLoadLegacy(handle,regIndex)
  %1134 = extractvalue %dx.types.CBufRet.f32 %1133, 0
  %1135 = extractvalue %dx.types.CBufRet.f32 %1133, 1
  %1136 = extractvalue %dx.types.CBufRet.f32 %1133, 2
  %1137 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %80, i32 76)  ; CBufferLoadLegacy(handle,regIndex)
  %1138 = extractvalue %dx.types.CBufRet.f32 %1137, 0
  %1139 = extractvalue %dx.types.CBufRet.f32 %1137, 1
  %1140 = extractvalue %dx.types.CBufRet.f32 %1137, 2
  %1141 = fsub fast float %1130, %1134
  %1142 = fsub fast float %1131, %1135
  %1143 = fsub fast float %1132, %1136
  %1144 = call float @dx.op.worldRayDirection.f32(i32 148, i8 0)  ; WorldRayDirection(col)
  %1145 = call float @dx.op.worldRayDirection.f32(i32 148, i8 1)  ; WorldRayDirection(col)
  %1146 = call float @dx.op.worldRayDirection.f32(i32 148, i8 2)  ; WorldRayDirection(col)
  %1147 = call float @dx.op.rayTCurrent.f32(i32 154)  ; RayTCurrent()
  %1148 = fmul fast float %1147, %1144
  %1149 = fmul fast float %1147, %1145
  %1150 = fmul fast float %1147, %1146
  %1151 = call i32 @dx.op.hitKind.i32(i32 143)  ; HitKind()
  %1152 = icmp eq i32 %1151, 254
  %1153 = select i1 %1152, float 1.000000e+00, float -1.000000e+00
  %1154 = call %dx.types.Handle @dx.op.createHandleForLib.dx.types.Handle(i32 160, %dx.types.Handle %37)  ; CreateHandleForLib(Resource)
  %1155 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %1154, %dx.types.ResourceProperties { i32 2, i32 1033 })  ; AnnotateHandle(res,props)  resource: Texture2D<4xF32>
  %1156 = call %dx.types.Handle @dx.op.createHandleForLib.dx.types.Handle(i32 160, %dx.types.Handle %18)  ; CreateHandleForLib(Resource)
  %1157 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %1156, %dx.types.ResourceProperties { i32 14, i32 0 })  ; AnnotateHandle(res,props)  resource: SamplerState
  %1158 = call %dx.types.ResRet.f32 @dx.op.sampleLevel.f32(i32 62, %dx.types.Handle %1155, %dx.types.Handle %1157, float %1041, float %1042, float undef, float undef, i32 0, i32 0, i32 undef, float %673)  ; SampleLevel(srv,sampler,coord0,coord1,coord2,coord3,offset0,offset1,offset2,LOD)
  %1159 = extractvalue %dx.types.ResRet.f32 %1158, 0
  %1160 = extractvalue %dx.types.ResRet.f32 %1158, 1
  %1161 = extractvalue %dx.types.ResRet.f32 %1158, 2
  %1162 = extractvalue %dx.types.ResRet.f32 %1158, 3
  %1163 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %72, i32 1)  ; CBufferLoadLegacy(handle,regIndex)
  %1164 = extractvalue %dx.types.CBufRet.f32 %1163, 0
  %1165 = extractvalue %dx.types.CBufRet.f32 %1163, 1
  %1166 = extractvalue %dx.types.CBufRet.f32 %1163, 2
  %1167 = extractvalue %dx.types.CBufRet.f32 %1163, 3
  %1168 = call float @dx.op.dot4.f32(i32 56, float %1159, float %1160, float %1161, float %1162, float %1164, float %1165, float %1166, float %1167)  ; Dot4(ax,ay,az,aw,bx,by,bz,bw)
  %1169 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %72, i32 2)  ; CBufferLoadLegacy(handle,regIndex)
  %1170 = extractvalue %dx.types.CBufRet.f32 %1169, 0
  %1171 = extractvalue %dx.types.CBufRet.f32 %1169, 1
  %1172 = extractvalue %dx.types.CBufRet.f32 %1169, 2
  %1173 = extractvalue %dx.types.CBufRet.f32 %1169, 3
  %1174 = call float @dx.op.dot4.f32(i32 56, float %1159, float %1160, float %1161, float %1162, float %1170, float %1171, float %1172, float %1173)  ; Dot4(ax,ay,az,aw,bx,by,bz,bw)
  %1175 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %72, i32 3)  ; CBufferLoadLegacy(handle,regIndex)
  %1176 = extractvalue %dx.types.CBufRet.f32 %1175, 0
  %1177 = extractvalue %dx.types.CBufRet.f32 %1175, 1
  %1178 = extractvalue %dx.types.CBufRet.f32 %1175, 2
  %1179 = extractvalue %dx.types.CBufRet.f32 %1175, 3
  %1180 = call float @dx.op.dot4.f32(i32 56, float %1159, float %1160, float %1161, float %1162, float %1176, float %1177, float %1178, float %1179)  ; Dot4(ax,ay,az,aw,bx,by,bz,bw)
  %1181 = call %dx.types.Handle @dx.op.createHandleForLib.dx.types.Handle(i32 160, %dx.types.Handle %36)  ; CreateHandleForLib(Resource)
  %1182 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %1181, %dx.types.ResourceProperties { i32 2, i32 1033 })  ; AnnotateHandle(res,props)  resource: Texture2D<4xF32>
  %1183 = call %dx.types.ResRet.f32 @dx.op.sampleLevel.f32(i32 62, %dx.types.Handle %1182, %dx.types.Handle %1157, float %1041, float %1042, float undef, float undef, i32 0, i32 0, i32 undef, float %673)  ; SampleLevel(srv,sampler,coord0,coord1,coord2,coord3,offset0,offset1,offset2,LOD)
  %1184 = extractvalue %dx.types.ResRet.f32 %1183, 0
  %1185 = extractvalue %dx.types.ResRet.f32 %1183, 1
  %1186 = extractvalue %dx.types.ResRet.f32 %1183, 2
  %1187 = extractvalue %dx.types.ResRet.f32 %1183, 3
  %1188 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %72, i32 4)  ; CBufferLoadLegacy(handle,regIndex)
  %1189 = extractvalue %dx.types.CBufRet.f32 %1188, 0
  %1190 = extractvalue %dx.types.CBufRet.f32 %1188, 1
  %1191 = extractvalue %dx.types.CBufRet.f32 %1188, 2
  %1192 = extractvalue %dx.types.CBufRet.f32 %1188, 3
  %1193 = call float @dx.op.dot4.f32(i32 56, float %1184, float %1185, float %1186, float %1187, float %1189, float %1190, float %1191, float %1192)  ; Dot4(ax,ay,az,aw,bx,by,bz,bw)
  %1194 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %72, i32 5)  ; CBufferLoadLegacy(handle,regIndex)
  %1195 = extractvalue %dx.types.CBufRet.f32 %1194, 0
  %1196 = extractvalue %dx.types.CBufRet.f32 %1194, 1
  %1197 = extractvalue %dx.types.CBufRet.f32 %1194, 2
  %1198 = extractvalue %dx.types.CBufRet.f32 %1194, 3
  %1199 = call float @dx.op.dot4.f32(i32 56, float %1159, float %1160, float %1161, float %1162, float %1195, float %1196, float %1197, float %1198)  ; Dot4(ax,ay,az,aw,bx,by,bz,bw)
  %1200 = call float @dx.op.dot2.f32(i32 54, float %1035, float %1036, float -0.000000e+00, float 1.000000e+00)  ; Dot2(ax,ay,bx,by)
  %1201 = call float @dx.op.dot2.f32(i32 54, float %1035, float %1036, float 1.000000e+00, float 0.000000e+00)  ; Dot2(ax,ay,bx,by)
  %1202 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %72, i32 6)  ; CBufferLoadLegacy(handle,regIndex)
  %1203 = extractvalue %dx.types.CBufRet.f32 %1202, 0
  %1204 = fmul fast float %1203, %1201
  %1205 = fmul fast float %1203, %1200
  %1206 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %80, i32 144)  ; CBufferLoadLegacy(handle,regIndex)
  %1207 = extractvalue %dx.types.CBufRet.f32 %1206, 0
  %1208 = fadd fast float %1207, %673
  %1209 = call %dx.types.Handle @dx.op.createHandleForLib.dx.types.Handle(i32 160, %dx.types.Handle %35)  ; CreateHandleForLib(Resource)
  %1210 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %1209, %dx.types.ResourceProperties { i32 2, i32 1033 })  ; AnnotateHandle(res,props)  resource: Texture2D<4xF32>
  %1211 = call %dx.types.Handle @dx.op.createHandleForLib.dx.types.Handle(i32 160, %dx.types.Handle %15)  ; CreateHandleForLib(Resource)
  %1212 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %1211, %dx.types.ResourceProperties { i32 14, i32 0 })  ; AnnotateHandle(res,props)  resource: SamplerState
  %1213 = call %dx.types.ResRet.f32 @dx.op.sampleLevel.f32(i32 62, %dx.types.Handle %1210, %dx.types.Handle %1212, float %1204, float %1205, float undef, float undef, i32 0, i32 0, i32 undef, float %1208)  ; SampleLevel(srv,sampler,coord0,coord1,coord2,coord3,offset0,offset1,offset2,LOD)
  %1214 = extractvalue %dx.types.ResRet.f32 %1213, 0
  %1215 = extractvalue %dx.types.ResRet.f32 %1213, 1
  %1216 = fmul fast float %1214, 2.000000e+00
  %1217 = fmul fast float %1215, 2.000000e+00
  %1218 = fadd fast float %1216, -1.000000e+00
  %1219 = fadd fast float %1217, -1.000000e+00
  %1220 = call float @dx.op.dot2.f32(i32 54, float %1218, float %1219, float %1218, float %1219)  ; Dot2(ax,ay,bx,by)
  %1221 = fsub fast float 1.000000e+00, %1220
  %1222 = call float @dx.op.unary.f32(i32 7, float %1221)  ; Saturate(value)
  %1223 = call float @dx.op.unary.f32(i32 24, float %1222)  ; Sqrt(value)
  %1224 = fmul fast float %1218, %1168
  %1225 = fmul fast float %1219, %1168
  %1226 = fmul fast float %1223, %1168
  %1227 = extractvalue %dx.types.CBufRet.f32 %1202, 1
  %1228 = fmul fast float %1227, %1201
  %1229 = fmul fast float %1227, %1200
  %1230 = call %dx.types.Handle @dx.op.createHandleForLib.dx.types.Handle(i32 160, %dx.types.Handle %34)  ; CreateHandleForLib(Resource)
  %1231 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %1230, %dx.types.ResourceProperties { i32 2, i32 1033 })  ; AnnotateHandle(res,props)  resource: Texture2D<4xF32>
  %1232 = call %dx.types.Handle @dx.op.createHandleForLib.dx.types.Handle(i32 160, %dx.types.Handle %14)  ; CreateHandleForLib(Resource)
  %1233 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %1232, %dx.types.ResourceProperties { i32 14, i32 0 })  ; AnnotateHandle(res,props)  resource: SamplerState
  %1234 = call %dx.types.ResRet.f32 @dx.op.sampleLevel.f32(i32 62, %dx.types.Handle %1231, %dx.types.Handle %1233, float %1228, float %1229, float undef, float undef, i32 0, i32 0, i32 undef, float %1208)  ; SampleLevel(srv,sampler,coord0,coord1,coord2,coord3,offset0,offset1,offset2,LOD)
  %1235 = extractvalue %dx.types.ResRet.f32 %1234, 0
  %1236 = extractvalue %dx.types.ResRet.f32 %1234, 1
  %1237 = fmul fast float %1235, 2.000000e+00
  %1238 = fmul fast float %1236, 2.000000e+00
  %1239 = fadd fast float %1237, -1.000000e+00
  %1240 = fadd fast float %1238, -1.000000e+00
  %1241 = call float @dx.op.dot2.f32(i32 54, float %1239, float %1240, float %1239, float %1240)  ; Dot2(ax,ay,bx,by)
  %1242 = fsub fast float 1.000000e+00, %1241
  %1243 = call float @dx.op.unary.f32(i32 7, float %1242)  ; Saturate(value)
  %1244 = call float @dx.op.unary.f32(i32 24, float %1243)  ; Sqrt(value)
  %1245 = fmul fast float %1239, %1174
  %1246 = fmul fast float %1240, %1174
  %1247 = fmul fast float %1244, %1174
  %1248 = fadd fast float %1245, %1224
  %1249 = fadd fast float %1246, %1225
  %1250 = fadd fast float %1247, %1226
  %1251 = extractvalue %dx.types.CBufRet.f32 %1202, 2
  %1252 = fmul fast float %1251, %1201
  %1253 = fmul fast float %1251, %1200
  %1254 = call %dx.types.Handle @dx.op.createHandleForLib.dx.types.Handle(i32 160, %dx.types.Handle %33)  ; CreateHandleForLib(Resource)
  %1255 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %1254, %dx.types.ResourceProperties { i32 2, i32 1033 })  ; AnnotateHandle(res,props)  resource: Texture2D<4xF32>
  %1256 = call %dx.types.Handle @dx.op.createHandleForLib.dx.types.Handle(i32 160, %dx.types.Handle %13)  ; CreateHandleForLib(Resource)
  %1257 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %1256, %dx.types.ResourceProperties { i32 14, i32 0 })  ; AnnotateHandle(res,props)  resource: SamplerState
  %1258 = call %dx.types.ResRet.f32 @dx.op.sampleLevel.f32(i32 62, %dx.types.Handle %1255, %dx.types.Handle %1257, float %1252, float %1253, float undef, float undef, i32 0, i32 0, i32 undef, float %1208)  ; SampleLevel(srv,sampler,coord0,coord1,coord2,coord3,offset0,offset1,offset2,LOD)
  %1259 = extractvalue %dx.types.ResRet.f32 %1258, 0
  %1260 = extractvalue %dx.types.ResRet.f32 %1258, 1
  %1261 = fmul fast float %1259, 2.000000e+00
  %1262 = fmul fast float %1260, 2.000000e+00
  %1263 = fadd fast float %1261, -1.000000e+00
  %1264 = fadd fast float %1262, -1.000000e+00
  %1265 = call float @dx.op.dot2.f32(i32 54, float %1263, float %1264, float %1263, float %1264)  ; Dot2(ax,ay,bx,by)
  %1266 = fsub fast float 1.000000e+00, %1265
  %1267 = call float @dx.op.unary.f32(i32 7, float %1266)  ; Saturate(value)
  %1268 = call float @dx.op.unary.f32(i32 24, float %1267)  ; Sqrt(value)
  %1269 = fmul fast float %1263, %1180
  %1270 = fmul fast float %1264, %1180
  %1271 = fmul fast float %1268, %1180
  %1272 = fadd fast float %1248, %1269
  %1273 = fadd fast float %1249, %1270
  %1274 = fadd fast float %1250, %1271
  %1275 = extractvalue %dx.types.CBufRet.f32 %1202, 3
  %1276 = fmul fast float %1275, %1201
  %1277 = fmul fast float %1275, %1200
  %1278 = call %dx.types.Handle @dx.op.createHandleForLib.dx.types.Handle(i32 160, %dx.types.Handle %32)  ; CreateHandleForLib(Resource)
  %1279 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %1278, %dx.types.ResourceProperties { i32 2, i32 1033 })  ; AnnotateHandle(res,props)  resource: Texture2D<4xF32>
  %1280 = call %dx.types.Handle @dx.op.createHandleForLib.dx.types.Handle(i32 160, %dx.types.Handle %12)  ; CreateHandleForLib(Resource)
  %1281 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %1280, %dx.types.ResourceProperties { i32 14, i32 0 })  ; AnnotateHandle(res,props)  resource: SamplerState
  %1282 = call %dx.types.ResRet.f32 @dx.op.sampleLevel.f32(i32 62, %dx.types.Handle %1279, %dx.types.Handle %1281, float %1276, float %1277, float undef, float undef, i32 0, i32 0, i32 undef, float %1208)  ; SampleLevel(srv,sampler,coord0,coord1,coord2,coord3,offset0,offset1,offset2,LOD)
  %1283 = extractvalue %dx.types.ResRet.f32 %1282, 0
  %1284 = extractvalue %dx.types.ResRet.f32 %1282, 1
  %1285 = fmul fast float %1283, 2.000000e+00
  %1286 = fmul fast float %1284, 2.000000e+00
  %1287 = fadd fast float %1285, -1.000000e+00
  %1288 = fadd fast float %1286, -1.000000e+00
  %1289 = call float @dx.op.dot2.f32(i32 54, float %1287, float %1288, float %1287, float %1288)  ; Dot2(ax,ay,bx,by)
  %1290 = fsub fast float 1.000000e+00, %1289
  %1291 = call float @dx.op.unary.f32(i32 7, float %1290)  ; Saturate(value)
  %1292 = call float @dx.op.unary.f32(i32 24, float %1291)  ; Sqrt(value)
  %1293 = fmul fast float %1287, %1193
  %1294 = fmul fast float %1288, %1193
  %1295 = fmul fast float %1292, %1193
  %1296 = fadd fast float %1272, %1293
  %1297 = fadd fast float %1273, %1294
  %1298 = fadd fast float %1274, %1295
  %1299 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %72, i32 7)  ; CBufferLoadLegacy(handle,regIndex)
  %1300 = extractvalue %dx.types.CBufRet.f32 %1299, 0
  %1301 = fmul fast float %1300, %1201
  %1302 = fmul fast float %1300, %1200
  %1303 = call %dx.types.Handle @dx.op.createHandleForLib.dx.types.Handle(i32 160, %dx.types.Handle %31)  ; CreateHandleForLib(Resource)
  %1304 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %1303, %dx.types.ResourceProperties { i32 2, i32 1033 })  ; AnnotateHandle(res,props)  resource: Texture2D<4xF32>
  %1305 = call %dx.types.Handle @dx.op.createHandleForLib.dx.types.Handle(i32 160, %dx.types.Handle %11)  ; CreateHandleForLib(Resource)
  %1306 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %1305, %dx.types.ResourceProperties { i32 14, i32 0 })  ; AnnotateHandle(res,props)  resource: SamplerState
  %1307 = call %dx.types.ResRet.f32 @dx.op.sampleLevel.f32(i32 62, %dx.types.Handle %1304, %dx.types.Handle %1306, float %1301, float %1302, float undef, float undef, i32 0, i32 0, i32 undef, float %1208)  ; SampleLevel(srv,sampler,coord0,coord1,coord2,coord3,offset0,offset1,offset2,LOD)
  %1308 = extractvalue %dx.types.ResRet.f32 %1307, 0
  %1309 = extractvalue %dx.types.ResRet.f32 %1307, 1
  %1310 = fmul fast float %1308, 2.000000e+00
  %1311 = fmul fast float %1309, 2.000000e+00
  %1312 = fadd fast float %1310, -1.000000e+00
  %1313 = fadd fast float %1311, -1.000000e+00
  %1314 = call float @dx.op.dot2.f32(i32 54, float %1312, float %1313, float %1312, float %1313)  ; Dot2(ax,ay,bx,by)
  %1315 = fsub fast float 1.000000e+00, %1314
  %1316 = call float @dx.op.unary.f32(i32 7, float %1315)  ; Saturate(value)
  %1317 = call float @dx.op.unary.f32(i32 24, float %1316)  ; Sqrt(value)
  %1318 = fmul fast float %1312, %1199
  %1319 = fmul fast float %1313, %1199
  %1320 = fmul fast float %1317, %1199
  %1321 = fadd fast float %1296, %1318
  %1322 = fadd fast float %1297, %1319
  %1323 = fadd fast float %1298, %1320
  %1324 = fmul fast float %1321, %1054
  %1325 = fmul fast float %1322, %1054
  %1326 = fmul fast float %1323, %1054
  %1327 = fadd fast float %1324, %679
  %1328 = fadd fast float %1325, %1053
  %1329 = fadd fast float %1326, %680
  %1330 = call float @dx.op.dot3.f32(i32 55, float %1327, float %1328, float %1329, float %1327, float %1328, float %1329)  ; Dot3(ax,ay,az,bx,by,bz)
  %1331 = call float @dx.op.unary.f32(i32 25, float %1330)  ; Rsqrt(value)
  %1332 = fmul fast float %1327, %1331
  %1333 = fmul fast float %1328, %1331
  %1334 = fmul fast float %1329, %1331
  %1335 = fmul fast float %1332, %1099
  %1336 = call float @dx.op.tertiary.f32(i32 46, float %1333, float %1106, float %1335)  ; FMad(a,b,c)
  %1337 = call float @dx.op.tertiary.f32(i32 46, float %1334, float %1115, float %1336)  ; FMad(a,b,c)
  %1338 = fmul fast float %1332, %1101
  %1339 = call float @dx.op.tertiary.f32(i32 46, float %1333, float %1109, float %1338)  ; FMad(a,b,c)
  %1340 = call float @dx.op.tertiary.f32(i32 46, float %1334, float %1118, float %1339)  ; FMad(a,b,c)
  %1341 = fmul fast float %1332, %1103
  %1342 = call float @dx.op.tertiary.f32(i32 46, float %1333, float %1112, float %1341)  ; FMad(a,b,c)
  %1343 = call float @dx.op.tertiary.f32(i32 46, float %1334, float %1121, float %1342)  ; FMad(a,b,c)
  %1344 = call float @dx.op.dot3.f32(i32 55, float %1337, float %1340, float %1343, float %1337, float %1340, float %1343)  ; Dot3(ax,ay,az,bx,by,bz)
  %1345 = call float @dx.op.unary.f32(i32 25, float %1344)  ; Rsqrt(value)
  %1346 = fmul fast float %1337, %1153
  %1347 = fmul fast float %1346, %1345
  %1348 = fmul fast float %1340, %1153
  %1349 = fmul fast float %1348, %1345
  %1350 = fmul fast float %1343, %1153
  %1351 = fmul fast float %1350, %1345
  %1352 = extractvalue %dx.types.CBufRet.f32 %1299, 1
  %1353 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %72, i32 8)  ; CBufferLoadLegacy(handle,regIndex)
  %1354 = extractvalue %dx.types.CBufRet.f32 %1353, 0
  %1355 = extractvalue %dx.types.CBufRet.f32 %1353, 1
  %1356 = extractvalue %dx.types.CBufRet.f32 %1353, 2
  %1357 = fmul fast float %1354, %1352
  %1358 = fmul fast float %1355, %1352
  %1359 = fmul fast float %1356, %1352
  %1360 = call %dx.types.Handle @dx.op.createHandleForLib.dx.types.Handle(i32 160, %dx.types.Handle %30)  ; CreateHandleForLib(Resource)
  %1361 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %1360, %dx.types.ResourceProperties { i32 2, i32 1033 })  ; AnnotateHandle(res,props)  resource: Texture2D<4xF32>
  %1362 = call %dx.types.Handle @dx.op.createHandleForLib.dx.types.Handle(i32 160, %dx.types.Handle %10)  ; CreateHandleForLib(Resource)
  %1363 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %1362, %dx.types.ResourceProperties { i32 14, i32 0 })  ; AnnotateHandle(res,props)  resource: SamplerState
  %1364 = call %dx.types.ResRet.f32 @dx.op.sampleLevel.f32(i32 62, %dx.types.Handle %1361, %dx.types.Handle %1363, float %1204, float %1205, float undef, float undef, i32 0, i32 0, i32 undef, float %1208)  ; SampleLevel(srv,sampler,coord0,coord1,coord2,coord3,offset0,offset1,offset2,LOD)
  %1365 = extractvalue %dx.types.ResRet.f32 %1364, 0
  %1366 = extractvalue %dx.types.ResRet.f32 %1364, 1
  %1367 = extractvalue %dx.types.ResRet.f32 %1364, 2
  %1368 = fmul fast float %1365, %1168
  %1369 = fmul fast float %1366, %1168
  %1370 = fmul fast float %1367, %1168
  %1371 = call %dx.types.Handle @dx.op.createHandleForLib.dx.types.Handle(i32 160, %dx.types.Handle %29)  ; CreateHandleForLib(Resource)
  %1372 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %1371, %dx.types.ResourceProperties { i32 2, i32 1033 })  ; AnnotateHandle(res,props)  resource: Texture2D<4xF32>
  %1373 = call %dx.types.Handle @dx.op.createHandleForLib.dx.types.Handle(i32 160, %dx.types.Handle %9)  ; CreateHandleForLib(Resource)
  %1374 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %1373, %dx.types.ResourceProperties { i32 14, i32 0 })  ; AnnotateHandle(res,props)  resource: SamplerState
  %1375 = call %dx.types.ResRet.f32 @dx.op.sampleLevel.f32(i32 62, %dx.types.Handle %1372, %dx.types.Handle %1374, float %1228, float %1229, float undef, float undef, i32 0, i32 0, i32 undef, float %1208)  ; SampleLevel(srv,sampler,coord0,coord1,coord2,coord3,offset0,offset1,offset2,LOD)
  %1376 = extractvalue %dx.types.ResRet.f32 %1375, 0
  %1377 = extractvalue %dx.types.ResRet.f32 %1375, 1
  %1378 = extractvalue %dx.types.ResRet.f32 %1375, 2
  %1379 = fmul fast float %1376, %1174
  %1380 = fmul fast float %1377, %1174
  %1381 = fmul fast float %1378, %1174
  %1382 = fadd fast float %1379, %1368
  %1383 = fadd fast float %1380, %1369
  %1384 = fadd fast float %1381, %1370
  %1385 = call %dx.types.Handle @dx.op.createHandleForLib.dx.types.Handle(i32 160, %dx.types.Handle %28)  ; CreateHandleForLib(Resource)
  %1386 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %1385, %dx.types.ResourceProperties { i32 2, i32 1033 })  ; AnnotateHandle(res,props)  resource: Texture2D<4xF32>
  %1387 = call %dx.types.Handle @dx.op.createHandleForLib.dx.types.Handle(i32 160, %dx.types.Handle %8)  ; CreateHandleForLib(Resource)
  %1388 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %1387, %dx.types.ResourceProperties { i32 14, i32 0 })  ; AnnotateHandle(res,props)  resource: SamplerState
  %1389 = call %dx.types.ResRet.f32 @dx.op.sampleLevel.f32(i32 62, %dx.types.Handle %1386, %dx.types.Handle %1388, float %1252, float %1253, float undef, float undef, i32 0, i32 0, i32 undef, float %1208)  ; SampleLevel(srv,sampler,coord0,coord1,coord2,coord3,offset0,offset1,offset2,LOD)
  %1390 = extractvalue %dx.types.ResRet.f32 %1389, 0
  %1391 = extractvalue %dx.types.ResRet.f32 %1389, 1
  %1392 = extractvalue %dx.types.ResRet.f32 %1389, 2
  %1393 = fmul fast float %1390, %1180
  %1394 = fmul fast float %1391, %1180
  %1395 = fmul fast float %1392, %1180
  %1396 = fadd fast float %1382, %1393
  %1397 = fadd fast float %1383, %1394
  %1398 = fadd fast float %1384, %1395
  %1399 = call %dx.types.Handle @dx.op.createHandleForLib.dx.types.Handle(i32 160, %dx.types.Handle %27)  ; CreateHandleForLib(Resource)
  %1400 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %1399, %dx.types.ResourceProperties { i32 2, i32 1033 })  ; AnnotateHandle(res,props)  resource: Texture2D<4xF32>
  %1401 = call %dx.types.Handle @dx.op.createHandleForLib.dx.types.Handle(i32 160, %dx.types.Handle %7)  ; CreateHandleForLib(Resource)
  %1402 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %1401, %dx.types.ResourceProperties { i32 14, i32 0 })  ; AnnotateHandle(res,props)  resource: SamplerState
  %1403 = call %dx.types.ResRet.f32 @dx.op.sampleLevel.f32(i32 62, %dx.types.Handle %1400, %dx.types.Handle %1402, float %1276, float %1277, float undef, float undef, i32 0, i32 0, i32 undef, float %1208)  ; SampleLevel(srv,sampler,coord0,coord1,coord2,coord3,offset0,offset1,offset2,LOD)
  %1404 = extractvalue %dx.types.ResRet.f32 %1403, 0
  %1405 = extractvalue %dx.types.ResRet.f32 %1403, 1
  %1406 = extractvalue %dx.types.ResRet.f32 %1403, 2
  %1407 = fmul fast float %1404, %1193
  %1408 = fmul fast float %1405, %1193
  %1409 = fmul fast float %1406, %1193
  %1410 = fadd fast float %1396, %1407
  %1411 = fadd fast float %1397, %1408
  %1412 = fadd fast float %1398, %1409
  %1413 = call %dx.types.Handle @dx.op.createHandleForLib.dx.types.Handle(i32 160, %dx.types.Handle %26)  ; CreateHandleForLib(Resource)
  %1414 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %1413, %dx.types.ResourceProperties { i32 2, i32 1033 })  ; AnnotateHandle(res,props)  resource: Texture2D<4xF32>
  %1415 = call %dx.types.Handle @dx.op.createHandleForLib.dx.types.Handle(i32 160, %dx.types.Handle %6)  ; CreateHandleForLib(Resource)
  %1416 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %1415, %dx.types.ResourceProperties { i32 14, i32 0 })  ; AnnotateHandle(res,props)  resource: SamplerState
  %1417 = call %dx.types.ResRet.f32 @dx.op.sampleLevel.f32(i32 62, %dx.types.Handle %1414, %dx.types.Handle %1416, float %1301, float %1302, float undef, float undef, i32 0, i32 0, i32 undef, float %1208)  ; SampleLevel(srv,sampler,coord0,coord1,coord2,coord3,offset0,offset1,offset2,LOD)
  %1418 = extractvalue %dx.types.ResRet.f32 %1417, 0
  %1419 = extractvalue %dx.types.ResRet.f32 %1417, 1
  %1420 = extractvalue %dx.types.ResRet.f32 %1417, 2
  %1421 = fmul fast float %1418, %1199
  %1422 = fmul fast float %1419, %1199
  %1423 = fmul fast float %1420, %1199
  %1424 = fadd fast float %1410, %1421
  %1425 = fadd fast float %1411, %1422
  %1426 = fadd fast float %1412, %1423
  %1427 = call %dx.types.Handle @dx.op.createHandleForLib.dx.types.Handle(i32 160, %dx.types.Handle %25)  ; CreateHandleForLib(Resource)
  %1428 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %1427, %dx.types.ResourceProperties { i32 2, i32 1033 })  ; AnnotateHandle(res,props)  resource: Texture2D<4xF32>
  %1429 = call %dx.types.Handle @dx.op.createHandleForLib.dx.types.Handle(i32 160, %dx.types.Handle %5)  ; CreateHandleForLib(Resource)
  %1430 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %1429, %dx.types.ResourceProperties { i32 14, i32 0 })  ; AnnotateHandle(res,props)  resource: SamplerState
  %1431 = call %dx.types.ResRet.f32 @dx.op.sampleLevel.f32(i32 62, %dx.types.Handle %1428, %dx.types.Handle %1430, float %1204, float %1205, float undef, float undef, i32 0, i32 0, i32 undef, float %1208)  ; SampleLevel(srv,sampler,coord0,coord1,coord2,coord3,offset0,offset1,offset2,LOD)
  %1432 = extractvalue %dx.types.ResRet.f32 %1431, 0
  %1433 = fmul fast float %1432, %1168
  %1434 = call %dx.types.Handle @dx.op.createHandleForLib.dx.types.Handle(i32 160, %dx.types.Handle %24)  ; CreateHandleForLib(Resource)
  %1435 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %1434, %dx.types.ResourceProperties { i32 2, i32 1033 })  ; AnnotateHandle(res,props)  resource: Texture2D<4xF32>
  %1436 = call %dx.types.Handle @dx.op.createHandleForLib.dx.types.Handle(i32 160, %dx.types.Handle %4)  ; CreateHandleForLib(Resource)
  %1437 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %1436, %dx.types.ResourceProperties { i32 14, i32 0 })  ; AnnotateHandle(res,props)  resource: SamplerState
  %1438 = call %dx.types.ResRet.f32 @dx.op.sampleLevel.f32(i32 62, %dx.types.Handle %1435, %dx.types.Handle %1437, float %1228, float %1229, float undef, float undef, i32 0, i32 0, i32 undef, float %1208)  ; SampleLevel(srv,sampler,coord0,coord1,coord2,coord3,offset0,offset1,offset2,LOD)
  %1439 = extractvalue %dx.types.ResRet.f32 %1438, 0
  %1440 = fmul fast float %1439, %1174
  %1441 = fadd fast float %1440, %1433
  %1442 = call %dx.types.Handle @dx.op.createHandleForLib.dx.types.Handle(i32 160, %dx.types.Handle %23)  ; CreateHandleForLib(Resource)
  %1443 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %1442, %dx.types.ResourceProperties { i32 2, i32 1033 })  ; AnnotateHandle(res,props)  resource: Texture2D<4xF32>
  %1444 = call %dx.types.Handle @dx.op.createHandleForLib.dx.types.Handle(i32 160, %dx.types.Handle %3)  ; CreateHandleForLib(Resource)
  %1445 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %1444, %dx.types.ResourceProperties { i32 14, i32 0 })  ; AnnotateHandle(res,props)  resource: SamplerState
  %1446 = call %dx.types.ResRet.f32 @dx.op.sampleLevel.f32(i32 62, %dx.types.Handle %1443, %dx.types.Handle %1445, float %1252, float %1253, float undef, float undef, i32 0, i32 0, i32 undef, float %1208)  ; SampleLevel(srv,sampler,coord0,coord1,coord2,coord3,offset0,offset1,offset2,LOD)
  %1447 = extractvalue %dx.types.ResRet.f32 %1446, 0
  %1448 = fmul fast float %1447, %1180
  %1449 = fadd fast float %1441, %1448
  %1450 = call %dx.types.Handle @dx.op.createHandleForLib.dx.types.Handle(i32 160, %dx.types.Handle %22)  ; CreateHandleForLib(Resource)
  %1451 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %1450, %dx.types.ResourceProperties { i32 2, i32 1033 })  ; AnnotateHandle(res,props)  resource: Texture2D<4xF32>
  %1452 = call %dx.types.Handle @dx.op.createHandleForLib.dx.types.Handle(i32 160, %dx.types.Handle %2)  ; CreateHandleForLib(Resource)
  %1453 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %1452, %dx.types.ResourceProperties { i32 14, i32 0 })  ; AnnotateHandle(res,props)  resource: SamplerState
  %1454 = call %dx.types.ResRet.f32 @dx.op.sampleLevel.f32(i32 62, %dx.types.Handle %1451, %dx.types.Handle %1453, float %1276, float %1277, float undef, float undef, i32 0, i32 0, i32 undef, float %1208)  ; SampleLevel(srv,sampler,coord0,coord1,coord2,coord3,offset0,offset1,offset2,LOD)
  %1455 = extractvalue %dx.types.ResRet.f32 %1454, 0
  %1456 = fmul fast float %1455, %1193
  %1457 = fadd fast float %1449, %1456
  %1458 = call %dx.types.Handle @dx.op.createHandleForLib.dx.types.Handle(i32 160, %dx.types.Handle %21)  ; CreateHandleForLib(Resource)
  %1459 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %1458, %dx.types.ResourceProperties { i32 2, i32 1033 })  ; AnnotateHandle(res,props)  resource: Texture2D<4xF32>
  %1460 = call %dx.types.Handle @dx.op.createHandleForLib.dx.types.Handle(i32 160, %dx.types.Handle %1)  ; CreateHandleForLib(Resource)
  %1461 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %1460, %dx.types.ResourceProperties { i32 14, i32 0 })  ; AnnotateHandle(res,props)  resource: SamplerState
  %1462 = call %dx.types.ResRet.f32 @dx.op.sampleLevel.f32(i32 62, %dx.types.Handle %1459, %dx.types.Handle %1461, float %1301, float %1302, float undef, float undef, i32 0, i32 0, i32 undef, float %1208)  ; SampleLevel(srv,sampler,coord0,coord1,coord2,coord3,offset0,offset1,offset2,LOD)
  %1463 = extractvalue %dx.types.ResRet.f32 %1462, 0
  %1464 = fmul fast float %1463, %1199
  %1465 = fadd fast float %1457, %1464
  %1466 = mul nuw nsw i32 %1048, 42
  %1467 = call %dx.types.ResRet.f32 @dx.op.rawBufferLoad.f32(i32 139, %dx.types.Handle %815, i32 %1466, i32 0, i8 15, i32 4)  ; RawBufferLoad(srv,index,elementOffset,mask,alignment)
  %1468 = extractvalue %dx.types.ResRet.f32 %1467, 0
  %1469 = bitcast float %1468 to i32
  %1470 = zext i1 %1152 to i32
  %1471 = and i32 %84, 16777216
  %1472 = icmp eq i32 %1471, 0
  %1473 = call float @dx.op.unary.f32(i32 7, float %1424)  ; Saturate(value)
  %1474 = call float @dx.op.unary.f32(i32 7, float %1425)  ; Saturate(value)
  %1475 = call float @dx.op.unary.f32(i32 7, float %1426)  ; Saturate(value)
  %1476 = call float @dx.op.unary.f32(i32 7, float %1465)  ; Saturate(value)
  %1477 = fmul fast float %1476, %1055
  %1478 = fadd fast float %1477, %682
  %1479 = call float @dx.op.dot3.f32(i32 55, float %1347, float %1349, float %1351, float %1347, float %1349, float %1351)  ; Dot3(ax,ay,az,bx,by,bz)
  %1480 = call float @dx.op.unary.f32(i32 25, float %1479)  ; Rsqrt(value)
  %1481 = fmul fast float %1480, %1347
  %1482 = fmul fast float %1480, %1349
  %1483 = fmul fast float %1480, %1351
  %1484 = call float @dx.op.binary.f32(i32 35, float %1357, float 0.000000e+00)  ; FMax(a,b)
  %1485 = call float @dx.op.binary.f32(i32 35, float %1358, float 0.000000e+00)  ; FMax(a,b)
  %1486 = call float @dx.op.binary.f32(i32 35, float %1359, float 0.000000e+00)  ; FMax(a,b)
  %1487 = fadd fast float %1141, %1049
  %1488 = fmul fast float %1487, 2.097152e+06
  %1489 = fsub fast float %1122, %1051
  %1490 = fsub fast float %1489, %1126
  %1491 = fadd fast float %1490, %1138
  %1492 = fadd fast float %1491, %1148
  %1493 = fadd fast float %1492, %1488
  %1494 = fadd fast float %1142, %675
  %1495 = fmul fast float %1494, 2.097152e+06
  %1496 = fsub fast float %1123, %677
  %1497 = fsub fast float %1496, %1127
  %1498 = fadd fast float %1497, %1139
  %1499 = fadd fast float %1498, %1149
  %1500 = fadd fast float %1499, %1495
  %1501 = fadd fast float %1143, %1050
  %1502 = fmul fast float %1501, 2.097152e+06
  %1503 = fsub fast float %1124, %1052
  %1504 = fsub fast float %1503, %1128
  %1505 = fadd fast float %1504, %1140
  %1506 = fadd fast float %1505, %1150
  %1507 = fadd fast float %1506, %1502
  %1508 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %80, i32 232)  ; CBufferLoadLegacy(handle,regIndex)
  %1509 = extractvalue %dx.types.CBufRet.f32 %1508, 0
  %1510 = extractvalue %dx.types.CBufRet.f32 %1508, 1
  %1511 = extractvalue %dx.types.CBufRet.f32 %1508, 2
  %1512 = fmul fast float %1509, %1493
  %1513 = fmul fast float %1510, %1500
  %1514 = fmul fast float %1511, %1507
  %1515 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %80, i32 233)  ; CBufferLoadLegacy(handle,regIndex)
  %1516 = extractvalue %dx.types.CBufRet.f32 %1515, 0
  %1517 = extractvalue %dx.types.CBufRet.f32 %1515, 1
  %1518 = extractvalue %dx.types.CBufRet.f32 %1515, 2
  %1519 = fadd fast float %1512, %1516
  %1520 = fadd fast float %1513, %1517
  %1521 = fadd fast float %1514, %1518
  %1522 = call float @dx.op.binary.f32(i32 35, float %1519, float 0.000000e+00)  ; FMax(a,b)
  %1523 = call float @dx.op.binary.f32(i32 35, float %1520, float 0.000000e+00)  ; FMax(a,b)
  %1524 = call float @dx.op.binary.f32(i32 35, float %1521, float 0.000000e+00)  ; FMax(a,b)
  %1525 = call float @dx.op.binary.f32(i32 36, float %1522, float 0x3FEFAE1480000000)  ; FMin(a,b)
  %1526 = call float @dx.op.binary.f32(i32 36, float %1523, float 0x3FEFAE1480000000)  ; FMin(a,b)
  %1527 = call float @dx.op.binary.f32(i32 36, float %1524, float 0x3FEFAE1480000000)  ; FMin(a,b)
  %1528 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %80, i32 234)  ; CBufferLoadLegacy(handle,regIndex)
  %1529 = extractvalue %dx.types.CBufRet.f32 %1528, 0
  %1530 = extractvalue %dx.types.CBufRet.f32 %1528, 1
  %1531 = extractvalue %dx.types.CBufRet.f32 %1528, 2
  %1532 = fmul fast float %1529, %1525
  %1533 = fmul fast float %1530, %1526
  %1534 = fmul fast float %1531, %1527
  %1535 = fptosi float %1532 to i32
  %1536 = fptosi float %1533 to i32
  %1537 = fptosi float %1534 to i32
  %1538 = call %dx.types.Handle @dx.op.createHandleForLib.dx.types.Handle(i32 160, %dx.types.Handle %54)  ; CreateHandleForLib(Resource)
  %1539 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %1538, %dx.types.ResourceProperties { i32 4, i32 1029 })  ; AnnotateHandle(res,props)  resource: Texture3D<4xU32>
  %1540 = call %dx.types.ResRet.i32 @dx.op.textureLoad.i32(i32 66, %dx.types.Handle %1539, i32 0, i32 %1535, i32 %1536, i32 %1537, i32 undef, i32 undef, i32 undef)  ; TextureLoad(srv,mipLevelOrSampleCount,coord0,coord1,coord2,offset0,offset1,offset2)
  %1541 = extractvalue %dx.types.ResRet.i32 %1540, 0
  %1542 = extractvalue %dx.types.ResRet.i32 %1540, 1
  %1543 = extractvalue %dx.types.ResRet.i32 %1540, 2
  %1544 = extractvalue %dx.types.ResRet.i32 %1540, 3
  %1545 = uitofp i32 %1541 to float
  %1546 = uitofp i32 %1542 to float
  %1547 = uitofp i32 %1543 to float
  %1548 = uitofp i32 %1544 to float
  %1549 = extractvalue %dx.types.CBufRet.f32 %1528, 3
  %1550 = fadd fast float %1549, 1.000000e+00
  %1551 = fmul fast float %1550, %1545
  %1552 = fmul fast float %1550, %1546
  %1553 = fmul fast float %1550, %1547
  %1554 = fdiv fast float %1532, %1548
  %1555 = fdiv fast float %1533, %1548
  %1556 = fdiv fast float %1534, %1548
  %1557 = call float @dx.op.unary.f32(i32 22, float %1554)  ; Frc(value)
  %1558 = call float @dx.op.unary.f32(i32 22, float %1555)  ; Frc(value)
  %1559 = call float @dx.op.unary.f32(i32 22, float %1556)  ; Frc(value)
  %1560 = fmul fast float %1549, %1557
  %1561 = fmul fast float %1549, %1558
  %1562 = fmul fast float %1549, %1559
  %1563 = fadd fast float %1551, 5.000000e-01
  %1564 = fadd fast float %1563, %1560
  %1565 = fadd fast float %1552, 5.000000e-01
  %1566 = fadd fast float %1565, %1561
  %1567 = fadd fast float %1553, 5.000000e-01
  %1568 = fadd fast float %1567, %1562
  %1569 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %80, i32 235)  ; CBufferLoadLegacy(handle,regIndex)
  %1570 = extractvalue %dx.types.CBufRet.f32 %1569, 0
  %1571 = extractvalue %dx.types.CBufRet.f32 %1569, 1
  %1572 = extractvalue %dx.types.CBufRet.f32 %1569, 2
  %1573 = fmul fast float %1564, %1570
  %1574 = fmul fast float %1566, %1571
  %1575 = fmul fast float %1568, %1572
  %1576 = call %dx.types.Handle @dx.op.createHandleForLib.dx.types.Handle(i32 160, %dx.types.Handle %53)  ; CreateHandleForLib(Resource)
  %1577 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %1576, %dx.types.ResourceProperties { i32 4, i32 1033 })  ; AnnotateHandle(res,props)  resource: Texture3D<4xF32>
  %1578 = call %dx.types.Handle @dx.op.createHandleForLib.dx.types.Handle(i32 160, %dx.types.Handle %19)  ; CreateHandleForLib(Resource)
  %1579 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %1578, %dx.types.ResourceProperties { i32 14, i32 0 })  ; AnnotateHandle(res,props)  resource: SamplerState
  %1580 = call %dx.types.ResRet.f32 @dx.op.sampleLevel.f32(i32 62, %dx.types.Handle %1577, %dx.types.Handle %1579, float %1573, float %1574, float %1575, float undef, i32 0, i32 0, i32 0, float 0.000000e+00)  ; SampleLevel(srv,sampler,coord0,coord1,coord2,coord3,offset0,offset1,offset2,LOD)
  %1581 = extractvalue %dx.types.ResRet.f32 %1580, 0
  %1582 = extractvalue %dx.types.ResRet.f32 %1580, 1
  %1583 = extractvalue %dx.types.ResRet.f32 %1580, 2
  %1584 = call %dx.types.Handle @dx.op.createHandleForLib.dx.types.Handle(i32 160, %dx.types.Handle %52)  ; CreateHandleForLib(Resource)
  %1585 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %1584, %dx.types.ResourceProperties { i32 4, i32 1033 })  ; AnnotateHandle(res,props)  resource: Texture3D<4xF32>
  %1586 = call %dx.types.ResRet.f32 @dx.op.sampleLevel.f32(i32 62, %dx.types.Handle %1585, %dx.types.Handle %1579, float %1573, float %1574, float %1575, float undef, i32 0, i32 0, i32 0, float 0.000000e+00)  ; SampleLevel(srv,sampler,coord0,coord1,coord2,coord3,offset0,offset1,offset2,LOD)
  %1587 = extractvalue %dx.types.ResRet.f32 %1586, 0
  %1588 = extractvalue %dx.types.ResRet.f32 %1586, 1
  %1589 = extractvalue %dx.types.ResRet.f32 %1586, 2
  %1590 = extractvalue %dx.types.ResRet.f32 %1586, 3
  %1591 = fmul fast float %1587, 2.000000e+00
  %1592 = fmul fast float %1588, 2.000000e+00
  %1593 = fmul fast float %1589, 2.000000e+00
  %1594 = fmul fast float %1590, 2.000000e+00
  %1595 = fadd fast float %1591, -1.000000e+00
  %1596 = fadd fast float %1592, -1.000000e+00
  %1597 = fadd fast float %1593, -1.000000e+00
  %1598 = fadd fast float %1594, -1.000000e+00
  %1599 = call %dx.types.Handle @dx.op.createHandleForLib.dx.types.Handle(i32 160, %dx.types.Handle %50)  ; CreateHandleForLib(Resource)
  %1600 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %1599, %dx.types.ResourceProperties { i32 4, i32 1033 })  ; AnnotateHandle(res,props)  resource: Texture3D<4xF32>
  %1601 = call %dx.types.ResRet.f32 @dx.op.sampleLevel.f32(i32 62, %dx.types.Handle %1600, %dx.types.Handle %1579, float %1573, float %1574, float %1575, float undef, i32 0, i32 0, i32 0, float 0.000000e+00)  ; SampleLevel(srv,sampler,coord0,coord1,coord2,coord3,offset0,offset1,offset2,LOD)
  %1602 = extractvalue %dx.types.ResRet.f32 %1601, 0
  %1603 = extractvalue %dx.types.ResRet.f32 %1601, 1
  %1604 = extractvalue %dx.types.ResRet.f32 %1601, 2
  %1605 = extractvalue %dx.types.ResRet.f32 %1601, 3
  %1606 = fmul fast float %1602, 2.000000e+00
  %1607 = fmul fast float %1603, 2.000000e+00
  %1608 = fmul fast float %1604, 2.000000e+00
  %1609 = fmul fast float %1605, 2.000000e+00
  %1610 = fadd fast float %1606, -1.000000e+00
  %1611 = fadd fast float %1607, -1.000000e+00
  %1612 = fadd fast float %1608, -1.000000e+00
  %1613 = fadd fast float %1609, -1.000000e+00
  %1614 = call %dx.types.Handle @dx.op.createHandleForLib.dx.types.Handle(i32 160, %dx.types.Handle %48)  ; CreateHandleForLib(Resource)
  %1615 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %1614, %dx.types.ResourceProperties { i32 4, i32 1033 })  ; AnnotateHandle(res,props)  resource: Texture3D<4xF32>
  %1616 = call %dx.types.ResRet.f32 @dx.op.sampleLevel.f32(i32 62, %dx.types.Handle %1615, %dx.types.Handle %1579, float %1573, float %1574, float %1575, float undef, i32 0, i32 0, i32 0, float 0.000000e+00)  ; SampleLevel(srv,sampler,coord0,coord1,coord2,coord3,offset0,offset1,offset2,LOD)
  %1617 = extractvalue %dx.types.ResRet.f32 %1616, 0
  %1618 = extractvalue %dx.types.ResRet.f32 %1616, 1
  %1619 = extractvalue %dx.types.ResRet.f32 %1616, 2
  %1620 = extractvalue %dx.types.ResRet.f32 %1616, 3
  %1621 = fmul fast float %1617, 2.000000e+00
  %1622 = fmul fast float %1618, 2.000000e+00
  %1623 = fmul fast float %1619, 2.000000e+00
  %1624 = fmul fast float %1620, 2.000000e+00
  %1625 = fadd fast float %1621, -1.000000e+00
  %1626 = fadd fast float %1622, -1.000000e+00
  %1627 = fadd fast float %1623, -1.000000e+00
  %1628 = fadd fast float %1624, -1.000000e+00
  %1629 = fmul fast float %1581, 0x3FFBB67B80000000
  %1630 = fmul fast float %1629, %1595
  %1631 = fmul fast float %1629, %1596
  %1632 = fmul fast float %1629, %1597
  %1633 = fmul fast float %1581, 0x400EFBDC80000000
  %1634 = fmul fast float %1633, %1598
  %1635 = fmul fast float %1582, 0x3FFBB67B80000000
  %1636 = fmul fast float %1635, %1610
  %1637 = fmul fast float %1635, %1611
  %1638 = fmul fast float %1635, %1612
  %1639 = fmul fast float %1582, 0x400EFBDC80000000
  %1640 = fmul fast float %1639, %1613
  %1641 = fmul fast float %1583, 0x3FFBB67B80000000
  %1642 = fmul fast float %1641, %1625
  %1643 = fmul fast float %1641, %1626
  %1644 = fmul fast float %1641, %1627
  %1645 = fmul fast float %1583, 0x400EFBDC80000000
  %1646 = fmul fast float %1645, %1628
  %1647 = call %dx.types.Handle @dx.op.createHandleForLib.dx.types.Handle(i32 160, %dx.types.Handle %51)  ; CreateHandleForLib(Resource)
  %1648 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %1647, %dx.types.ResourceProperties { i32 4, i32 1033 })  ; AnnotateHandle(res,props)  resource: Texture3D<4xF32>
  %1649 = call %dx.types.ResRet.f32 @dx.op.sampleLevel.f32(i32 62, %dx.types.Handle %1648, %dx.types.Handle %1579, float %1573, float %1574, float %1575, float undef, i32 0, i32 0, i32 0, float 0.000000e+00)  ; SampleLevel(srv,sampler,coord0,coord1,coord2,coord3,offset0,offset1,offset2,LOD)
  %1650 = extractvalue %dx.types.ResRet.f32 %1649, 0
  %1651 = extractvalue %dx.types.ResRet.f32 %1649, 1
  %1652 = extractvalue %dx.types.ResRet.f32 %1649, 2
  %1653 = extractvalue %dx.types.ResRet.f32 %1649, 3
  %1654 = fmul fast float %1650, 2.000000e+00
  %1655 = fmul fast float %1651, 2.000000e+00
  %1656 = fmul fast float %1652, 2.000000e+00
  %1657 = fmul fast float %1653, 2.000000e+00
  %1658 = fadd fast float %1654, -1.000000e+00
  %1659 = fadd fast float %1655, -1.000000e+00
  %1660 = fadd fast float %1656, -1.000000e+00
  %1661 = fadd fast float %1657, -1.000000e+00
  %1662 = call %dx.types.Handle @dx.op.createHandleForLib.dx.types.Handle(i32 160, %dx.types.Handle %49)  ; CreateHandleForLib(Resource)
  %1663 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %1662, %dx.types.ResourceProperties { i32 4, i32 1033 })  ; AnnotateHandle(res,props)  resource: Texture3D<4xF32>
  %1664 = call %dx.types.ResRet.f32 @dx.op.sampleLevel.f32(i32 62, %dx.types.Handle %1663, %dx.types.Handle %1579, float %1573, float %1574, float %1575, float undef, i32 0, i32 0, i32 0, float 0.000000e+00)  ; SampleLevel(srv,sampler,coord0,coord1,coord2,coord3,offset0,offset1,offset2,LOD)
  %1665 = extractvalue %dx.types.ResRet.f32 %1664, 0
  %1666 = extractvalue %dx.types.ResRet.f32 %1664, 1
  %1667 = extractvalue %dx.types.ResRet.f32 %1664, 2
  %1668 = extractvalue %dx.types.ResRet.f32 %1664, 3
  %1669 = fmul fast float %1665, 2.000000e+00
  %1670 = fmul fast float %1666, 2.000000e+00
  %1671 = fmul fast float %1667, 2.000000e+00
  %1672 = fmul fast float %1668, 2.000000e+00
  %1673 = fadd fast float %1669, -1.000000e+00
  %1674 = fadd fast float %1670, -1.000000e+00
  %1675 = fadd fast float %1671, -1.000000e+00
  %1676 = fadd fast float %1672, -1.000000e+00
  %1677 = call %dx.types.Handle @dx.op.createHandleForLib.dx.types.Handle(i32 160, %dx.types.Handle %47)  ; CreateHandleForLib(Resource)
  %1678 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %1677, %dx.types.ResourceProperties { i32 4, i32 1033 })  ; AnnotateHandle(res,props)  resource: Texture3D<4xF32>
  %1679 = call %dx.types.ResRet.f32 @dx.op.sampleLevel.f32(i32 62, %dx.types.Handle %1678, %dx.types.Handle %1579, float %1573, float %1574, float %1575, float undef, i32 0, i32 0, i32 0, float 0.000000e+00)  ; SampleLevel(srv,sampler,coord0,coord1,coord2,coord3,offset0,offset1,offset2,LOD)
  %1680 = extractvalue %dx.types.ResRet.f32 %1679, 0
  %1681 = extractvalue %dx.types.ResRet.f32 %1679, 1
  %1682 = extractvalue %dx.types.ResRet.f32 %1679, 2
  %1683 = extractvalue %dx.types.ResRet.f32 %1679, 3
  %1684 = fmul fast float %1680, 2.000000e+00
  %1685 = fmul fast float %1681, 2.000000e+00
  %1686 = fmul fast float %1682, 2.000000e+00
  %1687 = fmul fast float %1683, 2.000000e+00
  %1688 = fadd fast float %1684, -1.000000e+00
  %1689 = fadd fast float %1685, -1.000000e+00
  %1690 = fadd fast float %1686, -1.000000e+00
  %1691 = fadd fast float %1687, -1.000000e+00
  %1692 = fmul fast float %1633, %1658
  %1693 = fmul fast float %1581, 0x4011E37860000000
  %1694 = fmul fast float %1693, %1659
  %1695 = fmul fast float %1633, %1660
  %1696 = fmul fast float %1639, %1673
  %1697 = fmul fast float %1582, 0x4011E37860000000
  %1698 = fmul fast float %1697, %1674
  %1699 = fmul fast float %1639, %1675
  %1700 = fmul fast float %1645, %1688
  %1701 = fmul fast float %1583, 0x4011E37860000000
  %1702 = fmul fast float %1701, %1689
  %1703 = fmul fast float %1645, %1690
  %1704 = fmul fast float %1481, %1481
  %1705 = fmul fast float %1482, %1482
  %1706 = fsub fast float %1704, %1705
  %1707 = fmul fast float %1482, 0xBFF05F8CE0000000
  %1708 = fmul fast float %1483, 0x3FF05F8CE0000000
  %1709 = fmul fast float %1481, 0xBFF05F8CE0000000
  %1710 = fmul fast float %1481, 0x3FEB756F20000000
  %1711 = fmul fast float %1710, %1482
  %1712 = fmul fast float %1482, 0xBFEB756F20000000
  %1713 = fmul fast float %1712, %1483
  %1714 = fmul fast float %1483, %1483
  %1715 = fmul fast float %1714, 0x3FE7C7ADC0000000
  %1716 = fadd fast float %1715, 0xBFCFB4E7C0000000
  %1717 = fmul fast float %1481, 0xBFEB756F20000000
  %1718 = fmul fast float %1717, %1483
  %1719 = call float @dx.op.dot4.f32(i32 56, float %1581, float %1630, float %1631, float %1632, float 0x3FEC5BF9E0000000, float %1707, float %1708, float %1709)  ; Dot4(ax,ay,az,aw,bx,by,bz,bw)
  %1720 = call float @dx.op.dot4.f32(i32 56, float %1634, float %1692, float %1694, float %1695, float %1711, float %1713, float %1716, float %1718)  ; Dot4(ax,ay,az,aw,bx,by,bz,bw)
  %1721 = fmul fast float %1706, 0x3FFA963680000000
  %1722 = fmul fast float %1721, %1581
  %1723 = fmul fast float %1722, %1661
  %1724 = fadd fast float %1719, %1723
  %1725 = fadd fast float %1724, %1720
  %1726 = call float @dx.op.dot4.f32(i32 56, float %1582, float %1636, float %1637, float %1638, float 0x3FEC5BF9E0000000, float %1707, float %1708, float %1709)  ; Dot4(ax,ay,az,aw,bx,by,bz,bw)
  %1727 = call float @dx.op.dot4.f32(i32 56, float %1640, float %1696, float %1698, float %1699, float %1711, float %1713, float %1716, float %1718)  ; Dot4(ax,ay,az,aw,bx,by,bz,bw)
  %1728 = fmul fast float %1721, %1582
  %1729 = fmul fast float %1728, %1676
  %1730 = fadd fast float %1726, %1729
  %1731 = fadd fast float %1730, %1727
  %1732 = call float @dx.op.dot4.f32(i32 56, float %1583, float %1642, float %1643, float %1644, float 0x3FEC5BF9E0000000, float %1707, float %1708, float %1709)  ; Dot4(ax,ay,az,aw,bx,by,bz,bw)
  %1733 = call float @dx.op.dot4.f32(i32 56, float %1646, float %1700, float %1702, float %1703, float %1711, float %1713, float %1716, float %1718)  ; Dot4(ax,ay,az,aw,bx,by,bz,bw)
  %1734 = fadd fast float %1733, %1732
  %1735 = fmul fast float %1721, %1583
  %1736 = fmul fast float %1735, %1691
  %1737 = fadd fast float %1734, %1736
  %1738 = call float @dx.op.binary.f32(i32 35, float 0.000000e+00, float %1725)  ; FMax(a,b)
  %1739 = call float @dx.op.binary.f32(i32 35, float 0.000000e+00, float %1731)  ; FMax(a,b)
  %1740 = call float @dx.op.binary.f32(i32 35, float 0.000000e+00, float %1737)  ; FMax(a,b)
  %1741 = fmul fast float %1738, 0x3FD45F3060000000
  %1742 = fmul fast float %1739, 0x3FD45F3060000000
  %1743 = fmul fast float %1740, 0x3FD45F3060000000
  %1744 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %80, i32 159)  ; CBufferLoadLegacy(handle,regIndex)
  %1745 = extractvalue %dx.types.CBufRet.f32 %1744, 0
  %1746 = extractvalue %dx.types.CBufRet.f32 %1744, 1
  %1747 = extractvalue %dx.types.CBufRet.f32 %1744, 2
  %1748 = fmul fast float %1741, %1745
  %1749 = fmul fast float %1742, %1746
  %1750 = fmul fast float %1743, %1747
  br i1 %1472, label %1869, label %1751

; <label>:1751                                    ; preds = %1047
  %1752 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %80, i32 186)  ; CBufferLoadLegacy(handle,regIndex)
  %1753 = extractvalue %dx.types.CBufRet.f32 %1752, 1
  %1754 = fcmp fast une float %1753, 0.000000e+00
  br i1 %1754, label %1755, label %1795, !dx.controlflow.hints !143

; <label>:1755                                    ; preds = %1751
  %1756 = call %dx.types.Handle @dx.op.createHandleForLib.dx.types.Handle(i32 160, %dx.types.Handle %46)  ; CreateHandleForLib(Resource)
  %1757 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %1756, %dx.types.ResourceProperties { i32 4, i32 1033 })  ; AnnotateHandle(res,props)  resource: Texture3D<4xF32>
  %1758 = call %dx.types.ResRet.f32 @dx.op.sampleLevel.f32(i32 62, %dx.types.Handle %1757, %dx.types.Handle %1579, float %1573, float %1574, float %1575, float undef, i32 0, i32 0, i32 0, float 0.000000e+00)  ; SampleLevel(srv,sampler,coord0,coord1,coord2,coord3,offset0,offset1,offset2,LOD)
  %1759 = extractvalue %dx.types.ResRet.f32 %1758, 0
  %1760 = extractvalue %dx.types.ResRet.f32 %1758, 1
  %1761 = extractvalue %dx.types.ResRet.f32 %1758, 2
  %1762 = fmul fast float %1759, 2.000000e+00
  %1763 = fmul fast float %1760, 2.000000e+00
  %1764 = fmul fast float %1761, 2.000000e+00
  %1765 = fadd fast float %1762, -1.000000e+00
  %1766 = fadd fast float %1763, -1.000000e+00
  %1767 = fadd fast float %1764, -1.000000e+00
  %1768 = fmul fast float %1765, %1765
  %1769 = fmul fast float %1766, %1766
  %1770 = fadd fast float %1768, %1769
  %1771 = fmul fast float %1767, %1767
  %1772 = fadd fast float %1770, %1771
  %1773 = call float @dx.op.unary.f32(i32 24, float %1772)  ; Sqrt(value)
  %1774 = call float @dx.op.binary.f32(i32 35, float %1773, float 0x3F1A36E2E0000000)  ; FMax(a,b)
  %1775 = fdiv fast float %1765, %1774
  %1776 = fdiv fast float %1766, %1774
  %1777 = fdiv fast float %1767, %1774
  %1778 = fsub fast float 1.000000e+00, %1773
  %1779 = fmul fast float %1778, %1778
  %1780 = fsub fast float 1.000000e+00, %1779
  %1781 = fsub fast float %1481, %1775
  %1782 = fsub fast float %1482, %1776
  %1783 = fsub fast float %1483, %1777
  %1784 = fmul fast float %1780, %1781
  %1785 = fmul fast float %1782, %1780
  %1786 = fmul fast float %1783, %1780
  %1787 = fadd fast float %1784, %1775
  %1788 = fadd fast float %1785, %1776
  %1789 = fadd fast float %1786, %1777
  %1790 = call float @dx.op.dot3.f32(i32 55, float %1775, float %1776, float %1777, float %1481, float %1482, float %1483)  ; Dot3(ax,ay,az,bx,by,bz)
  %1791 = call float @dx.op.unary.f32(i32 7, float %1790)  ; Saturate(value)
  %1792 = fsub fast float 1.000000e+00, %1791
  %1793 = fmul fast float %1792, %1780
  %1794 = fadd fast float %1793, %1791
  br label %1795

; <label>:1795                                    ; preds = %1755, %1751
  %1796 = phi float [ %1773, %1755 ], [ 1.000000e+00, %1751 ]
  %1797 = phi float [ %1794, %1755 ], [ 1.000000e+00, %1751 ]
  %1798 = phi float [ %1787, %1755 ], [ %1481, %1751 ]
  %1799 = phi float [ %1788, %1755 ], [ %1482, %1751 ]
  %1800 = phi float [ %1789, %1755 ], [ %1483, %1751 ]
  %1801 = call %dx.types.Handle @dx.op.createHandleForLib.dx.types.Handle(i32 160, %dx.types.Handle %43)  ; CreateHandleForLib(Resource)
  %1802 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %1801, %dx.types.ResourceProperties { i32 12, i32 16 })  ; AnnotateHandle(res,props)  resource: StructuredBuffer<stride=16>
  %1803 = call %dx.types.ResRet.f32 @dx.op.rawBufferLoad.f32(i32 139, %dx.types.Handle %1802, i32 0, i32 0, i8 15, i32 4)  ; RawBufferLoad(srv,index,elementOffset,mask,alignment)
  %1804 = extractvalue %dx.types.ResRet.f32 %1803, 0
  %1805 = extractvalue %dx.types.ResRet.f32 %1803, 1
  %1806 = extractvalue %dx.types.ResRet.f32 %1803, 2
  %1807 = extractvalue %dx.types.ResRet.f32 %1803, 3
  %1808 = call float @dx.op.dot4.f32(i32 56, float %1804, float %1805, float %1806, float %1807, float %1798, float %1799, float %1800, float 1.000000e+00)  ; Dot4(ax,ay,az,aw,bx,by,bz,bw)
  %1809 = call %dx.types.ResRet.f32 @dx.op.rawBufferLoad.f32(i32 139, %dx.types.Handle %1802, i32 1, i32 0, i8 15, i32 4)  ; RawBufferLoad(srv,index,elementOffset,mask,alignment)
  %1810 = extractvalue %dx.types.ResRet.f32 %1809, 0
  %1811 = extractvalue %dx.types.ResRet.f32 %1809, 1
  %1812 = extractvalue %dx.types.ResRet.f32 %1809, 2
  %1813 = extractvalue %dx.types.ResRet.f32 %1809, 3
  %1814 = call float @dx.op.dot4.f32(i32 56, float %1810, float %1811, float %1812, float %1813, float %1798, float %1799, float %1800, float 1.000000e+00)  ; Dot4(ax,ay,az,aw,bx,by,bz,bw)
  %1815 = call %dx.types.ResRet.f32 @dx.op.rawBufferLoad.f32(i32 139, %dx.types.Handle %1802, i32 2, i32 0, i8 15, i32 4)  ; RawBufferLoad(srv,index,elementOffset,mask,alignment)
  %1816 = extractvalue %dx.types.ResRet.f32 %1815, 0
  %1817 = extractvalue %dx.types.ResRet.f32 %1815, 1
  %1818 = extractvalue %dx.types.ResRet.f32 %1815, 2
  %1819 = extractvalue %dx.types.ResRet.f32 %1815, 3
  %1820 = call float @dx.op.dot4.f32(i32 56, float %1816, float %1817, float %1818, float %1819, float %1798, float %1799, float %1800, float 1.000000e+00)  ; Dot4(ax,ay,az,aw,bx,by,bz,bw)
  %1821 = fmul fast float %1799, %1798
  %1822 = fmul fast float %1800, %1799
  %1823 = fmul fast float %1800, %1800
  %1824 = fmul fast float %1800, %1798
  %1825 = call %dx.types.ResRet.f32 @dx.op.rawBufferLoad.f32(i32 139, %dx.types.Handle %1802, i32 3, i32 0, i8 15, i32 4)  ; RawBufferLoad(srv,index,elementOffset,mask,alignment)
  %1826 = extractvalue %dx.types.ResRet.f32 %1825, 0
  %1827 = extractvalue %dx.types.ResRet.f32 %1825, 1
  %1828 = extractvalue %dx.types.ResRet.f32 %1825, 2
  %1829 = extractvalue %dx.types.ResRet.f32 %1825, 3
  %1830 = call float @dx.op.dot4.f32(i32 56, float %1826, float %1827, float %1828, float %1829, float %1821, float %1822, float %1823, float %1824)  ; Dot4(ax,ay,az,aw,bx,by,bz,bw)
  %1831 = call %dx.types.ResRet.f32 @dx.op.rawBufferLoad.f32(i32 139, %dx.types.Handle %1802, i32 4, i32 0, i8 15, i32 4)  ; RawBufferLoad(srv,index,elementOffset,mask,alignment)
  %1832 = extractvalue %dx.types.ResRet.f32 %1831, 0
  %1833 = extractvalue %dx.types.ResRet.f32 %1831, 1
  %1834 = extractvalue %dx.types.ResRet.f32 %1831, 2
  %1835 = extractvalue %dx.types.ResRet.f32 %1831, 3
  %1836 = call float @dx.op.dot4.f32(i32 56, float %1832, float %1833, float %1834, float %1835, float %1821, float %1822, float %1823, float %1824)  ; Dot4(ax,ay,az,aw,bx,by,bz,bw)
  %1837 = call %dx.types.ResRet.f32 @dx.op.rawBufferLoad.f32(i32 139, %dx.types.Handle %1802, i32 5, i32 0, i8 15, i32 4)  ; RawBufferLoad(srv,index,elementOffset,mask,alignment)
  %1838 = extractvalue %dx.types.ResRet.f32 %1837, 0
  %1839 = extractvalue %dx.types.ResRet.f32 %1837, 1
  %1840 = extractvalue %dx.types.ResRet.f32 %1837, 2
  %1841 = extractvalue %dx.types.ResRet.f32 %1837, 3
  %1842 = call float @dx.op.dot4.f32(i32 56, float %1838, float %1839, float %1840, float %1841, float %1821, float %1822, float %1823, float %1824)  ; Dot4(ax,ay,az,aw,bx,by,bz,bw)
  %1843 = fmul fast float %1798, %1798
  %1844 = fmul fast float %1799, %1799
  %1845 = fsub fast float %1843, %1844
  %1846 = call %dx.types.ResRet.f32 @dx.op.rawBufferLoad.f32(i32 139, %dx.types.Handle %1802, i32 6, i32 0, i8 15, i32 4)  ; RawBufferLoad(srv,index,elementOffset,mask,alignment)
  %1847 = extractvalue %dx.types.ResRet.f32 %1846, 0
  %1848 = extractvalue %dx.types.ResRet.f32 %1846, 1
  %1849 = extractvalue %dx.types.ResRet.f32 %1846, 2
  %1850 = fmul fast float %1847, %1845
  %1851 = fmul fast float %1848, %1845
  %1852 = fmul fast float %1849, %1845
  %1853 = fadd fast float %1830, %1808
  %1854 = fadd fast float %1836, %1814
  %1855 = fadd fast float %1842, %1820
  %1856 = fadd fast float %1853, %1850
  %1857 = fadd fast float %1854, %1851
  %1858 = fadd fast float %1855, %1852
  %1859 = call float @dx.op.binary.f32(i32 35, float 0.000000e+00, float %1856)  ; FMax(a,b)
  %1860 = call float @dx.op.binary.f32(i32 35, float 0.000000e+00, float %1857)  ; FMax(a,b)
  %1861 = call float @dx.op.binary.f32(i32 35, float 0.000000e+00, float %1858)  ; FMax(a,b)
  %1862 = fmul fast float %1797, %1796
  %1863 = fmul fast float %1862, %1056
  %1864 = fmul fast float %1863, %1859
  %1865 = fmul fast float %1862, %684
  %1866 = fmul fast float %1865, %1860
  %1867 = fmul fast float %1862, %1057
  %1868 = fmul fast float %1867, %1861
  br label %1869

; <label>:1869                                    ; preds = %1795, %1047
  %1870 = phi float [ %1864, %1795 ], [ 0.000000e+00, %1047 ]
  %1871 = phi float [ %1866, %1795 ], [ 0.000000e+00, %1047 ]
  %1872 = phi float [ %1868, %1795 ], [ 0.000000e+00, %1047 ]
  %1873 = fadd fast float %1870, %1748
  %1874 = fadd fast float %1871, %1749
  %1875 = fadd fast float %1872, %1750
  %1876 = call i32 @dx.op.legacyF32ToF16(i32 130, float %1059)  ; LegacyF32ToF16(value)
  %1877 = call i32 @dx.op.legacyF32ToF16(i32 130, float %689)  ; LegacyF32ToF16(value)
  %1878 = shl i32 %1877, 16
  %1879 = or i32 %1878, %1876
  %1880 = call i32 @dx.op.legacyF32ToF16(i32 130, float %1484)  ; LegacyF32ToF16(value)
  %1881 = call i32 @dx.op.legacyF32ToF16(i32 130, float %1485)  ; LegacyF32ToF16(value)
  %1882 = shl i32 %1881, 16
  %1883 = or i32 %1882, %1880
  %1884 = call i32 @dx.op.legacyF32ToF16(i32 130, float %1486)  ; LegacyF32ToF16(value)
  %1885 = call i32 @dx.op.legacyF32ToF16(i32 130, float %1481)  ; LegacyF32ToF16(value)
  %1886 = shl i32 %1885, 16
  %1887 = or i32 %1886, %1884
  %1888 = call i32 @dx.op.legacyF32ToF16(i32 130, float %1482)  ; LegacyF32ToF16(value)
  %1889 = call i32 @dx.op.legacyF32ToF16(i32 130, float %1483)  ; LegacyF32ToF16(value)
  %1890 = shl i32 %1889, 16
  %1891 = or i32 %1890, %1888
  %1892 = call i32 @dx.op.legacyF32ToF16(i32 130, float %1473)  ; LegacyF32ToF16(value)
  %1893 = call i32 @dx.op.legacyF32ToF16(i32 130, float %1474)  ; LegacyF32ToF16(value)
  %1894 = shl i32 %1893, 16
  %1895 = or i32 %1894, %1892
  %1896 = call i32 @dx.op.legacyF32ToF16(i32 130, float %1475)  ; LegacyF32ToF16(value)
  %1897 = call i32 @dx.op.legacyF32ToF16(i32 130, float 1.000000e+00)  ; LegacyF32ToF16(value)
  %1898 = shl i32 %1897, 16
  %1899 = or i32 %1898, %1896
  %1900 = call i32 @dx.op.legacyF32ToF16(i32 130, float %1478)  ; LegacyF32ToF16(value)
  %1901 = shl i32 %1900, 16
  %1902 = or i32 %1901, 32768
  %1903 = shl nuw nsw i32 %1470, 23
  %1904 = shl i32 %1469, 19
  %1905 = and i32 %1904, -536870912
  %1906 = or i32 %1903, %1905
  %1907 = or i32 %1906, %1897
  %1908 = or i32 %1907, 65536
  %1909 = call i32 @dx.op.legacyF32ToF16(i32 130, float %1873)  ; LegacyF32ToF16(value)
  %1910 = call i32 @dx.op.legacyF32ToF16(i32 130, float %1874)  ; LegacyF32ToF16(value)
  %1911 = shl i32 %1910, 16
  %1912 = or i32 %1911, %1909
  %1913 = call i32 @dx.op.legacyF32ToF16(i32 130, float %1875)  ; LegacyF32ToF16(value)
  %1914 = call i32 @dx.op.legacyF32ToF16(i32 130, float 0.000000e+00)  ; LegacyF32ToF16(value)
  %1915 = shl i32 %1914, 16
  %1916 = or i32 %1915, %1914
  store float %1147, float* %82, align 4
  store i32 %1879, i32* %685, align 4
  store float 0.000000e+00, float* %672, align 4
  %1917 = getelementptr inbounds %struct.FPackedMaterialClosestHitPayload, %struct.FPackedMaterialClosestHitPayload* %PackedPayload, i32 0, i32 3, i32 0
  store i32 %1883, i32* %1917, align 4
  %1918 = getelementptr inbounds %struct.FPackedMaterialClosestHitPayload, %struct.FPackedMaterialClosestHitPayload* %PackedPayload, i32 0, i32 3, i32 1
  store i32 %1887, i32* %1918, align 4
  %1919 = getelementptr inbounds %struct.FPackedMaterialClosestHitPayload, %struct.FPackedMaterialClosestHitPayload* %PackedPayload, i32 0, i32 3, i32 2
  store i32 %1891, i32* %1919, align 4
  %1920 = getelementptr inbounds %struct.FPackedMaterialClosestHitPayload, %struct.FPackedMaterialClosestHitPayload* %PackedPayload, i32 0, i32 4, i32 0
  store i32 %1895, i32* %1920, align 4
  %1921 = getelementptr inbounds %struct.FPackedMaterialClosestHitPayload, %struct.FPackedMaterialClosestHitPayload* %PackedPayload, i32 0, i32 4, i32 1
  store i32 %1899, i32* %1921, align 4
  %1922 = getelementptr inbounds %struct.FPackedMaterialClosestHitPayload, %struct.FPackedMaterialClosestHitPayload* %PackedPayload, i32 0, i32 5
  store i32 %1902, i32* %1922, align 4
  store i32 %1908, i32* %83, align 4
  %1923 = getelementptr inbounds %struct.FPackedMaterialClosestHitPayload, %struct.FPackedMaterialClosestHitPayload* %PackedPayload, i32 0, i32 7, i32 0
  store i32 %1912, i32* %1923, align 4
  %1924 = getelementptr inbounds %struct.FPackedMaterialClosestHitPayload, %struct.FPackedMaterialClosestHitPayload* %PackedPayload, i32 0, i32 7, i32 1
  store i32 %1913, i32* %1924, align 4
  %1925 = getelementptr inbounds %struct.FPackedMaterialClosestHitPayload, %struct.FPackedMaterialClosestHitPayload* %PackedPayload, i32 0, i32 8
  store i32 6911, i32* %1925, align 4
  %1926 = getelementptr inbounds %struct.FPackedMaterialClosestHitPayload, %struct.FPackedMaterialClosestHitPayload* %PackedPayload, i32 0, i32 9, i32 0
  store i32 %1916, i32* %1926, align 4
  %1927 = getelementptr inbounds %struct.FPackedMaterialClosestHitPayload, %struct.FPackedMaterialClosestHitPayload* %PackedPayload, i32 0, i32 9, i32 1
  store i32 %1916, i32* %1927, align 4
  %1928 = getelementptr inbounds %struct.FPackedMaterialClosestHitPayload, %struct.FPackedMaterialClosestHitPayload* %PackedPayload, i32 0, i32 10
  store i32 0, i32* %1928, align 4
  br i1 %86, label %1929, label %1945

; <label>:1929                                    ; preds = %1869
  %1930 = call i32 @dx.op.instanceIndex.i32(i32 142)  ; InstanceIndex()
  %1931 = call %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32 59, %dx.types.Handle %70, i32 1)  ; CBufferLoadLegacy(handle,regIndex)
  %1932 = extractvalue %dx.types.CBufRet.i32 %1931, 0
  %1933 = sub i32 %1930, %1932
  %1934 = mul i32 %802, 42
  %1935 = call %dx.types.Handle @dx.op.createHandleForLib.dx.types.Handle(i32 160, %dx.types.Handle %45)  ; CreateHandleForLib(Resource)
  %1936 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %1935, %dx.types.ResourceProperties { i32 12, i32 16 })  ; AnnotateHandle(res,props)  resource: StructuredBuffer<stride=16>
  %1937 = call %dx.types.ResRet.f32 @dx.op.rawBufferLoad.f32(i32 139, %dx.types.Handle %1936, i32 %1934, i32 0, i8 15, i32 4)  ; RawBufferLoad(srv,index,elementOffset,mask,alignment)
  %1938 = extractvalue %dx.types.ResRet.f32 %1937, 2
  %1939 = bitcast float %1938 to i32
  %1940 = icmp eq i32 %1939, 1
  %1941 = select i1 %1940, i32 0, i32 %1933
  %1942 = extractvalue %dx.types.ResRet.f32 %1937, 1
  %1943 = bitcast float %1942 to i32
  %1944 = add i32 %1943, %1941
  store i32 %1944, i32* %1927, align 4, !tbaa !129
  br label %1945

; <label>:1945                                    ; preds = %1929, %1869, %668
  ret void
}

; Function Attrs: nounwind readnone
declare float @dx.op.binary.f32(i32, float, float) #1

; Function Attrs: nounwind readnone
declare float @dx.op.unary.f32(i32, float) #1

; Function Attrs: nounwind readnone
declare i32 @dx.op.instanceID.i32(i32) #1

; Function Attrs: nounwind readnone
declare i32 @dx.op.primitiveIndex.i32(i32) #1

; Function Attrs: nounwind readnone
declare i32 @dx.op.hitKind.i32(i32) #1

; Function Attrs: nounwind readnone
declare i32 @dx.op.instanceIndex.i32(i32) #1

; Function Attrs: nounwind readnone
declare float @dx.op.dot3.f32(i32, float, float, float, float, float, float) #1

; Function Attrs: nounwind readnone
declare i32 @dx.op.legacyF32ToF16(i32, float) #1

; Function Attrs: nounwind readnone
declare float @dx.op.tertiary.f32(i32, float, float, float) #1

; Function Attrs: nounwind readonly
declare %dx.types.ResRet.f32 @dx.op.sampleLevel.f32(i32, %dx.types.Handle, %dx.types.Handle, float, float, float, float, i32, i32, i32, float) #2

; Function Attrs: nounwind readnone
declare float @dx.op.dot2.f32(i32, float, float, float, float) #1

; Function Attrs: nounwind readnone
declare float @dx.op.dot4.f32(i32, float, float, float, float, float, float, float, float) #1

; Function Attrs: nounwind readnone
declare float @dx.op.legacyF16ToF32(i32, i32) #1

; Function Attrs: nounwind readnone
declare float @dx.op.worldRayOrigin.f32(i32, i8) #1

; Function Attrs: nounwind readnone
declare float @dx.op.worldRayDirection.f32(i32, i8) #1

; Function Attrs: nounwind readonly
declare %dx.types.ResRet.i32 @dx.op.rawBufferLoad.i32(i32, %dx.types.Handle, i32, i32, i8, i32) #2

; Function Attrs: nounwind readonly
declare %dx.types.ResRet.f32 @dx.op.bufferLoad.f32(i32, %dx.types.Handle, i32, i32) #2

; Function Attrs: nounwind readonly
declare %dx.types.ResRet.f32 @dx.op.rawBufferLoad.f32(i32, %dx.types.Handle, i32, i32, i8, i32) #2

; Function Attrs: nounwind readonly
declare %dx.types.ResRet.i32 @dx.op.bufferLoad.i32(i32, %dx.types.Handle, i32, i32) #2

; Function Attrs: nounwind readnone
declare i32 @dx.op.binary.i32(i32, i32, i32) #1

; Function Attrs: nounwind readonly
declare %dx.types.ResRet.i32 @dx.op.textureLoad.i32(i32, %dx.types.Handle, i32, i32, i32, i32, i32, i32, i32) #2

; Function Attrs: nounwind readonly
declare float @dx.op.rayTCurrent.f32(i32) #2

; Function Attrs: nounwind readonly
declare %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32, %dx.types.Handle, i32) #2

; Function Attrs: nounwind readonly
declare %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32, %dx.types.Handle, i32) #2

; Function Attrs: nounwind readnone
declare %dx.types.Handle @dx.op.annotateHandle(i32, %dx.types.Handle, %dx.types.ResourceProperties) #1

; Function Attrs: nounwind readonly
declare %dx.types.Handle @dx.op.createHandleForLib.dx.types.Handle(i32, %dx.types.Handle) #2

attributes #0 = { nounwind }
attributes #1 = { nounwind readnone }
attributes #2 = { nounwind readonly }

!llvm.ident = !{!0}
!dx.version = !{!1}
!dx.valver = !{!1}
!dx.shaderModel = !{!2}
!dx.resources = !{!3}
!dx.entryPoints = !{!70, !73}

!0 = !{!"clang version 3.7.0 (tags/RELEASE_370/final)"}
!1 = !{i32 1, i32 6}
!2 = !{!"lib", i32 6, i32 6}
!3 = !{!4, null, !43, !50}
!4 = !{!5, !7, !9, !10, !11, !12, !13, !14, !15, !16, !18, !19, !20, !21, !22, !23, !24, !25, !26, !27, !28, !29, !30, !31, !32, !33, !34, !35, !36, !37, !38, !39, !40, !41, !42}
!5 = !{i32 0, %"class.Texture3D<vector<unsigned int, 4> >"* bitcast (%dx.types.Handle* @"\01?View_VolumetricLightmapIndirectionTexture@@3V?$Texture3D@V?$vector@I$03@@@@A" to %"class.Texture3D<vector<unsigned int, 4> >"*), !"View_VolumetricLightmapIndirectionTexture", i32 0, i32 0, i32 1, i32 4, i32 0, !6}
!6 = !{i32 0, i32 5}
!7 = !{i32 1, %"class.Texture3D<vector<float, 4> >"* bitcast (%dx.types.Handle* @"\01?View_VolumetricLightmapBrickAmbientVector@@3V?$Texture3D@V?$vector@M$03@@@@A" to %"class.Texture3D<vector<float, 4> >"*), !"View_VolumetricLightmapBrickAmbientVector", i32 0, i32 1, i32 1, i32 4, i32 0, !8}
!8 = !{i32 0, i32 9}
!9 = !{i32 2, %"class.Texture3D<vector<float, 4> >"* bitcast (%dx.types.Handle* @"\01?View_VolumetricLightmapBrickSHCoefficients0@@3V?$Texture3D@V?$vector@M$03@@@@A" to %"class.Texture3D<vector<float, 4> >"*), !"View_VolumetricLightmapBrickSHCoefficients0", i32 0, i32 2, i32 1, i32 4, i32 0, !8}
!10 = !{i32 3, %"class.Texture3D<vector<float, 4> >"* bitcast (%dx.types.Handle* @"\01?View_VolumetricLightmapBrickSHCoefficients1@@3V?$Texture3D@V?$vector@M$03@@@@A" to %"class.Texture3D<vector<float, 4> >"*), !"View_VolumetricLightmapBrickSHCoefficients1", i32 0, i32 3, i32 1, i32 4, i32 0, !8}
!11 = !{i32 4, %"class.Texture3D<vector<float, 4> >"* bitcast (%dx.types.Handle* @"\01?View_VolumetricLightmapBrickSHCoefficients2@@3V?$Texture3D@V?$vector@M$03@@@@A" to %"class.Texture3D<vector<float, 4> >"*), !"View_VolumetricLightmapBrickSHCoefficients2", i32 0, i32 4, i32 1, i32 4, i32 0, !8}
!12 = !{i32 5, %"class.Texture3D<vector<float, 4> >"* bitcast (%dx.types.Handle* @"\01?View_VolumetricLightmapBrickSHCoefficients3@@3V?$Texture3D@V?$vector@M$03@@@@A" to %"class.Texture3D<vector<float, 4> >"*), !"View_VolumetricLightmapBrickSHCoefficients3", i32 0, i32 5, i32 1, i32 4, i32 0, !8}
!13 = !{i32 6, %"class.Texture3D<vector<float, 4> >"* bitcast (%dx.types.Handle* @"\01?View_VolumetricLightmapBrickSHCoefficients4@@3V?$Texture3D@V?$vector@M$03@@@@A" to %"class.Texture3D<vector<float, 4> >"*), !"View_VolumetricLightmapBrickSHCoefficients4", i32 0, i32 6, i32 1, i32 4, i32 0, !8}
!14 = !{i32 7, %"class.Texture3D<vector<float, 4> >"* bitcast (%dx.types.Handle* @"\01?View_VolumetricLightmapBrickSHCoefficients5@@3V?$Texture3D@V?$vector@M$03@@@@A" to %"class.Texture3D<vector<float, 4> >"*), !"View_VolumetricLightmapBrickSHCoefficients5", i32 0, i32 7, i32 1, i32 4, i32 0, !8}
!15 = !{i32 8, %"class.Texture3D<vector<float, 4> >"* bitcast (%dx.types.Handle* @"\01?View_SkyBentNormalBrickTexture@@3V?$Texture3D@V?$vector@M$03@@@@A" to %"class.Texture3D<vector<float, 4> >"*), !"View_SkyBentNormalBrickTexture", i32 0, i32 8, i32 1, i32 4, i32 0, !8}
!16 = !{i32 9, %"class.StructuredBuffer<vector<float, 4> >"* bitcast (%dx.types.Handle* @"\01?View_PrimitiveSceneData@@3V?$StructuredBuffer@V?$vector@M$03@@@@A" to %"class.StructuredBuffer<vector<float, 4> >"*), !"View_PrimitiveSceneData", i32 0, i32 9, i32 1, i32 12, i32 0, !17}
!17 = !{i32 1, i32 16}
!18 = !{i32 10, %"class.StructuredBuffer<vector<float, 4> >"* bitcast (%dx.types.Handle* @"\01?View_InstanceSceneData@@3V?$StructuredBuffer@V?$vector@M$03@@@@A" to %"class.StructuredBuffer<vector<float, 4> >"*), !"View_InstanceSceneData", i32 0, i32 10, i32 1, i32 12, i32 0, !17}
!19 = !{i32 11, %"class.StructuredBuffer<vector<float, 4> >"* bitcast (%dx.types.Handle* @"\01?View_SkyIrradianceEnvironmentMap@@3V?$StructuredBuffer@V?$vector@M$03@@@@A" to %"class.StructuredBuffer<vector<float, 4> >"*), !"View_SkyIrradianceEnvironmentMap", i32 0, i32 11, i32 1, i32 12, i32 0, !17}
!20 = !{i32 12, %"class.Buffer<unsigned int>"* bitcast (%dx.types.Handle* @"\01?View_LandscapeIndirection@@3V?$Buffer@I@@A" to %"class.Buffer<unsigned int>"*), !"View_LandscapeIndirection", i32 0, i32 12, i32 1, i32 10, i32 0, !6}
!21 = !{i32 13, %"class.Buffer<float>"* bitcast (%dx.types.Handle* @"\01?View_LandscapePerComponentData@@3V?$Buffer@M@@A" to %"class.Buffer<float>"*), !"View_LandscapePerComponentData", i32 0, i32 13, i32 1, i32 10, i32 0, !8}
!22 = !{i32 14, %"class.Buffer<float>"* bitcast (%dx.types.Handle* @"\01?LandscapeContinuousLODParameters_SectionLODBias@@3V?$Buffer@M@@A" to %"class.Buffer<float>"*), !"LandscapeContinuousLODParameters_SectionLODBias", i32 0, i32 14, i32 1, i32 10, i32 0, !8}
!23 = !{i32 15, %"class.Texture2D<vector<float, 4> >"* bitcast (%dx.types.Handle* @"\01?LandscapeParameters_HeightmapTexture@@3V?$Texture2D@V?$vector@M$03@@@@A" to %"class.Texture2D<vector<float, 4> >"*), !"LandscapeParameters_HeightmapTexture", i32 0, i32 15, i32 1, i32 2, i32 0, !8}
!24 = !{i32 16, %"class.Texture2D<vector<float, 4> >"* bitcast (%dx.types.Handle* @"\01?LandscapeParameters_NormalmapTexture@@3V?$Texture2D@V?$vector@M$03@@@@A" to %"class.Texture2D<vector<float, 4> >"*), !"LandscapeParameters_NormalmapTexture", i32 0, i32 16, i32 1, i32 2, i32 0, !8}
!25 = !{i32 17, %"class.Texture2D<vector<float, 4> >"* bitcast (%dx.types.Handle* @"\01?Material_Texture2D_0@@3V?$Texture2D@V?$vector@M$03@@@@A" to %"class.Texture2D<vector<float, 4> >"*), !"Material_Texture2D_0", i32 0, i32 17, i32 1, i32 2, i32 0, !8}
!26 = !{i32 18, %"class.Texture2D<vector<float, 4> >"* bitcast (%dx.types.Handle* @"\01?Material_Texture2D_1@@3V?$Texture2D@V?$vector@M$03@@@@A" to %"class.Texture2D<vector<float, 4> >"*), !"Material_Texture2D_1", i32 0, i32 18, i32 1, i32 2, i32 0, !8}
!27 = !{i32 19, %"class.Texture2D<vector<float, 4> >"* bitcast (%dx.types.Handle* @"\01?Material_Texture2D_2@@3V?$Texture2D@V?$vector@M$03@@@@A" to %"class.Texture2D<vector<float, 4> >"*), !"Material_Texture2D_2", i32 0, i32 19, i32 1, i32 2, i32 0, !8}
!28 = !{i32 20, %"class.Texture2D<vector<float, 4> >"* bitcast (%dx.types.Handle* @"\01?Material_Texture2D_3@@3V?$Texture2D@V?$vector@M$03@@@@A" to %"class.Texture2D<vector<float, 4> >"*), !"Material_Texture2D_3", i32 0, i32 20, i32 1, i32 2, i32 0, !8}
!29 = !{i32 21, %"class.Texture2D<vector<float, 4> >"* bitcast (%dx.types.Handle* @"\01?Material_Texture2D_4@@3V?$Texture2D@V?$vector@M$03@@@@A" to %"class.Texture2D<vector<float, 4> >"*), !"Material_Texture2D_4", i32 0, i32 21, i32 1, i32 2, i32 0, !8}
!30 = !{i32 22, %"class.Texture2D<vector<float, 4> >"* bitcast (%dx.types.Handle* @"\01?Material_Texture2D_5@@3V?$Texture2D@V?$vector@M$03@@@@A" to %"class.Texture2D<vector<float, 4> >"*), !"Material_Texture2D_5", i32 0, i32 22, i32 1, i32 2, i32 0, !8}
!31 = !{i32 23, %"class.Texture2D<vector<float, 4> >"* bitcast (%dx.types.Handle* @"\01?Material_Texture2D_6@@3V?$Texture2D@V?$vector@M$03@@@@A" to %"class.Texture2D<vector<float, 4> >"*), !"Material_Texture2D_6", i32 0, i32 23, i32 1, i32 2, i32 0, !8}
!32 = !{i32 24, %"class.Texture2D<vector<float, 4> >"* bitcast (%dx.types.Handle* @"\01?Material_Texture2D_7@@3V?$Texture2D@V?$vector@M$03@@@@A" to %"class.Texture2D<vector<float, 4> >"*), !"Material_Texture2D_7", i32 0, i32 24, i32 1, i32 2, i32 0, !8}
!33 = !{i32 25, %"class.Texture2D<vector<float, 4> >"* bitcast (%dx.types.Handle* @"\01?Material_Texture2D_8@@3V?$Texture2D@V?$vector@M$03@@@@A" to %"class.Texture2D<vector<float, 4> >"*), !"Material_Texture2D_8", i32 0, i32 25, i32 1, i32 2, i32 0, !8}
!34 = !{i32 26, %"class.Texture2D<vector<float, 4> >"* bitcast (%dx.types.Handle* @"\01?Material_Texture2D_9@@3V?$Texture2D@V?$vector@M$03@@@@A" to %"class.Texture2D<vector<float, 4> >"*), !"Material_Texture2D_9", i32 0, i32 26, i32 1, i32 2, i32 0, !8}
!35 = !{i32 27, %"class.Texture2D<vector<float, 4> >"* bitcast (%dx.types.Handle* @"\01?Material_Texture2D_10@@3V?$Texture2D@V?$vector@M$03@@@@A" to %"class.Texture2D<vector<float, 4> >"*), !"Material_Texture2D_10", i32 0, i32 27, i32 1, i32 2, i32 0, !8}
!36 = !{i32 28, %"class.Texture2D<vector<float, 4> >"* bitcast (%dx.types.Handle* @"\01?Material_Texture2D_11@@3V?$Texture2D@V?$vector@M$03@@@@A" to %"class.Texture2D<vector<float, 4> >"*), !"Material_Texture2D_11", i32 0, i32 28, i32 1, i32 2, i32 0, !8}
!37 = !{i32 29, %"class.Texture2D<vector<float, 4> >"* bitcast (%dx.types.Handle* @"\01?Material_Texture2D_12@@3V?$Texture2D@V?$vector@M$03@@@@A" to %"class.Texture2D<vector<float, 4> >"*), !"Material_Texture2D_12", i32 0, i32 29, i32 1, i32 2, i32 0, !8}
!38 = !{i32 30, %"class.Texture2D<vector<float, 4> >"* bitcast (%dx.types.Handle* @"\01?Material_Texture2D_13@@3V?$Texture2D@V?$vector@M$03@@@@A" to %"class.Texture2D<vector<float, 4> >"*), !"Material_Texture2D_13", i32 0, i32 30, i32 1, i32 2, i32 0, !8}
!39 = !{i32 31, %"class.Texture2D<vector<float, 4> >"* bitcast (%dx.types.Handle* @"\01?Material_Texture2D_14@@3V?$Texture2D@V?$vector@M$03@@@@A" to %"class.Texture2D<vector<float, 4> >"*), !"Material_Texture2D_14", i32 0, i32 31, i32 1, i32 2, i32 0, !8}
!40 = !{i32 32, %"class.Texture2D<vector<float, 4> >"* bitcast (%dx.types.Handle* @"\01?Material_Texture2D_15@@3V?$Texture2D@V?$vector@M$03@@@@A" to %"class.Texture2D<vector<float, 4> >"*), !"Material_Texture2D_15", i32 0, i32 32, i32 1, i32 2, i32 0, !8}
!41 = !{i32 33, %"class.Texture2D<vector<float, 4> >"* bitcast (%dx.types.Handle* @"\01?Material_Texture2D_16@@3V?$Texture2D@V?$vector@M$03@@@@A" to %"class.Texture2D<vector<float, 4> >"*), !"Material_Texture2D_16", i32 0, i32 33, i32 1, i32 2, i32 0, !8}
!42 = !{i32 34, %struct.ByteAddressBuffer* bitcast (%dx.types.Handle* @"\01?HitGroupSystemIndexBuffer@@3UByteAddressBuffer@@A" to %struct.ByteAddressBuffer*), !"HitGroupSystemIndexBuffer", i32 2, i32 0, i32 1, i32 11, i32 0, null}
!43 = !{!44, !45, !46, !47, !48, !49}
!44 = !{i32 0, %UniformBufferConstants_View* bitcast (%dx.types.Handle* @UniformBufferConstants_View to %UniformBufferConstants_View*), !"UniformBufferConstants_View", i32 0, i32 0, i32 1, i32 5292, null}
!45 = !{i32 1, %UniformBufferConstants_LandscapeMVF* bitcast (%dx.types.Handle* @UniformBufferConstants_LandscapeMVF to %UniformBufferConstants_LandscapeMVF*), !"UniformBufferConstants_LandscapeMVF", i32 0, i32 1, i32 1, i32 8, null}
!46 = !{i32 2, %UniformBufferConstants_LandscapeContinuousLODParameters* bitcast (%dx.types.Handle* @UniformBufferConstants_LandscapeContinuousLODParameters to %UniformBufferConstants_LandscapeContinuousLODParameters*), !"UniformBufferConstants_LandscapeContinuousLODParameters", i32 0, i32 2, i32 1, i32 28, null}
!47 = !{i32 3, %UniformBufferConstants_LandscapeParameters* bitcast (%dx.types.Handle* @UniformBufferConstants_LandscapeParameters to %UniformBufferConstants_LandscapeParameters*), !"UniformBufferConstants_LandscapeParameters", i32 0, i32 3, i32 1, i32 236, null}
!48 = !{i32 4, %UniformBufferConstants_Material* bitcast (%dx.types.Handle* @UniformBufferConstants_Material to %UniformBufferConstants_Material*), !"UniformBufferConstants_Material", i32 0, i32 4, i32 1, i32 428, null}
!49 = !{i32 5, %HitGroupSystemRootConstants* bitcast (%dx.types.Handle* @HitGroupSystemRootConstants to %HitGroupSystemRootConstants*), !"HitGroupSystemRootConstants", i32 2, i32 0, i32 1, i32 24, null}
!50 = !{!51, !52, !53, !54, !55, !56, !57, !58, !59, !60, !61, !62, !63, !64, !65, !66, !67, !68, !69}
!51 = !{i32 0, %struct.SamplerState* bitcast (%dx.types.Handle* @"\01?View_SharedBilinearClampedSampler@@3USamplerState@@A" to %struct.SamplerState*), !"View_SharedBilinearClampedSampler", i32 0, i32 0, i32 1, i32 0, null}
!52 = !{i32 1, %struct.SamplerState* bitcast (%dx.types.Handle* @"\01?View_LandscapeWeightmapSampler@@3USamplerState@@A" to %struct.SamplerState*), !"View_LandscapeWeightmapSampler", i32 0, i32 1, i32 1, i32 0, null}
!53 = !{i32 2, %struct.SamplerState* bitcast (%dx.types.Handle* @"\01?LandscapeParameters_HeightmapTextureSampler@@3USamplerState@@A" to %struct.SamplerState*), !"LandscapeParameters_HeightmapTextureSampler", i32 0, i32 2, i32 1, i32 0, null}
!54 = !{i32 3, %struct.SamplerState* bitcast (%dx.types.Handle* @"\01?LandscapeParameters_NormalmapTextureSampler@@3USamplerState@@A" to %struct.SamplerState*), !"LandscapeParameters_NormalmapTextureSampler", i32 0, i32 3, i32 1, i32 0, null}
!55 = !{i32 4, %struct.SamplerState* bitcast (%dx.types.Handle* @"\01?Material_Texture2D_2Sampler@@3USamplerState@@A" to %struct.SamplerState*), !"Material_Texture2D_2Sampler", i32 0, i32 4, i32 1, i32 0, null}
!56 = !{i32 5, %struct.SamplerState* bitcast (%dx.types.Handle* @"\01?Material_Texture2D_3Sampler@@3USamplerState@@A" to %struct.SamplerState*), !"Material_Texture2D_3Sampler", i32 0, i32 5, i32 1, i32 0, null}
!57 = !{i32 6, %struct.SamplerState* bitcast (%dx.types.Handle* @"\01?Material_Texture2D_4Sampler@@3USamplerState@@A" to %struct.SamplerState*), !"Material_Texture2D_4Sampler", i32 0, i32 6, i32 1, i32 0, null}
!58 = !{i32 7, %struct.SamplerState* bitcast (%dx.types.Handle* @"\01?Material_Texture2D_5Sampler@@3USamplerState@@A" to %struct.SamplerState*), !"Material_Texture2D_5Sampler", i32 0, i32 7, i32 1, i32 0, null}
!59 = !{i32 8, %struct.SamplerState* bitcast (%dx.types.Handle* @"\01?Material_Texture2D_6Sampler@@3USamplerState@@A" to %struct.SamplerState*), !"Material_Texture2D_6Sampler", i32 0, i32 8, i32 1, i32 0, null}
!60 = !{i32 9, %struct.SamplerState* bitcast (%dx.types.Handle* @"\01?Material_Texture2D_7Sampler@@3USamplerState@@A" to %struct.SamplerState*), !"Material_Texture2D_7Sampler", i32 0, i32 9, i32 1, i32 0, null}
!61 = !{i32 10, %struct.SamplerState* bitcast (%dx.types.Handle* @"\01?Material_Texture2D_8Sampler@@3USamplerState@@A" to %struct.SamplerState*), !"Material_Texture2D_8Sampler", i32 0, i32 10, i32 1, i32 0, null}
!62 = !{i32 11, %struct.SamplerState* bitcast (%dx.types.Handle* @"\01?Material_Texture2D_9Sampler@@3USamplerState@@A" to %struct.SamplerState*), !"Material_Texture2D_9Sampler", i32 0, i32 11, i32 1, i32 0, null}
!63 = !{i32 12, %struct.SamplerState* bitcast (%dx.types.Handle* @"\01?Material_Texture2D_10Sampler@@3USamplerState@@A" to %struct.SamplerState*), !"Material_Texture2D_10Sampler", i32 0, i32 12, i32 1, i32 0, null}
!64 = !{i32 13, %struct.SamplerState* bitcast (%dx.types.Handle* @"\01?Material_Texture2D_11Sampler@@3USamplerState@@A" to %struct.SamplerState*), !"Material_Texture2D_11Sampler", i32 0, i32 13, i32 1, i32 0, null}
!65 = !{i32 14, %struct.SamplerState* bitcast (%dx.types.Handle* @"\01?Material_Texture2D_12Sampler@@3USamplerState@@A" to %struct.SamplerState*), !"Material_Texture2D_12Sampler", i32 0, i32 14, i32 1, i32 0, null}
!66 = !{i32 15, %struct.SamplerState* bitcast (%dx.types.Handle* @"\01?Material_Texture2D_13Sampler@@3USamplerState@@A" to %struct.SamplerState*), !"Material_Texture2D_13Sampler", i32 0, i32 15, i32 1, i32 0, null}
!67 = !{i32 16, %struct.SamplerState* bitcast (%dx.types.Handle* @"\01?Material_Texture2D_14Sampler@@3USamplerState@@A" to %struct.SamplerState*), !"Material_Texture2D_14Sampler", i32 0, i32 16, i32 1, i32 0, null}
!68 = !{i32 17, %struct.SamplerState* bitcast (%dx.types.Handle* @"\01?Material_Texture2D_15Sampler@@3USamplerState@@A" to %struct.SamplerState*), !"Material_Texture2D_15Sampler", i32 0, i32 17, i32 1, i32 0, null}
!69 = !{i32 18, %struct.SamplerState* bitcast (%dx.types.Handle* @"\01?Material_Texture2D_16Sampler@@3USamplerState@@A" to %struct.SamplerState*), !"Material_Texture2D_16Sampler", i32 0, i32 18, i32 1, i32 0, null}
!70 = !{null, !"", null, !3, !71}
!71 = !{i32 0, i64 8388624, i32 5, !72}
!72 = !{i32 0}
!73 = !{void (%struct.FPackedMaterialClosestHitPayload*, %struct.FRayTracingIntersectionAttributes*)* @"\01?MaterialCHS@@YAXUFPackedMaterialClosestHitPayload@@UFRayTracingIntersectionAttributes@@@Z", !"\01?MaterialCHS@@YAXUFPackedMaterialClosestHitPayload@@UFRayTracingIntersectionAttributes@@@Z", null, null, !74}
!74 = !{i32 8, i32 10, i32 6, i32 64, i32 7, i32 8, i32 5, !72}
!75 = !{!76, !78}
!76 = distinct !{!76, !77, !"\01?internal.CalcPixelMaterialInputs@@YAXUFMaterialPixelParameters@@UFPixelMaterialInputs@@@Z: %PixelMaterialInputs"}
!77 = distinct !{!77, !"\01?internal.CalcPixelMaterialInputs@@YAXUFMaterialPixelParameters@@UFPixelMaterialInputs@@@Z"}
!78 = distinct !{!78, !79, !"\01?internal.CalcMaterialParametersEx@@YAXUFMaterialPixelParameters@@UFPixelMaterialInputs@@V?$vector@M$03@@2_NV?$vector@M$02@@4@Z: %PixelMaterialInputs"}
!79 = distinct !{!79, !"\01?internal.CalcMaterialParametersEx@@YAXUFMaterialPixelParameters@@UFPixelMaterialInputs@@V?$vector@M$03@@2_NV?$vector@M$02@@4@Z"}
!80 = !{!81, !76, !78}
!81 = distinct !{!81, !77, !"\01?internal.CalcPixelMaterialInputs@@YAXUFMaterialPixelParameters@@UFPixelMaterialInputs@@@Z: %Parameters"}
!82 = !{!83, !85, !87, !88}
!83 = distinct !{!83, !84, !"\01?internal.GetVertexFactoryIntermediates@@YA?AUFVertexFactoryIntermediates@@UFVertexFactoryInput@@@Z: %agg.result"}
!84 = distinct !{!84, !"\01?internal.GetVertexFactoryIntermediates@@YA?AUFVertexFactoryIntermediates@@UFVertexFactoryInput@@@Z"}
!85 = distinct !{!85, !86, !"\01?internal.CalcInterpolants@@YAXUFRayCone@@UFRayTracingIntersectionAttributes@@UFVertexFactoryInterpolantsVSToPS@@AIAV?$vector@M$02@@@Z: %Interpolants"}
!86 = distinct !{!86, !"\01?internal.CalcInterpolants@@YAXUFRayCone@@UFRayTracingIntersectionAttributes@@UFVertexFactoryInterpolantsVSToPS@@AIAV?$vector@M$02@@@Z"}
!87 = distinct !{!87, !86, !"\01?internal.CalcInterpolants@@YAXUFRayCone@@UFRayTracingIntersectionAttributes@@UFVertexFactoryInterpolantsVSToPS@@AIAV?$vector@M$02@@@Z: %FaceNormal"}
!88 = distinct !{!88, !89, !"\01?internal.CalcInterpolants@@YAXUFRayCone@@UFRayTracingIntersectionAttributes@@UFVertexFactoryInterpolantsVSToPS@@@Z: %Interpolants"}
!89 = distinct !{!89, !"\01?internal.CalcInterpolants@@YAXUFRayCone@@UFRayTracingIntersectionAttributes@@UFVertexFactoryInterpolantsVSToPS@@@Z"}
!90 = !{!91, !81, !76, !78}
!91 = distinct !{!91, !92, !"\01?internal.GetMaterialSharedSampler@@YA?AUSamplerState@@U1@0@Z: %agg.result"}
!92 = distinct !{!92, !"\01?internal.GetMaterialSharedSampler@@YA?AUSamplerState@@U1@0@Z"}
!93 = !{!94, !96, !97, !99, !100, !101}
!94 = distinct !{!94, !95, !"\01?internal.GetSkyLighting@@YAXUFMaterialPixelParameters@@MV?$vector@M$02@@V?$vector@M$01@@I1I_NAIAV2@4@Z: %OutDiffuseLighting"}
!95 = distinct !{!95, !"\01?internal.GetSkyLighting@@YAXUFMaterialPixelParameters@@MV?$vector@M$02@@V?$vector@M$01@@I1I_NAIAV2@4@Z"}
!96 = distinct !{!96, !95, !"\01?internal.GetSkyLighting@@YAXUFMaterialPixelParameters@@MV?$vector@M$02@@V?$vector@M$01@@I1I_NAIAV2@4@Z: %OutSubsurfaceLighting"}
!97 = distinct !{!97, !98, !"\01?internal.GetPrecomputedIndirectLightingAndSkyLight@@YAXUFMaterialPixelParameters@@UFVertexFactoryInterpolantsVSToPS@@MV?$vector@M$02@@2I_NAIAV3@4AIAM@Z: %OutDiffuseLighting"}
!98 = distinct !{!98, !"\01?internal.GetPrecomputedIndirectLightingAndSkyLight@@YAXUFMaterialPixelParameters@@UFVertexFactoryInterpolantsVSToPS@@MV?$vector@M$02@@2I_NAIAV3@4AIAM@Z"}
!99 = distinct !{!99, !98, !"\01?internal.GetPrecomputedIndirectLightingAndSkyLight@@YAXUFMaterialPixelParameters@@UFVertexFactoryInterpolantsVSToPS@@MV?$vector@M$02@@2I_NAIAV3@4AIAM@Z: %OutSubsurfaceLighting"}
!100 = distinct !{!100, !98, !"\01?internal.GetPrecomputedIndirectLightingAndSkyLight@@YAXUFMaterialPixelParameters@@UFVertexFactoryInterpolantsVSToPS@@MV?$vector@M$02@@2I_NAIAV3@4AIAM@Z: %OutIndirectIrradiance"}
!101 = distinct !{!101, !102, !"\01?internal.GetMaterialPayload@@YAXUFPixelMaterialInputs@@UFMaterialPixelParameters@@UFVertexFactoryInterpolantsVSToPS@@_NUFMaterialClosestHitPayload@@@Z: %Payload"}
!102 = distinct !{!102, !"\01?internal.GetMaterialPayload@@YAXUFPixelMaterialInputs@@UFMaterialPixelParameters@@UFVertexFactoryInterpolantsVSToPS@@_NUFMaterialClosestHitPayload@@@Z"}
!103 = !{!104, !106, !108, !85, !87, !88}
!104 = distinct !{!104, !105, !"\01?internal.LoadTriangleBaseAttributes@@YA?AUFTriangleBaseAttributes@@UByteAddressBuffer@@II0III@Z: %agg.result"}
!105 = distinct !{!105, !"\01?internal.LoadTriangleBaseAttributes@@YA?AUFTriangleBaseAttributes@@UByteAddressBuffer@@II0III@Z"}
!106 = distinct !{!106, !107, !"\01?internal.LoadTriangleBaseAttributes@@YA?AUFTriangleBaseAttributes@@I@Z: %agg.result"}
!107 = distinct !{!107, !"\01?internal.LoadTriangleBaseAttributes@@YA?AUFTriangleBaseAttributes@@I@Z"}
!108 = distinct !{!108, !109, !"\01?internal.LoadVertexFactoryInputForHGS@@YA?AUFVertexFactoryInput@@IH@Z: %agg.result"}
!109 = distinct !{!109, !"\01?internal.LoadVertexFactoryInputForHGS@@YA?AUFVertexFactoryInput@@IH@Z"}
!110 = !{!111, !113, !83, !85, !87, !88}
!111 = distinct !{!111, !112, !"\01?internal.GetInstanceSceneData@@YA?AUFInstanceSceneData@@II_N@Z: %agg.result"}
!112 = distinct !{!112, !"\01?internal.GetInstanceSceneData@@YA?AUFInstanceSceneData@@II_N@Z"}
!113 = distinct !{!113, !114, !"\01?internal.GetSceneDataIntermediates@@YA?AUFSceneDataIntermediates@@II@Z: %agg.result"}
!114 = distinct !{!114, !"\01?internal.GetSceneDataIntermediates@@YA?AUFSceneDataIntermediates@@II@Z"}
!115 = !{!116, !97, !99, !100, !101}
!116 = distinct !{!116, !117, !"\01?internal.GetVolumetricLightmapSH3@@YA?AUFThreeBandSHVectorRGB@@V?$vector@M$02@@@Z: %agg.result"}
!117 = distinct !{!117, !"\01?internal.GetVolumetricLightmapSH3@@YA?AUFThreeBandSHVectorRGB@@V?$vector@M$02@@@Z"}
!118 = !{!119, !121, !122, !123, !116, !97, !99, !100, !101}
!119 = distinct !{!119, !120, !"\01?internal.GetVolumetricLightmapSHCoefficients0@@YAXV?$vector@M$02@@AIAV1@AIAV?$vector@M$03@@22@Z: %AmbientVector"}
!120 = distinct !{!120, !"\01?internal.GetVolumetricLightmapSHCoefficients0@@YAXV?$vector@M$02@@AIAV1@AIAV?$vector@M$03@@22@Z"}
!121 = distinct !{!121, !120, !"\01?internal.GetVolumetricLightmapSHCoefficients0@@YAXV?$vector@M$02@@AIAV1@AIAV?$vector@M$03@@22@Z: %SHCoefficients0Red"}
!122 = distinct !{!122, !120, !"\01?internal.GetVolumetricLightmapSHCoefficients0@@YAXV?$vector@M$02@@AIAV1@AIAV?$vector@M$03@@22@Z: %SHCoefficients0Green"}
!123 = distinct !{!123, !120, !"\01?internal.GetVolumetricLightmapSHCoefficients0@@YAXV?$vector@M$02@@AIAV1@AIAV?$vector@M$03@@22@Z: %SHCoefficients0Blue"}
!124 = !{!101}
!125 = !{!126, !126, i64 0}
!126 = !{!"float", !127, i64 0}
!127 = !{!"omnipotent char", !128, i64 0}
!128 = !{!"Simple C/C++ TBAA"}
!129 = !{!130, !130, i64 0}
!130 = !{!"int", !127, i64 0}
!131 = !{!132}
!132 = distinct !{!132, !133, !"\01?internal.LoadVertexFactoryInputForHGS@@YA?AUFVertexFactoryInput@@IH@Z: %agg.result"}
!133 = distinct !{!133, !"\01?internal.LoadVertexFactoryInputForHGS@@YA?AUFVertexFactoryInput@@IH@Z"}
!134 = distinct !{!134, !"dx.controlflow.hints", i32 1}
!135 = !{!136}
!136 = distinct !{!136, !137, !"\01?internal.GetVertexFactoryIntermediates@@YA?AUFVertexFactoryIntermediates@@UFVertexFactoryInput@@@Z: %agg.result"}
!137 = distinct !{!137, !"\01?internal.GetVertexFactoryIntermediates@@YA?AUFVertexFactoryIntermediates@@UFVertexFactoryInput@@@Z"}
!138 = !{!139}
!139 = distinct !{!139, !140, !"\01?internal.GetRayCone@FPackedMaterialClosestHitPayload@@QAA?AUFRayCone@@XZ: %agg.result"}
!140 = distinct !{!140, !"\01?internal.GetRayCone@FPackedMaterialClosestHitPayload@@QAA?AUFRayCone@@XZ"}
!141 = !{!85, !87, !88}
!142 = !{!108, !85, !87, !88}
!143 = distinct !{!143, !"dx.controlflow.hints", i32 1}
