; shader hash: 71392fef5320802f8855988311a07df3
;
; Buffer Definitions:
;
; cbuffer UniformBufferConstants_View
; {
;
;   struct UniformBufferConstants_View
;   {
;
;       row_major float4x4 View_TranslatedWorldToClip;; Offset:    0
;       row_major float4x4 View_TranslatedWorldToSubpixelClip;; Offset:   64
;       row_major float4x4 View_RelativeWorldToClip;  ; Offset:  128
;       row_major float4x4 View_ClipToRelativeWorld;  ; Offset:  192
;       row_major float4x4 View_TranslatedWorldToView;; Offset:  256
;       row_major float4x4 View_ViewToTranslatedWorld;; Offset:  320
;       row_major float4x4 View_TranslatedWorldToCameraView;; Offset:  384
;       row_major float4x4 View_CameraViewToTranslatedWorld;; Offset:  448
;       row_major float4x4 View_ViewToClip;           ; Offset:  512
;       row_major float4x4 View_ViewToClipNoAA;       ; Offset:  576
;       row_major float4x4 View_ClipToView;           ; Offset:  640
;       row_major float4x4 View_ClipToTranslatedWorld;; Offset:  704
;       row_major float4x4 View_SVPositionToTranslatedWorld;; Offset:  768
;       row_major float4x4 View_ScreenToRelativeWorld;; Offset:  832
;       row_major float4x4 View_ScreenToTranslatedWorld;; Offset:  896
;       row_major float4x4 View_MobileMultiviewShadowTransform;; Offset:  960
;       float3 View_ViewTilePosition;                 ; Offset: 1024
;       float PrePadding_View_1036;                   ; Offset: 1036
;       float3 View_MatrixTilePosition;               ; Offset: 1040
;       float PrePadding_View_1052;                   ; Offset: 1052
;       float3 View_ViewForward;                      ; Offset: 1056
;       float PrePadding_View_1068;                   ; Offset: 1068
;       float3 View_ViewUp;                           ; Offset: 1072
;       float PrePadding_View_1084;                   ; Offset: 1084
;       float3 View_ViewRight;                        ; Offset: 1088
;       float PrePadding_View_1100;                   ; Offset: 1100
;       float3 View_HMDViewNoRollUp;                  ; Offset: 1104
;       float PrePadding_View_1116;                   ; Offset: 1116
;       float3 View_HMDViewNoRollRight;               ; Offset: 1120
;       float PrePadding_View_1132;                   ; Offset: 1132
;       float4 View_InvDeviceZToWorldZTransform;      ; Offset: 1136
;       float4 View_ScreenPositionScaleBias;          ; Offset: 1152
;       float3 View_RelativeWorldCameraOrigin;        ; Offset: 1168
;       float PrePadding_View_1180;                   ; Offset: 1180
;       float3 View_TranslatedWorldCameraOrigin;      ; Offset: 1184
;       float PrePadding_View_1196;                   ; Offset: 1196
;       float3 View_RelativeWorldViewOrigin;          ; Offset: 1200
;       float PrePadding_View_1212;                   ; Offset: 1212
;       float3 View_RelativePreViewTranslation;       ; Offset: 1216
;       float PrePadding_View_1228;                   ; Offset: 1228
;       row_major float4x4 View_PrevViewToClip;       ; Offset: 1232
;       row_major float4x4 View_PrevClipToView;       ; Offset: 1296
;       row_major float4x4 View_PrevTranslatedWorldToClip;; Offset: 1360
;       row_major float4x4 View_PrevTranslatedWorldToView;; Offset: 1424
;       row_major float4x4 View_PrevViewToTranslatedWorld;; Offset: 1488
;       row_major float4x4 View_PrevTranslatedWorldToCameraView;; Offset: 1552
;       row_major float4x4 View_PrevCameraViewToTranslatedWorld;; Offset: 1616
;       float3 View_PrevTranslatedWorldCameraOrigin;  ; Offset: 1680
;       float PrePadding_View_1692;                   ; Offset: 1692
;       float3 View_PrevRelativeWorldCameraOrigin;    ; Offset: 1696
;       float PrePadding_View_1708;                   ; Offset: 1708
;       float3 View_PrevRelativeWorldViewOrigin;      ; Offset: 1712
;       float PrePadding_View_1724;                   ; Offset: 1724
;       float3 View_RelativePrevPreViewTranslation;   ; Offset: 1728
;       float PrePadding_View_1740;                   ; Offset: 1740
;       row_major float4x4 View_PrevClipToRelativeWorld;; Offset: 1744
;       row_major float4x4 View_PrevScreenToTranslatedWorld;; Offset: 1808
;       row_major float4x4 View_ClipToPrevClip;       ; Offset: 1872
;       row_major float4x4 View_ClipToPrevClipWithAA; ; Offset: 1936
;       float4 View_TemporalAAJitter;                 ; Offset: 2000
;       float4 View_GlobalClippingPlane;              ; Offset: 2016
;       float2 View_FieldOfViewWideAngles;            ; Offset: 2032
;       float2 View_PrevFieldOfViewWideAngles;        ; Offset: 2040
;       float4 View_ViewRectMin;                      ; Offset: 2048
;       float4 View_ViewSizeAndInvSize;               ; Offset: 2064
;       uint4 View_ViewRectMinAndSize;                ; Offset: 2080
;       float4 View_LightProbeSizeRatioAndInvSizeRatio;; Offset: 2096
;       float4 View_BufferSizeAndInvSize;             ; Offset: 2112
;       float4 View_BufferBilinearUVMinMax;           ; Offset: 2128
;       float4 View_ScreenToViewSpace;                ; Offset: 2144
;       float2 View_BufferToSceneTextureScale;        ; Offset: 2160
;       float2 View_ResolutionFractionAndInv;         ; Offset: 2168
;       int View_NumSceneColorMSAASamples;            ; Offset: 2176
;       float View_SeparateWaterMainDirLightLuminance;; Offset: 2180
;       float View_PreExposure;                       ; Offset: 2184
;       float View_OneOverPreExposure;                ; Offset: 2188
;       float4 View_DiffuseOverrideParameter;         ; Offset: 2192
;       float4 View_SpecularOverrideParameter;        ; Offset: 2208
;       float4 View_NormalOverrideParameter;          ; Offset: 2224
;       float2 View_RoughnessOverrideParameter;       ; Offset: 2240
;       float View_PrevFrameGameTime;                 ; Offset: 2248
;       float View_PrevFrameRealTime;                 ; Offset: 2252
;       float View_OutOfBoundsMask;                   ; Offset: 2256
;       float PrePadding_View_2260;                   ; Offset: 2260
;       float PrePadding_View_2264;                   ; Offset: 2264
;       float PrePadding_View_2268;                   ; Offset: 2268
;       float3 View_WorldCameraMovementSinceLastFrame;; Offset: 2272
;       float View_CullingSign;                       ; Offset: 2284
;       float View_NearPlane;                         ; Offset: 2288
;       float View_GameTime;                          ; Offset: 2292
;       float View_RealTime;                          ; Offset: 2296
;       float View_DeltaTime;                         ; Offset: 2300
;       float View_MaterialTextureMipBias;            ; Offset: 2304
;       float View_MaterialTextureDerivativeMultiply; ; Offset: 2308
;       uint View_Random;                             ; Offset: 2312
;       uint View_FrameNumber;                        ; Offset: 2316
;       uint View_StateFrameIndexMod8;                ; Offset: 2320
;       uint View_StateFrameIndex;                    ; Offset: 2324
;       uint View_DebugViewModeMask;                  ; Offset: 2328
;       float View_CameraCut;                         ; Offset: 2332
;       float View_UnlitViewmodeMask;                 ; Offset: 2336
;       float PrePadding_View_2340;                   ; Offset: 2340
;       float PrePadding_View_2344;                   ; Offset: 2344
;       float PrePadding_View_2348;                   ; Offset: 2348
;       float4 View_DirectionalLightColor;            ; Offset: 2352
;       float3 View_DirectionalLightDirection;        ; Offset: 2368
;       float PrePadding_View_2380;                   ; Offset: 2380
;       float4 View_TranslucencyLightingVolumeMin[2]; ; Offset: 2384
;       float4 View_TranslucencyLightingVolumeInvSize[2];; Offset: 2416
;       float4 View_TemporalAAParams;                 ; Offset: 2448
;       float4 View_CircleDOFParams;                  ; Offset: 2464
;       float View_DepthOfFieldSensorWidth;           ; Offset: 2480
;       float View_DepthOfFieldFocalDistance;         ; Offset: 2484
;       float View_DepthOfFieldScale;                 ; Offset: 2488
;       float View_DepthOfFieldFocalLength;           ; Offset: 2492
;       float View_DepthOfFieldFocalRegion;           ; Offset: 2496
;       float View_DepthOfFieldNearTransitionRegion;  ; Offset: 2500
;       float View_DepthOfFieldFarTransitionRegion;   ; Offset: 2504
;       float View_MotionBlurNormalizedToPixel;       ; Offset: 2508
;       float View_GeneralPurposeTweak;               ; Offset: 2512
;       float View_GeneralPurposeTweak2;              ; Offset: 2516
;       float View_DemosaicVposOffset;                ; Offset: 2520
;       float View_DecalDepthBias;                    ; Offset: 2524
;       float3 View_IndirectLightingColorScale;       ; Offset: 2528
;       float PrePadding_View_2540;                   ; Offset: 2540
;       float3 View_PrecomputedIndirectLightingColorScale;; Offset: 2544
;       float PrePadding_View_2556;                   ; Offset: 2556
;       float3 View_PrecomputedIndirectSpecularColorScale;; Offset: 2560
;       float PrePadding_View_2572;                   ; Offset: 2572
;       float4 View_AtmosphereLightDirection[2];      ; Offset: 2576
;       float4 View_AtmosphereLightIlluminanceOnGroundPostTransmittance[2];; Offset: 2608
;       float4 View_AtmosphereLightIlluminanceOuterSpace[2];; Offset: 2640
;       float4 View_AtmosphereLightDiscLuminance[2];  ; Offset: 2672
;       float4 View_AtmosphereLightDiscCosHalfApexAngle_PPTrans[2];; Offset: 2704
;       float4 View_SkyViewLutSizeAndInvSize;         ; Offset: 2736
;       float3 View_SkyCameraTranslatedWorldOrigin;   ; Offset: 2752
;       float PrePadding_View_2764;                   ; Offset: 2764
;       float4 View_SkyPlanetTranslatedWorldCenterAndViewHeight;; Offset: 2768
;       row_major float4x4 View_SkyViewLutReferential;; Offset: 2784
;       float4 View_SkyAtmosphereSkyLuminanceFactor;  ; Offset: 2848
;       float View_SkyAtmospherePresentInScene;       ; Offset: 2864
;       float View_SkyAtmosphereHeightFogContribution;; Offset: 2868
;       float View_SkyAtmosphereBottomRadiusKm;       ; Offset: 2872
;       float View_SkyAtmosphereTopRadiusKm;          ; Offset: 2876
;       float4 View_SkyAtmosphereCameraAerialPerspectiveVolumeSizeAndInvSize;; Offset: 2880
;       float View_SkyAtmosphereAerialPerspectiveStartDepthKm;; Offset: 2896
;       float View_SkyAtmosphereCameraAerialPerspectiveVolumeDepthResolution;; Offset: 2900
;       float View_SkyAtmosphereCameraAerialPerspectiveVolumeDepthResolutionInv;; Offset: 2904
;       float View_SkyAtmosphereCameraAerialPerspectiveVolumeDepthSliceLengthKm;; Offset: 2908
;       float View_SkyAtmosphereCameraAerialPerspectiveVolumeDepthSliceLengthKmInv;; Offset: 2912
;       float View_SkyAtmosphereApplyCameraAerialPerspectiveVolume;; Offset: 2916
;       float PrePadding_View_2920;                   ; Offset: 2920
;       float PrePadding_View_2924;                   ; Offset: 2924
;       float3 View_NormalCurvatureToRoughnessScaleBias;; Offset: 2928
;       float View_RenderingReflectionCaptureMask;    ; Offset: 2940
;       float View_RealTimeReflectionCapture;         ; Offset: 2944
;       float View_RealTimeReflectionCapturePreExposure;; Offset: 2948
;       float PrePadding_View_2952;                   ; Offset: 2952
;       float PrePadding_View_2956;                   ; Offset: 2956
;       float4 View_AmbientCubemapTint;               ; Offset: 2960
;       float View_AmbientCubemapIntensity;           ; Offset: 2976
;       float View_SkyLightApplyPrecomputedBentNormalShadowingFlag;; Offset: 2980
;       float View_SkyLightAffectReflectionFlag;      ; Offset: 2984
;       float View_SkyLightAffectGlobalIlluminationFlag;; Offset: 2988
;       float4 View_SkyLightColor;                    ; Offset: 2992
;       float4 View_MobileSkyIrradianceEnvironmentMap[8];; Offset: 3008
;       float View_MobilePreviewMode;                 ; Offset: 3136
;       float View_HMDEyePaddingOffset;               ; Offset: 3140
;       float View_ReflectionCubemapMaxMip;           ; Offset: 3144
;       float View_ShowDecalsMask;                    ; Offset: 3148
;       uint View_DistanceFieldAOSpecularOcclusionMode;; Offset: 3152
;       float View_IndirectCapsuleSelfShadowingIntensity;; Offset: 3156
;       float PrePadding_View_3160;                   ; Offset: 3160
;       float PrePadding_View_3164;                   ; Offset: 3164
;       float3 View_ReflectionEnvironmentRoughnessMixingScaleBiasAndLargestWeight;; Offset: 3168
;       int View_StereoPassIndex;                     ; Offset: 3180
;       float4 View_GlobalVolumeCenterAndExtent[6];   ; Offset: 3184
;       float4 View_GlobalVolumeWorldToUVAddAndMul[6];; Offset: 3280
;       float4 View_GlobalDistanceFieldMipWorldToUVScale[6];; Offset: 3376
;       float4 View_GlobalDistanceFieldMipWorldToUVBias[6];; Offset: 3472
;       float View_GlobalDistanceFieldMipFactor;      ; Offset: 3568
;       float View_GlobalDistanceFieldMipTransition;  ; Offset: 3572
;       int View_GlobalDistanceFieldClipmapSizeInPages;; Offset: 3576
;       int PrePadding_View_3580;                     ; Offset: 3580
;       float3 View_GlobalDistanceFieldInvPageAtlasSize;; Offset: 3584
;       float PrePadding_View_3596;                   ; Offset: 3596
;       float3 View_GlobalDistanceFieldInvCoverageAtlasSize;; Offset: 3600
;       float View_GlobalVolumeDimension;             ; Offset: 3612
;       float View_GlobalVolumeTexelSize;             ; Offset: 3616
;       float View_MaxGlobalDFAOConeDistance;         ; Offset: 3620
;       uint View_NumGlobalSDFClipmaps;               ; Offset: 3624
;       float View_CoveredExpandSurfaceScale;         ; Offset: 3628
;       float View_NotCoveredExpandSurfaceScale;      ; Offset: 3632
;       float View_NotCoveredMinStepScale;            ; Offset: 3636
;       float View_DitheredTransparencyStepThreshold; ; Offset: 3640
;       float View_DitheredTransparencyTraceThreshold;; Offset: 3644
;       int2 View_CursorPosition;                     ; Offset: 3648
;       float View_bCheckerboardSubsurfaceProfileRendering;; Offset: 3656
;       float PrePadding_View_3660;                   ; Offset: 3660
;       float3 View_VolumetricFogInvGridSize;         ; Offset: 3664
;       float PrePadding_View_3676;                   ; Offset: 3676
;       float3 View_VolumetricFogGridZParams;         ; Offset: 3680
;       float PrePadding_View_3692;                   ; Offset: 3692
;       float2 View_VolumetricFogSVPosToVolumeUV;     ; Offset: 3696
;       float View_VolumetricFogMaxDistance;          ; Offset: 3704
;       float PrePadding_View_3708;                   ; Offset: 3708
;       float3 View_VolumetricLightmapWorldToUVScale; ; Offset: 3712
;       float PrePadding_View_3724;                   ; Offset: 3724
;       float3 View_VolumetricLightmapWorldToUVAdd;   ; Offset: 3728
;       float PrePadding_View_3740;                   ; Offset: 3740
;       float3 View_VolumetricLightmapIndirectionTextureSize;; Offset: 3744
;       float View_VolumetricLightmapBrickSize;       ; Offset: 3756
;       float3 View_VolumetricLightmapBrickTexelSize; ; Offset: 3760
;       float View_IndirectLightingCacheShowFlag;     ; Offset: 3772
;       float View_EyeToPixelSpreadAngle;             ; Offset: 3776
;       float PrePadding_View_3780;                   ; Offset: 3780
;       float PrePadding_View_3784;                   ; Offset: 3784
;       float PrePadding_View_3788;                   ; Offset: 3788
;       float4 View_XRPassthroughCameraUVs[2];        ; Offset: 3792
;       float View_GlobalVirtualTextureMipBias;       ; Offset: 3824
;       uint View_VirtualTextureFeedbackShift;        ; Offset: 3828
;       uint View_VirtualTextureFeedbackMask;         ; Offset: 3832
;       uint View_VirtualTextureFeedbackStride;       ; Offset: 3836
;       uint View_VirtualTextureFeedbackJitterOffset; ; Offset: 3840
;       uint View_VirtualTextureFeedbackSampleOffset; ; Offset: 3844
;       uint PrePadding_View_3848;                    ; Offset: 3848
;       uint PrePadding_View_3852;                    ; Offset: 3852
;       float4 View_RuntimeVirtualTextureMipLevel;    ; Offset: 3856
;       float2 View_RuntimeVirtualTexturePackHeight;  ; Offset: 3872
;       float PrePadding_View_3880;                   ; Offset: 3880
;       float PrePadding_View_3884;                   ; Offset: 3884
;       float4 View_RuntimeVirtualTextureDebugParams; ; Offset: 3888
;       float View_OverrideLandscapeLOD;              ; Offset: 3904
;       int View_FarShadowStaticMeshLODBias;          ; Offset: 3908
;       float View_MinRoughness;                      ; Offset: 3912
;       float PrePadding_View_3916;                   ; Offset: 3916
;       float4 View_HairRenderInfo;                   ; Offset: 3920
;       uint View_EnableSkyLight;                     ; Offset: 3936
;       uint View_HairRenderInfoBits;                 ; Offset: 3940
;       uint View_HairComponents;                     ; Offset: 3944
;       float View_bSubsurfacePostprocessEnabled;     ; Offset: 3948
;       float4 View_SSProfilesTextureSizeAndInvSize;  ; Offset: 3952
;       float4 View_SSProfilesPreIntegratedTextureSizeAndInvSize;; Offset: 3968
;       float3 View_PhysicsFieldClipmapCenter;        ; Offset: 3984
;       float View_PhysicsFieldClipmapDistance;       ; Offset: 3996
;       int View_PhysicsFieldClipmapResolution;       ; Offset: 4000
;       int View_PhysicsFieldClipmapExponent;         ; Offset: 4004
;       int View_PhysicsFieldClipmapCount;            ; Offset: 4008
;       int View_PhysicsFieldTargetCount;             ; Offset: 4012
;       int4 View_PhysicsFieldTargets[32];            ; Offset: 4016
;       uint View_InstanceSceneDataSOAStride;         ; Offset: 4528
;       uint View_GPUSceneViewId;                     ; Offset: 4532
;       float View_ViewResolutionFraction;            ; Offset: 4536
;       float View_SubSurfaceColorAsTransmittanceAtDistanceInMeters;; Offset: 4540
;       uint BindlessSampler_View_MaterialTextureBilinearWrapedSampler;; Offset: 4544
;       uint PrePadding_View_4548;                    ; Offset: 4548
;       uint BindlessSampler_View_MaterialTextureBilinearClampedSampler;; Offset: 4552
;       uint PrePadding_View_4556;                    ; Offset: 4556
;       uint BindlessResource_View_VolumetricLightmapIndirectionTexture;; Offset: 4560
;       uint PrePadding_View_4564;                    ; Offset: 4564
;       uint BindlessResource_View_VolumetricLightmapBrickAmbientVector;; Offset: 4568
;       uint PrePadding_View_4572;                    ; Offset: 4572
;       uint BindlessResource_View_VolumetricLightmapBrickSHCoefficients0;; Offset: 4576
;       uint PrePadding_View_4580;                    ; Offset: 4580
;       uint BindlessResource_View_VolumetricLightmapBrickSHCoefficients1;; Offset: 4584
;       uint PrePadding_View_4588;                    ; Offset: 4588
;       uint BindlessResource_View_VolumetricLightmapBrickSHCoefficients2;; Offset: 4592
;       uint PrePadding_View_4596;                    ; Offset: 4596
;       uint BindlessResource_View_VolumetricLightmapBrickSHCoefficients3;; Offset: 4600
;       uint PrePadding_View_4604;                    ; Offset: 4604
;       uint BindlessResource_View_VolumetricLightmapBrickSHCoefficients4;; Offset: 4608
;       uint PrePadding_View_4612;                    ; Offset: 4612
;       uint BindlessResource_View_VolumetricLightmapBrickSHCoefficients5;; Offset: 4616
;       uint PrePadding_View_4620;                    ; Offset: 4620
;       uint BindlessResource_View_SkyBentNormalBrickTexture;; Offset: 4624
;       uint PrePadding_View_4628;                    ; Offset: 4628
;       uint BindlessResource_View_DirectionalLightShadowingBrickTexture;; Offset: 4632
;       uint PrePadding_View_4636;                    ; Offset: 4636
;       uint BindlessSampler_View_VolumetricLightmapBrickAmbientVectorSampler;; Offset: 4640
;       uint PrePadding_View_4644;                    ; Offset: 4644
;       uint BindlessSampler_View_VolumetricLightmapTextureSampler0;; Offset: 4648
;       uint PrePadding_View_4652;                    ; Offset: 4652
;       uint BindlessSampler_View_VolumetricLightmapTextureSampler1;; Offset: 4656
;       uint PrePadding_View_4660;                    ; Offset: 4660
;       uint BindlessSampler_View_VolumetricLightmapTextureSampler2;; Offset: 4664
;       uint PrePadding_View_4668;                    ; Offset: 4668
;       uint BindlessSampler_View_VolumetricLightmapTextureSampler3;; Offset: 4672
;       uint PrePadding_View_4676;                    ; Offset: 4676
;       uint BindlessSampler_View_VolumetricLightmapTextureSampler4;; Offset: 4680
;       uint PrePadding_View_4684;                    ; Offset: 4684
;       uint BindlessSampler_View_VolumetricLightmapTextureSampler5;; Offset: 4688
;       uint PrePadding_View_4692;                    ; Offset: 4692
;       uint BindlessSampler_View_SkyBentNormalTextureSampler;; Offset: 4696
;       uint PrePadding_View_4700;                    ; Offset: 4700
;       uint BindlessSampler_View_DirectionalLightShadowingTextureSampler;; Offset: 4704
;       uint PrePadding_View_4708;                    ; Offset: 4708
;       uint BindlessResource_View_GlobalDistanceFieldPageAtlasTexture;; Offset: 4712
;       uint PrePadding_View_4716;                    ; Offset: 4716
;       uint BindlessResource_View_GlobalDistanceFieldCoverageAtlasTexture;; Offset: 4720
;       uint PrePadding_View_4724;                    ; Offset: 4724
;       uint BindlessResource_View_GlobalDistanceFieldPageTableTexture;; Offset: 4728
;       uint PrePadding_View_4732;                    ; Offset: 4732
;       uint BindlessResource_View_GlobalDistanceFieldMipTexture;; Offset: 4736
;       uint PrePadding_View_4740;                    ; Offset: 4740
;       uint BindlessResource_View_AtmosphereTransmittanceTexture;; Offset: 4744
;       uint PrePadding_View_4748;                    ; Offset: 4748
;       uint BindlessSampler_View_AtmosphereTransmittanceTextureSampler;; Offset: 4752
;       uint PrePadding_View_4756;                    ; Offset: 4756
;       uint BindlessResource_View_AtmosphereIrradianceTexture;; Offset: 4760
;       uint PrePadding_View_4764;                    ; Offset: 4764
;       uint BindlessSampler_View_AtmosphereIrradianceTextureSampler;; Offset: 4768
;       uint PrePadding_View_4772;                    ; Offset: 4772
;       uint BindlessResource_View_AtmosphereInscatterTexture;; Offset: 4776
;       uint PrePadding_View_4780;                    ; Offset: 4780
;       uint BindlessSampler_View_AtmosphereInscatterTextureSampler;; Offset: 4784
;       uint PrePadding_View_4788;                    ; Offset: 4788
;       uint BindlessResource_View_PerlinNoiseGradientTexture;; Offset: 4792
;       uint PrePadding_View_4796;                    ; Offset: 4796
;       uint BindlessSampler_View_PerlinNoiseGradientTextureSampler;; Offset: 4800
;       uint PrePadding_View_4804;                    ; Offset: 4804
;       uint BindlessResource_View_PerlinNoise3DTexture;; Offset: 4808
;       uint PrePadding_View_4812;                    ; Offset: 4812
;       uint BindlessSampler_View_PerlinNoise3DTextureSampler;; Offset: 4816
;       uint PrePadding_View_4820;                    ; Offset: 4820
;       uint BindlessResource_View_SobolSamplingTexture;; Offset: 4824
;       uint PrePadding_View_4828;                    ; Offset: 4828
;       uint BindlessSampler_View_SharedPointWrappedSampler;; Offset: 4832
;       uint PrePadding_View_4836;                    ; Offset: 4836
;       uint BindlessSampler_View_SharedPointClampedSampler;; Offset: 4840
;       uint PrePadding_View_4844;                    ; Offset: 4844
;       uint BindlessSampler_View_SharedBilinearWrappedSampler;; Offset: 4848
;       uint PrePadding_View_4852;                    ; Offset: 4852
;       uint BindlessSampler_View_SharedBilinearClampedSampler;; Offset: 4856
;       uint PrePadding_View_4860;                    ; Offset: 4860
;       uint BindlessSampler_View_SharedBilinearAnisoClampedSampler;; Offset: 4864
;       uint PrePadding_View_4868;                    ; Offset: 4868
;       uint BindlessSampler_View_SharedTrilinearWrappedSampler;; Offset: 4872
;       uint PrePadding_View_4876;                    ; Offset: 4876
;       uint BindlessSampler_View_SharedTrilinearClampedSampler;; Offset: 4880
;       uint PrePadding_View_4884;                    ; Offset: 4884
;       uint BindlessResource_View_PreIntegratedBRDF; ; Offset: 4888
;       uint PrePadding_View_4892;                    ; Offset: 4892
;       uint BindlessSampler_View_PreIntegratedBRDFSampler;; Offset: 4896
;       uint PrePadding_View_4900;                    ; Offset: 4900
;       uint BindlessResource_View_PrimitiveSceneData;; Offset: 4904
;       uint PrePadding_View_4908;                    ; Offset: 4908
;       uint BindlessResource_View_InstanceSceneData; ; Offset: 4912
;       uint PrePadding_View_4916;                    ; Offset: 4916
;       uint BindlessResource_View_InstancePayloadData;; Offset: 4920
;       uint PrePadding_View_4924;                    ; Offset: 4924
;       uint BindlessResource_View_LightmapSceneData; ; Offset: 4928
;       uint PrePadding_View_4932;                    ; Offset: 4932
;       uint BindlessResource_View_SkyIrradianceEnvironmentMap;; Offset: 4936
;       uint PrePadding_View_4940;                    ; Offset: 4940
;       uint BindlessResource_View_TransmittanceLutTexture;; Offset: 4944
;       uint PrePadding_View_4948;                    ; Offset: 4948
;       uint BindlessSampler_View_TransmittanceLutTextureSampler;; Offset: 4952
;       uint PrePadding_View_4956;                    ; Offset: 4956
;       uint BindlessResource_View_SkyViewLutTexture; ; Offset: 4960
;       uint PrePadding_View_4964;                    ; Offset: 4964
;       uint BindlessSampler_View_SkyViewLutTextureSampler;; Offset: 4968
;       uint PrePadding_View_4972;                    ; Offset: 4972
;       uint BindlessResource_View_DistantSkyLightLutTexture;; Offset: 4976
;       uint PrePadding_View_4980;                    ; Offset: 4980
;       uint BindlessSampler_View_DistantSkyLightLutTextureSampler;; Offset: 4984
;       uint PrePadding_View_4988;                    ; Offset: 4988
;       uint BindlessResource_View_CameraAerialPerspectiveVolume;; Offset: 4992
;       uint PrePadding_View_4996;                    ; Offset: 4996
;       uint BindlessSampler_View_CameraAerialPerspectiveVolumeSampler;; Offset: 5000
;       uint PrePadding_View_5004;                    ; Offset: 5004
;       uint BindlessResource_View_HairScatteringLUTTexture;; Offset: 5008
;       uint PrePadding_View_5012;                    ; Offset: 5012
;       uint BindlessSampler_View_HairScatteringLUTSampler;; Offset: 5016
;       uint PrePadding_View_5020;                    ; Offset: 5020
;       uint BindlessResource_View_LTCMatTexture;     ; Offset: 5024
;       uint PrePadding_View_5028;                    ; Offset: 5028
;       uint BindlessSampler_View_LTCMatSampler;      ; Offset: 5032
;       uint PrePadding_View_5036;                    ; Offset: 5036
;       uint BindlessResource_View_LTCAmpTexture;     ; Offset: 5040
;       uint PrePadding_View_5044;                    ; Offset: 5044
;       uint BindlessSampler_View_LTCAmpSampler;      ; Offset: 5048
;       uint PrePadding_View_5052;                    ; Offset: 5052
;       uint View_bShadingEnergyConservation;         ; Offset: 5056
;       uint View_bShadingEnergyPreservation;         ; Offset: 5060
;       uint BindlessResource_View_ShadingEnergyGGXSpecTexture;; Offset: 5064
;       uint PrePadding_View_5068;                    ; Offset: 5068
;       uint BindlessResource_View_ShadingEnergyGGXGlassTexture;; Offset: 5072
;       uint PrePadding_View_5076;                    ; Offset: 5076
;       uint BindlessResource_View_ShadingEnergyClothSpecTexture;; Offset: 5080
;       uint PrePadding_View_5084;                    ; Offset: 5084
;       uint BindlessResource_View_ShadingEnergyDiffuseTexture;; Offset: 5088
;       uint PrePadding_View_5092;                    ; Offset: 5092
;       uint BindlessSampler_View_ShadingEnergySampler;; Offset: 5096
;       uint PrePadding_View_5100;                    ; Offset: 5100
;       uint BindlessResource_View_SSProfilesTexture; ; Offset: 5104
;       uint PrePadding_View_5108;                    ; Offset: 5108
;       uint BindlessSampler_View_SSProfilesSampler;  ; Offset: 5112
;       uint PrePadding_View_5116;                    ; Offset: 5116
;       uint BindlessSampler_View_SSProfilesTransmissionSampler;; Offset: 5120
;       uint PrePadding_View_5124;                    ; Offset: 5124
;       uint BindlessResource_View_SSProfilesPreIntegratedTexture;; Offset: 5128
;       uint PrePadding_View_5132;                    ; Offset: 5132
;       uint BindlessSampler_View_SSProfilesPreIntegratedSampler;; Offset: 5136
;       uint PrePadding_View_5140;                    ; Offset: 5140
;       uint BindlessResource_View_WaterIndirection;  ; Offset: 5144
;       uint PrePadding_View_5148;                    ; Offset: 5148
;       uint BindlessResource_View_WaterData;         ; Offset: 5152
;       uint PrePadding_View_5156;                    ; Offset: 5156
;       uint PrePadding_View_5160;                    ; Offset: 5160
;       uint PrePadding_View_5164;                    ; Offset: 5164
;       float4 View_RectLightAtlasSizeAndInvSize;     ; Offset: 5168
;       float View_RectLightAtlasMaxMipLevel;         ; Offset: 5184
;       float PrePadding_View_5188;                   ; Offset: 5188
;       uint BindlessResource_View_RectLightAtlasTexture;; Offset: 5192
;       uint PrePadding_View_5196;                    ; Offset: 5196
;       uint BindlessSampler_View_RectLightAtlasSampler;; Offset: 5200
;       uint PrePadding_View_5204;                    ; Offset: 5204
;       uint BindlessSampler_View_LandscapeWeightmapSampler;; Offset: 5208
;       uint PrePadding_View_5212;                    ; Offset: 5212
;       uint BindlessResource_View_LandscapeIndirection;; Offset: 5216
;       uint PrePadding_View_5220;                    ; Offset: 5220
;       uint BindlessResource_View_LandscapePerComponentData;; Offset: 5224
;       uint PrePadding_View_5228;                    ; Offset: 5228
;       uint BindlessResource_View_VTFeedbackBuffer;  ; Offset: 5232
;       uint PrePadding_View_5236;                    ; Offset: 5236
;       uint BindlessResource_View_EditorVisualizeLevelInstanceIds;; Offset: 5240
;       uint PrePadding_View_5244;                    ; Offset: 5244
;       uint BindlessResource_View_EditorSelectedHitProxyIds;; Offset: 5248
;       uint PrePadding_View_5252;                    ; Offset: 5252
;       uint BindlessResource_View_PhysicsFieldClipmapBuffer;; Offset: 5256
;       uint PrePadding_View_5260;                    ; Offset: 5260
;       float3 View_TLASRelativePreViewTranslation;   ; Offset: 5264
;       float PrePadding_View_5276;                   ; Offset: 5276
;       float3 View_TLASViewTilePosition;             ; Offset: 5280
;   
;   } UniformBufferConstants_View;                    ; Offset:    0 Size:  5292
;
; }
;
; cbuffer UniformBufferConstants_LandscapeMVF
; {
;
;   struct UniformBufferConstants_LandscapeMVF
;   {
;
;       int2 LandscapeMVF_SubXY;                      ; Offset:    0
;   
;   } UniformBufferConstants_LandscapeMVF;            ; Offset:    0 Size:     8
;
; }
;
; cbuffer UniformBufferConstants_LandscapeContinuousLODParameters
; {
;
;   struct UniformBufferConstants_LandscapeContinuousLODParameters
;   {
;
;       int LandscapeContinuousLODParameters_LandscapeIndex;; Offset:    0
;       int PrePadding_LandscapeContinuousLODParameters_4;; Offset:    4
;       int2 LandscapeContinuousLODParameters_Min;    ; Offset:    8
;       int2 LandscapeContinuousLODParameters_Size;   ; Offset:   16
;       uint BindlessResource_LandscapeContinuousLODParameters_SectionLODBias;; Offset:   24
;   
;   } UniformBufferConstants_LandscapeContinuousLODParameters;; Offset:    0 Size:    28
;
; }
;
; cbuffer UniformBufferConstants_LandscapeParameters
; {
;
;   struct UniformBufferConstants_LandscapeParameters
;   {
;
;       int LandscapeParameters_ComponentBaseX;       ; Offset:    0
;       int LandscapeParameters_ComponentBaseY;       ; Offset:    4
;       int LandscapeParameters_SubsectionSizeVerts;  ; Offset:    8
;       int LandscapeParameters_NumSubsections;       ; Offset:   12
;       int LandscapeParameters_LastLOD;              ; Offset:   16
;       int PrePadding_LandscapeParameters_20;        ; Offset:   20
;       int PrePadding_LandscapeParameters_24;        ; Offset:   24
;       int PrePadding_LandscapeParameters_28;        ; Offset:   28
;       float4 LandscapeParameters_HeightmapUVScaleBias;; Offset:   32
;       float4 LandscapeParameters_WeightmapUVScaleBias;; Offset:   48
;       float4 LandscapeParameters_LandscapeLightmapScaleBias;; Offset:   64
;       float4 LandscapeParameters_SubsectionSizeVertsLayerUVPan;; Offset:   80
;       float4 LandscapeParameters_SubsectionOffsetParams;; Offset:   96
;       float4 LandscapeParameters_LightmapSubsectionOffsetParams;; Offset:  112
;       row_major float4x4 LandscapeParameters_LocalToWorldNoScaling;; Offset:  128
;       uint BindlessResource_LandscapeParameters_HeightmapTexture;; Offset:  192
;       uint PrePadding_LandscapeParameters_196;      ; Offset:  196
;       uint BindlessSampler_LandscapeParameters_HeightmapTextureSampler;; Offset:  200
;       uint PrePadding_LandscapeParameters_204;      ; Offset:  204
;       uint BindlessResource_LandscapeParameters_NormalmapTexture;; Offset:  208
;       uint PrePadding_LandscapeParameters_212;      ; Offset:  212
;       uint BindlessSampler_LandscapeParameters_NormalmapTextureSampler;; Offset:  216
;       uint PrePadding_LandscapeParameters_220;      ; Offset:  220
;       uint BindlessResource_LandscapeParameters_XYOffsetmapTexture;; Offset:  224
;       uint PrePadding_LandscapeParameters_228;      ; Offset:  228
;       uint BindlessSampler_LandscapeParameters_XYOffsetmapTextureSampler;; Offset:  232
;   
;   } UniformBufferConstants_LandscapeParameters;     ; Offset:    0 Size:   236
;
; }
;
; cbuffer UniformBufferConstants_Material
; {
;
;   struct UniformBufferConstants_Material
;   {
;
;       float4 Material_PreshaderBuffer[9];           ; Offset:    0
;       uint BindlessResource_Material_Texture2D_0;   ; Offset:  144
;       uint PrePadding_Material_148;                 ; Offset:  148
;       uint BindlessSampler_Material_Texture2D_0Sampler;; Offset:  152
;       uint PrePadding_Material_156;                 ; Offset:  156
;       uint BindlessResource_Material_Texture2D_1;   ; Offset:  160
;       uint PrePadding_Material_164;                 ; Offset:  164
;       uint BindlessSampler_Material_Texture2D_1Sampler;; Offset:  168
;       uint PrePadding_Material_172;                 ; Offset:  172
;       uint BindlessResource_Material_Texture2D_2;   ; Offset:  176
;       uint PrePadding_Material_180;                 ; Offset:  180
;       uint BindlessSampler_Material_Texture2D_2Sampler;; Offset:  184
;       uint PrePadding_Material_188;                 ; Offset:  188
;       uint BindlessResource_Material_Texture2D_3;   ; Offset:  192
;       uint PrePadding_Material_196;                 ; Offset:  196
;       uint BindlessSampler_Material_Texture2D_3Sampler;; Offset:  200
;       uint PrePadding_Material_204;                 ; Offset:  204
;       uint BindlessResource_Material_Texture2D_4;   ; Offset:  208
;       uint PrePadding_Material_212;                 ; Offset:  212
;       uint BindlessSampler_Material_Texture2D_4Sampler;; Offset:  216
;       uint PrePadding_Material_220;                 ; Offset:  220
;       uint BindlessResource_Material_Texture2D_5;   ; Offset:  224
;       uint PrePadding_Material_228;                 ; Offset:  228
;       uint BindlessSampler_Material_Texture2D_5Sampler;; Offset:  232
;       uint PrePadding_Material_236;                 ; Offset:  236
;       uint BindlessResource_Material_Texture2D_6;   ; Offset:  240
;       uint PrePadding_Material_244;                 ; Offset:  244
;       uint BindlessSampler_Material_Texture2D_6Sampler;; Offset:  248
;       uint PrePadding_Material_252;                 ; Offset:  252
;       uint BindlessResource_Material_Texture2D_7;   ; Offset:  256
;       uint PrePadding_Material_260;                 ; Offset:  260
;       uint BindlessSampler_Material_Texture2D_7Sampler;; Offset:  264
;       uint PrePadding_Material_268;                 ; Offset:  268
;       uint BindlessResource_Material_Texture2D_8;   ; Offset:  272
;       uint PrePadding_Material_276;                 ; Offset:  276
;       uint BindlessSampler_Material_Texture2D_8Sampler;; Offset:  280
;       uint PrePadding_Material_284;                 ; Offset:  284
;       uint BindlessResource_Material_Texture2D_9;   ; Offset:  288
;       uint PrePadding_Material_292;                 ; Offset:  292
;       uint BindlessSampler_Material_Texture2D_9Sampler;; Offset:  296
;       uint PrePadding_Material_300;                 ; Offset:  300
;       uint BindlessResource_Material_Texture2D_10;  ; Offset:  304
;       uint PrePadding_Material_308;                 ; Offset:  308
;       uint BindlessSampler_Material_Texture2D_10Sampler;; Offset:  312
;       uint PrePadding_Material_316;                 ; Offset:  316
;       uint BindlessResource_Material_Texture2D_11;  ; Offset:  320
;       uint PrePadding_Material_324;                 ; Offset:  324
;       uint BindlessSampler_Material_Texture2D_11Sampler;; Offset:  328
;       uint PrePadding_Material_332;                 ; Offset:  332
;       uint BindlessResource_Material_Texture2D_12;  ; Offset:  336
;       uint PrePadding_Material_340;                 ; Offset:  340
;       uint BindlessSampler_Material_Texture2D_12Sampler;; Offset:  344
;       uint PrePadding_Material_348;                 ; Offset:  348
;       uint BindlessResource_Material_Texture2D_13;  ; Offset:  352
;       uint PrePadding_Material_356;                 ; Offset:  356
;       uint BindlessSampler_Material_Texture2D_13Sampler;; Offset:  360
;       uint PrePadding_Material_364;                 ; Offset:  364
;       uint BindlessResource_Material_Texture2D_14;  ; Offset:  368
;       uint PrePadding_Material_372;                 ; Offset:  372
;       uint BindlessSampler_Material_Texture2D_14Sampler;; Offset:  376
;       uint PrePadding_Material_380;                 ; Offset:  380
;       uint BindlessResource_Material_Texture2D_15;  ; Offset:  384
;       uint PrePadding_Material_388;                 ; Offset:  388
;       uint BindlessSampler_Material_Texture2D_15Sampler;; Offset:  392
;       uint PrePadding_Material_396;                 ; Offset:  396
;       uint BindlessResource_Material_Texture2D_16;  ; Offset:  400
;       uint PrePadding_Material_404;                 ; Offset:  404
;       uint BindlessSampler_Material_Texture2D_16Sampler;; Offset:  408
;       uint PrePadding_Material_412;                 ; Offset:  412
;       uint BindlessSampler_Material_Wrap_WorldGroupSettings;; Offset:  416
;       uint PrePadding_Material_420;                 ; Offset:  420
;       uint BindlessSampler_Material_Clamp_WorldGroupSettings;; Offset:  424
;   
;   } UniformBufferConstants_Material;                ; Offset:    0 Size:   428
;
; }
;
; cbuffer HitGroupSystemRootConstants
; {
;
;   struct HitGroupSystemRootConstants
;   {
;
;       struct struct.FHitGroupSystemRootConstants
;       {
;
;           uint Config;                              ; Offset:    0
;           uint IndexBufferOffsetInBytes;            ; Offset:    4
;           uint FirstPrimitive;                      ; Offset:    8
;           uint UserData;                            ; Offset:   12
;           uint BaseInstanceIndex;                   ; Offset:   16
;           uint Pad0;                                ; Offset:   20
;       
;       } HitGroupSystemRootConstants;                ; Offset:    0
;
;   
;   } HitGroupSystemRootConstants;                    ; Offset:    0 Size:    24
;
; }
;
; Resource bind info for View_PrimitiveSceneData
; {
;
;   float4 $Element;                                  ; Offset:    0 Size:    16
;
; }
;
; Resource bind info for View_InstanceSceneData
; {
;
;   float4 $Element;                                  ; Offset:    0 Size:    16
;
; }
;
; Resource bind info for View_SkyIrradianceEnvironmentMap
; {
;
;   float4 $Element;                                  ; Offset:    0 Size:    16
;
; }
;
;
; Resource Bindings:
;
; Name                                 Type  Format         Dim      ID      HLSL Bind  Count
; ------------------------------ ---------- ------- ----------- ------- -------------- ------
; UniformBufferConstants_View       cbuffer      NA          NA     CB0            cb0     1
; UniformBufferConstants_LandscapeMVF   cbuffer      NA          NA     CB1            cb1     1
; UniformBufferConstants_LandscapeContinuousLODParameters   cbuffer      NA          NA     CB2            cb2     1
; UniformBufferConstants_LandscapeParameters   cbuffer      NA          NA     CB3            cb3     1
; UniformBufferConstants_Material   cbuffer      NA          NA     CB4            cb4     1
; HitGroupSystemRootConstants       cbuffer      NA          NA     CB5     cb0,space2     1
; View_LandscapeWeightmapSampler    sampler      NA          NA      S0             s0     1
; LandscapeParameters_HeightmapTextureSampler   sampler      NA          NA      S1             s1     1
; LandscapeParameters_NormalmapTextureSampler   sampler      NA          NA      S2             s2     1
; LandscapeParameters_XYOffsetmapTextureSampler   sampler      NA          NA      S3             s3     1
; Material_Texture2D_2Sampler       sampler      NA          NA      S4             s4     1
; Material_Texture2D_3Sampler       sampler      NA          NA      S5             s5     1
; Material_Texture2D_4Sampler       sampler      NA          NA      S6             s6     1
; Material_Texture2D_5Sampler       sampler      NA          NA      S7             s7     1
; Material_Texture2D_6Sampler       sampler      NA          NA      S8             s8     1
; Material_Texture2D_7Sampler       sampler      NA          NA      S9             s9     1
; Material_Texture2D_8Sampler       sampler      NA          NA     S10            s10     1
; Material_Texture2D_9Sampler       sampler      NA          NA     S11            s11     1
; Material_Texture2D_10Sampler      sampler      NA          NA     S12            s12     1
; Material_Texture2D_11Sampler      sampler      NA          NA     S13            s13     1
; Material_Texture2D_12Sampler      sampler      NA          NA     S14            s14     1
; Material_Texture2D_13Sampler      sampler      NA          NA     S15            s15     1
; Material_Texture2D_14Sampler      sampler      NA          NA     S16            s16     1
; Material_Texture2D_15Sampler      sampler      NA          NA     S17            s17     1
; Material_Texture2D_16Sampler      sampler      NA          NA     S18            s18     1
; View_PrimitiveSceneData           texture  struct         r/o      T0             t0     1
; View_InstanceSceneData            texture  struct         r/o      T1             t1     1
; View_SkyIrradianceEnvironmentMap   texture  struct         r/o      T2             t2     1
; View_LandscapeIndirection         texture     u32         buf      T3             t3     1
; View_LandscapePerComponentData    texture     f32         buf      T4             t4     1
; LandscapeContinuousLODParameters_SectionLODBias   texture     f32         buf      T5             t5     1
; LandscapeParameters_HeightmapTexture   texture     f32          2d      T6             t6     1
; LandscapeParameters_NormalmapTexture   texture     f32          2d      T7             t7     1
; LandscapeParameters_XYOffsetmapTexture   texture     f32          2d      T8             t8     1
; Material_Texture2D_0              texture     f32          2d      T9             t9     1
; Material_Texture2D_1              texture     f32          2d     T10            t10     1
; Material_Texture2D_2              texture     f32          2d     T11            t11     1
; Material_Texture2D_3              texture     f32          2d     T12            t12     1
; Material_Texture2D_4              texture     f32          2d     T13            t13     1
; Material_Texture2D_5              texture     f32          2d     T14            t14     1
; Material_Texture2D_6              texture     f32          2d     T15            t15     1
; Material_Texture2D_7              texture     f32          2d     T16            t16     1
; Material_Texture2D_8              texture     f32          2d     T17            t17     1
; Material_Texture2D_9              texture     f32          2d     T18            t18     1
; Material_Texture2D_10             texture     f32          2d     T19            t19     1
; Material_Texture2D_11             texture     f32          2d     T20            t20     1
; Material_Texture2D_12             texture     f32          2d     T21            t21     1
; Material_Texture2D_13             texture     f32          2d     T22            t22     1
; Material_Texture2D_14             texture     f32          2d     T23            t23     1
; Material_Texture2D_15             texture     f32          2d     T24            t24     1
; Material_Texture2D_16             texture     f32          2d     T25            t25     1
; HitGroupSystemIndexBuffer         texture    byte         r/o     T26      t0,space2     1
;
target datalayout = "e-m:e-p:32:32-i1:32-i8:8-i16:16-i32:32-i64:64-f16:16-f32:32-f64:64-n8:16:32:64"
target triple = "dxil-ms-dx"

%dx.types.Handle = type { i8* }
%struct.FPackedMaterialClosestHitPayload = type { %struct.FMinimalPayload, i32, float, [3 x i32], [2 x i32], i32, i32, [2 x i32], i32, [2 x i32], i32 }
%struct.FMinimalPayload = type { float }
%struct.FRayTracingIntersectionAttributes = type { <2 x i32> }
%dx.types.ResourceProperties = type { i32, i32 }
%dx.types.CBufRet.i32 = type { i32, i32, i32, i32 }
%dx.types.ResRet.i32 = type { i32, i32, i32, i32, i32 }
%dx.types.CBufRet.f32 = type { float, float, float, float }
%dx.types.ResRet.f32 = type { float, float, float, float, i32 }
%"class.StructuredBuffer<vector<float, 4> >" = type { <4 x float> }
%"class.Buffer<unsigned int>" = type { i32 }
%"class.Buffer<float>" = type { float }
%"class.Texture2D<vector<float, 4> >" = type { <4 x float>, %"class.Texture2D<vector<float, 4> >::mips_type" }
%"class.Texture2D<vector<float, 4> >::mips_type" = type { i32 }
%struct.ByteAddressBuffer = type { i32 }
%UniformBufferConstants_View = type { %class.matrix.float.4.4, %class.matrix.float.4.4, %class.matrix.float.4.4, %class.matrix.float.4.4, %class.matrix.float.4.4, %class.matrix.float.4.4, %class.matrix.float.4.4, %class.matrix.float.4.4, %class.matrix.float.4.4, %class.matrix.float.4.4, %class.matrix.float.4.4, %class.matrix.float.4.4, %class.matrix.float.4.4, %class.matrix.float.4.4, %class.matrix.float.4.4, %class.matrix.float.4.4, <3 x float>, float, <3 x float>, float, <3 x float>, float, <3 x float>, float, <3 x float>, float, <3 x float>, float, <3 x float>, float, <4 x float>, <4 x float>, <3 x float>, float, <3 x float>, float, <3 x float>, float, <3 x float>, float, %class.matrix.float.4.4, %class.matrix.float.4.4, %class.matrix.float.4.4, %class.matrix.float.4.4, %class.matrix.float.4.4, %class.matrix.float.4.4, %class.matrix.float.4.4, <3 x float>, float, <3 x float>, float, <3 x float>, float, <3 x float>, float, %class.matrix.float.4.4, %class.matrix.float.4.4, %class.matrix.float.4.4, %class.matrix.float.4.4, <4 x float>, <4 x float>, <2 x float>, <2 x float>, <4 x float>, <4 x float>, <4 x i32>, <4 x float>, <4 x float>, <4 x float>, <4 x float>, <2 x float>, <2 x float>, i32, float, float, float, <4 x float>, <4 x float>, <4 x float>, <2 x float>, float, float, float, float, float, float, <3 x float>, float, float, float, float, float, float, float, i32, i32, i32, i32, i32, float, float, float, float, float, <4 x float>, <3 x float>, float, [2 x <4 x float>], [2 x <4 x float>], <4 x float>, <4 x float>, float, float, float, float, float, float, float, float, float, float, float, float, <3 x float>, float, <3 x float>, float, <3 x float>, float, [2 x <4 x float>], [2 x <4 x float>], [2 x <4 x float>], [2 x <4 x float>], [2 x <4 x float>], <4 x float>, <3 x float>, float, <4 x float>, %class.matrix.float.4.4, <4 x float>, float, float, float, float, <4 x float>, float, float, float, float, float, float, float, float, <3 x float>, float, float, float, float, float, <4 x float>, float, float, float, float, <4 x float>, [8 x <4 x float>], float, float, float, float, i32, float, float, float, <3 x float>, i32, [6 x <4 x float>], [6 x <4 x float>], [6 x <4 x float>], [6 x <4 x float>], float, float, i32, i32, <3 x float>, float, <3 x float>, float, float, float, i32, float, float, float, float, float, <2 x i32>, float, float, <3 x float>, float, <3 x float>, float, <2 x float>, float, float, <3 x float>, float, <3 x float>, float, <3 x float>, float, <3 x float>, float, float, float, float, float, [2 x <4 x float>], float, i32, i32, i32, i32, i32, i32, i32, <4 x float>, <2 x float>, float, float, <4 x float>, float, i32, float, float, <4 x float>, i32, i32, i32, float, <4 x float>, <4 x float>, <3 x float>, float, i32, i32, i32, i32, [32 x <4 x i32>], i32, i32, float, float, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, <4 x float>, float, float, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, <3 x float>, float, <3 x float> }
%class.matrix.float.4.4 = type { [4 x <4 x float>] }
%UniformBufferConstants_LandscapeMVF = type { <2 x i32> }
%UniformBufferConstants_LandscapeContinuousLODParameters = type { i32, i32, <2 x i32>, <2 x i32>, i32 }
%UniformBufferConstants_LandscapeParameters = type { i32, i32, i32, i32, i32, i32, i32, i32, <4 x float>, <4 x float>, <4 x float>, <4 x float>, <4 x float>, <4 x float>, %class.matrix.float.4.4, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%UniformBufferConstants_Material = type { [9 x <4 x float>], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%HitGroupSystemRootConstants = type { %struct.FHitGroupSystemRootConstants }
%struct.FHitGroupSystemRootConstants = type { i32, i32, i32, i32, i32, i32 }
%struct.SamplerState = type { i32 }

@"\01?View_PrimitiveSceneData@@3V?$StructuredBuffer@V?$vector@M$03@@@@A" = external constant %dx.types.Handle, align 4
@"\01?View_InstanceSceneData@@3V?$StructuredBuffer@V?$vector@M$03@@@@A" = external constant %dx.types.Handle, align 4
@"\01?View_SkyIrradianceEnvironmentMap@@3V?$StructuredBuffer@V?$vector@M$03@@@@A" = external constant %dx.types.Handle, align 4
@"\01?View_LandscapeWeightmapSampler@@3USamplerState@@A" = external constant %dx.types.Handle, align 4
@"\01?View_LandscapeIndirection@@3V?$Buffer@I@@A" = external constant %dx.types.Handle, align 4
@"\01?View_LandscapePerComponentData@@3V?$Buffer@M@@A" = external constant %dx.types.Handle, align 4
@"\01?LandscapeContinuousLODParameters_SectionLODBias@@3V?$Buffer@M@@A" = external constant %dx.types.Handle, align 4
@"\01?LandscapeParameters_HeightmapTexture@@3V?$Texture2D@V?$vector@M$03@@@@A" = external constant %dx.types.Handle, align 4
@"\01?LandscapeParameters_HeightmapTextureSampler@@3USamplerState@@A" = external constant %dx.types.Handle, align 4
@"\01?LandscapeParameters_NormalmapTexture@@3V?$Texture2D@V?$vector@M$03@@@@A" = external constant %dx.types.Handle, align 4
@"\01?LandscapeParameters_NormalmapTextureSampler@@3USamplerState@@A" = external constant %dx.types.Handle, align 4
@"\01?LandscapeParameters_XYOffsetmapTexture@@3V?$Texture2D@V?$vector@M$03@@@@A" = external constant %dx.types.Handle, align 4
@"\01?LandscapeParameters_XYOffsetmapTextureSampler@@3USamplerState@@A" = external constant %dx.types.Handle, align 4
@"\01?Material_Texture2D_0@@3V?$Texture2D@V?$vector@M$03@@@@A" = external constant %dx.types.Handle, align 4
@"\01?Material_Texture2D_1@@3V?$Texture2D@V?$vector@M$03@@@@A" = external constant %dx.types.Handle, align 4
@"\01?Material_Texture2D_2@@3V?$Texture2D@V?$vector@M$03@@@@A" = external constant %dx.types.Handle, align 4
@"\01?Material_Texture2D_2Sampler@@3USamplerState@@A" = external constant %dx.types.Handle, align 4
@"\01?Material_Texture2D_3@@3V?$Texture2D@V?$vector@M$03@@@@A" = external constant %dx.types.Handle, align 4
@"\01?Material_Texture2D_3Sampler@@3USamplerState@@A" = external constant %dx.types.Handle, align 4
@"\01?Material_Texture2D_4@@3V?$Texture2D@V?$vector@M$03@@@@A" = external constant %dx.types.Handle, align 4
@"\01?Material_Texture2D_4Sampler@@3USamplerState@@A" = external constant %dx.types.Handle, align 4
@"\01?Material_Texture2D_5@@3V?$Texture2D@V?$vector@M$03@@@@A" = external constant %dx.types.Handle, align 4
@"\01?Material_Texture2D_5Sampler@@3USamplerState@@A" = external constant %dx.types.Handle, align 4
@"\01?Material_Texture2D_6@@3V?$Texture2D@V?$vector@M$03@@@@A" = external constant %dx.types.Handle, align 4
@"\01?Material_Texture2D_6Sampler@@3USamplerState@@A" = external constant %dx.types.Handle, align 4
@"\01?Material_Texture2D_7@@3V?$Texture2D@V?$vector@M$03@@@@A" = external constant %dx.types.Handle, align 4
@"\01?Material_Texture2D_7Sampler@@3USamplerState@@A" = external constant %dx.types.Handle, align 4
@"\01?Material_Texture2D_8@@3V?$Texture2D@V?$vector@M$03@@@@A" = external constant %dx.types.Handle, align 4
@"\01?Material_Texture2D_8Sampler@@3USamplerState@@A" = external constant %dx.types.Handle, align 4
@"\01?Material_Texture2D_9@@3V?$Texture2D@V?$vector@M$03@@@@A" = external constant %dx.types.Handle, align 4
@"\01?Material_Texture2D_9Sampler@@3USamplerState@@A" = external constant %dx.types.Handle, align 4
@"\01?Material_Texture2D_10@@3V?$Texture2D@V?$vector@M$03@@@@A" = external constant %dx.types.Handle, align 4
@"\01?Material_Texture2D_10Sampler@@3USamplerState@@A" = external constant %dx.types.Handle, align 4
@"\01?Material_Texture2D_11@@3V?$Texture2D@V?$vector@M$03@@@@A" = external constant %dx.types.Handle, align 4
@"\01?Material_Texture2D_11Sampler@@3USamplerState@@A" = external constant %dx.types.Handle, align 4
@"\01?Material_Texture2D_12@@3V?$Texture2D@V?$vector@M$03@@@@A" = external constant %dx.types.Handle, align 4
@"\01?Material_Texture2D_12Sampler@@3USamplerState@@A" = external constant %dx.types.Handle, align 4
@"\01?Material_Texture2D_13@@3V?$Texture2D@V?$vector@M$03@@@@A" = external constant %dx.types.Handle, align 4
@"\01?Material_Texture2D_13Sampler@@3USamplerState@@A" = external constant %dx.types.Handle, align 4
@"\01?Material_Texture2D_14@@3V?$Texture2D@V?$vector@M$03@@@@A" = external constant %dx.types.Handle, align 4
@"\01?Material_Texture2D_14Sampler@@3USamplerState@@A" = external constant %dx.types.Handle, align 4
@"\01?Material_Texture2D_15@@3V?$Texture2D@V?$vector@M$03@@@@A" = external constant %dx.types.Handle, align 4
@"\01?Material_Texture2D_15Sampler@@3USamplerState@@A" = external constant %dx.types.Handle, align 4
@"\01?Material_Texture2D_16@@3V?$Texture2D@V?$vector@M$03@@@@A" = external constant %dx.types.Handle, align 4
@"\01?Material_Texture2D_16Sampler@@3USamplerState@@A" = external constant %dx.types.Handle, align 4
@"\01?HitGroupSystemIndexBuffer@@3UByteAddressBuffer@@A" = external constant %dx.types.Handle, align 4
@llvm.global_ctors = appending global [0 x { i32, void ()*, i8* }] zeroinitializer
@UniformBufferConstants_View = external constant %dx.types.Handle
@UniformBufferConstants_LandscapeMVF = external constant %dx.types.Handle
@UniformBufferConstants_LandscapeContinuousLODParameters = external constant %dx.types.Handle
@UniformBufferConstants_LandscapeParameters = external constant %dx.types.Handle
@UniformBufferConstants_Material = external constant %dx.types.Handle
@HitGroupSystemRootConstants = external constant %dx.types.Handle
@NeighborOffset.i.i.i.i.0.hca = internal unnamed_addr constant [4 x i32] [i32 0, i32 -1, i32 1, i32 0]
@NeighborOffset.i.i.i.i.1.hca = internal unnamed_addr constant [4 x i32] [i32 -1, i32 0, i32 0, i32 1]

; Function Attrs: nounwind
declare void @llvm.lifetime.start(i64, i8* nocapture) #0

; Function Attrs: nounwind
declare void @llvm.lifetime.end(i64, i8* nocapture) #0

; Function Attrs: nounwind
define void @"\01?MaterialCHS@@YAXUFPackedMaterialClosestHitPayload@@UFRayTracingIntersectionAttributes@@@Z"(%struct.FPackedMaterialClosestHitPayload* noalias %PackedPayload, %struct.FRayTracingIntersectionAttributes* nocapture readonly %Attributes) #0 {
  %1 = load %dx.types.Handle, %dx.types.Handle* @"\01?Material_Texture2D_16Sampler@@3USamplerState@@A", align 4, !noalias !67
  %2 = load %dx.types.Handle, %dx.types.Handle* @"\01?Material_Texture2D_15Sampler@@3USamplerState@@A", align 4, !noalias !67
  %3 = load %dx.types.Handle, %dx.types.Handle* @"\01?Material_Texture2D_14Sampler@@3USamplerState@@A", align 4, !noalias !67
  %4 = load %dx.types.Handle, %dx.types.Handle* @"\01?Material_Texture2D_13Sampler@@3USamplerState@@A", align 4, !noalias !67
  %5 = load %dx.types.Handle, %dx.types.Handle* @"\01?Material_Texture2D_12Sampler@@3USamplerState@@A", align 4, !noalias !67
  %6 = load %dx.types.Handle, %dx.types.Handle* @"\01?Material_Texture2D_11Sampler@@3USamplerState@@A", align 4, !noalias !67
  %7 = load %dx.types.Handle, %dx.types.Handle* @"\01?Material_Texture2D_10Sampler@@3USamplerState@@A", align 4, !noalias !67
  %8 = load %dx.types.Handle, %dx.types.Handle* @"\01?Material_Texture2D_9Sampler@@3USamplerState@@A", align 4, !noalias !67
  %9 = load %dx.types.Handle, %dx.types.Handle* @"\01?Material_Texture2D_8Sampler@@3USamplerState@@A", align 4, !noalias !67
  %10 = load %dx.types.Handle, %dx.types.Handle* @"\01?Material_Texture2D_7Sampler@@3USamplerState@@A", align 4, !noalias !67
  %11 = load %dx.types.Handle, %dx.types.Handle* @"\01?Material_Texture2D_6Sampler@@3USamplerState@@A", align 4, !noalias !72
  %12 = load %dx.types.Handle, %dx.types.Handle* @"\01?Material_Texture2D_5Sampler@@3USamplerState@@A", align 4, !noalias !72
  %13 = load %dx.types.Handle, %dx.types.Handle* @"\01?Material_Texture2D_4Sampler@@3USamplerState@@A", align 4, !noalias !72
  %14 = load %dx.types.Handle, %dx.types.Handle* @"\01?Material_Texture2D_3Sampler@@3USamplerState@@A", align 4, !noalias !72
  %15 = load %dx.types.Handle, %dx.types.Handle* @"\01?Material_Texture2D_2Sampler@@3USamplerState@@A", align 4, !noalias !72
  %16 = load %dx.types.Handle, %dx.types.Handle* @"\01?LandscapeParameters_XYOffsetmapTextureSampler@@3USamplerState@@A", align 4, !noalias !74
  %17 = load %dx.types.Handle, %dx.types.Handle* @"\01?LandscapeParameters_NormalmapTextureSampler@@3USamplerState@@A", align 4
  %18 = load %dx.types.Handle, %dx.types.Handle* @"\01?LandscapeParameters_HeightmapTextureSampler@@3USamplerState@@A", align 4, !noalias !74
  %19 = load %dx.types.Handle, %dx.types.Handle* @"\01?View_LandscapeWeightmapSampler@@3USamplerState@@A", align 4, !noalias !82
  %20 = load %dx.types.Handle, %dx.types.Handle* @"\01?HitGroupSystemIndexBuffer@@3UByteAddressBuffer@@A", align 4, !noalias !85
  %21 = load %dx.types.Handle, %dx.types.Handle* @"\01?Material_Texture2D_16@@3V?$Texture2D@V?$vector@M$03@@@@A", align 4, !noalias !67
  %22 = load %dx.types.Handle, %dx.types.Handle* @"\01?Material_Texture2D_15@@3V?$Texture2D@V?$vector@M$03@@@@A", align 4, !noalias !67
  %23 = load %dx.types.Handle, %dx.types.Handle* @"\01?Material_Texture2D_14@@3V?$Texture2D@V?$vector@M$03@@@@A", align 4, !noalias !67
  %24 = load %dx.types.Handle, %dx.types.Handle* @"\01?Material_Texture2D_13@@3V?$Texture2D@V?$vector@M$03@@@@A", align 4, !noalias !67
  %25 = load %dx.types.Handle, %dx.types.Handle* @"\01?Material_Texture2D_12@@3V?$Texture2D@V?$vector@M$03@@@@A", align 4, !noalias !67
  %26 = load %dx.types.Handle, %dx.types.Handle* @"\01?Material_Texture2D_11@@3V?$Texture2D@V?$vector@M$03@@@@A", align 4, !noalias !67
  %27 = load %dx.types.Handle, %dx.types.Handle* @"\01?Material_Texture2D_10@@3V?$Texture2D@V?$vector@M$03@@@@A", align 4, !noalias !67
  %28 = load %dx.types.Handle, %dx.types.Handle* @"\01?Material_Texture2D_9@@3V?$Texture2D@V?$vector@M$03@@@@A", align 4, !noalias !67
  %29 = load %dx.types.Handle, %dx.types.Handle* @"\01?Material_Texture2D_8@@3V?$Texture2D@V?$vector@M$03@@@@A", align 4, !noalias !67
  %30 = load %dx.types.Handle, %dx.types.Handle* @"\01?Material_Texture2D_7@@3V?$Texture2D@V?$vector@M$03@@@@A", align 4, !noalias !67
  %31 = load %dx.types.Handle, %dx.types.Handle* @"\01?Material_Texture2D_6@@3V?$Texture2D@V?$vector@M$03@@@@A", align 4, !noalias !72
  %32 = load %dx.types.Handle, %dx.types.Handle* @"\01?Material_Texture2D_5@@3V?$Texture2D@V?$vector@M$03@@@@A", align 4, !noalias !72
  %33 = load %dx.types.Handle, %dx.types.Handle* @"\01?Material_Texture2D_4@@3V?$Texture2D@V?$vector@M$03@@@@A", align 4, !noalias !72
  %34 = load %dx.types.Handle, %dx.types.Handle* @"\01?Material_Texture2D_3@@3V?$Texture2D@V?$vector@M$03@@@@A", align 4, !noalias !72
  %35 = load %dx.types.Handle, %dx.types.Handle* @"\01?Material_Texture2D_2@@3V?$Texture2D@V?$vector@M$03@@@@A", align 4, !noalias !72
  %36 = load %dx.types.Handle, %dx.types.Handle* @"\01?Material_Texture2D_1@@3V?$Texture2D@V?$vector@M$03@@@@A", align 4, !noalias !72
  %37 = load %dx.types.Handle, %dx.types.Handle* @"\01?Material_Texture2D_0@@3V?$Texture2D@V?$vector@M$03@@@@A", align 4, !noalias !72
  %38 = load %dx.types.Handle, %dx.types.Handle* @"\01?LandscapeParameters_XYOffsetmapTexture@@3V?$Texture2D@V?$vector@M$03@@@@A", align 4, !noalias !74
  %39 = load %dx.types.Handle, %dx.types.Handle* @"\01?LandscapeParameters_NormalmapTexture@@3V?$Texture2D@V?$vector@M$03@@@@A", align 4
  %40 = load %dx.types.Handle, %dx.types.Handle* @"\01?LandscapeParameters_HeightmapTexture@@3V?$Texture2D@V?$vector@M$03@@@@A", align 4, !noalias !74
  %41 = load %dx.types.Handle, %dx.types.Handle* @"\01?LandscapeContinuousLODParameters_SectionLODBias@@3V?$Buffer@M@@A", align 4, !noalias !74
  %42 = load %dx.types.Handle, %dx.types.Handle* @"\01?View_LandscapePerComponentData@@3V?$Buffer@M@@A", align 4, !noalias !74
  %43 = load %dx.types.Handle, %dx.types.Handle* @"\01?View_LandscapeIndirection@@3V?$Buffer@I@@A", align 4, !noalias !74
  %44 = load %dx.types.Handle, %dx.types.Handle* @"\01?View_SkyIrradianceEnvironmentMap@@3V?$StructuredBuffer@V?$vector@M$03@@@@A", align 4, !noalias !92
  %45 = load %dx.types.Handle, %dx.types.Handle* @"\01?View_InstanceSceneData@@3V?$StructuredBuffer@V?$vector@M$03@@@@A", align 4, !noalias !102
  %46 = load %dx.types.Handle, %dx.types.Handle* @"\01?View_PrimitiveSceneData@@3V?$StructuredBuffer@V?$vector@M$03@@@@A", align 4
  %47 = load %dx.types.Handle, %dx.types.Handle* @HitGroupSystemRootConstants, align 4
  %48 = load %dx.types.Handle, %dx.types.Handle* @UniformBufferConstants_Material, align 4
  %49 = load %dx.types.Handle, %dx.types.Handle* @UniformBufferConstants_LandscapeParameters, align 4
  %50 = load %dx.types.Handle, %dx.types.Handle* @UniformBufferConstants_LandscapeContinuousLODParameters, align 4
  %51 = load %dx.types.Handle, %dx.types.Handle* @UniformBufferConstants_LandscapeMVF, align 4
  %52 = load %dx.types.Handle, %dx.types.Handle* @UniformBufferConstants_View, align 4
  %53 = alloca [3 x float], align 4
  %54 = alloca [3 x float], align 4
  %55 = alloca [3 x float], align 4
  %56 = alloca [3 x i32], align 4
  %57 = alloca [3 x i32], align 4
  %58 = alloca [4 x float], align 4
  %59 = alloca [3 x float], align 4
  %60 = alloca [4 x float], align 4
  %61 = call %dx.types.Handle @dx.op.createHandleForLib.dx.types.Handle(i32 160, %dx.types.Handle %47)  ; CreateHandleForLib(Resource)
  %62 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %61, %dx.types.ResourceProperties { i32 13, i32 24 })  ; AnnotateHandle(res,props)  resource: CBuffer
  %63 = call %dx.types.Handle @dx.op.createHandleForLib.dx.types.Handle(i32 160, %dx.types.Handle %48)  ; CreateHandleForLib(Resource)
  %64 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %63, %dx.types.ResourceProperties { i32 13, i32 428 })  ; AnnotateHandle(res,props)  resource: CBuffer
  %65 = call %dx.types.Handle @dx.op.createHandleForLib.dx.types.Handle(i32 160, %dx.types.Handle %49)  ; CreateHandleForLib(Resource)
  %66 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %65, %dx.types.ResourceProperties { i32 13, i32 236 })  ; AnnotateHandle(res,props)  resource: CBuffer
  %67 = call %dx.types.Handle @dx.op.createHandleForLib.dx.types.Handle(i32 160, %dx.types.Handle %50)  ; CreateHandleForLib(Resource)
  %68 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %67, %dx.types.ResourceProperties { i32 13, i32 28 })  ; AnnotateHandle(res,props)  resource: CBuffer
  %69 = call %dx.types.Handle @dx.op.createHandleForLib.dx.types.Handle(i32 160, %dx.types.Handle %51)  ; CreateHandleForLib(Resource)
  %70 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %69, %dx.types.ResourceProperties { i32 13, i32 8 })  ; AnnotateHandle(res,props)  resource: CBuffer
  %71 = call %dx.types.Handle @dx.op.createHandleForLib.dx.types.Handle(i32 160, %dx.types.Handle %52)  ; CreateHandleForLib(Resource)
  %72 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %71, %dx.types.ResourceProperties { i32 13, i32 5292 })  ; AnnotateHandle(res,props)  resource: CBuffer
  %73 = call float @dx.op.rayTCurrent.f32(i32 154)  ; RayTCurrent()
  %74 = getelementptr inbounds %struct.FPackedMaterialClosestHitPayload, %struct.FPackedMaterialClosestHitPayload* %PackedPayload, i32 0, i32 0, i32 0
  store float %73, float* %74, align 4, !tbaa !107
  %75 = getelementptr inbounds %struct.FPackedMaterialClosestHitPayload, %struct.FPackedMaterialClosestHitPayload* %PackedPayload, i32 0, i32 6
  %76 = load i32, i32* %75, align 4, !tbaa !111
  %77 = and i32 %76, 33554432
  %78 = icmp ne i32 %77, 0
  br i1 %78, label %79, label %719

; <label>:79                                      ; preds = %0
  %80 = bitcast [3 x float]* %53 to i8*
  call void @llvm.lifetime.start(i64 12, i8* %80) #0
  %81 = bitcast [3 x float]* %54 to i8*
  call void @llvm.lifetime.start(i64 12, i8* %81) #0
  %82 = bitcast [3 x float]* %55 to i8*
  call void @llvm.lifetime.start(i64 12, i8* %82) #0
  %83 = getelementptr inbounds [4 x float], [4 x float]* %60, i32 0, i32 0
  br label %84

; <label>:84                                      ; preds = %423, %79
  %85 = phi i32 [ 0, %79 ], [ %635, %423 ]
  %86 = call i32 @dx.op.primitiveIndex.i32(i32 161)  ; PrimitiveIndex()
  %87 = call %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32 59, %dx.types.Handle %66, i32 0)  ; CBufferLoadLegacy(handle,regIndex)
  %88 = extractvalue %dx.types.CBufRet.i32 %87, 1
  %89 = call %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32 59, %dx.types.Handle %68, i32 0)  ; CBufferLoadLegacy(handle,regIndex)
  %90 = extractvalue %dx.types.CBufRet.i32 %89, 3
  %91 = sub nsw i32 %88, %90
  %92 = call %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32 59, %dx.types.Handle %68, i32 1)  ; CBufferLoadLegacy(handle,regIndex)
  %93 = extractvalue %dx.types.CBufRet.i32 %92, 0
  %94 = mul nsw i32 %91, %93
  %95 = extractvalue %dx.types.CBufRet.i32 %87, 0
  %96 = extractvalue %dx.types.CBufRet.i32 %89, 2
  %97 = call %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32 59, %dx.types.Handle %66, i32 1)  ; CBufferLoadLegacy(handle,regIndex)
  %98 = extractvalue %dx.types.CBufRet.i32 %97, 0
  %99 = sitofp i32 %98 to float
  %100 = extractvalue %dx.types.CBufRet.i32 %89, 0
  %101 = call %dx.types.Handle @dx.op.createHandleForLib.dx.types.Handle(i32 160, %dx.types.Handle %43)  ; CreateHandleForLib(Resource)
  %102 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %101, %dx.types.ResourceProperties { i32 10, i32 261 })  ; AnnotateHandle(res,props)  resource: TypedBuffer<U32>
  %103 = call %dx.types.ResRet.i32 @dx.op.bufferLoad.i32(i32 68, %dx.types.Handle %102, i32 %100, i32 undef)  ; BufferLoad(srv,index,wot)
  %104 = extractvalue %dx.types.ResRet.i32 %103, 0
  %105 = add i32 %94, %95
  %106 = sub i32 %105, %96
  %107 = add i32 %106, %104
  %108 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %72, i32 244)  ; CBufferLoadLegacy(handle,regIndex)
  %109 = extractvalue %dx.types.CBufRet.f32 %108, 0
  %110 = fcmp fast oge float %109, 0.000000e+00
  %111 = call %dx.types.Handle @dx.op.createHandleForLib.dx.types.Handle(i32 160, %dx.types.Handle %42)  ; CreateHandleForLib(Resource)
  %112 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %111, %dx.types.ResourceProperties { i32 10, i32 265 })  ; AnnotateHandle(res,props)  resource: TypedBuffer<F32>
  %113 = call %dx.types.ResRet.f32 @dx.op.bufferLoad.f32(i32 68, %dx.types.Handle %112, i32 %107, i32 undef)  ; BufferLoad(srv,index,wot)
  %114 = extractvalue %dx.types.ResRet.f32 %113, 0
  %115 = select i1 %110, float %109, float %114
  %116 = call %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32 59, %dx.types.Handle %72, i32 244)  ; CBufferLoadLegacy(handle,regIndex)
  %117 = extractvalue %dx.types.CBufRet.i32 %116, 1
  %118 = sitofp i32 %117 to float
  %119 = fadd fast float %118, %115
  %120 = call float @dx.op.binary.f32(i32 36, float %119, float %99)  ; FMin(a,b)
  %121 = call float @dx.op.unary.f32(i32 27, float %120)  ; Round_ni(value)
  %122 = fptoui float %121 to i32
  %123 = extractvalue %dx.types.CBufRet.i32 %87, 2
  %124 = and i32 %122, 31
  %125 = ashr i32 %123, %124
  %126 = add nsw i32 %125, -1
  %127 = sitofp i32 %126 to float
  %128 = fadd fast float %127, 1.000000e+00
  %129 = fptoui float %128 to i32
  %130 = bitcast [3 x i32]* %56 to i8*
  call void @llvm.lifetime.start(i64 12, i8* %130) #0
  %131 = call %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32 59, %dx.types.Handle %62, i32 0)  ; CBufferLoadLegacy(handle,regIndex)
  %132 = extractvalue %dx.types.CBufRet.i32 %131, 1
  %133 = extractvalue %dx.types.CBufRet.i32 %131, 0
  %134 = and i32 %133, 255
  %135 = mul i32 %86, 3
  %136 = icmp eq i32 %134, 0
  br i1 %136, label %137, label %140

; <label>:137                                     ; preds = %84
  %138 = add i32 %135, 1
  %139 = add i32 %135, 2
  br label %165

; <label>:140                                     ; preds = %84
  %141 = icmp eq i32 %134, 2
  %142 = call %dx.types.Handle @dx.op.createHandleForLib.dx.types.Handle(i32 160, %dx.types.Handle %20)  ; CreateHandleForLib(Resource)
  %143 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %142, %dx.types.ResourceProperties { i32 11, i32 0 })  ; AnnotateHandle(res,props)  resource: ByteAddressBuffer
  br i1 %141, label %144, label %158

; <label>:144                                     ; preds = %140
  %145 = mul i32 %86, 6
  %146 = add i32 %145, %132
  %147 = and i32 %146, -4
  %148 = call %dx.types.ResRet.i32 @dx.op.rawBufferLoad.i32(i32 139, %dx.types.Handle %143, i32 %147, i32 undef, i8 3, i32 4)  ; RawBufferLoad(srv,index,elementOffset,mask,alignment)
  %149 = extractvalue %dx.types.ResRet.i32 %148, 0
  %150 = extractvalue %dx.types.ResRet.i32 %148, 1
  %151 = icmp eq i32 %147, %146
  %152 = lshr i32 %149, 16
  %153 = and i32 %150, 65535
  br i1 %151, label %154, label %156

; <label>:154                                     ; preds = %144
  %155 = and i32 %149, 65535
  br label %165

; <label>:156                                     ; preds = %144
  %157 = lshr i32 %150, 16
  br label %165

; <label>:158                                     ; preds = %140
  %159 = mul i32 %134, %135
  %160 = add i32 %159, %132
  %161 = call %dx.types.ResRet.i32 @dx.op.rawBufferLoad.i32(i32 139, %dx.types.Handle %143, i32 %160, i32 undef, i8 7, i32 4)  ; RawBufferLoad(srv,index,elementOffset,mask,alignment)
  %162 = extractvalue %dx.types.ResRet.i32 %161, 0
  %163 = extractvalue %dx.types.ResRet.i32 %161, 1
  %164 = extractvalue %dx.types.ResRet.i32 %161, 2
  br label %165

; <label>:165                                     ; preds = %158, %156, %154, %137
  %166 = phi i32 [ %135, %137 ], [ %162, %158 ], [ %155, %154 ], [ %152, %156 ]
  %167 = phi i32 [ %138, %137 ], [ %163, %158 ], [ %152, %154 ], [ %153, %156 ]
  %168 = phi i32 [ %139, %137 ], [ %164, %158 ], [ %153, %154 ], [ %157, %156 ]
  %169 = getelementptr inbounds [3 x i32], [3 x i32]* %56, i32 0, i32 0
  store i32 %166, i32* %169, align 4
  %170 = getelementptr inbounds [3 x i32], [3 x i32]* %56, i32 0, i32 1
  store i32 %167, i32* %170, align 4
  %171 = getelementptr inbounds [3 x i32], [3 x i32]* %56, i32 0, i32 2
  store i32 %168, i32* %171, align 4
  %172 = getelementptr [3 x i32], [3 x i32]* %56, i32 0, i32 %85
  %173 = load i32, i32* %172, align 4, !tbaa !111, !noalias !113
  %174 = call i32 @dx.op.instanceID.i32(i32 141)  ; InstanceID()
  %175 = urem i32 %173, %129
  %176 = uitofp i32 %175 to float
  %177 = udiv i32 %173, %129
  %178 = uitofp i32 %177 to float
  %179 = call %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32 59, %dx.types.Handle %70, i32 0)  ; CBufferLoadLegacy(handle,regIndex)
  %180 = extractvalue %dx.types.CBufRet.i32 %179, 0
  %181 = sitofp i32 %180 to float
  %182 = extractvalue %dx.types.CBufRet.i32 %179, 1
  %183 = sitofp i32 %182 to float
  call void @llvm.lifetime.end(i64 12, i8* %130) #0
  %184 = and i32 %174, 2147483647
  %185 = mul i32 %184, 42
  %186 = call %dx.types.Handle @dx.op.createHandleForLib.dx.types.Handle(i32 160, %dx.types.Handle %46)  ; CreateHandleForLib(Resource)
  %187 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %186, %dx.types.ResourceProperties { i32 12, i32 16 })  ; AnnotateHandle(res,props)  resource: StructuredBuffer<stride=16>
  %188 = call %dx.types.ResRet.f32 @dx.op.rawBufferLoad.f32(i32 139, %dx.types.Handle %187, i32 %185, i32 0, i8 15, i32 4)  ; RawBufferLoad(srv,index,elementOffset,mask,alignment)
  %189 = extractvalue %dx.types.ResRet.f32 %188, 1
  %190 = bitcast float %189 to i32
  %191 = call %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32 59, %dx.types.Handle %72, i32 283)  ; CBufferLoadLegacy(handle,regIndex)
  %192 = extractvalue %dx.types.CBufRet.i32 %191, 0
  %193 = call %dx.types.Handle @dx.op.createHandleForLib.dx.types.Handle(i32 160, %dx.types.Handle %45)  ; CreateHandleForLib(Resource)
  %194 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %193, %dx.types.ResourceProperties { i32 12, i32 16 })  ; AnnotateHandle(res,props)  resource: StructuredBuffer<stride=16>
  %195 = call %dx.types.ResRet.f32 @dx.op.rawBufferLoad.f32(i32 139, %dx.types.Handle %194, i32 %190, i32 0, i8 15, i32 4)  ; RawBufferLoad(srv,index,elementOffset,mask,alignment)
  %196 = extractvalue %dx.types.ResRet.f32 %195, 0
  %197 = bitcast float %196 to i32
  %198 = and i32 %197, 1048575
  %199 = icmp eq i32 %198, 1048575
  br i1 %199, label %308, label %200, !dx.controlflow.hints !116

; <label>:200                                     ; preds = %165
  %201 = mul nuw nsw i32 %198, 42
  %202 = or i32 %201, 1
  %203 = call %dx.types.ResRet.f32 @dx.op.rawBufferLoad.f32(i32 139, %dx.types.Handle %187, i32 %202, i32 0, i8 15, i32 4)  ; RawBufferLoad(srv,index,elementOffset,mask,alignment)
  %204 = extractvalue %dx.types.ResRet.f32 %203, 0
  %205 = extractvalue %dx.types.ResRet.f32 %203, 1
  %206 = extractvalue %dx.types.ResRet.f32 %203, 2
  %207 = add i32 %192, %190
  %208 = call %dx.types.ResRet.f32 @dx.op.rawBufferLoad.f32(i32 139, %dx.types.Handle %194, i32 %207, i32 0, i8 15, i32 4)  ; RawBufferLoad(srv,index,elementOffset,mask,alignment)
  %209 = extractvalue %dx.types.ResRet.f32 %208, 0
  %210 = extractvalue %dx.types.ResRet.f32 %208, 1
  %211 = extractvalue %dx.types.ResRet.f32 %208, 2
  %212 = extractvalue %dx.types.ResRet.f32 %208, 3
  %213 = bitcast float %209 to i32
  %214 = bitcast float %210 to i32
  %215 = bitcast float %211 to i32
  %216 = bitcast float %212 to i32
  %217 = shl i32 %192, 1
  %218 = add i32 %217, %190
  %219 = call %dx.types.ResRet.f32 @dx.op.rawBufferLoad.f32(i32 139, %dx.types.Handle %194, i32 %218, i32 0, i8 15, i32 4)  ; RawBufferLoad(srv,index,elementOffset,mask,alignment)
  %220 = extractvalue %dx.types.ResRet.f32 %219, 0
  %221 = extractvalue %dx.types.ResRet.f32 %219, 1
  %222 = extractvalue %dx.types.ResRet.f32 %219, 2
  %223 = and i32 %213, 65535
  %224 = uitofp i32 %223 to float
  %225 = lshr i32 %213, 16
  %226 = uitofp i32 %225 to float
  %227 = and i32 %214, 32767
  %228 = uitofp i32 %227 to float
  %229 = fadd fast float %224, -3.276800e+04
  %230 = fadd fast float %226, -3.276800e+04
  %231 = fadd fast float %228, -1.638400e+04
  %232 = fmul fast float %231, 0x3F06A0F8E0000000
  %233 = and i32 %214, 32768
  %234 = icmp ne i32 %233, 0
  %235 = fadd fast float %229, %230
  %236 = fmul fast float %235, 0x3F00002000000000
  %237 = fsub fast float %229, %230
  %238 = fmul fast float %237, 0x3F00002000000000
  %239 = call float @dx.op.unary.f32(i32 6, float %236)  ; FAbs(value)
  %240 = call float @dx.op.unary.f32(i32 6, float %238)  ; FAbs(value)
  %241 = call float @dx.op.dot2.f32(i32 54, float 1.000000e+00, float 1.000000e+00, float %239, float %240)  ; Dot2(ax,ay,bx,by)
  %242 = fsub fast float 2.000000e+00, %241
  %243 = call float @dx.op.dot3.f32(i32 55, float %236, float %238, float %242, float %236, float %238, float %242)  ; Dot3(ax,ay,az,bx,by,bz)
  %244 = call float @dx.op.unary.f32(i32 25, float %243)  ; Rsqrt(value)
  %245 = fmul fast float %244, %236
  %246 = fmul fast float %244, %238
  %247 = fmul fast float %244, %242
  %248 = fadd fast float %247, 1.000000e+00
  %249 = fdiv fast float 1.000000e+00, %248
  %250 = fmul fast float %246, %245
  %251 = fmul fast float %250, %249
  %252 = fsub fast float -0.000000e+00, %251
  %253 = fmul fast float %245, %245
  %254 = fmul fast float %253, %249
  %255 = fsub fast float 1.000000e+00, %254
  %256 = fmul fast float %246, %246
  %257 = fmul fast float %256, %249
  %258 = fsub fast float 1.000000e+00, %257
  %259 = fmul fast float %232, %232
  %260 = fsub fast float 1.000000e+00, %259
  %261 = call float @dx.op.unary.f32(i32 24, float %260)  ; Sqrt(value)
  %262 = select i1 %234, float %232, float %261
  %263 = select i1 %234, float %261, float %232
  %264 = fmul fast float %255, %262
  %265 = fmul fast float %262, %252
  %266 = fmul fast float %262, %245
  %267 = fmul fast float %263, %252
  %268 = fmul fast float %258, %263
  %269 = fmul fast float %246, %263
  %270 = fsub fast float -0.000000e+00, %269
  %271 = fadd fast float %264, %267
  %272 = fadd fast float %265, %268
  %273 = fsub fast float %270, %266
  %274 = fmul fast float %273, %246
  %275 = fmul fast float %272, %247
  %276 = fsub fast float %274, %275
  %277 = fmul fast float %271, %247
  %278 = fmul fast float %273, %245
  %279 = fsub fast float %277, %278
  %280 = fmul fast float %272, %245
  %281 = fmul fast float %271, %246
  %282 = fsub fast float %280, %281
  %283 = lshr i32 %216, 16
  %284 = shl i32 %283, 23
  %285 = add i32 %284, -125829120
  %286 = bitcast i32 %285 to float
  %287 = lshr i32 %215, 16
  %288 = and i32 %215, 65535
  %289 = and i32 %216, 65535
  %290 = uitofp i32 %288 to float
  %291 = uitofp i32 %287 to float
  %292 = uitofp i32 %289 to float
  %293 = fadd fast float %290, -3.276800e+04
  %294 = fadd fast float %291, -3.276800e+04
  %295 = fadd fast float %292, -3.276800e+04
  %296 = fmul fast float %286, %293
  %297 = fmul fast float %286, %294
  %298 = fmul fast float %286, %295
  %299 = fmul fast float %271, %296
  %300 = fmul fast float %272, %296
  %301 = fmul fast float %273, %296
  %302 = fmul fast float %276, %297
  %303 = fmul fast float %279, %297
  %304 = fmul fast float %282, %297
  %305 = fmul fast float %245, %298
  %306 = fmul fast float %246, %298
  %307 = fmul fast float %247, %298
  br label %308

; <label>:308                                     ; preds = %200, %165
  %309 = phi float [ %204, %200 ], [ 0.000000e+00, %165 ]
  %310 = phi float [ %205, %200 ], [ 0.000000e+00, %165 ]
  %311 = phi float [ %206, %200 ], [ 0.000000e+00, %165 ]
  %312 = phi float [ %299, %200 ], [ 0.000000e+00, %165 ]
  %313 = phi float [ %300, %200 ], [ 0.000000e+00, %165 ]
  %314 = phi float [ %301, %200 ], [ 0.000000e+00, %165 ]
  %315 = phi float [ %302, %200 ], [ 0.000000e+00, %165 ]
  %316 = phi float [ %303, %200 ], [ 0.000000e+00, %165 ]
  %317 = phi float [ %304, %200 ], [ 0.000000e+00, %165 ]
  %318 = phi float [ %305, %200 ], [ 0.000000e+00, %165 ]
  %319 = phi float [ %306, %200 ], [ 0.000000e+00, %165 ]
  %320 = phi float [ %307, %200 ], [ 0.000000e+00, %165 ]
  %321 = phi float [ %220, %200 ], [ 0.000000e+00, %165 ]
  %322 = phi float [ %221, %200 ], [ 0.000000e+00, %165 ]
  %323 = phi float [ %222, %200 ], [ 0.000000e+00, %165 ]
  %324 = sub nsw i32 %95, %96
  %325 = add nsw i32 %324, %94
  %326 = add i32 %104, %325
  %327 = call %dx.types.ResRet.f32 @dx.op.bufferLoad.f32(i32 68, %dx.types.Handle %112, i32 %326, i32 undef)  ; BufferLoad(srv,index,wot)
  %328 = extractvalue %dx.types.ResRet.f32 %327, 0
  %329 = select i1 %110, float %109, float %328
  %330 = fadd fast float %118, %329
  %331 = call float @dx.op.binary.f32(i32 36, float %330, float %99)  ; FMin(a,b)
  %332 = call float @dx.op.unary.f32(i32 27, float %331)  ; Round_ni(value)
  %333 = fptoui float %332 to i32
  %334 = and i32 %333, 31
  %335 = ashr i32 %123, %334
  %336 = add nsw i32 %335, -1
  %337 = sitofp i32 %336 to float
  %338 = fdiv fast float 1.000000e+00, %337
  %339 = call %dx.types.Handle @dx.op.createHandleForLib.dx.types.Handle(i32 160, %dx.types.Handle %41)  ; CreateHandleForLib(Resource)
  %340 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %339, %dx.types.ResourceProperties { i32 10, i32 265 })  ; AnnotateHandle(res,props)  resource: TypedBuffer<F32>
  %341 = call %dx.types.ResRet.f32 @dx.op.bufferLoad.f32(i32 68, %dx.types.Handle %340, i32 %325, i32 undef)  ; BufferLoad(srv,index,wot)
  %342 = fmul fast float %338, %176
  %343 = fmul fast float %338, %178
  %344 = fadd fast float %342, %181
  %345 = fadd fast float %343, %183
  %346 = extractvalue %dx.types.CBufRet.i32 %87, 3
  %347 = sitofp i32 %346 to float
  %348 = fdiv fast float %344, %347
  %349 = fdiv fast float %345, %347
  %350 = fsub fast float 1.000000e+00, %348
  %351 = fmul fast float %349, 2.000000e+00
  %352 = fmul fast float %350, 2.000000e+00
  %353 = fmul fast float %331, %351
  %354 = fmul fast float %331, %352
  %355 = fsub fast float 1.000000e+00, %351
  %356 = fsub fast float 1.000000e+00, %352
  call void @llvm.lifetime.start(i64 16, i8* bitcast ([4 x i32]* @NeighborOffset.i.i.i.i.0.hca to i8*)) #0
  call void @llvm.lifetime.start(i64 16, i8* bitcast ([4 x i32]* @NeighborOffset.i.i.i.i.1.hca to i8*)) #0
  %357 = bitcast [4 x float]* %60 to i8*
  call void @llvm.lifetime.start(i64 16, i8* %357) #0, !noalias !117
  br label %358

; <label>:358                                     ; preds = %418, %308
  %359 = phi i32 [ -1, %308 ], [ %422, %418 ]
  %360 = phi i32 [ 0, %308 ], [ %420, %418 ]
  %361 = phi i32 [ 0, %308 ], [ %416, %418 ]
  %362 = call %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32 59, %dx.types.Handle %66, i32 0)  ; CBufferLoadLegacy(handle,regIndex)
  %363 = extractvalue %dx.types.CBufRet.i32 %362, 0
  %364 = extractvalue %dx.types.CBufRet.i32 %362, 1
  %365 = add i32 %363, %360
  %366 = add i32 %364, %359
  %367 = call %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32 59, %dx.types.Handle %68, i32 0)  ; CBufferLoadLegacy(handle,regIndex)
  %368 = extractvalue %dx.types.CBufRet.i32 %367, 2
  %369 = extractvalue %dx.types.CBufRet.i32 %367, 3
  %370 = call i32 @dx.op.binary.i32(i32 37, i32 %368, i32 %365)  ; IMax(a,b)
  %371 = call i32 @dx.op.binary.i32(i32 37, i32 %369, i32 %366)  ; IMax(a,b)
  %372 = call %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32 59, %dx.types.Handle %68, i32 1)  ; CBufferLoadLegacy(handle,regIndex)
  %373 = extractvalue %dx.types.CBufRet.i32 %372, 0
  %374 = extractvalue %dx.types.CBufRet.i32 %372, 1
  %375 = add i32 %368, -1
  %376 = add i32 %375, %373
  %377 = add i32 %369, -1
  %378 = add i32 %377, %374
  %379 = call i32 @dx.op.binary.i32(i32 38, i32 %376, i32 %370)  ; IMin(a,b)
  %380 = call i32 @dx.op.binary.i32(i32 38, i32 %378, i32 %371)  ; IMin(a,b)
  %381 = sub nsw i32 %380, %369
  %382 = mul nsw i32 %381, %373
  %383 = sub i32 %379, %368
  %384 = add nsw i32 %383, %382
  %385 = extractvalue %dx.types.CBufRet.i32 %367, 0
  %386 = call %dx.types.Handle @dx.op.createHandleForLib.dx.types.Handle(i32 160, %dx.types.Handle %43)  ; CreateHandleForLib(Resource)
  %387 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %386, %dx.types.ResourceProperties { i32 10, i32 261 })  ; AnnotateHandle(res,props)  resource: TypedBuffer<U32>
  %388 = call %dx.types.ResRet.i32 @dx.op.bufferLoad.i32(i32 68, %dx.types.Handle %387, i32 %385, i32 undef)  ; BufferLoad(srv,index,wot)
  %389 = extractvalue %dx.types.ResRet.i32 %388, 0
  %390 = add i32 %384, %389
  %391 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %72, i32 244)  ; CBufferLoadLegacy(handle,regIndex)
  %392 = extractvalue %dx.types.CBufRet.f32 %391, 0
  %393 = fcmp fast oge float %392, 0.000000e+00
  %394 = call %dx.types.Handle @dx.op.createHandleForLib.dx.types.Handle(i32 160, %dx.types.Handle %42)  ; CreateHandleForLib(Resource)
  %395 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %394, %dx.types.ResourceProperties { i32 10, i32 265 })  ; AnnotateHandle(res,props)  resource: TypedBuffer<F32>
  %396 = call %dx.types.ResRet.f32 @dx.op.bufferLoad.f32(i32 68, %dx.types.Handle %395, i32 %390, i32 undef)  ; BufferLoad(srv,index,wot)
  %397 = extractvalue %dx.types.ResRet.f32 %396, 0
  %398 = select i1 %393, float %392, float %397
  %399 = call %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32 59, %dx.types.Handle %66, i32 1)  ; CBufferLoadLegacy(handle,regIndex)
  %400 = extractvalue %dx.types.CBufRet.i32 %399, 0
  %401 = sitofp i32 %400 to float
  %402 = add i32 %389, %325
  %403 = call %dx.types.ResRet.f32 @dx.op.bufferLoad.f32(i32 68, %dx.types.Handle %395, i32 %402, i32 undef)  ; BufferLoad(srv,index,wot)
  %404 = extractvalue %dx.types.ResRet.f32 %403, 0
  %405 = select i1 %393, float %392, float %404
  %406 = call %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32 59, %dx.types.Handle %72, i32 244)  ; CBufferLoadLegacy(handle,regIndex)
  %407 = extractvalue %dx.types.CBufRet.i32 %406, 1
  %408 = sitofp i32 %407 to float
  %409 = fadd fast float %408, %405
  %410 = call float @dx.op.binary.f32(i32 36, float %409, float %401)  ; FMin(a,b)
  %411 = call float @dx.op.binary.f32(i32 35, float %398, float %410)  ; FMax(a,b)
  %412 = getelementptr inbounds [4 x float], [4 x float]* %60, i32 0, i32 %361
  %413 = fadd fast float %408, %411
  %414 = select i1 %393, float %392, float %413
  %415 = call float @dx.op.binary.f32(i32 36, float %414, float %401)  ; FMin(a,b)
  store float %415, float* %412, align 4, !tbaa !107, !noalias !117
  %416 = add nuw nsw i32 %361, 1
  %417 = icmp eq i32 %416, 4
  br i1 %417, label %423, label %418

; <label>:418                                     ; preds = %358
  %419 = getelementptr [4 x i32], [4 x i32]* @NeighborOffset.i.i.i.i.0.hca, i32 0, i32 %416
  %420 = load i32, i32* %419, align 4
  %421 = getelementptr [4 x i32], [4 x i32]* @NeighborOffset.i.i.i.i.1.hca, i32 0, i32 %416
  %422 = load i32, i32* %421, align 4
  br label %358

; <label>:423                                     ; preds = %358
  %424 = uitofp i32 %333 to float
  %425 = extractvalue %dx.types.ResRet.f32 %341, 0
  %426 = fsub fast float 1.000000e+00, %349
  %427 = fmul fast float %348, 2.000000e+00
  %428 = fmul fast float %426, 2.000000e+00
  %429 = fmul fast float %331, %427
  %430 = fmul fast float %331, %428
  %431 = fsub fast float 1.000000e+00, %427
  %432 = fsub fast float 1.000000e+00, %428
  %433 = load float, float* %83, align 4, !tbaa !107, !noalias !117
  %434 = getelementptr inbounds [4 x float], [4 x float]* %60, i32 0, i32 1
  %435 = load float, float* %434, align 4, !tbaa !107, !noalias !117
  %436 = getelementptr inbounds [4 x float], [4 x float]* %60, i32 0, i32 2
  %437 = load float, float* %436, align 4, !tbaa !107, !noalias !117
  %438 = getelementptr inbounds [4 x float], [4 x float]* %60, i32 0, i32 3
  %439 = load float, float* %438, align 4, !tbaa !107, !noalias !117
  call void @llvm.lifetime.end(i64 16, i8* %357) #0, !noalias !117
  call void @llvm.lifetime.end(i64 16, i8* bitcast ([4 x i32]* @NeighborOffset.i.i.i.i.0.hca to i8*)) #0
  call void @llvm.lifetime.end(i64 16, i8* bitcast ([4 x i32]* @NeighborOffset.i.i.i.i.1.hca to i8*)) #0
  %440 = fmul fast float %433, %355
  %441 = fmul fast float %435, %431
  %442 = fmul fast float %437, %356
  %443 = fmul fast float %439, %432
  %444 = fadd fast float %440, %353
  %445 = fadd fast float %441, %429
  %446 = fadd fast float %442, %354
  %447 = fadd fast float %443, %430
  %448 = fadd fast float %344, %345
  %449 = fdiv fast float %448, %347
  %450 = fcmp fast ogt float %449, 1.000000e+00
  %451 = fcmp fast olt float %348, %349
  %452 = select i1 %451, float %447, float %446
  %453 = select i1 %451, float %445, float %444
  %454 = select i1 %450, float %452, float %453
  %455 = call float @dx.op.unary.f32(i32 27, float %454)  ; Round_ni(value)
  %456 = fsub fast float %454, %455
  %457 = fsub fast float %455, %424
  %458 = fsub fast float -0.000000e+00, %457
  %459 = call float @dx.op.unary.f32(i32 21, float %458)  ; Exp(value)
  %460 = fmul fast float %459, %176
  %461 = fmul fast float %459, %178
  %462 = call float @dx.op.unary.f32(i32 27, float %460)  ; Round_ni(value)
  %463 = call float @dx.op.unary.f32(i32 27, float %461)  ; Round_ni(value)
  %464 = fsub fast float -0.000000e+00, %455
  %465 = call float @dx.op.unary.f32(i32 21, float %464)  ; Exp(value)
  %466 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %66, i32 5)  ; CBufferLoadLegacy(handle,regIndex)
  %467 = extractvalue %dx.types.CBufRet.f32 %466, 0
  %468 = fmul fast float %467, %465
  %469 = fadd fast float %468, -1.000000e+00
  %470 = fmul fast float %465, 5.000000e-01
  %471 = fmul fast float %470, %467
  %472 = call float @dx.op.binary.f32(i32 35, float %471, float 2.000000e+00)  ; FMax(a,b)
  %473 = fadd fast float %472, -1.000000e+00
  %474 = extractvalue %dx.types.CBufRet.f32 %466, 1
  %475 = fmul fast float %474, %469
  %476 = fmul fast float %474, %473
  %477 = fdiv fast float %462, %475
  %478 = fdiv fast float %463, %475
  %479 = fmul fast float %462, 5.000000e-01
  %480 = fmul fast float %463, 5.000000e-01
  %481 = call float @dx.op.unary.f32(i32 27, float %479)  ; Round_ni(value)
  %482 = call float @dx.op.unary.f32(i32 27, float %480)  ; Round_ni(value)
  %483 = fdiv fast float %481, %476
  %484 = fdiv fast float %482, %476
  %485 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %66, i32 2)  ; CBufferLoadLegacy(handle,regIndex)
  %486 = extractvalue %dx.types.CBufRet.f32 %485, 0
  %487 = extractvalue %dx.types.CBufRet.f32 %485, 1
  %488 = fmul fast float %486, %477
  %489 = fmul fast float %487, %478
  %490 = extractvalue %dx.types.CBufRet.f32 %485, 2
  %491 = extractvalue %dx.types.CBufRet.f32 %485, 3
  %492 = fadd fast float %488, %490
  %493 = fadd fast float %489, %491
  %494 = fmul fast float %486, 5.000000e-01
  %495 = fmul fast float %487, 5.000000e-01
  %496 = fadd fast float %492, %494
  %497 = fadd fast float %493, %495
  %498 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %66, i32 6)  ; CBufferLoadLegacy(handle,regIndex)
  %499 = extractvalue %dx.types.CBufRet.f32 %498, 0
  %500 = extractvalue %dx.types.CBufRet.f32 %498, 1
  %501 = fmul fast float %499, %181
  %502 = fmul fast float %500, %183
  %503 = fadd fast float %496, %501
  %504 = fadd fast float %497, %502
  %505 = fsub fast float %455, %425
  %506 = call %dx.types.Handle @dx.op.createHandleForLib.dx.types.Handle(i32 160, %dx.types.Handle %40)  ; CreateHandleForLib(Resource)
  %507 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %506, %dx.types.ResourceProperties { i32 2, i32 1033 })  ; AnnotateHandle(res,props)  resource: Texture2D<4xF32>
  %508 = call %dx.types.Handle @dx.op.createHandleForLib.dx.types.Handle(i32 160, %dx.types.Handle %18)  ; CreateHandleForLib(Resource)
  %509 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %508, %dx.types.ResourceProperties { i32 14, i32 0 })  ; AnnotateHandle(res,props)  resource: SamplerState
  %510 = call %dx.types.ResRet.f32 @dx.op.sampleLevel.f32(i32 62, %dx.types.Handle %507, %dx.types.Handle %509, float %503, float %504, float undef, float undef, i32 0, i32 0, i32 undef, float %505)  ; SampleLevel(srv,sampler,coord0,coord1,coord2,coord3,offset0,offset1,offset2,LOD)
  %511 = extractvalue %dx.types.ResRet.f32 %510, 0
  %512 = extractvalue %dx.types.ResRet.f32 %510, 1
  %513 = fmul fast float %511, 6.528000e+04
  %514 = fmul fast float %512, 2.550000e+02
  %515 = fadd fast float %514, -3.276800e+04
  %516 = fadd fast float %515, %513
  %517 = fmul fast float %486, %483
  %518 = fmul fast float %487, %484
  %519 = fadd fast float %517, %490
  %520 = fadd fast float %518, %491
  %521 = fadd fast float %519, %494
  %522 = fadd fast float %520, %495
  %523 = fadd fast float %521, %501
  %524 = fadd fast float %522, %502
  %525 = fsub fast float 1.000000e+00, %425
  %526 = fadd fast float %525, %455
  %527 = call %dx.types.ResRet.f32 @dx.op.sampleLevel.f32(i32 62, %dx.types.Handle %507, %dx.types.Handle %509, float %523, float %524, float undef, float undef, i32 0, i32 0, i32 undef, float %526)  ; SampleLevel(srv,sampler,coord0,coord1,coord2,coord3,offset0,offset1,offset2,LOD)
  %528 = extractvalue %dx.types.ResRet.f32 %527, 0
  %529 = extractvalue %dx.types.ResRet.f32 %527, 1
  %530 = fmul fast float %528, 6.528000e+04
  %531 = fmul fast float %529, 2.550000e+02
  %532 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %66, i32 3)  ; CBufferLoadLegacy(handle,regIndex)
  %533 = extractvalue %dx.types.CBufRet.f32 %532, 0
  %534 = extractvalue %dx.types.CBufRet.f32 %532, 1
  %535 = fmul fast float %533, %477
  %536 = fmul fast float %534, %478
  %537 = extractvalue %dx.types.CBufRet.f32 %532, 2
  %538 = extractvalue %dx.types.CBufRet.f32 %532, 3
  %539 = fadd fast float %535, %537
  %540 = fadd fast float %536, %538
  %541 = extractvalue %dx.types.CBufRet.f32 %498, 2
  %542 = fmul fast float %541, %181
  %543 = fmul fast float %541, %183
  %544 = fadd fast float %539, %542
  %545 = fadd fast float %540, %543
  %546 = call %dx.types.Handle @dx.op.createHandleForLib.dx.types.Handle(i32 160, %dx.types.Handle %38)  ; CreateHandleForLib(Resource)
  %547 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %546, %dx.types.ResourceProperties { i32 2, i32 1033 })  ; AnnotateHandle(res,props)  resource: Texture2D<4xF32>
  %548 = call %dx.types.Handle @dx.op.createHandleForLib.dx.types.Handle(i32 160, %dx.types.Handle %16)  ; CreateHandleForLib(Resource)
  %549 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %548, %dx.types.ResourceProperties { i32 14, i32 0 })  ; AnnotateHandle(res,props)  resource: SamplerState
  %550 = call %dx.types.ResRet.f32 @dx.op.sampleLevel.f32(i32 62, %dx.types.Handle %547, %dx.types.Handle %549, float %544, float %545, float undef, float undef, i32 0, i32 0, i32 undef, float %455)  ; SampleLevel(srv,sampler,coord0,coord1,coord2,coord3,offset0,offset1,offset2,LOD)
  %551 = extractvalue %dx.types.ResRet.f32 %550, 0
  %552 = extractvalue %dx.types.ResRet.f32 %550, 1
  %553 = extractvalue %dx.types.ResRet.f32 %550, 2
  %554 = extractvalue %dx.types.ResRet.f32 %550, 3
  %555 = fmul fast float %533, %483
  %556 = fmul fast float %534, %484
  %557 = fadd fast float %555, %537
  %558 = fadd fast float %556, %538
  %559 = fadd fast float %557, %542
  %560 = fadd fast float %558, %543
  %561 = fadd fast float %455, 1.000000e+00
  %562 = call %dx.types.ResRet.f32 @dx.op.sampleLevel.f32(i32 62, %dx.types.Handle %547, %dx.types.Handle %549, float %559, float %560, float undef, float undef, i32 0, i32 0, i32 undef, float %561)  ; SampleLevel(srv,sampler,coord0,coord1,coord2,coord3,offset0,offset1,offset2,LOD)
  %563 = extractvalue %dx.types.ResRet.f32 %562, 0
  %564 = extractvalue %dx.types.ResRet.f32 %562, 1
  %565 = extractvalue %dx.types.ResRet.f32 %562, 2
  %566 = extractvalue %dx.types.ResRet.f32 %562, 3
  %567 = fmul fast float %551, 6.528000e+04
  %568 = fmul fast float %552, 2.550000e+02
  %569 = fadd fast float %568, -3.276800e+04
  %570 = fadd fast float %569, %567
  %571 = fmul fast float %570, 3.906250e-03
  %572 = fmul fast float %553, 6.528000e+04
  %573 = fmul fast float %554, 2.550000e+02
  %574 = fadd fast float %573, -3.276800e+04
  %575 = fadd fast float %574, %572
  %576 = fmul fast float %575, 3.906250e-03
  %577 = fmul fast float %563, 6.528000e+04
  %578 = fmul fast float %564, 2.550000e+02
  %579 = fadd fast float %578, -3.276800e+04
  %580 = fadd fast float %579, %577
  %581 = fmul fast float %580, 3.906250e-03
  %582 = fmul fast float %565, 6.528000e+04
  %583 = fmul fast float %566, 2.550000e+02
  %584 = fadd fast float %583, -3.276800e+04
  %585 = fadd fast float %584, %582
  %586 = fmul fast float %585, 3.906250e-03
  %587 = fadd fast float %571, %477
  %588 = fadd fast float %576, %478
  %589 = fsub fast float %483, %587
  %590 = fadd fast float %589, %581
  %591 = fsub fast float %484, %588
  %592 = fadd fast float %591, %586
  %593 = fsub fast float -3.276800e+04, %516
  %594 = fadd fast float %593, %531
  %595 = fadd fast float %594, %530
  %596 = fmul fast float %590, %456
  %597 = fmul fast float %592, %456
  %598 = fmul fast float %595, %456
  %599 = fadd fast float %598, %516
  %600 = fmul fast float %599, 7.812500e-03
  %601 = extractvalue %dx.types.CBufRet.f32 %498, 3
  %602 = fmul fast float %601, %181
  %603 = fmul fast float %601, %183
  %604 = fadd fast float %602, %587
  %605 = fadd fast float %604, %596
  %606 = fadd fast float %603, %588
  %607 = fadd fast float %606, %597
  %608 = fmul fast float %605, %312
  %609 = fmul fast float %605, %313
  %610 = fmul fast float %605, %314
  %611 = fmul fast float %607, %315
  %612 = fmul fast float %607, %316
  %613 = fmul fast float %607, %317
  %614 = fmul fast float %600, %318
  %615 = fmul fast float %600, %319
  %616 = fmul fast float %600, %320
  %617 = fmul fast float %309, 2.097152e+06
  %618 = fmul fast float %310, 2.097152e+06
  %619 = fmul fast float %311, 2.097152e+06
  %620 = fadd fast float %321, %617
  %621 = fadd fast float %620, %614
  %622 = fadd fast float %621, %611
  %623 = fadd fast float %622, %608
  %624 = fadd fast float %322, %618
  %625 = fadd fast float %624, %615
  %626 = fadd fast float %625, %612
  %627 = fadd fast float %626, %609
  %628 = fadd fast float %323, %619
  %629 = fadd fast float %628, %616
  %630 = fadd fast float %629, %613
  %631 = fadd fast float %630, %610
  %632 = getelementptr [3 x float], [3 x float]* %53, i32 0, i32 %85
  %633 = getelementptr [3 x float], [3 x float]* %54, i32 0, i32 %85
  %634 = getelementptr [3 x float], [3 x float]* %55, i32 0, i32 %85
  store float %623, float* %632, align 4
  store float %627, float* %633, align 4
  store float %631, float* %634, align 4
  %635 = add nuw nsw i32 %85, 1
  %636 = icmp eq i32 %635, 3
  br i1 %636, label %637, label %84

; <label>:637                                     ; preds = %423
  %638 = getelementptr [3 x float], [3 x float]* %53, i32 0, i32 1
  %639 = getelementptr [3 x float], [3 x float]* %54, i32 0, i32 1
  %640 = getelementptr [3 x float], [3 x float]* %55, i32 0, i32 1
  %641 = load float, float* %638, align 4
  %642 = load float, float* %639, align 4
  %643 = load float, float* %640, align 4
  %644 = getelementptr [3 x float], [3 x float]* %53, i32 0, i32 0
  %645 = getelementptr [3 x float], [3 x float]* %54, i32 0, i32 0
  %646 = getelementptr [3 x float], [3 x float]* %55, i32 0, i32 0
  %647 = load float, float* %644, align 4
  %648 = load float, float* %645, align 4
  %649 = load float, float* %646, align 4
  %650 = fsub fast float %641, %647
  %651 = fsub fast float %642, %648
  %652 = fsub fast float %643, %649
  %653 = getelementptr [3 x float], [3 x float]* %53, i32 0, i32 2
  %654 = getelementptr [3 x float], [3 x float]* %54, i32 0, i32 2
  %655 = getelementptr [3 x float], [3 x float]* %55, i32 0, i32 2
  %656 = load float, float* %653, align 4
  %657 = load float, float* %654, align 4
  %658 = load float, float* %655, align 4
  %659 = fsub fast float %656, %647
  %660 = fsub fast float %657, %648
  %661 = fsub fast float %658, %649
  %662 = fmul fast float %660, %652
  %663 = fmul fast float %661, %651
  %664 = fsub fast float %662, %663
  %665 = fmul fast float %661, %650
  %666 = fmul fast float %659, %652
  %667 = fsub fast float %665, %666
  %668 = fmul fast float %659, %651
  %669 = fmul fast float %660, %650
  %670 = fsub fast float %668, %669
  %671 = call float @dx.op.dot3.f32(i32 55, float %664, float %667, float %670, float %664, float %667, float %670)  ; Dot3(ax,ay,az,bx,by,bz)
  %672 = fcmp fast oeq float %671, 0.000000e+00
  %673 = uitofp i1 %672 to float
  %674 = call float @dx.op.worldRayDirection.f32(i32 148, i8 0)  ; WorldRayDirection(col)
  %675 = call float @dx.op.worldRayDirection.f32(i32 148, i8 1)  ; WorldRayDirection(col)
  %676 = call float @dx.op.worldRayDirection.f32(i32 148, i8 2)  ; WorldRayDirection(col)
  %677 = fsub fast float -0.000000e+00, %674
  %678 = fsub fast float -0.000000e+00, %675
  %679 = fsub fast float -0.000000e+00, %676
  %680 = call float @dx.op.unary.f32(i32 25, float %671)  ; Rsqrt(value)
  %681 = fmul fast float %680, %664
  %682 = fmul fast float %680, %667
  %683 = fmul fast float %680, %670
  %684 = fsub fast float %677, %681
  %685 = fsub fast float %678, %682
  %686 = fsub fast float %679, %683
  %687 = fmul fast float %684, %673
  %688 = fmul fast float %685, %673
  %689 = fmul fast float %686, %673
  %690 = fadd fast float %687, %681
  %691 = fadd fast float %688, %682
  %692 = fadd fast float %689, %683
  call void @llvm.lifetime.end(i64 12, i8* %80) #0
  call void @llvm.lifetime.end(i64 12, i8* %81) #0
  call void @llvm.lifetime.end(i64 12, i8* %82) #0
  %693 = call i32 @dx.op.instanceIndex.i32(i32 142)  ; InstanceIndex()
  %694 = call %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32 59, %dx.types.Handle %62, i32 1)  ; CBufferLoadLegacy(handle,regIndex)
  %695 = extractvalue %dx.types.CBufRet.i32 %694, 0
  %696 = sub i32 %693, %695
  %697 = call i32 @dx.op.legacyF32ToF16(i32 130, float %690)  ; LegacyF32ToF16(value)
  %698 = shl i32 %697, 16
  %699 = getelementptr inbounds %struct.FPackedMaterialClosestHitPayload, %struct.FPackedMaterialClosestHitPayload* %PackedPayload, i32 0, i32 3, i32 1
  %700 = load i32, i32* %699, align 4, !tbaa !111
  %701 = or i32 %700, %698
  store i32 %701, i32* %699, align 4, !tbaa !111
  %702 = call i32 @dx.op.legacyF32ToF16(i32 130, float %691)  ; LegacyF32ToF16(value)
  %703 = call i32 @dx.op.legacyF32ToF16(i32 130, float %692)  ; LegacyF32ToF16(value)
  %704 = shl i32 %703, 16
  %705 = getelementptr inbounds %struct.FPackedMaterialClosestHitPayload, %struct.FPackedMaterialClosestHitPayload* %PackedPayload, i32 0, i32 3, i32 2
  %706 = or i32 %704, %702
  store i32 %706, i32* %705, align 4, !tbaa !111
  %707 = mul i32 %174, 42
  %708 = call %dx.types.Handle @dx.op.createHandleForLib.dx.types.Handle(i32 160, %dx.types.Handle %46)  ; CreateHandleForLib(Resource)
  %709 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %708, %dx.types.ResourceProperties { i32 12, i32 16 })  ; AnnotateHandle(res,props)  resource: StructuredBuffer<stride=16>
  %710 = call %dx.types.ResRet.f32 @dx.op.rawBufferLoad.f32(i32 139, %dx.types.Handle %709, i32 %707, i32 0, i8 15, i32 4)  ; RawBufferLoad(srv,index,elementOffset,mask,alignment)
  %711 = extractvalue %dx.types.ResRet.f32 %710, 2
  %712 = bitcast float %711 to i32
  %713 = icmp eq i32 %712, 1
  %714 = select i1 %713, i32 0, i32 %696
  %715 = extractvalue %dx.types.ResRet.f32 %710, 1
  %716 = bitcast float %715 to i32
  %717 = add i32 %716, %714
  %718 = getelementptr inbounds %struct.FPackedMaterialClosestHitPayload, %struct.FPackedMaterialClosestHitPayload* %PackedPayload, i32 0, i32 9, i32 1
  store i32 %717, i32* %718, align 4, !tbaa !111
  br label %719

; <label>:719                                     ; preds = %637, %0
  %720 = and i32 %76, 8388608
  %721 = icmp eq i32 %720, 0
  br i1 %721, label %722, label %1689

; <label>:722                                     ; preds = %719
  %723 = getelementptr inbounds %struct.FPackedMaterialClosestHitPayload, %struct.FPackedMaterialClosestHitPayload* %PackedPayload, i32 0, i32 2
  %724 = load float, float* %723, align 4, !tbaa !107
  %725 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %72, i32 139)  ; CBufferLoadLegacy(handle,regIndex)
  %726 = extractvalue %dx.types.CBufRet.f32 %725, 0
  %727 = extractvalue %dx.types.CBufRet.f32 %725, 2
  %728 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %72, i32 140)  ; CBufferLoadLegacy(handle,regIndex)
  %729 = extractvalue %dx.types.CBufRet.f32 %728, 0
  %730 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %72, i32 187)  ; CBufferLoadLegacy(handle,regIndex)
  %731 = extractvalue %dx.types.CBufRet.f32 %730, 1
  %732 = getelementptr inbounds %struct.FPackedMaterialClosestHitPayload, %struct.FPackedMaterialClosestHitPayload* %PackedPayload, i32 0, i32 1
  %733 = load i32, i32* %732, align 4, !tbaa !111, !noalias !120
  %734 = and i32 %733, 65535
  %735 = lshr i32 %733, 16
  %736 = call float @dx.op.legacyF16ToF32(i32 131, i32 %735)  ; LegacyF16ToF32(value)
  %737 = call float @dx.op.rayTCurrent.f32(i32 154)  ; RayTCurrent()
  %738 = fmul fast float %737, %736
  %739 = getelementptr inbounds %struct.FRayTracingIntersectionAttributes, %struct.FRayTracingIntersectionAttributes* %Attributes, i32 0, i32 0
  %740 = load <2 x i32>, <2 x i32>* %739, align 4
  %741 = extractelement <2 x i32> %740, i32 0
  %742 = extractelement <2 x i32> %740, i32 1
  %743 = bitcast i32 %741 to float
  %744 = bitcast i32 %742 to float
  %745 = bitcast [3 x float]* %59 to i8*
  call void @llvm.lifetime.start(i64 12, i8* %745) #0, !noalias !123
  %746 = fsub fast float 1.000000e+00, %743
  %747 = fsub fast float %746, %744
  %748 = getelementptr inbounds [3 x float], [3 x float]* %59, i32 0, i32 0
  store float %747, float* %748, align 4
  %749 = getelementptr inbounds [3 x float], [3 x float]* %59, i32 0, i32 1
  %750 = bitcast float* %749 to i32*
  store i32 %741, i32* %750, align 4
  %751 = getelementptr inbounds [3 x float], [3 x float]* %59, i32 0, i32 2
  %752 = bitcast float* %751 to i32*
  store i32 %742, i32* %752, align 4
  br label %753

; <label>:753                                     ; preds = %967, %722
  %754 = phi float [ 0.000000e+00, %722 ], [ %1139, %967 ]
  %755 = phi float [ 0.000000e+00, %722 ], [ %1140, %967 ]
  %756 = phi float [ 0.000000e+00, %722 ], [ %1141, %967 ]
  %757 = phi float [ 0.000000e+00, %722 ], [ %1142, %967 ]
  %758 = phi float [ 0.000000e+00, %722 ], [ %1133, %967 ]
  %759 = phi float [ 0.000000e+00, %722 ], [ %1134, %967 ]
  %760 = phi i32 [ 0, %722 ], [ %1143, %967 ]
  %761 = call i32 @dx.op.primitiveIndex.i32(i32 161)  ; PrimitiveIndex()
  %762 = call %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32 59, %dx.types.Handle %66, i32 0)  ; CBufferLoadLegacy(handle,regIndex)
  %763 = extractvalue %dx.types.CBufRet.i32 %762, 1
  %764 = call %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32 59, %dx.types.Handle %68, i32 0)  ; CBufferLoadLegacy(handle,regIndex)
  %765 = extractvalue %dx.types.CBufRet.i32 %764, 3
  %766 = sub nsw i32 %763, %765
  %767 = call %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32 59, %dx.types.Handle %68, i32 1)  ; CBufferLoadLegacy(handle,regIndex)
  %768 = extractvalue %dx.types.CBufRet.i32 %767, 0
  %769 = mul nsw i32 %766, %768
  %770 = extractvalue %dx.types.CBufRet.i32 %762, 0
  %771 = extractvalue %dx.types.CBufRet.i32 %764, 2
  %772 = call %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32 59, %dx.types.Handle %66, i32 1)  ; CBufferLoadLegacy(handle,regIndex)
  %773 = extractvalue %dx.types.CBufRet.i32 %772, 0
  %774 = sitofp i32 %773 to float
  %775 = extractvalue %dx.types.CBufRet.i32 %764, 0
  %776 = call %dx.types.Handle @dx.op.createHandleForLib.dx.types.Handle(i32 160, %dx.types.Handle %43)  ; CreateHandleForLib(Resource)
  %777 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %776, %dx.types.ResourceProperties { i32 10, i32 261 })  ; AnnotateHandle(res,props)  resource: TypedBuffer<U32>
  %778 = call %dx.types.ResRet.i32 @dx.op.bufferLoad.i32(i32 68, %dx.types.Handle %777, i32 %775, i32 undef)  ; BufferLoad(srv,index,wot)
  %779 = extractvalue %dx.types.ResRet.i32 %778, 0
  %780 = add i32 %769, %770
  %781 = sub i32 %780, %771
  %782 = add i32 %781, %779
  %783 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %72, i32 244)  ; CBufferLoadLegacy(handle,regIndex)
  %784 = extractvalue %dx.types.CBufRet.f32 %783, 0
  %785 = fcmp fast oge float %784, 0.000000e+00
  %786 = call %dx.types.Handle @dx.op.createHandleForLib.dx.types.Handle(i32 160, %dx.types.Handle %42)  ; CreateHandleForLib(Resource)
  %787 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %786, %dx.types.ResourceProperties { i32 10, i32 265 })  ; AnnotateHandle(res,props)  resource: TypedBuffer<F32>
  %788 = call %dx.types.ResRet.f32 @dx.op.bufferLoad.f32(i32 68, %dx.types.Handle %787, i32 %782, i32 undef)  ; BufferLoad(srv,index,wot)
  %789 = extractvalue %dx.types.ResRet.f32 %788, 0
  %790 = select i1 %785, float %784, float %789
  %791 = call %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32 59, %dx.types.Handle %72, i32 244)  ; CBufferLoadLegacy(handle,regIndex)
  %792 = extractvalue %dx.types.CBufRet.i32 %791, 1
  %793 = sitofp i32 %792 to float
  %794 = fadd fast float %793, %790
  %795 = call float @dx.op.binary.f32(i32 36, float %794, float %774)  ; FMin(a,b)
  %796 = call float @dx.op.unary.f32(i32 27, float %795)  ; Round_ni(value)
  %797 = fptoui float %796 to i32
  %798 = extractvalue %dx.types.CBufRet.i32 %762, 2
  %799 = and i32 %797, 31
  %800 = ashr i32 %798, %799
  %801 = add nsw i32 %800, -1
  %802 = sitofp i32 %801 to float
  %803 = fadd fast float %802, 1.000000e+00
  %804 = fptoui float %803 to i32
  %805 = bitcast [3 x i32]* %57 to i8*
  call void @llvm.lifetime.start(i64 12, i8* %805) #0
  %806 = call %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32 59, %dx.types.Handle %62, i32 0)  ; CBufferLoadLegacy(handle,regIndex)
  %807 = extractvalue %dx.types.CBufRet.i32 %806, 1
  %808 = extractvalue %dx.types.CBufRet.i32 %806, 0
  %809 = and i32 %808, 255
  %810 = mul i32 %761, 3
  %811 = icmp eq i32 %809, 0
  br i1 %811, label %812, label %815

; <label>:812                                     ; preds = %753
  %813 = add i32 %810, 1
  %814 = add i32 %810, 2
  br label %840

; <label>:815                                     ; preds = %753
  %816 = icmp eq i32 %809, 2
  %817 = call %dx.types.Handle @dx.op.createHandleForLib.dx.types.Handle(i32 160, %dx.types.Handle %20)  ; CreateHandleForLib(Resource)
  %818 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %817, %dx.types.ResourceProperties { i32 11, i32 0 })  ; AnnotateHandle(res,props)  resource: ByteAddressBuffer
  br i1 %816, label %819, label %833

; <label>:819                                     ; preds = %815
  %820 = mul i32 %761, 6
  %821 = add i32 %820, %807
  %822 = and i32 %821, -4
  %823 = call %dx.types.ResRet.i32 @dx.op.rawBufferLoad.i32(i32 139, %dx.types.Handle %818, i32 %822, i32 undef, i8 3, i32 4)  ; RawBufferLoad(srv,index,elementOffset,mask,alignment)
  %824 = extractvalue %dx.types.ResRet.i32 %823, 0
  %825 = extractvalue %dx.types.ResRet.i32 %823, 1
  %826 = icmp eq i32 %822, %821
  %827 = lshr i32 %824, 16
  %828 = and i32 %825, 65535
  br i1 %826, label %829, label %831

; <label>:829                                     ; preds = %819
  %830 = and i32 %824, 65535
  br label %840

; <label>:831                                     ; preds = %819
  %832 = lshr i32 %825, 16
  br label %840

; <label>:833                                     ; preds = %815
  %834 = mul i32 %809, %810
  %835 = add i32 %834, %807
  %836 = call %dx.types.ResRet.i32 @dx.op.rawBufferLoad.i32(i32 139, %dx.types.Handle %818, i32 %835, i32 undef, i8 7, i32 4)  ; RawBufferLoad(srv,index,elementOffset,mask,alignment)
  %837 = extractvalue %dx.types.ResRet.i32 %836, 0
  %838 = extractvalue %dx.types.ResRet.i32 %836, 1
  %839 = extractvalue %dx.types.ResRet.i32 %836, 2
  br label %840

; <label>:840                                     ; preds = %833, %831, %829, %812
  %841 = phi i32 [ %810, %812 ], [ %837, %833 ], [ %830, %829 ], [ %827, %831 ]
  %842 = phi i32 [ %813, %812 ], [ %838, %833 ], [ %827, %829 ], [ %828, %831 ]
  %843 = phi i32 [ %814, %812 ], [ %839, %833 ], [ %828, %829 ], [ %832, %831 ]
  %844 = getelementptr inbounds [3 x i32], [3 x i32]* %57, i32 0, i32 0
  store i32 %841, i32* %844, align 4
  %845 = getelementptr inbounds [3 x i32], [3 x i32]* %57, i32 0, i32 1
  store i32 %842, i32* %845, align 4
  %846 = getelementptr inbounds [3 x i32], [3 x i32]* %57, i32 0, i32 2
  store i32 %843, i32* %846, align 4
  %847 = getelementptr [3 x i32], [3 x i32]* %57, i32 0, i32 %760
  %848 = load i32, i32* %847, align 4, !tbaa !111, !noalias !124
  %849 = call i32 @dx.op.instanceID.i32(i32 141)  ; InstanceID()
  %850 = urem i32 %848, %804
  %851 = uitofp i32 %850 to float
  %852 = udiv i32 %848, %804
  %853 = uitofp i32 %852 to float
  %854 = call %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32 59, %dx.types.Handle %70, i32 0)  ; CBufferLoadLegacy(handle,regIndex)
  %855 = extractvalue %dx.types.CBufRet.i32 %854, 0
  %856 = sitofp i32 %855 to float
  %857 = extractvalue %dx.types.CBufRet.i32 %854, 1
  %858 = sitofp i32 %857 to float
  call void @llvm.lifetime.end(i64 12, i8* %805) #0
  %859 = and i32 %849, 2147483647
  %860 = mul i32 %859, 42
  %861 = call %dx.types.Handle @dx.op.createHandleForLib.dx.types.Handle(i32 160, %dx.types.Handle %46)  ; CreateHandleForLib(Resource)
  %862 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %861, %dx.types.ResourceProperties { i32 12, i32 16 })  ; AnnotateHandle(res,props)  resource: StructuredBuffer<stride=16>
  %863 = call %dx.types.ResRet.f32 @dx.op.rawBufferLoad.f32(i32 139, %dx.types.Handle %862, i32 %860, i32 0, i8 15, i32 4)  ; RawBufferLoad(srv,index,elementOffset,mask,alignment)
  %864 = extractvalue %dx.types.ResRet.f32 %863, 1
  %865 = bitcast float %864 to i32
  %866 = call %dx.types.Handle @dx.op.createHandleForLib.dx.types.Handle(i32 160, %dx.types.Handle %45)  ; CreateHandleForLib(Resource)
  %867 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %866, %dx.types.ResourceProperties { i32 12, i32 16 })  ; AnnotateHandle(res,props)  resource: StructuredBuffer<stride=16>
  %868 = call %dx.types.ResRet.f32 @dx.op.rawBufferLoad.f32(i32 139, %dx.types.Handle %867, i32 %865, i32 0, i8 15, i32 4)  ; RawBufferLoad(srv,index,elementOffset,mask,alignment)
  %869 = extractvalue %dx.types.ResRet.f32 %868, 0
  %870 = bitcast float %869 to i32
  %871 = sub nsw i32 %770, %771
  %872 = add nsw i32 %871, %769
  %873 = add i32 %779, %872
  %874 = call %dx.types.ResRet.f32 @dx.op.bufferLoad.f32(i32 68, %dx.types.Handle %787, i32 %873, i32 undef)  ; BufferLoad(srv,index,wot)
  %875 = extractvalue %dx.types.ResRet.f32 %874, 0
  %876 = select i1 %785, float %784, float %875
  %877 = fadd fast float %793, %876
  %878 = call float @dx.op.binary.f32(i32 36, float %877, float %774)  ; FMin(a,b)
  %879 = call float @dx.op.unary.f32(i32 27, float %878)  ; Round_ni(value)
  %880 = fptoui float %879 to i32
  %881 = and i32 %880, 31
  %882 = ashr i32 %798, %881
  %883 = add nsw i32 %882, -1
  %884 = sitofp i32 %883 to float
  %885 = fdiv fast float 1.000000e+00, %884
  %886 = fmul fast float %885, %851
  %887 = fmul fast float %885, %853
  %888 = fadd fast float %886, %856
  %889 = fadd fast float %887, %858
  %890 = extractvalue %dx.types.CBufRet.i32 %762, 3
  %891 = sitofp i32 %890 to float
  %892 = fdiv fast float %888, %891
  %893 = fdiv fast float %889, %891
  %894 = fsub fast float 1.000000e+00, %892
  %895 = fmul fast float %893, 2.000000e+00
  %896 = fmul fast float %894, 2.000000e+00
  %897 = fmul fast float %878, %895
  %898 = fmul fast float %878, %896
  %899 = fsub fast float 1.000000e+00, %895
  %900 = fsub fast float 1.000000e+00, %896
  call void @llvm.lifetime.start(i64 16, i8* bitcast ([4 x i32]* @NeighborOffset.i.i.i.i.0.hca to i8*)) #0
  call void @llvm.lifetime.start(i64 16, i8* bitcast ([4 x i32]* @NeighborOffset.i.i.i.i.1.hca to i8*)) #0
  %901 = bitcast [4 x float]* %58 to i8*
  call void @llvm.lifetime.start(i64 16, i8* %901) #0, !noalias !74
  br label %902

; <label>:902                                     ; preds = %962, %840
  %903 = phi i32 [ -1, %840 ], [ %966, %962 ]
  %904 = phi i32 [ 0, %840 ], [ %964, %962 ]
  %905 = phi i32 [ 0, %840 ], [ %960, %962 ]
  %906 = call %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32 59, %dx.types.Handle %66, i32 0)  ; CBufferLoadLegacy(handle,regIndex)
  %907 = extractvalue %dx.types.CBufRet.i32 %906, 0
  %908 = extractvalue %dx.types.CBufRet.i32 %906, 1
  %909 = add i32 %907, %904
  %910 = add i32 %908, %903
  %911 = call %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32 59, %dx.types.Handle %68, i32 0)  ; CBufferLoadLegacy(handle,regIndex)
  %912 = extractvalue %dx.types.CBufRet.i32 %911, 2
  %913 = extractvalue %dx.types.CBufRet.i32 %911, 3
  %914 = call i32 @dx.op.binary.i32(i32 37, i32 %912, i32 %909)  ; IMax(a,b)
  %915 = call i32 @dx.op.binary.i32(i32 37, i32 %913, i32 %910)  ; IMax(a,b)
  %916 = call %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32 59, %dx.types.Handle %68, i32 1)  ; CBufferLoadLegacy(handle,regIndex)
  %917 = extractvalue %dx.types.CBufRet.i32 %916, 0
  %918 = extractvalue %dx.types.CBufRet.i32 %916, 1
  %919 = add i32 %912, -1
  %920 = add i32 %919, %917
  %921 = add i32 %913, -1
  %922 = add i32 %921, %918
  %923 = call i32 @dx.op.binary.i32(i32 38, i32 %920, i32 %914)  ; IMin(a,b)
  %924 = call i32 @dx.op.binary.i32(i32 38, i32 %922, i32 %915)  ; IMin(a,b)
  %925 = sub nsw i32 %924, %913
  %926 = mul nsw i32 %925, %917
  %927 = sub i32 %923, %912
  %928 = add nsw i32 %927, %926
  %929 = extractvalue %dx.types.CBufRet.i32 %911, 0
  %930 = call %dx.types.Handle @dx.op.createHandleForLib.dx.types.Handle(i32 160, %dx.types.Handle %43)  ; CreateHandleForLib(Resource)
  %931 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %930, %dx.types.ResourceProperties { i32 10, i32 261 })  ; AnnotateHandle(res,props)  resource: TypedBuffer<U32>
  %932 = call %dx.types.ResRet.i32 @dx.op.bufferLoad.i32(i32 68, %dx.types.Handle %931, i32 %929, i32 undef)  ; BufferLoad(srv,index,wot)
  %933 = extractvalue %dx.types.ResRet.i32 %932, 0
  %934 = add i32 %928, %933
  %935 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %72, i32 244)  ; CBufferLoadLegacy(handle,regIndex)
  %936 = extractvalue %dx.types.CBufRet.f32 %935, 0
  %937 = fcmp fast oge float %936, 0.000000e+00
  %938 = call %dx.types.Handle @dx.op.createHandleForLib.dx.types.Handle(i32 160, %dx.types.Handle %42)  ; CreateHandleForLib(Resource)
  %939 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %938, %dx.types.ResourceProperties { i32 10, i32 265 })  ; AnnotateHandle(res,props)  resource: TypedBuffer<F32>
  %940 = call %dx.types.ResRet.f32 @dx.op.bufferLoad.f32(i32 68, %dx.types.Handle %939, i32 %934, i32 undef)  ; BufferLoad(srv,index,wot)
  %941 = extractvalue %dx.types.ResRet.f32 %940, 0
  %942 = select i1 %937, float %936, float %941
  %943 = call %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32 59, %dx.types.Handle %66, i32 1)  ; CBufferLoadLegacy(handle,regIndex)
  %944 = extractvalue %dx.types.CBufRet.i32 %943, 0
  %945 = sitofp i32 %944 to float
  %946 = add i32 %933, %872
  %947 = call %dx.types.ResRet.f32 @dx.op.bufferLoad.f32(i32 68, %dx.types.Handle %939, i32 %946, i32 undef)  ; BufferLoad(srv,index,wot)
  %948 = extractvalue %dx.types.ResRet.f32 %947, 0
  %949 = select i1 %937, float %936, float %948
  %950 = call %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32 59, %dx.types.Handle %72, i32 244)  ; CBufferLoadLegacy(handle,regIndex)
  %951 = extractvalue %dx.types.CBufRet.i32 %950, 1
  %952 = sitofp i32 %951 to float
  %953 = fadd fast float %952, %949
  %954 = call float @dx.op.binary.f32(i32 36, float %953, float %945)  ; FMin(a,b)
  %955 = call float @dx.op.binary.f32(i32 35, float %942, float %954)  ; FMax(a,b)
  %956 = getelementptr inbounds [4 x float], [4 x float]* %58, i32 0, i32 %905
  %957 = fadd fast float %952, %955
  %958 = select i1 %937, float %936, float %957
  %959 = call float @dx.op.binary.f32(i32 36, float %958, float %945)  ; FMin(a,b)
  store float %959, float* %956, align 4, !tbaa !107, !noalias !74
  %960 = add nuw nsw i32 %905, 1
  %961 = icmp eq i32 %960, 4
  br i1 %961, label %967, label %962

; <label>:962                                     ; preds = %902
  %963 = getelementptr [4 x i32], [4 x i32]* @NeighborOffset.i.i.i.i.0.hca, i32 0, i32 %960
  %964 = load i32, i32* %963, align 4
  %965 = getelementptr [4 x i32], [4 x i32]* @NeighborOffset.i.i.i.i.1.hca, i32 0, i32 %960
  %966 = load i32, i32* %965, align 4
  br label %902

; <label>:967                                     ; preds = %902
  %968 = uitofp i32 %880 to float
  %969 = fsub fast float 1.000000e+00, %893
  %970 = fmul fast float %892, 2.000000e+00
  %971 = fmul fast float %969, 2.000000e+00
  %972 = fmul fast float %878, %970
  %973 = fmul fast float %878, %971
  %974 = fsub fast float 1.000000e+00, %970
  %975 = fsub fast float 1.000000e+00, %971
  %976 = getelementptr inbounds [4 x float], [4 x float]* %58, i32 0, i32 0
  %977 = load float, float* %976, align 4, !tbaa !107, !noalias !74
  %978 = getelementptr inbounds [4 x float], [4 x float]* %58, i32 0, i32 1
  %979 = load float, float* %978, align 4, !tbaa !107, !noalias !74
  %980 = getelementptr inbounds [4 x float], [4 x float]* %58, i32 0, i32 2
  %981 = load float, float* %980, align 4, !tbaa !107, !noalias !74
  %982 = getelementptr inbounds [4 x float], [4 x float]* %58, i32 0, i32 3
  %983 = load float, float* %982, align 4, !tbaa !107, !noalias !74
  call void @llvm.lifetime.end(i64 16, i8* %901) #0, !noalias !74
  call void @llvm.lifetime.end(i64 16, i8* bitcast ([4 x i32]* @NeighborOffset.i.i.i.i.0.hca to i8*)) #0
  call void @llvm.lifetime.end(i64 16, i8* bitcast ([4 x i32]* @NeighborOffset.i.i.i.i.1.hca to i8*)) #0
  %984 = fmul fast float %977, %899
  %985 = fmul fast float %979, %974
  %986 = fmul fast float %981, %900
  %987 = fmul fast float %983, %975
  %988 = fadd fast float %984, %897
  %989 = fadd fast float %985, %972
  %990 = fadd fast float %986, %898
  %991 = fadd fast float %987, %973
  %992 = fadd fast float %888, %889
  %993 = fdiv fast float %992, %891
  %994 = fcmp fast ogt float %993, 1.000000e+00
  %995 = fcmp fast olt float %892, %893
  %996 = select i1 %995, float %991, float %990
  %997 = select i1 %995, float %989, float %988
  %998 = select i1 %994, float %996, float %997
  %999 = call float @dx.op.unary.f32(i32 27, float %998)  ; Round_ni(value)
  %1000 = fsub fast float %998, %999
  %1001 = fsub fast float %999, %968
  %1002 = fsub fast float -0.000000e+00, %1001
  %1003 = call float @dx.op.unary.f32(i32 21, float %1002)  ; Exp(value)
  %1004 = fmul fast float %1003, %851
  %1005 = fmul fast float %1003, %853
  %1006 = call float @dx.op.unary.f32(i32 27, float %1004)  ; Round_ni(value)
  %1007 = call float @dx.op.unary.f32(i32 27, float %1005)  ; Round_ni(value)
  %1008 = fsub fast float -0.000000e+00, %999
  %1009 = call float @dx.op.unary.f32(i32 21, float %1008)  ; Exp(value)
  %1010 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %66, i32 5)  ; CBufferLoadLegacy(handle,regIndex)
  %1011 = extractvalue %dx.types.CBufRet.f32 %1010, 0
  %1012 = fmul fast float %1011, %1009
  %1013 = fadd fast float %1012, -1.000000e+00
  %1014 = fmul fast float %1009, 5.000000e-01
  %1015 = fmul fast float %1014, %1011
  %1016 = call float @dx.op.binary.f32(i32 35, float %1015, float 2.000000e+00)  ; FMax(a,b)
  %1017 = fadd fast float %1016, -1.000000e+00
  %1018 = extractvalue %dx.types.CBufRet.f32 %1010, 1
  %1019 = fmul fast float %1018, %1013
  %1020 = fmul fast float %1018, %1017
  %1021 = fdiv fast float %1006, %1019
  %1022 = fdiv fast float %1007, %1019
  %1023 = fmul fast float %1006, 5.000000e-01
  %1024 = fmul fast float %1007, 5.000000e-01
  %1025 = call float @dx.op.unary.f32(i32 27, float %1023)  ; Round_ni(value)
  %1026 = call float @dx.op.unary.f32(i32 27, float %1024)  ; Round_ni(value)
  %1027 = fdiv fast float %1025, %1020
  %1028 = fdiv fast float %1026, %1020
  %1029 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %66, i32 3)  ; CBufferLoadLegacy(handle,regIndex)
  %1030 = extractvalue %dx.types.CBufRet.f32 %1029, 0
  %1031 = extractvalue %dx.types.CBufRet.f32 %1029, 1
  %1032 = fmul fast float %1030, %1021
  %1033 = fmul fast float %1031, %1022
  %1034 = extractvalue %dx.types.CBufRet.f32 %1029, 2
  %1035 = extractvalue %dx.types.CBufRet.f32 %1029, 3
  %1036 = fadd fast float %1032, %1034
  %1037 = fadd fast float %1033, %1035
  %1038 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %66, i32 6)  ; CBufferLoadLegacy(handle,regIndex)
  %1039 = extractvalue %dx.types.CBufRet.f32 %1038, 2
  %1040 = fmul fast float %1039, %856
  %1041 = fmul fast float %1039, %858
  %1042 = fadd fast float %1036, %1040
  %1043 = fadd fast float %1037, %1041
  %1044 = call %dx.types.Handle @dx.op.createHandleForLib.dx.types.Handle(i32 160, %dx.types.Handle %38)  ; CreateHandleForLib(Resource)
  %1045 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %1044, %dx.types.ResourceProperties { i32 2, i32 1033 })  ; AnnotateHandle(res,props)  resource: Texture2D<4xF32>
  %1046 = call %dx.types.Handle @dx.op.createHandleForLib.dx.types.Handle(i32 160, %dx.types.Handle %16)  ; CreateHandleForLib(Resource)
  %1047 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %1046, %dx.types.ResourceProperties { i32 14, i32 0 })  ; AnnotateHandle(res,props)  resource: SamplerState
  %1048 = call %dx.types.ResRet.f32 @dx.op.sampleLevel.f32(i32 62, %dx.types.Handle %1045, %dx.types.Handle %1047, float %1042, float %1043, float undef, float undef, i32 0, i32 0, i32 undef, float %999)  ; SampleLevel(srv,sampler,coord0,coord1,coord2,coord3,offset0,offset1,offset2,LOD)
  %1049 = extractvalue %dx.types.ResRet.f32 %1048, 0
  %1050 = extractvalue %dx.types.ResRet.f32 %1048, 1
  %1051 = extractvalue %dx.types.ResRet.f32 %1048, 2
  %1052 = extractvalue %dx.types.ResRet.f32 %1048, 3
  %1053 = fmul fast float %1030, %1027
  %1054 = fmul fast float %1031, %1028
  %1055 = fadd fast float %1053, %1034
  %1056 = fadd fast float %1054, %1035
  %1057 = fadd fast float %1055, %1040
  %1058 = fadd fast float %1056, %1041
  %1059 = fadd fast float %999, 1.000000e+00
  %1060 = call %dx.types.ResRet.f32 @dx.op.sampleLevel.f32(i32 62, %dx.types.Handle %1045, %dx.types.Handle %1047, float %1057, float %1058, float undef, float undef, i32 0, i32 0, i32 undef, float %1059)  ; SampleLevel(srv,sampler,coord0,coord1,coord2,coord3,offset0,offset1,offset2,LOD)
  %1061 = extractvalue %dx.types.ResRet.f32 %1060, 0
  %1062 = extractvalue %dx.types.ResRet.f32 %1060, 1
  %1063 = extractvalue %dx.types.ResRet.f32 %1060, 2
  %1064 = extractvalue %dx.types.ResRet.f32 %1060, 3
  %1065 = fmul fast float %1049, 6.528000e+04
  %1066 = fmul fast float %1050, 2.550000e+02
  %1067 = fadd fast float %1066, -3.276800e+04
  %1068 = fadd fast float %1067, %1065
  %1069 = fmul fast float %1068, 3.906250e-03
  %1070 = fmul fast float %1051, 6.528000e+04
  %1071 = fmul fast float %1052, 2.550000e+02
  %1072 = fadd fast float %1071, -3.276800e+04
  %1073 = fadd fast float %1072, %1070
  %1074 = fmul fast float %1073, 3.906250e-03
  %1075 = fmul fast float %1061, 6.528000e+04
  %1076 = fmul fast float %1062, 2.550000e+02
  %1077 = fadd fast float %1076, -3.276800e+04
  %1078 = fadd fast float %1077, %1075
  %1079 = fmul fast float %1078, 3.906250e-03
  %1080 = fmul fast float %1063, 6.528000e+04
  %1081 = fmul fast float %1064, 2.550000e+02
  %1082 = fadd fast float %1081, -3.276800e+04
  %1083 = fadd fast float %1082, %1080
  %1084 = fadd fast float %1069, %1021
  %1085 = fadd fast float %1074, %1022
  %1086 = fsub fast float %1027, %1084
  %1087 = fadd fast float %1086, %1079
  %1088 = fsub fast float %1028, %1085
  %1089 = fmul fast float %1087, %1000
  %1090 = fadd fast float %1089, %1084
  %1091 = extractvalue %dx.types.CBufRet.f32 %1010, 2
  %1092 = extractvalue %dx.types.CBufRet.f32 %1010, 3
  %1093 = extractvalue %dx.types.CBufRet.f32 %1038, 3
  %1094 = fmul fast float %1093, %856
  %1095 = fmul fast float %1093, %858
  %1096 = fadd fast float %1094, %1091
  %1097 = fadd fast float %1095, %1092
  %1098 = fmul fast float %1090, %1030
  %1099 = fadd fast float %1040, %1034
  %1100 = fadd fast float %1041, %1035
  %1101 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %66, i32 2)  ; CBufferLoadLegacy(handle,regIndex)
  %1102 = extractvalue %dx.types.CBufRet.f32 %1101, 0
  %1103 = fmul fast float %1090, %1102
  %1104 = extractvalue %dx.types.CBufRet.f32 %1101, 2
  %1105 = fadd fast float %1103, %1104
  %1106 = fmul fast float %1102, 5.000000e-01
  %1107 = fadd fast float %1105, %1106
  %1108 = extractvalue %dx.types.CBufRet.f32 %1038, 0
  %1109 = fmul fast float %1108, %856
  %1110 = fadd fast float %1107, %1109
  %1111 = fmul fast float %1083, 3.906250e-03
  %1112 = fadd fast float %1088, %1111
  %1113 = fmul fast float %1112, %1000
  %1114 = fadd fast float %1113, %1085
  %1115 = fadd fast float %1096, %1090
  %1116 = fadd fast float %1097, %1114
  %1117 = fmul fast float %1114, %1031
  %1118 = fadd fast float %1099, %1098
  %1119 = fadd fast float %1100, %1117
  %1120 = extractvalue %dx.types.CBufRet.f32 %1101, 1
  %1121 = fmul fast float %1114, %1120
  %1122 = extractvalue %dx.types.CBufRet.f32 %1101, 3
  %1123 = fadd fast float %1121, %1122
  %1124 = fmul fast float %1120, 5.000000e-01
  %1125 = fadd fast float %1123, %1124
  %1126 = extractvalue %dx.types.CBufRet.f32 %1038, 1
  %1127 = fmul fast float %1126, %858
  %1128 = fadd fast float %1125, %1127
  %1129 = getelementptr [3 x float], [3 x float]* %59, i32 0, i32 %760
  %1130 = load float, float* %1129, align 4, !tbaa !107, !noalias !123
  %1131 = fmul fast float %1130, %1115
  %1132 = fmul fast float %1130, %1116
  %1133 = fadd fast float %1131, %758
  %1134 = fadd fast float %1132, %759
  %1135 = fmul fast float %1130, %1118
  %1136 = fmul fast float %1130, %1119
  %1137 = fmul fast float %1130, %1110
  %1138 = fmul fast float %1130, %1128
  %1139 = fadd fast float %1135, %754
  %1140 = fadd fast float %1136, %755
  %1141 = fadd fast float %1137, %756
  %1142 = fadd fast float %1138, %757
  %1143 = add nuw nsw i32 %760, 1
  %1144 = icmp eq i32 %1143, 3
  br i1 %1144, label %1145, label %753

; <label>:1145                                    ; preds = %967
  %1146 = and i32 %870, 1048575
  %1147 = extractvalue %dx.types.CBufRet.f32 %725, 1
  %1148 = extractvalue %dx.types.CBufRet.f32 %725, 3
  %1149 = extractvalue %dx.types.CBufRet.f32 %728, 1
  %1150 = call float @dx.op.legacyF16ToF32(i32 131, i32 %734)  ; LegacyF16ToF32(value)
  %1151 = fadd fast float %738, %1150
  call void @llvm.lifetime.end(i64 12, i8* %745) #0, !noalias !123
  %1152 = call %dx.types.Handle @dx.op.createHandleForLib.dx.types.Handle(i32 160, %dx.types.Handle %39)  ; CreateHandleForLib(Resource)
  %1153 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %1152, %dx.types.ResourceProperties { i32 2, i32 1033 })  ; AnnotateHandle(res,props)  resource: Texture2D<4xF32>
  %1154 = call %dx.types.Handle @dx.op.createHandleForLib.dx.types.Handle(i32 160, %dx.types.Handle %17)  ; CreateHandleForLib(Resource)
  %1155 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %1154, %dx.types.ResourceProperties { i32 14, i32 0 })  ; AnnotateHandle(res,props)  resource: SamplerState
  %1156 = call %dx.types.ResRet.f32 @dx.op.sampleLevel.f32(i32 62, %dx.types.Handle %1153, %dx.types.Handle %1155, float %1141, float %1142, float undef, float undef, i32 0, i32 0, i32 undef, float %724)  ; SampleLevel(srv,sampler,coord0,coord1,coord2,coord3,offset0,offset1,offset2,LOD)
  %1157 = extractvalue %dx.types.ResRet.f32 %1156, 2
  %1158 = extractvalue %dx.types.ResRet.f32 %1156, 3
  %1159 = fmul fast float %1157, 2.000000e+00
  %1160 = fmul fast float %1158, 2.000000e+00
  %1161 = fadd fast float %1159, -1.000000e+00
  %1162 = fadd fast float %1160, -1.000000e+00
  %1163 = call float @dx.op.dot2.f32(i32 54, float %1161, float %1162, float %1161, float %1162)  ; Dot2(ax,ay,bx,by)
  %1164 = fsub fast float 1.000000e+00, %1163
  %1165 = call float @dx.op.binary.f32(i32 35, float %1164, float 0.000000e+00)  ; FMax(a,b)
  %1166 = call float @dx.op.unary.f32(i32 24, float %1165)  ; Sqrt(value)
  %1167 = fsub fast float -0.000000e+00, %1161
  %1168 = call float @dx.op.dot3.f32(i32 55, float %1166, float 0.000000e+00, float %1167, float %1166, float 0.000000e+00, float %1167)  ; Dot3(ax,ay,az,bx,by,bz)
  %1169 = call float @dx.op.unary.f32(i32 25, float %1168)  ; Rsqrt(value)
  %1170 = fmul fast float %1169, %1166
  %1171 = fmul fast float %1169, %1167
  %1172 = fmul fast float %1171, %1162
  %1173 = fmul fast float %1170, %1166
  %1174 = fmul fast float %1171, %1161
  %1175 = fsub fast float %1173, %1174
  %1176 = fmul fast float %1162, %1170
  %1177 = fsub fast float -0.000000e+00, %1176
  %1178 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %66, i32 8)  ; CBufferLoadLegacy(handle,regIndex)
  %1179 = extractvalue %dx.types.CBufRet.f32 %1178, 0
  %1180 = extractvalue %dx.types.CBufRet.f32 %1178, 1
  %1181 = extractvalue %dx.types.CBufRet.f32 %1178, 2
  %1182 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %66, i32 9)  ; CBufferLoadLegacy(handle,regIndex)
  %1183 = extractvalue %dx.types.CBufRet.f32 %1182, 0
  %1184 = extractvalue %dx.types.CBufRet.f32 %1182, 1
  %1185 = extractvalue %dx.types.CBufRet.f32 %1182, 2
  %1186 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %66, i32 10)  ; CBufferLoadLegacy(handle,regIndex)
  %1187 = extractvalue %dx.types.CBufRet.f32 %1186, 0
  %1188 = extractvalue %dx.types.CBufRet.f32 %1186, 1
  %1189 = extractvalue %dx.types.CBufRet.f32 %1186, 2
  %1190 = fmul fast float %1179, %1170
  %1191 = call float @dx.op.tertiary.f32(i32 46, float %1171, float %1187, float %1190)  ; FMad(a,b,c)
  %1192 = fmul fast float %1180, %1170
  %1193 = call float @dx.op.tertiary.f32(i32 46, float %1171, float %1188, float %1192)  ; FMad(a,b,c)
  %1194 = fmul fast float %1181, %1170
  %1195 = call float @dx.op.tertiary.f32(i32 46, float %1171, float %1189, float %1194)  ; FMad(a,b,c)
  %1196 = fmul fast float %1172, %1179
  %1197 = call float @dx.op.tertiary.f32(i32 46, float %1175, float %1183, float %1196)  ; FMad(a,b,c)
  %1198 = call float @dx.op.tertiary.f32(i32 46, float %1177, float %1187, float %1197)  ; FMad(a,b,c)
  %1199 = fmul fast float %1172, %1180
  %1200 = call float @dx.op.tertiary.f32(i32 46, float %1175, float %1184, float %1199)  ; FMad(a,b,c)
  %1201 = call float @dx.op.tertiary.f32(i32 46, float %1177, float %1188, float %1200)  ; FMad(a,b,c)
  %1202 = fmul fast float %1172, %1181
  %1203 = call float @dx.op.tertiary.f32(i32 46, float %1175, float %1185, float %1202)  ; FMad(a,b,c)
  %1204 = call float @dx.op.tertiary.f32(i32 46, float %1177, float %1189, float %1203)  ; FMad(a,b,c)
  %1205 = fmul fast float %1179, %1161
  %1206 = call float @dx.op.tertiary.f32(i32 46, float %1162, float %1183, float %1205)  ; FMad(a,b,c)
  %1207 = call float @dx.op.tertiary.f32(i32 46, float %1166, float %1187, float %1206)  ; FMad(a,b,c)
  %1208 = fmul fast float %1180, %1161
  %1209 = call float @dx.op.tertiary.f32(i32 46, float %1162, float %1184, float %1208)  ; FMad(a,b,c)
  %1210 = call float @dx.op.tertiary.f32(i32 46, float %1166, float %1188, float %1209)  ; FMad(a,b,c)
  %1211 = fmul fast float %1181, %1161
  %1212 = call float @dx.op.tertiary.f32(i32 46, float %1162, float %1185, float %1211)  ; FMad(a,b,c)
  %1213 = call float @dx.op.tertiary.f32(i32 46, float %1166, float %1189, float %1212)  ; FMad(a,b,c)
  %1214 = call i32 @dx.op.hitKind.i32(i32 143)  ; HitKind()
  %1215 = icmp eq i32 %1214, 254
  %1216 = select i1 %1215, float 1.000000e+00, float -1.000000e+00
  %1217 = call %dx.types.Handle @dx.op.createHandleForLib.dx.types.Handle(i32 160, %dx.types.Handle %37)  ; CreateHandleForLib(Resource)
  %1218 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %1217, %dx.types.ResourceProperties { i32 2, i32 1033 })  ; AnnotateHandle(res,props)  resource: Texture2D<4xF32>
  %1219 = call %dx.types.Handle @dx.op.createHandleForLib.dx.types.Handle(i32 160, %dx.types.Handle %19)  ; CreateHandleForLib(Resource)
  %1220 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %1219, %dx.types.ResourceProperties { i32 14, i32 0 })  ; AnnotateHandle(res,props)  resource: SamplerState
  %1221 = call %dx.types.ResRet.f32 @dx.op.sampleLevel.f32(i32 62, %dx.types.Handle %1218, %dx.types.Handle %1220, float %1139, float %1140, float undef, float undef, i32 0, i32 0, i32 undef, float %724)  ; SampleLevel(srv,sampler,coord0,coord1,coord2,coord3,offset0,offset1,offset2,LOD)
  %1222 = extractvalue %dx.types.ResRet.f32 %1221, 0
  %1223 = extractvalue %dx.types.ResRet.f32 %1221, 1
  %1224 = extractvalue %dx.types.ResRet.f32 %1221, 2
  %1225 = extractvalue %dx.types.ResRet.f32 %1221, 3
  %1226 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %64, i32 1)  ; CBufferLoadLegacy(handle,regIndex)
  %1227 = extractvalue %dx.types.CBufRet.f32 %1226, 0
  %1228 = extractvalue %dx.types.CBufRet.f32 %1226, 1
  %1229 = extractvalue %dx.types.CBufRet.f32 %1226, 2
  %1230 = extractvalue %dx.types.CBufRet.f32 %1226, 3
  %1231 = call float @dx.op.dot4.f32(i32 56, float %1222, float %1223, float %1224, float %1225, float %1227, float %1228, float %1229, float %1230)  ; Dot4(ax,ay,az,aw,bx,by,bz,bw)
  %1232 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %64, i32 2)  ; CBufferLoadLegacy(handle,regIndex)
  %1233 = extractvalue %dx.types.CBufRet.f32 %1232, 0
  %1234 = extractvalue %dx.types.CBufRet.f32 %1232, 1
  %1235 = extractvalue %dx.types.CBufRet.f32 %1232, 2
  %1236 = extractvalue %dx.types.CBufRet.f32 %1232, 3
  %1237 = call float @dx.op.dot4.f32(i32 56, float %1222, float %1223, float %1224, float %1225, float %1233, float %1234, float %1235, float %1236)  ; Dot4(ax,ay,az,aw,bx,by,bz,bw)
  %1238 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %64, i32 3)  ; CBufferLoadLegacy(handle,regIndex)
  %1239 = extractvalue %dx.types.CBufRet.f32 %1238, 0
  %1240 = extractvalue %dx.types.CBufRet.f32 %1238, 1
  %1241 = extractvalue %dx.types.CBufRet.f32 %1238, 2
  %1242 = extractvalue %dx.types.CBufRet.f32 %1238, 3
  %1243 = call float @dx.op.dot4.f32(i32 56, float %1222, float %1223, float %1224, float %1225, float %1239, float %1240, float %1241, float %1242)  ; Dot4(ax,ay,az,aw,bx,by,bz,bw)
  %1244 = call %dx.types.Handle @dx.op.createHandleForLib.dx.types.Handle(i32 160, %dx.types.Handle %36)  ; CreateHandleForLib(Resource)
  %1245 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %1244, %dx.types.ResourceProperties { i32 2, i32 1033 })  ; AnnotateHandle(res,props)  resource: Texture2D<4xF32>
  %1246 = call %dx.types.ResRet.f32 @dx.op.sampleLevel.f32(i32 62, %dx.types.Handle %1245, %dx.types.Handle %1220, float %1139, float %1140, float undef, float undef, i32 0, i32 0, i32 undef, float %724)  ; SampleLevel(srv,sampler,coord0,coord1,coord2,coord3,offset0,offset1,offset2,LOD)
  %1247 = extractvalue %dx.types.ResRet.f32 %1246, 0
  %1248 = extractvalue %dx.types.ResRet.f32 %1246, 1
  %1249 = extractvalue %dx.types.ResRet.f32 %1246, 2
  %1250 = extractvalue %dx.types.ResRet.f32 %1246, 3
  %1251 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %64, i32 4)  ; CBufferLoadLegacy(handle,regIndex)
  %1252 = extractvalue %dx.types.CBufRet.f32 %1251, 0
  %1253 = extractvalue %dx.types.CBufRet.f32 %1251, 1
  %1254 = extractvalue %dx.types.CBufRet.f32 %1251, 2
  %1255 = extractvalue %dx.types.CBufRet.f32 %1251, 3
  %1256 = call float @dx.op.dot4.f32(i32 56, float %1247, float %1248, float %1249, float %1250, float %1252, float %1253, float %1254, float %1255)  ; Dot4(ax,ay,az,aw,bx,by,bz,bw)
  %1257 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %64, i32 5)  ; CBufferLoadLegacy(handle,regIndex)
  %1258 = extractvalue %dx.types.CBufRet.f32 %1257, 0
  %1259 = extractvalue %dx.types.CBufRet.f32 %1257, 1
  %1260 = extractvalue %dx.types.CBufRet.f32 %1257, 2
  %1261 = extractvalue %dx.types.CBufRet.f32 %1257, 3
  %1262 = call float @dx.op.dot4.f32(i32 56, float %1222, float %1223, float %1224, float %1225, float %1258, float %1259, float %1260, float %1261)  ; Dot4(ax,ay,az,aw,bx,by,bz,bw)
  %1263 = call float @dx.op.dot2.f32(i32 54, float %1133, float %1134, float -0.000000e+00, float 1.000000e+00)  ; Dot2(ax,ay,bx,by)
  %1264 = call float @dx.op.dot2.f32(i32 54, float %1133, float %1134, float 1.000000e+00, float 0.000000e+00)  ; Dot2(ax,ay,bx,by)
  %1265 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %64, i32 6)  ; CBufferLoadLegacy(handle,regIndex)
  %1266 = extractvalue %dx.types.CBufRet.f32 %1265, 0
  %1267 = fmul fast float %1266, %1264
  %1268 = fmul fast float %1266, %1263
  %1269 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %72, i32 144)  ; CBufferLoadLegacy(handle,regIndex)
  %1270 = extractvalue %dx.types.CBufRet.f32 %1269, 0
  %1271 = fadd fast float %1270, %724
  %1272 = call %dx.types.Handle @dx.op.createHandleForLib.dx.types.Handle(i32 160, %dx.types.Handle %35)  ; CreateHandleForLib(Resource)
  %1273 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %1272, %dx.types.ResourceProperties { i32 2, i32 1033 })  ; AnnotateHandle(res,props)  resource: Texture2D<4xF32>
  %1274 = call %dx.types.Handle @dx.op.createHandleForLib.dx.types.Handle(i32 160, %dx.types.Handle %15)  ; CreateHandleForLib(Resource)
  %1275 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %1274, %dx.types.ResourceProperties { i32 14, i32 0 })  ; AnnotateHandle(res,props)  resource: SamplerState
  %1276 = call %dx.types.ResRet.f32 @dx.op.sampleLevel.f32(i32 62, %dx.types.Handle %1273, %dx.types.Handle %1275, float %1267, float %1268, float undef, float undef, i32 0, i32 0, i32 undef, float %1271)  ; SampleLevel(srv,sampler,coord0,coord1,coord2,coord3,offset0,offset1,offset2,LOD)
  %1277 = extractvalue %dx.types.ResRet.f32 %1276, 0
  %1278 = extractvalue %dx.types.ResRet.f32 %1276, 1
  %1279 = fmul fast float %1277, 2.000000e+00
  %1280 = fmul fast float %1278, 2.000000e+00
  %1281 = fadd fast float %1279, -1.000000e+00
  %1282 = fadd fast float %1280, -1.000000e+00
  %1283 = call float @dx.op.dot2.f32(i32 54, float %1281, float %1282, float %1281, float %1282)  ; Dot2(ax,ay,bx,by)
  %1284 = fsub fast float 1.000000e+00, %1283
  %1285 = call float @dx.op.unary.f32(i32 7, float %1284)  ; Saturate(value)
  %1286 = call float @dx.op.unary.f32(i32 24, float %1285)  ; Sqrt(value)
  %1287 = fmul fast float %1281, %1231
  %1288 = fmul fast float %1282, %1231
  %1289 = fmul fast float %1286, %1231
  %1290 = extractvalue %dx.types.CBufRet.f32 %1265, 1
  %1291 = fmul fast float %1290, %1264
  %1292 = fmul fast float %1290, %1263
  %1293 = call %dx.types.Handle @dx.op.createHandleForLib.dx.types.Handle(i32 160, %dx.types.Handle %34)  ; CreateHandleForLib(Resource)
  %1294 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %1293, %dx.types.ResourceProperties { i32 2, i32 1033 })  ; AnnotateHandle(res,props)  resource: Texture2D<4xF32>
  %1295 = call %dx.types.Handle @dx.op.createHandleForLib.dx.types.Handle(i32 160, %dx.types.Handle %14)  ; CreateHandleForLib(Resource)
  %1296 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %1295, %dx.types.ResourceProperties { i32 14, i32 0 })  ; AnnotateHandle(res,props)  resource: SamplerState
  %1297 = call %dx.types.ResRet.f32 @dx.op.sampleLevel.f32(i32 62, %dx.types.Handle %1294, %dx.types.Handle %1296, float %1291, float %1292, float undef, float undef, i32 0, i32 0, i32 undef, float %1271)  ; SampleLevel(srv,sampler,coord0,coord1,coord2,coord3,offset0,offset1,offset2,LOD)
  %1298 = extractvalue %dx.types.ResRet.f32 %1297, 0
  %1299 = extractvalue %dx.types.ResRet.f32 %1297, 1
  %1300 = fmul fast float %1298, 2.000000e+00
  %1301 = fmul fast float %1299, 2.000000e+00
  %1302 = fadd fast float %1300, -1.000000e+00
  %1303 = fadd fast float %1301, -1.000000e+00
  %1304 = call float @dx.op.dot2.f32(i32 54, float %1302, float %1303, float %1302, float %1303)  ; Dot2(ax,ay,bx,by)
  %1305 = fsub fast float 1.000000e+00, %1304
  %1306 = call float @dx.op.unary.f32(i32 7, float %1305)  ; Saturate(value)
  %1307 = call float @dx.op.unary.f32(i32 24, float %1306)  ; Sqrt(value)
  %1308 = fmul fast float %1302, %1237
  %1309 = fmul fast float %1303, %1237
  %1310 = fmul fast float %1307, %1237
  %1311 = fadd fast float %1308, %1287
  %1312 = fadd fast float %1309, %1288
  %1313 = fadd fast float %1310, %1289
  %1314 = extractvalue %dx.types.CBufRet.f32 %1265, 2
  %1315 = fmul fast float %1314, %1264
  %1316 = fmul fast float %1314, %1263
  %1317 = call %dx.types.Handle @dx.op.createHandleForLib.dx.types.Handle(i32 160, %dx.types.Handle %33)  ; CreateHandleForLib(Resource)
  %1318 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %1317, %dx.types.ResourceProperties { i32 2, i32 1033 })  ; AnnotateHandle(res,props)  resource: Texture2D<4xF32>
  %1319 = call %dx.types.Handle @dx.op.createHandleForLib.dx.types.Handle(i32 160, %dx.types.Handle %13)  ; CreateHandleForLib(Resource)
  %1320 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %1319, %dx.types.ResourceProperties { i32 14, i32 0 })  ; AnnotateHandle(res,props)  resource: SamplerState
  %1321 = call %dx.types.ResRet.f32 @dx.op.sampleLevel.f32(i32 62, %dx.types.Handle %1318, %dx.types.Handle %1320, float %1315, float %1316, float undef, float undef, i32 0, i32 0, i32 undef, float %1271)  ; SampleLevel(srv,sampler,coord0,coord1,coord2,coord3,offset0,offset1,offset2,LOD)
  %1322 = extractvalue %dx.types.ResRet.f32 %1321, 0
  %1323 = extractvalue %dx.types.ResRet.f32 %1321, 1
  %1324 = fmul fast float %1322, 2.000000e+00
  %1325 = fmul fast float %1323, 2.000000e+00
  %1326 = fadd fast float %1324, -1.000000e+00
  %1327 = fadd fast float %1325, -1.000000e+00
  %1328 = call float @dx.op.dot2.f32(i32 54, float %1326, float %1327, float %1326, float %1327)  ; Dot2(ax,ay,bx,by)
  %1329 = fsub fast float 1.000000e+00, %1328
  %1330 = call float @dx.op.unary.f32(i32 7, float %1329)  ; Saturate(value)
  %1331 = call float @dx.op.unary.f32(i32 24, float %1330)  ; Sqrt(value)
  %1332 = fmul fast float %1326, %1243
  %1333 = fmul fast float %1327, %1243
  %1334 = fmul fast float %1331, %1243
  %1335 = fadd fast float %1311, %1332
  %1336 = fadd fast float %1312, %1333
  %1337 = fadd fast float %1313, %1334
  %1338 = extractvalue %dx.types.CBufRet.f32 %1265, 3
  %1339 = fmul fast float %1338, %1264
  %1340 = fmul fast float %1338, %1263
  %1341 = call %dx.types.Handle @dx.op.createHandleForLib.dx.types.Handle(i32 160, %dx.types.Handle %32)  ; CreateHandleForLib(Resource)
  %1342 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %1341, %dx.types.ResourceProperties { i32 2, i32 1033 })  ; AnnotateHandle(res,props)  resource: Texture2D<4xF32>
  %1343 = call %dx.types.Handle @dx.op.createHandleForLib.dx.types.Handle(i32 160, %dx.types.Handle %12)  ; CreateHandleForLib(Resource)
  %1344 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %1343, %dx.types.ResourceProperties { i32 14, i32 0 })  ; AnnotateHandle(res,props)  resource: SamplerState
  %1345 = call %dx.types.ResRet.f32 @dx.op.sampleLevel.f32(i32 62, %dx.types.Handle %1342, %dx.types.Handle %1344, float %1339, float %1340, float undef, float undef, i32 0, i32 0, i32 undef, float %1271)  ; SampleLevel(srv,sampler,coord0,coord1,coord2,coord3,offset0,offset1,offset2,LOD)
  %1346 = extractvalue %dx.types.ResRet.f32 %1345, 0
  %1347 = extractvalue %dx.types.ResRet.f32 %1345, 1
  %1348 = fmul fast float %1346, 2.000000e+00
  %1349 = fmul fast float %1347, 2.000000e+00
  %1350 = fadd fast float %1348, -1.000000e+00
  %1351 = fadd fast float %1349, -1.000000e+00
  %1352 = call float @dx.op.dot2.f32(i32 54, float %1350, float %1351, float %1350, float %1351)  ; Dot2(ax,ay,bx,by)
  %1353 = fsub fast float 1.000000e+00, %1352
  %1354 = call float @dx.op.unary.f32(i32 7, float %1353)  ; Saturate(value)
  %1355 = call float @dx.op.unary.f32(i32 24, float %1354)  ; Sqrt(value)
  %1356 = fmul fast float %1350, %1256
  %1357 = fmul fast float %1351, %1256
  %1358 = fmul fast float %1355, %1256
  %1359 = fadd fast float %1335, %1356
  %1360 = fadd fast float %1336, %1357
  %1361 = fadd fast float %1337, %1358
  %1362 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %64, i32 7)  ; CBufferLoadLegacy(handle,regIndex)
  %1363 = extractvalue %dx.types.CBufRet.f32 %1362, 0
  %1364 = fmul fast float %1363, %1264
  %1365 = fmul fast float %1363, %1263
  %1366 = call %dx.types.Handle @dx.op.createHandleForLib.dx.types.Handle(i32 160, %dx.types.Handle %31)  ; CreateHandleForLib(Resource)
  %1367 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %1366, %dx.types.ResourceProperties { i32 2, i32 1033 })  ; AnnotateHandle(res,props)  resource: Texture2D<4xF32>
  %1368 = call %dx.types.Handle @dx.op.createHandleForLib.dx.types.Handle(i32 160, %dx.types.Handle %11)  ; CreateHandleForLib(Resource)
  %1369 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %1368, %dx.types.ResourceProperties { i32 14, i32 0 })  ; AnnotateHandle(res,props)  resource: SamplerState
  %1370 = call %dx.types.ResRet.f32 @dx.op.sampleLevel.f32(i32 62, %dx.types.Handle %1367, %dx.types.Handle %1369, float %1364, float %1365, float undef, float undef, i32 0, i32 0, i32 undef, float %1271)  ; SampleLevel(srv,sampler,coord0,coord1,coord2,coord3,offset0,offset1,offset2,LOD)
  %1371 = extractvalue %dx.types.ResRet.f32 %1370, 0
  %1372 = extractvalue %dx.types.ResRet.f32 %1370, 1
  %1373 = fmul fast float %1371, 2.000000e+00
  %1374 = fmul fast float %1372, 2.000000e+00
  %1375 = fadd fast float %1373, -1.000000e+00
  %1376 = fadd fast float %1374, -1.000000e+00
  %1377 = call float @dx.op.dot2.f32(i32 54, float %1375, float %1376, float %1375, float %1376)  ; Dot2(ax,ay,bx,by)
  %1378 = fsub fast float 1.000000e+00, %1377
  %1379 = call float @dx.op.unary.f32(i32 7, float %1378)  ; Saturate(value)
  %1380 = call float @dx.op.unary.f32(i32 24, float %1379)  ; Sqrt(value)
  %1381 = fmul fast float %1375, %1262
  %1382 = fmul fast float %1376, %1262
  %1383 = fmul fast float %1380, %1262
  %1384 = fadd fast float %1359, %1381
  %1385 = fadd fast float %1360, %1382
  %1386 = fadd fast float %1361, %1383
  %1387 = fmul fast float %1384, %1148
  %1388 = fmul fast float %1385, %1148
  %1389 = fmul fast float %1386, %1148
  %1390 = fadd fast float %1387, %726
  %1391 = fadd fast float %1388, %1147
  %1392 = fadd fast float %1389, %727
  %1393 = call float @dx.op.dot3.f32(i32 55, float %1390, float %1391, float %1392, float %1390, float %1391, float %1392)  ; Dot3(ax,ay,az,bx,by,bz)
  %1394 = call float @dx.op.unary.f32(i32 25, float %1393)  ; Rsqrt(value)
  %1395 = fmul fast float %1390, %1394
  %1396 = fmul fast float %1391, %1394
  %1397 = fmul fast float %1392, %1394
  %1398 = fmul fast float %1395, %1191
  %1399 = call float @dx.op.tertiary.f32(i32 46, float %1396, float %1198, float %1398)  ; FMad(a,b,c)
  %1400 = call float @dx.op.tertiary.f32(i32 46, float %1397, float %1207, float %1399)  ; FMad(a,b,c)
  %1401 = fmul fast float %1395, %1193
  %1402 = call float @dx.op.tertiary.f32(i32 46, float %1396, float %1201, float %1401)  ; FMad(a,b,c)
  %1403 = call float @dx.op.tertiary.f32(i32 46, float %1397, float %1210, float %1402)  ; FMad(a,b,c)
  %1404 = fmul fast float %1395, %1195
  %1405 = call float @dx.op.tertiary.f32(i32 46, float %1396, float %1204, float %1404)  ; FMad(a,b,c)
  %1406 = call float @dx.op.tertiary.f32(i32 46, float %1397, float %1213, float %1405)  ; FMad(a,b,c)
  %1407 = call float @dx.op.dot3.f32(i32 55, float %1400, float %1403, float %1406, float %1400, float %1403, float %1406)  ; Dot3(ax,ay,az,bx,by,bz)
  %1408 = call float @dx.op.unary.f32(i32 25, float %1407)  ; Rsqrt(value)
  %1409 = fmul fast float %1400, %1216
  %1410 = fmul fast float %1409, %1408
  %1411 = fmul fast float %1403, %1216
  %1412 = fmul fast float %1411, %1408
  %1413 = fmul fast float %1406, %1216
  %1414 = fmul fast float %1413, %1408
  %1415 = extractvalue %dx.types.CBufRet.f32 %1362, 1
  %1416 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %64, i32 8)  ; CBufferLoadLegacy(handle,regIndex)
  %1417 = extractvalue %dx.types.CBufRet.f32 %1416, 0
  %1418 = extractvalue %dx.types.CBufRet.f32 %1416, 1
  %1419 = extractvalue %dx.types.CBufRet.f32 %1416, 2
  %1420 = fmul fast float %1417, %1415
  %1421 = fmul fast float %1418, %1415
  %1422 = fmul fast float %1419, %1415
  %1423 = call %dx.types.Handle @dx.op.createHandleForLib.dx.types.Handle(i32 160, %dx.types.Handle %30)  ; CreateHandleForLib(Resource)
  %1424 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %1423, %dx.types.ResourceProperties { i32 2, i32 1033 })  ; AnnotateHandle(res,props)  resource: Texture2D<4xF32>
  %1425 = call %dx.types.Handle @dx.op.createHandleForLib.dx.types.Handle(i32 160, %dx.types.Handle %10)  ; CreateHandleForLib(Resource)
  %1426 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %1425, %dx.types.ResourceProperties { i32 14, i32 0 })  ; AnnotateHandle(res,props)  resource: SamplerState
  %1427 = call %dx.types.ResRet.f32 @dx.op.sampleLevel.f32(i32 62, %dx.types.Handle %1424, %dx.types.Handle %1426, float %1267, float %1268, float undef, float undef, i32 0, i32 0, i32 undef, float %1271)  ; SampleLevel(srv,sampler,coord0,coord1,coord2,coord3,offset0,offset1,offset2,LOD)
  %1428 = extractvalue %dx.types.ResRet.f32 %1427, 0
  %1429 = extractvalue %dx.types.ResRet.f32 %1427, 1
  %1430 = extractvalue %dx.types.ResRet.f32 %1427, 2
  %1431 = fmul fast float %1428, %1231
  %1432 = fmul fast float %1429, %1231
  %1433 = fmul fast float %1430, %1231
  %1434 = call %dx.types.Handle @dx.op.createHandleForLib.dx.types.Handle(i32 160, %dx.types.Handle %29)  ; CreateHandleForLib(Resource)
  %1435 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %1434, %dx.types.ResourceProperties { i32 2, i32 1033 })  ; AnnotateHandle(res,props)  resource: Texture2D<4xF32>
  %1436 = call %dx.types.Handle @dx.op.createHandleForLib.dx.types.Handle(i32 160, %dx.types.Handle %9)  ; CreateHandleForLib(Resource)
  %1437 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %1436, %dx.types.ResourceProperties { i32 14, i32 0 })  ; AnnotateHandle(res,props)  resource: SamplerState
  %1438 = call %dx.types.ResRet.f32 @dx.op.sampleLevel.f32(i32 62, %dx.types.Handle %1435, %dx.types.Handle %1437, float %1291, float %1292, float undef, float undef, i32 0, i32 0, i32 undef, float %1271)  ; SampleLevel(srv,sampler,coord0,coord1,coord2,coord3,offset0,offset1,offset2,LOD)
  %1439 = extractvalue %dx.types.ResRet.f32 %1438, 0
  %1440 = extractvalue %dx.types.ResRet.f32 %1438, 1
  %1441 = extractvalue %dx.types.ResRet.f32 %1438, 2
  %1442 = fmul fast float %1439, %1237
  %1443 = fmul fast float %1440, %1237
  %1444 = fmul fast float %1441, %1237
  %1445 = fadd fast float %1442, %1431
  %1446 = fadd fast float %1443, %1432
  %1447 = fadd fast float %1444, %1433
  %1448 = call %dx.types.Handle @dx.op.createHandleForLib.dx.types.Handle(i32 160, %dx.types.Handle %28)  ; CreateHandleForLib(Resource)
  %1449 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %1448, %dx.types.ResourceProperties { i32 2, i32 1033 })  ; AnnotateHandle(res,props)  resource: Texture2D<4xF32>
  %1450 = call %dx.types.Handle @dx.op.createHandleForLib.dx.types.Handle(i32 160, %dx.types.Handle %8)  ; CreateHandleForLib(Resource)
  %1451 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %1450, %dx.types.ResourceProperties { i32 14, i32 0 })  ; AnnotateHandle(res,props)  resource: SamplerState
  %1452 = call %dx.types.ResRet.f32 @dx.op.sampleLevel.f32(i32 62, %dx.types.Handle %1449, %dx.types.Handle %1451, float %1315, float %1316, float undef, float undef, i32 0, i32 0, i32 undef, float %1271)  ; SampleLevel(srv,sampler,coord0,coord1,coord2,coord3,offset0,offset1,offset2,LOD)
  %1453 = extractvalue %dx.types.ResRet.f32 %1452, 0
  %1454 = extractvalue %dx.types.ResRet.f32 %1452, 1
  %1455 = extractvalue %dx.types.ResRet.f32 %1452, 2
  %1456 = fmul fast float %1453, %1243
  %1457 = fmul fast float %1454, %1243
  %1458 = fmul fast float %1455, %1243
  %1459 = fadd fast float %1445, %1456
  %1460 = fadd fast float %1446, %1457
  %1461 = fadd fast float %1447, %1458
  %1462 = call %dx.types.Handle @dx.op.createHandleForLib.dx.types.Handle(i32 160, %dx.types.Handle %27)  ; CreateHandleForLib(Resource)
  %1463 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %1462, %dx.types.ResourceProperties { i32 2, i32 1033 })  ; AnnotateHandle(res,props)  resource: Texture2D<4xF32>
  %1464 = call %dx.types.Handle @dx.op.createHandleForLib.dx.types.Handle(i32 160, %dx.types.Handle %7)  ; CreateHandleForLib(Resource)
  %1465 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %1464, %dx.types.ResourceProperties { i32 14, i32 0 })  ; AnnotateHandle(res,props)  resource: SamplerState
  %1466 = call %dx.types.ResRet.f32 @dx.op.sampleLevel.f32(i32 62, %dx.types.Handle %1463, %dx.types.Handle %1465, float %1339, float %1340, float undef, float undef, i32 0, i32 0, i32 undef, float %1271)  ; SampleLevel(srv,sampler,coord0,coord1,coord2,coord3,offset0,offset1,offset2,LOD)
  %1467 = extractvalue %dx.types.ResRet.f32 %1466, 0
  %1468 = extractvalue %dx.types.ResRet.f32 %1466, 1
  %1469 = extractvalue %dx.types.ResRet.f32 %1466, 2
  %1470 = fmul fast float %1467, %1256
  %1471 = fmul fast float %1468, %1256
  %1472 = fmul fast float %1469, %1256
  %1473 = fadd fast float %1459, %1470
  %1474 = fadd fast float %1460, %1471
  %1475 = fadd fast float %1461, %1472
  %1476 = call %dx.types.Handle @dx.op.createHandleForLib.dx.types.Handle(i32 160, %dx.types.Handle %26)  ; CreateHandleForLib(Resource)
  %1477 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %1476, %dx.types.ResourceProperties { i32 2, i32 1033 })  ; AnnotateHandle(res,props)  resource: Texture2D<4xF32>
  %1478 = call %dx.types.Handle @dx.op.createHandleForLib.dx.types.Handle(i32 160, %dx.types.Handle %6)  ; CreateHandleForLib(Resource)
  %1479 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %1478, %dx.types.ResourceProperties { i32 14, i32 0 })  ; AnnotateHandle(res,props)  resource: SamplerState
  %1480 = call %dx.types.ResRet.f32 @dx.op.sampleLevel.f32(i32 62, %dx.types.Handle %1477, %dx.types.Handle %1479, float %1364, float %1365, float undef, float undef, i32 0, i32 0, i32 undef, float %1271)  ; SampleLevel(srv,sampler,coord0,coord1,coord2,coord3,offset0,offset1,offset2,LOD)
  %1481 = extractvalue %dx.types.ResRet.f32 %1480, 0
  %1482 = extractvalue %dx.types.ResRet.f32 %1480, 1
  %1483 = extractvalue %dx.types.ResRet.f32 %1480, 2
  %1484 = fmul fast float %1481, %1262
  %1485 = fmul fast float %1482, %1262
  %1486 = fmul fast float %1483, %1262
  %1487 = fadd fast float %1473, %1484
  %1488 = fadd fast float %1474, %1485
  %1489 = fadd fast float %1475, %1486
  %1490 = call %dx.types.Handle @dx.op.createHandleForLib.dx.types.Handle(i32 160, %dx.types.Handle %25)  ; CreateHandleForLib(Resource)
  %1491 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %1490, %dx.types.ResourceProperties { i32 2, i32 1033 })  ; AnnotateHandle(res,props)  resource: Texture2D<4xF32>
  %1492 = call %dx.types.Handle @dx.op.createHandleForLib.dx.types.Handle(i32 160, %dx.types.Handle %5)  ; CreateHandleForLib(Resource)
  %1493 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %1492, %dx.types.ResourceProperties { i32 14, i32 0 })  ; AnnotateHandle(res,props)  resource: SamplerState
  %1494 = call %dx.types.ResRet.f32 @dx.op.sampleLevel.f32(i32 62, %dx.types.Handle %1491, %dx.types.Handle %1493, float %1267, float %1268, float undef, float undef, i32 0, i32 0, i32 undef, float %1271)  ; SampleLevel(srv,sampler,coord0,coord1,coord2,coord3,offset0,offset1,offset2,LOD)
  %1495 = extractvalue %dx.types.ResRet.f32 %1494, 0
  %1496 = fmul fast float %1495, %1231
  %1497 = call %dx.types.Handle @dx.op.createHandleForLib.dx.types.Handle(i32 160, %dx.types.Handle %24)  ; CreateHandleForLib(Resource)
  %1498 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %1497, %dx.types.ResourceProperties { i32 2, i32 1033 })  ; AnnotateHandle(res,props)  resource: Texture2D<4xF32>
  %1499 = call %dx.types.Handle @dx.op.createHandleForLib.dx.types.Handle(i32 160, %dx.types.Handle %4)  ; CreateHandleForLib(Resource)
  %1500 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %1499, %dx.types.ResourceProperties { i32 14, i32 0 })  ; AnnotateHandle(res,props)  resource: SamplerState
  %1501 = call %dx.types.ResRet.f32 @dx.op.sampleLevel.f32(i32 62, %dx.types.Handle %1498, %dx.types.Handle %1500, float %1291, float %1292, float undef, float undef, i32 0, i32 0, i32 undef, float %1271)  ; SampleLevel(srv,sampler,coord0,coord1,coord2,coord3,offset0,offset1,offset2,LOD)
  %1502 = extractvalue %dx.types.ResRet.f32 %1501, 0
  %1503 = fmul fast float %1502, %1237
  %1504 = fadd fast float %1503, %1496
  %1505 = call %dx.types.Handle @dx.op.createHandleForLib.dx.types.Handle(i32 160, %dx.types.Handle %23)  ; CreateHandleForLib(Resource)
  %1506 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %1505, %dx.types.ResourceProperties { i32 2, i32 1033 })  ; AnnotateHandle(res,props)  resource: Texture2D<4xF32>
  %1507 = call %dx.types.Handle @dx.op.createHandleForLib.dx.types.Handle(i32 160, %dx.types.Handle %3)  ; CreateHandleForLib(Resource)
  %1508 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %1507, %dx.types.ResourceProperties { i32 14, i32 0 })  ; AnnotateHandle(res,props)  resource: SamplerState
  %1509 = call %dx.types.ResRet.f32 @dx.op.sampleLevel.f32(i32 62, %dx.types.Handle %1506, %dx.types.Handle %1508, float %1315, float %1316, float undef, float undef, i32 0, i32 0, i32 undef, float %1271)  ; SampleLevel(srv,sampler,coord0,coord1,coord2,coord3,offset0,offset1,offset2,LOD)
  %1510 = extractvalue %dx.types.ResRet.f32 %1509, 0
  %1511 = fmul fast float %1510, %1243
  %1512 = fadd fast float %1504, %1511
  %1513 = call %dx.types.Handle @dx.op.createHandleForLib.dx.types.Handle(i32 160, %dx.types.Handle %22)  ; CreateHandleForLib(Resource)
  %1514 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %1513, %dx.types.ResourceProperties { i32 2, i32 1033 })  ; AnnotateHandle(res,props)  resource: Texture2D<4xF32>
  %1515 = call %dx.types.Handle @dx.op.createHandleForLib.dx.types.Handle(i32 160, %dx.types.Handle %2)  ; CreateHandleForLib(Resource)
  %1516 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %1515, %dx.types.ResourceProperties { i32 14, i32 0 })  ; AnnotateHandle(res,props)  resource: SamplerState
  %1517 = call %dx.types.ResRet.f32 @dx.op.sampleLevel.f32(i32 62, %dx.types.Handle %1514, %dx.types.Handle %1516, float %1339, float %1340, float undef, float undef, i32 0, i32 0, i32 undef, float %1271)  ; SampleLevel(srv,sampler,coord0,coord1,coord2,coord3,offset0,offset1,offset2,LOD)
  %1518 = extractvalue %dx.types.ResRet.f32 %1517, 0
  %1519 = fmul fast float %1518, %1256
  %1520 = fadd fast float %1512, %1519
  %1521 = call %dx.types.Handle @dx.op.createHandleForLib.dx.types.Handle(i32 160, %dx.types.Handle %21)  ; CreateHandleForLib(Resource)
  %1522 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %1521, %dx.types.ResourceProperties { i32 2, i32 1033 })  ; AnnotateHandle(res,props)  resource: Texture2D<4xF32>
  %1523 = call %dx.types.Handle @dx.op.createHandleForLib.dx.types.Handle(i32 160, %dx.types.Handle %1)  ; CreateHandleForLib(Resource)
  %1524 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %1523, %dx.types.ResourceProperties { i32 14, i32 0 })  ; AnnotateHandle(res,props)  resource: SamplerState
  %1525 = call %dx.types.ResRet.f32 @dx.op.sampleLevel.f32(i32 62, %dx.types.Handle %1522, %dx.types.Handle %1524, float %1364, float %1365, float undef, float undef, i32 0, i32 0, i32 undef, float %1271)  ; SampleLevel(srv,sampler,coord0,coord1,coord2,coord3,offset0,offset1,offset2,LOD)
  %1526 = extractvalue %dx.types.ResRet.f32 %1525, 0
  %1527 = fmul fast float %1526, %1262
  %1528 = fadd fast float %1520, %1527
  %1529 = mul nuw nsw i32 %1146, 42
  %1530 = call %dx.types.ResRet.f32 @dx.op.rawBufferLoad.f32(i32 139, %dx.types.Handle %862, i32 %1529, i32 0, i8 15, i32 4)  ; RawBufferLoad(srv,index,elementOffset,mask,alignment)
  %1531 = extractvalue %dx.types.ResRet.f32 %1530, 0
  %1532 = bitcast float %1531 to i32
  %1533 = call float @dx.op.rayTCurrent.f32(i32 154)  ; RayTCurrent()
  %1534 = zext i1 %1215 to i32
  %1535 = and i32 %76, 16777216
  %1536 = icmp eq i32 %1535, 0
  %1537 = call float @dx.op.unary.f32(i32 7, float %1487)  ; Saturate(value)
  %1538 = call float @dx.op.unary.f32(i32 7, float %1488)  ; Saturate(value)
  %1539 = call float @dx.op.unary.f32(i32 7, float %1489)  ; Saturate(value)
  %1540 = call float @dx.op.unary.f32(i32 7, float %1528)  ; Saturate(value)
  %1541 = fmul fast float %1540, %1149
  %1542 = fadd fast float %1541, %729
  %1543 = call float @dx.op.dot3.f32(i32 55, float %1410, float %1412, float %1414, float %1410, float %1412, float %1414)  ; Dot3(ax,ay,az,bx,by,bz)
  %1544 = call float @dx.op.unary.f32(i32 25, float %1543)  ; Rsqrt(value)
  %1545 = fmul fast float %1544, %1410
  %1546 = fmul fast float %1544, %1412
  %1547 = fmul fast float %1544, %1414
  %1548 = call float @dx.op.binary.f32(i32 35, float %1420, float 0.000000e+00)  ; FMax(a,b)
  %1549 = call float @dx.op.binary.f32(i32 35, float %1421, float 0.000000e+00)  ; FMax(a,b)
  %1550 = call float @dx.op.binary.f32(i32 35, float %1422, float 0.000000e+00)  ; FMax(a,b)
  br i1 %1536, label %1618, label %1551

; <label>:1551                                    ; preds = %1145
  %1552 = extractvalue %dx.types.CBufRet.f32 %730, 2
  %1553 = extractvalue %dx.types.CBufRet.f32 %730, 0
  %1554 = call %dx.types.Handle @dx.op.createHandleForLib.dx.types.Handle(i32 160, %dx.types.Handle %44)  ; CreateHandleForLib(Resource)
  %1555 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %1554, %dx.types.ResourceProperties { i32 12, i32 16 })  ; AnnotateHandle(res,props)  resource: StructuredBuffer<stride=16>
  %1556 = call %dx.types.ResRet.f32 @dx.op.rawBufferLoad.f32(i32 139, %dx.types.Handle %1555, i32 0, i32 0, i8 15, i32 4)  ; RawBufferLoad(srv,index,elementOffset,mask,alignment)
  %1557 = extractvalue %dx.types.ResRet.f32 %1556, 0
  %1558 = extractvalue %dx.types.ResRet.f32 %1556, 1
  %1559 = extractvalue %dx.types.ResRet.f32 %1556, 2
  %1560 = extractvalue %dx.types.ResRet.f32 %1556, 3
  %1561 = call float @dx.op.dot4.f32(i32 56, float %1557, float %1558, float %1559, float %1560, float %1545, float %1546, float %1547, float 1.000000e+00)  ; Dot4(ax,ay,az,aw,bx,by,bz,bw)
  %1562 = call %dx.types.ResRet.f32 @dx.op.rawBufferLoad.f32(i32 139, %dx.types.Handle %1555, i32 1, i32 0, i8 15, i32 4)  ; RawBufferLoad(srv,index,elementOffset,mask,alignment)
  %1563 = extractvalue %dx.types.ResRet.f32 %1562, 0
  %1564 = extractvalue %dx.types.ResRet.f32 %1562, 1
  %1565 = extractvalue %dx.types.ResRet.f32 %1562, 2
  %1566 = extractvalue %dx.types.ResRet.f32 %1562, 3
  %1567 = call float @dx.op.dot4.f32(i32 56, float %1563, float %1564, float %1565, float %1566, float %1545, float %1546, float %1547, float 1.000000e+00)  ; Dot4(ax,ay,az,aw,bx,by,bz,bw)
  %1568 = call %dx.types.ResRet.f32 @dx.op.rawBufferLoad.f32(i32 139, %dx.types.Handle %1555, i32 2, i32 0, i8 15, i32 4)  ; RawBufferLoad(srv,index,elementOffset,mask,alignment)
  %1569 = extractvalue %dx.types.ResRet.f32 %1568, 0
  %1570 = extractvalue %dx.types.ResRet.f32 %1568, 1
  %1571 = extractvalue %dx.types.ResRet.f32 %1568, 2
  %1572 = extractvalue %dx.types.ResRet.f32 %1568, 3
  %1573 = call float @dx.op.dot4.f32(i32 56, float %1569, float %1570, float %1571, float %1572, float %1545, float %1546, float %1547, float 1.000000e+00)  ; Dot4(ax,ay,az,aw,bx,by,bz,bw)
  %1574 = fmul fast float %1545, %1546
  %1575 = fmul fast float %1546, %1547
  %1576 = fmul fast float %1547, %1547
  %1577 = fmul fast float %1547, %1545
  %1578 = call %dx.types.ResRet.f32 @dx.op.rawBufferLoad.f32(i32 139, %dx.types.Handle %1555, i32 3, i32 0, i8 15, i32 4)  ; RawBufferLoad(srv,index,elementOffset,mask,alignment)
  %1579 = extractvalue %dx.types.ResRet.f32 %1578, 0
  %1580 = extractvalue %dx.types.ResRet.f32 %1578, 1
  %1581 = extractvalue %dx.types.ResRet.f32 %1578, 2
  %1582 = extractvalue %dx.types.ResRet.f32 %1578, 3
  %1583 = call float @dx.op.dot4.f32(i32 56, float %1579, float %1580, float %1581, float %1582, float %1574, float %1575, float %1576, float %1577)  ; Dot4(ax,ay,az,aw,bx,by,bz,bw)
  %1584 = call %dx.types.ResRet.f32 @dx.op.rawBufferLoad.f32(i32 139, %dx.types.Handle %1555, i32 4, i32 0, i8 15, i32 4)  ; RawBufferLoad(srv,index,elementOffset,mask,alignment)
  %1585 = extractvalue %dx.types.ResRet.f32 %1584, 0
  %1586 = extractvalue %dx.types.ResRet.f32 %1584, 1
  %1587 = extractvalue %dx.types.ResRet.f32 %1584, 2
  %1588 = extractvalue %dx.types.ResRet.f32 %1584, 3
  %1589 = call float @dx.op.dot4.f32(i32 56, float %1585, float %1586, float %1587, float %1588, float %1574, float %1575, float %1576, float %1577)  ; Dot4(ax,ay,az,aw,bx,by,bz,bw)
  %1590 = call %dx.types.ResRet.f32 @dx.op.rawBufferLoad.f32(i32 139, %dx.types.Handle %1555, i32 5, i32 0, i8 15, i32 4)  ; RawBufferLoad(srv,index,elementOffset,mask,alignment)
  %1591 = extractvalue %dx.types.ResRet.f32 %1590, 0
  %1592 = extractvalue %dx.types.ResRet.f32 %1590, 1
  %1593 = extractvalue %dx.types.ResRet.f32 %1590, 2
  %1594 = extractvalue %dx.types.ResRet.f32 %1590, 3
  %1595 = call float @dx.op.dot4.f32(i32 56, float %1591, float %1592, float %1593, float %1594, float %1574, float %1575, float %1576, float %1577)  ; Dot4(ax,ay,az,aw,bx,by,bz,bw)
  %1596 = fmul fast float %1545, %1545
  %1597 = fmul fast float %1546, %1546
  %1598 = fsub fast float %1596, %1597
  %1599 = call %dx.types.ResRet.f32 @dx.op.rawBufferLoad.f32(i32 139, %dx.types.Handle %1555, i32 6, i32 0, i8 15, i32 4)  ; RawBufferLoad(srv,index,elementOffset,mask,alignment)
  %1600 = extractvalue %dx.types.ResRet.f32 %1599, 0
  %1601 = extractvalue %dx.types.ResRet.f32 %1599, 1
  %1602 = extractvalue %dx.types.ResRet.f32 %1599, 2
  %1603 = fmul fast float %1600, %1598
  %1604 = fmul fast float %1601, %1598
  %1605 = fmul fast float %1602, %1598
  %1606 = fadd fast float %1583, %1561
  %1607 = fadd fast float %1589, %1567
  %1608 = fadd fast float %1595, %1573
  %1609 = fadd fast float %1606, %1603
  %1610 = fadd fast float %1607, %1604
  %1611 = fadd fast float %1608, %1605
  %1612 = call float @dx.op.binary.f32(i32 35, float 0.000000e+00, float %1609)  ; FMax(a,b)
  %1613 = call float @dx.op.binary.f32(i32 35, float 0.000000e+00, float %1610)  ; FMax(a,b)
  %1614 = call float @dx.op.binary.f32(i32 35, float 0.000000e+00, float %1611)  ; FMax(a,b)
  %1615 = fmul fast float %1612, %1553
  %1616 = fmul fast float %1613, %731
  %1617 = fmul fast float %1614, %1552
  br label %1618

; <label>:1618                                    ; preds = %1551, %1145
  %1619 = phi float [ %1615, %1551 ], [ 0.000000e+00, %1145 ]
  %1620 = phi float [ %1616, %1551 ], [ 0.000000e+00, %1145 ]
  %1621 = phi float [ %1617, %1551 ], [ 0.000000e+00, %1145 ]
  %1622 = call i32 @dx.op.legacyF32ToF16(i32 130, float %1151)  ; LegacyF32ToF16(value)
  %1623 = call i32 @dx.op.legacyF32ToF16(i32 130, float %736)  ; LegacyF32ToF16(value)
  %1624 = shl i32 %1623, 16
  %1625 = or i32 %1624, %1622
  %1626 = call i32 @dx.op.legacyF32ToF16(i32 130, float %1548)  ; LegacyF32ToF16(value)
  %1627 = call i32 @dx.op.legacyF32ToF16(i32 130, float %1549)  ; LegacyF32ToF16(value)
  %1628 = shl i32 %1627, 16
  %1629 = or i32 %1628, %1626
  %1630 = call i32 @dx.op.legacyF32ToF16(i32 130, float %1550)  ; LegacyF32ToF16(value)
  %1631 = call i32 @dx.op.legacyF32ToF16(i32 130, float %1545)  ; LegacyF32ToF16(value)
  %1632 = shl i32 %1631, 16
  %1633 = or i32 %1632, %1630
  %1634 = call i32 @dx.op.legacyF32ToF16(i32 130, float %1546)  ; LegacyF32ToF16(value)
  %1635 = call i32 @dx.op.legacyF32ToF16(i32 130, float %1547)  ; LegacyF32ToF16(value)
  %1636 = shl i32 %1635, 16
  %1637 = or i32 %1636, %1634
  %1638 = call i32 @dx.op.legacyF32ToF16(i32 130, float %1537)  ; LegacyF32ToF16(value)
  %1639 = call i32 @dx.op.legacyF32ToF16(i32 130, float %1538)  ; LegacyF32ToF16(value)
  %1640 = shl i32 %1639, 16
  %1641 = or i32 %1640, %1638
  %1642 = call i32 @dx.op.legacyF32ToF16(i32 130, float %1539)  ; LegacyF32ToF16(value)
  %1643 = call i32 @dx.op.legacyF32ToF16(i32 130, float 1.000000e+00)  ; LegacyF32ToF16(value)
  %1644 = shl i32 %1643, 16
  %1645 = or i32 %1644, %1642
  %1646 = call i32 @dx.op.legacyF32ToF16(i32 130, float %1542)  ; LegacyF32ToF16(value)
  %1647 = shl i32 %1646, 16
  %1648 = or i32 %1647, 32768
  %1649 = shl nuw nsw i32 %1534, 23
  %1650 = shl i32 %1532, 19
  %1651 = and i32 %1650, -536870912
  %1652 = or i32 %1649, %1651
  %1653 = or i32 %1652, %1643
  %1654 = or i32 %1653, 65536
  %1655 = call i32 @dx.op.legacyF32ToF16(i32 130, float %1619)  ; LegacyF32ToF16(value)
  %1656 = call i32 @dx.op.legacyF32ToF16(i32 130, float %1620)  ; LegacyF32ToF16(value)
  %1657 = shl i32 %1656, 16
  %1658 = or i32 %1657, %1655
  %1659 = call i32 @dx.op.legacyF32ToF16(i32 130, float %1621)  ; LegacyF32ToF16(value)
  %1660 = call i32 @dx.op.legacyF32ToF16(i32 130, float 0.000000e+00)  ; LegacyF32ToF16(value)
  %1661 = shl i32 %1660, 16
  %1662 = or i32 %1661, %1660
  store float %1533, float* %74, align 4
  store i32 %1625, i32* %732, align 4
  store float 0.000000e+00, float* %723, align 4
  %1663 = getelementptr inbounds %struct.FPackedMaterialClosestHitPayload, %struct.FPackedMaterialClosestHitPayload* %PackedPayload, i32 0, i32 3, i32 0
  store i32 %1629, i32* %1663, align 4
  %1664 = getelementptr inbounds %struct.FPackedMaterialClosestHitPayload, %struct.FPackedMaterialClosestHitPayload* %PackedPayload, i32 0, i32 3, i32 1
  store i32 %1633, i32* %1664, align 4
  %1665 = getelementptr inbounds %struct.FPackedMaterialClosestHitPayload, %struct.FPackedMaterialClosestHitPayload* %PackedPayload, i32 0, i32 3, i32 2
  store i32 %1637, i32* %1665, align 4
  %1666 = getelementptr inbounds %struct.FPackedMaterialClosestHitPayload, %struct.FPackedMaterialClosestHitPayload* %PackedPayload, i32 0, i32 4, i32 0
  store i32 %1641, i32* %1666, align 4
  %1667 = getelementptr inbounds %struct.FPackedMaterialClosestHitPayload, %struct.FPackedMaterialClosestHitPayload* %PackedPayload, i32 0, i32 4, i32 1
  store i32 %1645, i32* %1667, align 4
  %1668 = getelementptr inbounds %struct.FPackedMaterialClosestHitPayload, %struct.FPackedMaterialClosestHitPayload* %PackedPayload, i32 0, i32 5
  store i32 %1648, i32* %1668, align 4
  store i32 %1654, i32* %75, align 4
  %1669 = getelementptr inbounds %struct.FPackedMaterialClosestHitPayload, %struct.FPackedMaterialClosestHitPayload* %PackedPayload, i32 0, i32 7, i32 0
  store i32 %1658, i32* %1669, align 4
  %1670 = getelementptr inbounds %struct.FPackedMaterialClosestHitPayload, %struct.FPackedMaterialClosestHitPayload* %PackedPayload, i32 0, i32 7, i32 1
  store i32 %1659, i32* %1670, align 4
  %1671 = getelementptr inbounds %struct.FPackedMaterialClosestHitPayload, %struct.FPackedMaterialClosestHitPayload* %PackedPayload, i32 0, i32 8
  store i32 6911, i32* %1671, align 4
  %1672 = getelementptr inbounds %struct.FPackedMaterialClosestHitPayload, %struct.FPackedMaterialClosestHitPayload* %PackedPayload, i32 0, i32 9, i32 0
  store i32 %1662, i32* %1672, align 4
  %1673 = getelementptr inbounds %struct.FPackedMaterialClosestHitPayload, %struct.FPackedMaterialClosestHitPayload* %PackedPayload, i32 0, i32 9, i32 1
  store i32 %1662, i32* %1673, align 4
  %1674 = getelementptr inbounds %struct.FPackedMaterialClosestHitPayload, %struct.FPackedMaterialClosestHitPayload* %PackedPayload, i32 0, i32 10
  store i32 0, i32* %1674, align 4
  br i1 %78, label %1675, label %1689

; <label>:1675                                    ; preds = %1618
  %1676 = call i32 @dx.op.instanceIndex.i32(i32 142)  ; InstanceIndex()
  %1677 = call %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32 59, %dx.types.Handle %62, i32 1)  ; CBufferLoadLegacy(handle,regIndex)
  %1678 = extractvalue %dx.types.CBufRet.i32 %1677, 0
  %1679 = sub i32 %1676, %1678
  %1680 = mul i32 %849, 42
  %1681 = call %dx.types.ResRet.f32 @dx.op.rawBufferLoad.f32(i32 139, %dx.types.Handle %862, i32 %1680, i32 0, i8 15, i32 4)  ; RawBufferLoad(srv,index,elementOffset,mask,alignment)
  %1682 = extractvalue %dx.types.ResRet.f32 %1681, 2
  %1683 = bitcast float %1682 to i32
  %1684 = icmp eq i32 %1683, 1
  %1685 = select i1 %1684, i32 0, i32 %1679
  %1686 = extractvalue %dx.types.ResRet.f32 %1681, 1
  %1687 = bitcast float %1686 to i32
  %1688 = add i32 %1687, %1685
  store i32 %1688, i32* %1673, align 4, !tbaa !111
  br label %1689

; <label>:1689                                    ; preds = %1675, %1618, %719
  ret void
}

; Function Attrs: nounwind readnone
declare float @dx.op.binary.f32(i32, float, float) #1

; Function Attrs: nounwind readnone
declare float @dx.op.unary.f32(i32, float) #1

; Function Attrs: nounwind readnone
declare i32 @dx.op.instanceID.i32(i32) #1

; Function Attrs: nounwind readnone
declare i32 @dx.op.primitiveIndex.i32(i32) #1

; Function Attrs: nounwind readnone
declare i32 @dx.op.hitKind.i32(i32) #1

; Function Attrs: nounwind readnone
declare i32 @dx.op.instanceIndex.i32(i32) #1

; Function Attrs: nounwind readnone
declare float @dx.op.dot3.f32(i32, float, float, float, float, float, float) #1

; Function Attrs: nounwind readnone
declare i32 @dx.op.legacyF32ToF16(i32, float) #1

; Function Attrs: nounwind readonly
declare %dx.types.ResRet.f32 @dx.op.sampleLevel.f32(i32, %dx.types.Handle, %dx.types.Handle, float, float, float, float, i32, i32, i32, float) #2

; Function Attrs: nounwind readnone
declare float @dx.op.dot2.f32(i32, float, float, float, float) #1

; Function Attrs: nounwind readnone
declare float @dx.op.dot4.f32(i32, float, float, float, float, float, float, float, float) #1

; Function Attrs: nounwind readnone
declare float @dx.op.legacyF16ToF32(i32, i32) #1

; Function Attrs: nounwind readnone
declare float @dx.op.worldRayDirection.f32(i32, i8) #1

; Function Attrs: nounwind readonly
declare %dx.types.ResRet.i32 @dx.op.rawBufferLoad.i32(i32, %dx.types.Handle, i32, i32, i8, i32) #2

; Function Attrs: nounwind readonly
declare %dx.types.ResRet.f32 @dx.op.bufferLoad.f32(i32, %dx.types.Handle, i32, i32) #2

; Function Attrs: nounwind readonly
declare %dx.types.ResRet.f32 @dx.op.rawBufferLoad.f32(i32, %dx.types.Handle, i32, i32, i8, i32) #2

; Function Attrs: nounwind readonly
declare %dx.types.ResRet.i32 @dx.op.bufferLoad.i32(i32, %dx.types.Handle, i32, i32) #2

; Function Attrs: nounwind readnone
declare i32 @dx.op.binary.i32(i32, i32, i32) #1

; Function Attrs: nounwind readonly
declare float @dx.op.rayTCurrent.f32(i32) #2

; Function Attrs: nounwind readonly
declare %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32, %dx.types.Handle, i32) #2

; Function Attrs: nounwind readonly
declare %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32, %dx.types.Handle, i32) #2

; Function Attrs: nounwind readnone
declare float @dx.op.tertiary.f32(i32, float, float, float) #1

; Function Attrs: nounwind readnone
declare %dx.types.Handle @dx.op.annotateHandle(i32, %dx.types.Handle, %dx.types.ResourceProperties) #1

; Function Attrs: nounwind readonly
declare %dx.types.Handle @dx.op.createHandleForLib.dx.types.Handle(i32, %dx.types.Handle) #2

attributes #0 = { nounwind }
attributes #1 = { nounwind readnone }
attributes #2 = { nounwind readonly }

!llvm.ident = !{!0}
!dx.version = !{!1}
!dx.valver = !{!1}
!dx.shaderModel = !{!2}
!dx.resources = !{!3}
!dx.entryPoints = !{!62, !65}

!0 = !{!"clang version 3.7.0 (tags/RELEASE_370/final)"}
!1 = !{i32 1, i32 6}
!2 = !{!"lib", i32 6, i32 6}
!3 = !{!4, null, !35, !42}
!4 = !{!5, !7, !8, !9, !11, !13, !14, !15, !16, !17, !18, !19, !20, !21, !22, !23, !24, !25, !26, !27, !28, !29, !30, !31, !32, !33, !34}
!5 = !{i32 0, %"class.StructuredBuffer<vector<float, 4> >"* bitcast (%dx.types.Handle* @"\01?View_PrimitiveSceneData@@3V?$StructuredBuffer@V?$vector@M$03@@@@A" to %"class.StructuredBuffer<vector<float, 4> >"*), !"View_PrimitiveSceneData", i32 0, i32 0, i32 1, i32 12, i32 0, !6}
!6 = !{i32 1, i32 16}
!7 = !{i32 1, %"class.StructuredBuffer<vector<float, 4> >"* bitcast (%dx.types.Handle* @"\01?View_InstanceSceneData@@3V?$StructuredBuffer@V?$vector@M$03@@@@A" to %"class.StructuredBuffer<vector<float, 4> >"*), !"View_InstanceSceneData", i32 0, i32 1, i32 1, i32 12, i32 0, !6}
!8 = !{i32 2, %"class.StructuredBuffer<vector<float, 4> >"* bitcast (%dx.types.Handle* @"\01?View_SkyIrradianceEnvironmentMap@@3V?$StructuredBuffer@V?$vector@M$03@@@@A" to %"class.StructuredBuffer<vector<float, 4> >"*), !"View_SkyIrradianceEnvironmentMap", i32 0, i32 2, i32 1, i32 12, i32 0, !6}
!9 = !{i32 3, %"class.Buffer<unsigned int>"* bitcast (%dx.types.Handle* @"\01?View_LandscapeIndirection@@3V?$Buffer@I@@A" to %"class.Buffer<unsigned int>"*), !"View_LandscapeIndirection", i32 0, i32 3, i32 1, i32 10, i32 0, !10}
!10 = !{i32 0, i32 5}
!11 = !{i32 4, %"class.Buffer<float>"* bitcast (%dx.types.Handle* @"\01?View_LandscapePerComponentData@@3V?$Buffer@M@@A" to %"class.Buffer<float>"*), !"View_LandscapePerComponentData", i32 0, i32 4, i32 1, i32 10, i32 0, !12}
!12 = !{i32 0, i32 9}
!13 = !{i32 5, %"class.Buffer<float>"* bitcast (%dx.types.Handle* @"\01?LandscapeContinuousLODParameters_SectionLODBias@@3V?$Buffer@M@@A" to %"class.Buffer<float>"*), !"LandscapeContinuousLODParameters_SectionLODBias", i32 0, i32 5, i32 1, i32 10, i32 0, !12}
!14 = !{i32 6, %"class.Texture2D<vector<float, 4> >"* bitcast (%dx.types.Handle* @"\01?LandscapeParameters_HeightmapTexture@@3V?$Texture2D@V?$vector@M$03@@@@A" to %"class.Texture2D<vector<float, 4> >"*), !"LandscapeParameters_HeightmapTexture", i32 0, i32 6, i32 1, i32 2, i32 0, !12}
!15 = !{i32 7, %"class.Texture2D<vector<float, 4> >"* bitcast (%dx.types.Handle* @"\01?LandscapeParameters_NormalmapTexture@@3V?$Texture2D@V?$vector@M$03@@@@A" to %"class.Texture2D<vector<float, 4> >"*), !"LandscapeParameters_NormalmapTexture", i32 0, i32 7, i32 1, i32 2, i32 0, !12}
!16 = !{i32 8, %"class.Texture2D<vector<float, 4> >"* bitcast (%dx.types.Handle* @"\01?LandscapeParameters_XYOffsetmapTexture@@3V?$Texture2D@V?$vector@M$03@@@@A" to %"class.Texture2D<vector<float, 4> >"*), !"LandscapeParameters_XYOffsetmapTexture", i32 0, i32 8, i32 1, i32 2, i32 0, !12}
!17 = !{i32 9, %"class.Texture2D<vector<float, 4> >"* bitcast (%dx.types.Handle* @"\01?Material_Texture2D_0@@3V?$Texture2D@V?$vector@M$03@@@@A" to %"class.Texture2D<vector<float, 4> >"*), !"Material_Texture2D_0", i32 0, i32 9, i32 1, i32 2, i32 0, !12}
!18 = !{i32 10, %"class.Texture2D<vector<float, 4> >"* bitcast (%dx.types.Handle* @"\01?Material_Texture2D_1@@3V?$Texture2D@V?$vector@M$03@@@@A" to %"class.Texture2D<vector<float, 4> >"*), !"Material_Texture2D_1", i32 0, i32 10, i32 1, i32 2, i32 0, !12}
!19 = !{i32 11, %"class.Texture2D<vector<float, 4> >"* bitcast (%dx.types.Handle* @"\01?Material_Texture2D_2@@3V?$Texture2D@V?$vector@M$03@@@@A" to %"class.Texture2D<vector<float, 4> >"*), !"Material_Texture2D_2", i32 0, i32 11, i32 1, i32 2, i32 0, !12}
!20 = !{i32 12, %"class.Texture2D<vector<float, 4> >"* bitcast (%dx.types.Handle* @"\01?Material_Texture2D_3@@3V?$Texture2D@V?$vector@M$03@@@@A" to %"class.Texture2D<vector<float, 4> >"*), !"Material_Texture2D_3", i32 0, i32 12, i32 1, i32 2, i32 0, !12}
!21 = !{i32 13, %"class.Texture2D<vector<float, 4> >"* bitcast (%dx.types.Handle* @"\01?Material_Texture2D_4@@3V?$Texture2D@V?$vector@M$03@@@@A" to %"class.Texture2D<vector<float, 4> >"*), !"Material_Texture2D_4", i32 0, i32 13, i32 1, i32 2, i32 0, !12}
!22 = !{i32 14, %"class.Texture2D<vector<float, 4> >"* bitcast (%dx.types.Handle* @"\01?Material_Texture2D_5@@3V?$Texture2D@V?$vector@M$03@@@@A" to %"class.Texture2D<vector<float, 4> >"*), !"Material_Texture2D_5", i32 0, i32 14, i32 1, i32 2, i32 0, !12}
!23 = !{i32 15, %"class.Texture2D<vector<float, 4> >"* bitcast (%dx.types.Handle* @"\01?Material_Texture2D_6@@3V?$Texture2D@V?$vector@M$03@@@@A" to %"class.Texture2D<vector<float, 4> >"*), !"Material_Texture2D_6", i32 0, i32 15, i32 1, i32 2, i32 0, !12}
!24 = !{i32 16, %"class.Texture2D<vector<float, 4> >"* bitcast (%dx.types.Handle* @"\01?Material_Texture2D_7@@3V?$Texture2D@V?$vector@M$03@@@@A" to %"class.Texture2D<vector<float, 4> >"*), !"Material_Texture2D_7", i32 0, i32 16, i32 1, i32 2, i32 0, !12}
!25 = !{i32 17, %"class.Texture2D<vector<float, 4> >"* bitcast (%dx.types.Handle* @"\01?Material_Texture2D_8@@3V?$Texture2D@V?$vector@M$03@@@@A" to %"class.Texture2D<vector<float, 4> >"*), !"Material_Texture2D_8", i32 0, i32 17, i32 1, i32 2, i32 0, !12}
!26 = !{i32 18, %"class.Texture2D<vector<float, 4> >"* bitcast (%dx.types.Handle* @"\01?Material_Texture2D_9@@3V?$Texture2D@V?$vector@M$03@@@@A" to %"class.Texture2D<vector<float, 4> >"*), !"Material_Texture2D_9", i32 0, i32 18, i32 1, i32 2, i32 0, !12}
!27 = !{i32 19, %"class.Texture2D<vector<float, 4> >"* bitcast (%dx.types.Handle* @"\01?Material_Texture2D_10@@3V?$Texture2D@V?$vector@M$03@@@@A" to %"class.Texture2D<vector<float, 4> >"*), !"Material_Texture2D_10", i32 0, i32 19, i32 1, i32 2, i32 0, !12}
!28 = !{i32 20, %"class.Texture2D<vector<float, 4> >"* bitcast (%dx.types.Handle* @"\01?Material_Texture2D_11@@3V?$Texture2D@V?$vector@M$03@@@@A" to %"class.Texture2D<vector<float, 4> >"*), !"Material_Texture2D_11", i32 0, i32 20, i32 1, i32 2, i32 0, !12}
!29 = !{i32 21, %"class.Texture2D<vector<float, 4> >"* bitcast (%dx.types.Handle* @"\01?Material_Texture2D_12@@3V?$Texture2D@V?$vector@M$03@@@@A" to %"class.Texture2D<vector<float, 4> >"*), !"Material_Texture2D_12", i32 0, i32 21, i32 1, i32 2, i32 0, !12}
!30 = !{i32 22, %"class.Texture2D<vector<float, 4> >"* bitcast (%dx.types.Handle* @"\01?Material_Texture2D_13@@3V?$Texture2D@V?$vector@M$03@@@@A" to %"class.Texture2D<vector<float, 4> >"*), !"Material_Texture2D_13", i32 0, i32 22, i32 1, i32 2, i32 0, !12}
!31 = !{i32 23, %"class.Texture2D<vector<float, 4> >"* bitcast (%dx.types.Handle* @"\01?Material_Texture2D_14@@3V?$Texture2D@V?$vector@M$03@@@@A" to %"class.Texture2D<vector<float, 4> >"*), !"Material_Texture2D_14", i32 0, i32 23, i32 1, i32 2, i32 0, !12}
!32 = !{i32 24, %"class.Texture2D<vector<float, 4> >"* bitcast (%dx.types.Handle* @"\01?Material_Texture2D_15@@3V?$Texture2D@V?$vector@M$03@@@@A" to %"class.Texture2D<vector<float, 4> >"*), !"Material_Texture2D_15", i32 0, i32 24, i32 1, i32 2, i32 0, !12}
!33 = !{i32 25, %"class.Texture2D<vector<float, 4> >"* bitcast (%dx.types.Handle* @"\01?Material_Texture2D_16@@3V?$Texture2D@V?$vector@M$03@@@@A" to %"class.Texture2D<vector<float, 4> >"*), !"Material_Texture2D_16", i32 0, i32 25, i32 1, i32 2, i32 0, !12}
!34 = !{i32 26, %struct.ByteAddressBuffer* bitcast (%dx.types.Handle* @"\01?HitGroupSystemIndexBuffer@@3UByteAddressBuffer@@A" to %struct.ByteAddressBuffer*), !"HitGroupSystemIndexBuffer", i32 2, i32 0, i32 1, i32 11, i32 0, null}
!35 = !{!36, !37, !38, !39, !40, !41}
!36 = !{i32 0, %UniformBufferConstants_View* bitcast (%dx.types.Handle* @UniformBufferConstants_View to %UniformBufferConstants_View*), !"UniformBufferConstants_View", i32 0, i32 0, i32 1, i32 5292, null}
!37 = !{i32 1, %UniformBufferConstants_LandscapeMVF* bitcast (%dx.types.Handle* @UniformBufferConstants_LandscapeMVF to %UniformBufferConstants_LandscapeMVF*), !"UniformBufferConstants_LandscapeMVF", i32 0, i32 1, i32 1, i32 8, null}
!38 = !{i32 2, %UniformBufferConstants_LandscapeContinuousLODParameters* bitcast (%dx.types.Handle* @UniformBufferConstants_LandscapeContinuousLODParameters to %UniformBufferConstants_LandscapeContinuousLODParameters*), !"UniformBufferConstants_LandscapeContinuousLODParameters", i32 0, i32 2, i32 1, i32 28, null}
!39 = !{i32 3, %UniformBufferConstants_LandscapeParameters* bitcast (%dx.types.Handle* @UniformBufferConstants_LandscapeParameters to %UniformBufferConstants_LandscapeParameters*), !"UniformBufferConstants_LandscapeParameters", i32 0, i32 3, i32 1, i32 236, null}
!40 = !{i32 4, %UniformBufferConstants_Material* bitcast (%dx.types.Handle* @UniformBufferConstants_Material to %UniformBufferConstants_Material*), !"UniformBufferConstants_Material", i32 0, i32 4, i32 1, i32 428, null}
!41 = !{i32 5, %HitGroupSystemRootConstants* bitcast (%dx.types.Handle* @HitGroupSystemRootConstants to %HitGroupSystemRootConstants*), !"HitGroupSystemRootConstants", i32 2, i32 0, i32 1, i32 24, null}
!42 = !{!43, !44, !45, !46, !47, !48, !49, !50, !51, !52, !53, !54, !55, !56, !57, !58, !59, !60, !61}
!43 = !{i32 0, %struct.SamplerState* bitcast (%dx.types.Handle* @"\01?View_LandscapeWeightmapSampler@@3USamplerState@@A" to %struct.SamplerState*), !"View_LandscapeWeightmapSampler", i32 0, i32 0, i32 1, i32 0, null}
!44 = !{i32 1, %struct.SamplerState* bitcast (%dx.types.Handle* @"\01?LandscapeParameters_HeightmapTextureSampler@@3USamplerState@@A" to %struct.SamplerState*), !"LandscapeParameters_HeightmapTextureSampler", i32 0, i32 1, i32 1, i32 0, null}
!45 = !{i32 2, %struct.SamplerState* bitcast (%dx.types.Handle* @"\01?LandscapeParameters_NormalmapTextureSampler@@3USamplerState@@A" to %struct.SamplerState*), !"LandscapeParameters_NormalmapTextureSampler", i32 0, i32 2, i32 1, i32 0, null}
!46 = !{i32 3, %struct.SamplerState* bitcast (%dx.types.Handle* @"\01?LandscapeParameters_XYOffsetmapTextureSampler@@3USamplerState@@A" to %struct.SamplerState*), !"LandscapeParameters_XYOffsetmapTextureSampler", i32 0, i32 3, i32 1, i32 0, null}
!47 = !{i32 4, %struct.SamplerState* bitcast (%dx.types.Handle* @"\01?Material_Texture2D_2Sampler@@3USamplerState@@A" to %struct.SamplerState*), !"Material_Texture2D_2Sampler", i32 0, i32 4, i32 1, i32 0, null}
!48 = !{i32 5, %struct.SamplerState* bitcast (%dx.types.Handle* @"\01?Material_Texture2D_3Sampler@@3USamplerState@@A" to %struct.SamplerState*), !"Material_Texture2D_3Sampler", i32 0, i32 5, i32 1, i32 0, null}
!49 = !{i32 6, %struct.SamplerState* bitcast (%dx.types.Handle* @"\01?Material_Texture2D_4Sampler@@3USamplerState@@A" to %struct.SamplerState*), !"Material_Texture2D_4Sampler", i32 0, i32 6, i32 1, i32 0, null}
!50 = !{i32 7, %struct.SamplerState* bitcast (%dx.types.Handle* @"\01?Material_Texture2D_5Sampler@@3USamplerState@@A" to %struct.SamplerState*), !"Material_Texture2D_5Sampler", i32 0, i32 7, i32 1, i32 0, null}
!51 = !{i32 8, %struct.SamplerState* bitcast (%dx.types.Handle* @"\01?Material_Texture2D_6Sampler@@3USamplerState@@A" to %struct.SamplerState*), !"Material_Texture2D_6Sampler", i32 0, i32 8, i32 1, i32 0, null}
!52 = !{i32 9, %struct.SamplerState* bitcast (%dx.types.Handle* @"\01?Material_Texture2D_7Sampler@@3USamplerState@@A" to %struct.SamplerState*), !"Material_Texture2D_7Sampler", i32 0, i32 9, i32 1, i32 0, null}
!53 = !{i32 10, %struct.SamplerState* bitcast (%dx.types.Handle* @"\01?Material_Texture2D_8Sampler@@3USamplerState@@A" to %struct.SamplerState*), !"Material_Texture2D_8Sampler", i32 0, i32 10, i32 1, i32 0, null}
!54 = !{i32 11, %struct.SamplerState* bitcast (%dx.types.Handle* @"\01?Material_Texture2D_9Sampler@@3USamplerState@@A" to %struct.SamplerState*), !"Material_Texture2D_9Sampler", i32 0, i32 11, i32 1, i32 0, null}
!55 = !{i32 12, %struct.SamplerState* bitcast (%dx.types.Handle* @"\01?Material_Texture2D_10Sampler@@3USamplerState@@A" to %struct.SamplerState*), !"Material_Texture2D_10Sampler", i32 0, i32 12, i32 1, i32 0, null}
!56 = !{i32 13, %struct.SamplerState* bitcast (%dx.types.Handle* @"\01?Material_Texture2D_11Sampler@@3USamplerState@@A" to %struct.SamplerState*), !"Material_Texture2D_11Sampler", i32 0, i32 13, i32 1, i32 0, null}
!57 = !{i32 14, %struct.SamplerState* bitcast (%dx.types.Handle* @"\01?Material_Texture2D_12Sampler@@3USamplerState@@A" to %struct.SamplerState*), !"Material_Texture2D_12Sampler", i32 0, i32 14, i32 1, i32 0, null}
!58 = !{i32 15, %struct.SamplerState* bitcast (%dx.types.Handle* @"\01?Material_Texture2D_13Sampler@@3USamplerState@@A" to %struct.SamplerState*), !"Material_Texture2D_13Sampler", i32 0, i32 15, i32 1, i32 0, null}
!59 = !{i32 16, %struct.SamplerState* bitcast (%dx.types.Handle* @"\01?Material_Texture2D_14Sampler@@3USamplerState@@A" to %struct.SamplerState*), !"Material_Texture2D_14Sampler", i32 0, i32 16, i32 1, i32 0, null}
!60 = !{i32 17, %struct.SamplerState* bitcast (%dx.types.Handle* @"\01?Material_Texture2D_15Sampler@@3USamplerState@@A" to %struct.SamplerState*), !"Material_Texture2D_15Sampler", i32 0, i32 17, i32 1, i32 0, null}
!61 = !{i32 18, %struct.SamplerState* bitcast (%dx.types.Handle* @"\01?Material_Texture2D_16Sampler@@3USamplerState@@A" to %struct.SamplerState*), !"Material_Texture2D_16Sampler", i32 0, i32 18, i32 1, i32 0, null}
!62 = !{null, !"", null, !3, !63}
!63 = !{i32 0, i64 8388624, i32 5, !64}
!64 = !{i32 0}
!65 = !{void (%struct.FPackedMaterialClosestHitPayload*, %struct.FRayTracingIntersectionAttributes*)* @"\01?MaterialCHS@@YAXUFPackedMaterialClosestHitPayload@@UFRayTracingIntersectionAttributes@@@Z", !"\01?MaterialCHS@@YAXUFPackedMaterialClosestHitPayload@@UFRayTracingIntersectionAttributes@@@Z", null, null, !66}
!66 = !{i32 8, i32 10, i32 6, i32 64, i32 7, i32 8, i32 5, !64}
!67 = !{!68, !70}
!68 = distinct !{!68, !69, !"\01?internal.CalcPixelMaterialInputs@@YAXUFMaterialPixelParameters@@UFPixelMaterialInputs@@@Z: %PixelMaterialInputs"}
!69 = distinct !{!69, !"\01?internal.CalcPixelMaterialInputs@@YAXUFMaterialPixelParameters@@UFPixelMaterialInputs@@@Z"}
!70 = distinct !{!70, !71, !"\01?internal.CalcMaterialParametersEx@@YAXUFMaterialPixelParameters@@UFPixelMaterialInputs@@V?$vector@M$03@@2_NV?$vector@M$02@@4@Z: %PixelMaterialInputs"}
!71 = distinct !{!71, !"\01?internal.CalcMaterialParametersEx@@YAXUFMaterialPixelParameters@@UFPixelMaterialInputs@@V?$vector@M$03@@2_NV?$vector@M$02@@4@Z"}
!72 = !{!73, !68, !70}
!73 = distinct !{!73, !69, !"\01?internal.CalcPixelMaterialInputs@@YAXUFMaterialPixelParameters@@UFPixelMaterialInputs@@@Z: %Parameters"}
!74 = !{!75, !77, !79, !80}
!75 = distinct !{!75, !76, !"\01?internal.GetVertexFactoryIntermediates@@YA?AUFVertexFactoryIntermediates@@UFVertexFactoryInput@@@Z: %agg.result"}
!76 = distinct !{!76, !"\01?internal.GetVertexFactoryIntermediates@@YA?AUFVertexFactoryIntermediates@@UFVertexFactoryInput@@@Z"}
!77 = distinct !{!77, !78, !"\01?internal.CalcInterpolants@@YAXUFRayCone@@UFRayTracingIntersectionAttributes@@UFVertexFactoryInterpolantsVSToPS@@AIAV?$vector@M$02@@@Z: %Interpolants"}
!78 = distinct !{!78, !"\01?internal.CalcInterpolants@@YAXUFRayCone@@UFRayTracingIntersectionAttributes@@UFVertexFactoryInterpolantsVSToPS@@AIAV?$vector@M$02@@@Z"}
!79 = distinct !{!79, !78, !"\01?internal.CalcInterpolants@@YAXUFRayCone@@UFRayTracingIntersectionAttributes@@UFVertexFactoryInterpolantsVSToPS@@AIAV?$vector@M$02@@@Z: %FaceNormal"}
!80 = distinct !{!80, !81, !"\01?internal.CalcInterpolants@@YAXUFRayCone@@UFRayTracingIntersectionAttributes@@UFVertexFactoryInterpolantsVSToPS@@@Z: %Interpolants"}
!81 = distinct !{!81, !"\01?internal.CalcInterpolants@@YAXUFRayCone@@UFRayTracingIntersectionAttributes@@UFVertexFactoryInterpolantsVSToPS@@@Z"}
!82 = !{!83, !73, !68, !70}
!83 = distinct !{!83, !84, !"\01?internal.GetMaterialSharedSampler@@YA?AUSamplerState@@U1@0@Z: %agg.result"}
!84 = distinct !{!84, !"\01?internal.GetMaterialSharedSampler@@YA?AUSamplerState@@U1@0@Z"}
!85 = !{!86, !88, !90, !77, !79, !80}
!86 = distinct !{!86, !87, !"\01?internal.LoadTriangleBaseAttributes@@YA?AUFTriangleBaseAttributes@@UByteAddressBuffer@@II0III@Z: %agg.result"}
!87 = distinct !{!87, !"\01?internal.LoadTriangleBaseAttributes@@YA?AUFTriangleBaseAttributes@@UByteAddressBuffer@@II0III@Z"}
!88 = distinct !{!88, !89, !"\01?internal.LoadTriangleBaseAttributes@@YA?AUFTriangleBaseAttributes@@I@Z: %agg.result"}
!89 = distinct !{!89, !"\01?internal.LoadTriangleBaseAttributes@@YA?AUFTriangleBaseAttributes@@I@Z"}
!90 = distinct !{!90, !91, !"\01?internal.LoadVertexFactoryInputForHGS@@YA?AUFVertexFactoryInput@@IH@Z: %agg.result"}
!91 = distinct !{!91, !"\01?internal.LoadVertexFactoryInputForHGS@@YA?AUFVertexFactoryInput@@IH@Z"}
!92 = !{!93, !95, !96, !98, !99, !100}
!93 = distinct !{!93, !94, !"\01?internal.GetSkyLighting@@YAXUFMaterialPixelParameters@@MV?$vector@M$02@@V?$vector@M$01@@I1I_NAIAV2@4@Z: %OutDiffuseLighting"}
!94 = distinct !{!94, !"\01?internal.GetSkyLighting@@YAXUFMaterialPixelParameters@@MV?$vector@M$02@@V?$vector@M$01@@I1I_NAIAV2@4@Z"}
!95 = distinct !{!95, !94, !"\01?internal.GetSkyLighting@@YAXUFMaterialPixelParameters@@MV?$vector@M$02@@V?$vector@M$01@@I1I_NAIAV2@4@Z: %OutSubsurfaceLighting"}
!96 = distinct !{!96, !97, !"\01?internal.GetPrecomputedIndirectLightingAndSkyLight@@YAXUFMaterialPixelParameters@@UFVertexFactoryInterpolantsVSToPS@@MV?$vector@M$02@@2I_NAIAV3@4AIAM@Z: %OutDiffuseLighting"}
!97 = distinct !{!97, !"\01?internal.GetPrecomputedIndirectLightingAndSkyLight@@YAXUFMaterialPixelParameters@@UFVertexFactoryInterpolantsVSToPS@@MV?$vector@M$02@@2I_NAIAV3@4AIAM@Z"}
!98 = distinct !{!98, !97, !"\01?internal.GetPrecomputedIndirectLightingAndSkyLight@@YAXUFMaterialPixelParameters@@UFVertexFactoryInterpolantsVSToPS@@MV?$vector@M$02@@2I_NAIAV3@4AIAM@Z: %OutSubsurfaceLighting"}
!99 = distinct !{!99, !97, !"\01?internal.GetPrecomputedIndirectLightingAndSkyLight@@YAXUFMaterialPixelParameters@@UFVertexFactoryInterpolantsVSToPS@@MV?$vector@M$02@@2I_NAIAV3@4AIAM@Z: %OutIndirectIrradiance"}
!100 = distinct !{!100, !101, !"\01?internal.GetMaterialPayload@@YAXUFPixelMaterialInputs@@UFMaterialPixelParameters@@UFVertexFactoryInterpolantsVSToPS@@_NUFMaterialClosestHitPayload@@@Z: %Payload"}
!101 = distinct !{!101, !"\01?internal.GetMaterialPayload@@YAXUFPixelMaterialInputs@@UFMaterialPixelParameters@@UFVertexFactoryInterpolantsVSToPS@@_NUFMaterialClosestHitPayload@@@Z"}
!102 = !{!103, !105, !75, !77, !79, !80}
!103 = distinct !{!103, !104, !"\01?internal.GetInstanceSceneData@@YA?AUFInstanceSceneData@@II_N@Z: %agg.result"}
!104 = distinct !{!104, !"\01?internal.GetInstanceSceneData@@YA?AUFInstanceSceneData@@II_N@Z"}
!105 = distinct !{!105, !106, !"\01?internal.GetSceneDataIntermediates@@YA?AUFSceneDataIntermediates@@II@Z: %agg.result"}
!106 = distinct !{!106, !"\01?internal.GetSceneDataIntermediates@@YA?AUFSceneDataIntermediates@@II@Z"}
!107 = !{!108, !108, i64 0}
!108 = !{!"float", !109, i64 0}
!109 = !{!"omnipotent char", !110, i64 0}
!110 = !{!"Simple C/C++ TBAA"}
!111 = !{!112, !112, i64 0}
!112 = !{!"int", !109, i64 0}
!113 = !{!114}
!114 = distinct !{!114, !115, !"\01?internal.LoadVertexFactoryInputForHGS@@YA?AUFVertexFactoryInput@@IH@Z: %agg.result"}
!115 = distinct !{!115, !"\01?internal.LoadVertexFactoryInputForHGS@@YA?AUFVertexFactoryInput@@IH@Z"}
!116 = distinct !{!116, !"dx.controlflow.hints", i32 1}
!117 = !{!118}
!118 = distinct !{!118, !119, !"\01?internal.GetVertexFactoryIntermediates@@YA?AUFVertexFactoryIntermediates@@UFVertexFactoryInput@@@Z: %agg.result"}
!119 = distinct !{!119, !"\01?internal.GetVertexFactoryIntermediates@@YA?AUFVertexFactoryIntermediates@@UFVertexFactoryInput@@@Z"}
!120 = !{!121}
!121 = distinct !{!121, !122, !"\01?internal.GetRayCone@FPackedMaterialClosestHitPayload@@QAA?AUFRayCone@@XZ: %agg.result"}
!122 = distinct !{!122, !"\01?internal.GetRayCone@FPackedMaterialClosestHitPayload@@QAA?AUFRayCone@@XZ"}
!123 = !{!77, !79, !80}
!124 = !{!90, !77, !79, !80}
