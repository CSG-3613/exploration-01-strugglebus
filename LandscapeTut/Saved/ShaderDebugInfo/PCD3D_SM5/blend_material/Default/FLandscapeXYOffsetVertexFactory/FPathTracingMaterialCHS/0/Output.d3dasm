; shader hash: c7c73c8a7aee2477fb9d3269e33aee61
;
; Buffer Definitions:
;
; cbuffer UniformBufferConstants_View
; {
;
;   struct UniformBufferConstants_View
;   {
;
;       row_major float4x4 View_TranslatedWorldToClip;; Offset:    0
;       row_major float4x4 View_TranslatedWorldToSubpixelClip;; Offset:   64
;       row_major float4x4 View_RelativeWorldToClip;  ; Offset:  128
;       row_major float4x4 View_ClipToRelativeWorld;  ; Offset:  192
;       row_major float4x4 View_TranslatedWorldToView;; Offset:  256
;       row_major float4x4 View_ViewToTranslatedWorld;; Offset:  320
;       row_major float4x4 View_TranslatedWorldToCameraView;; Offset:  384
;       row_major float4x4 View_CameraViewToTranslatedWorld;; Offset:  448
;       row_major float4x4 View_ViewToClip;           ; Offset:  512
;       row_major float4x4 View_ViewToClipNoAA;       ; Offset:  576
;       row_major float4x4 View_ClipToView;           ; Offset:  640
;       row_major float4x4 View_ClipToTranslatedWorld;; Offset:  704
;       row_major float4x4 View_SVPositionToTranslatedWorld;; Offset:  768
;       row_major float4x4 View_ScreenToRelativeWorld;; Offset:  832
;       row_major float4x4 View_ScreenToTranslatedWorld;; Offset:  896
;       row_major float4x4 View_MobileMultiviewShadowTransform;; Offset:  960
;       float3 View_ViewTilePosition;                 ; Offset: 1024
;       float PrePadding_View_1036;                   ; Offset: 1036
;       float3 View_MatrixTilePosition;               ; Offset: 1040
;       float PrePadding_View_1052;                   ; Offset: 1052
;       float3 View_ViewForward;                      ; Offset: 1056
;       float PrePadding_View_1068;                   ; Offset: 1068
;       float3 View_ViewUp;                           ; Offset: 1072
;       float PrePadding_View_1084;                   ; Offset: 1084
;       float3 View_ViewRight;                        ; Offset: 1088
;       float PrePadding_View_1100;                   ; Offset: 1100
;       float3 View_HMDViewNoRollUp;                  ; Offset: 1104
;       float PrePadding_View_1116;                   ; Offset: 1116
;       float3 View_HMDViewNoRollRight;               ; Offset: 1120
;       float PrePadding_View_1132;                   ; Offset: 1132
;       float4 View_InvDeviceZToWorldZTransform;      ; Offset: 1136
;       float4 View_ScreenPositionScaleBias;          ; Offset: 1152
;       float3 View_RelativeWorldCameraOrigin;        ; Offset: 1168
;       float PrePadding_View_1180;                   ; Offset: 1180
;       float3 View_TranslatedWorldCameraOrigin;      ; Offset: 1184
;       float PrePadding_View_1196;                   ; Offset: 1196
;       float3 View_RelativeWorldViewOrigin;          ; Offset: 1200
;       float PrePadding_View_1212;                   ; Offset: 1212
;       float3 View_RelativePreViewTranslation;       ; Offset: 1216
;       float PrePadding_View_1228;                   ; Offset: 1228
;       row_major float4x4 View_PrevViewToClip;       ; Offset: 1232
;       row_major float4x4 View_PrevClipToView;       ; Offset: 1296
;       row_major float4x4 View_PrevTranslatedWorldToClip;; Offset: 1360
;       row_major float4x4 View_PrevTranslatedWorldToView;; Offset: 1424
;       row_major float4x4 View_PrevViewToTranslatedWorld;; Offset: 1488
;       row_major float4x4 View_PrevTranslatedWorldToCameraView;; Offset: 1552
;       row_major float4x4 View_PrevCameraViewToTranslatedWorld;; Offset: 1616
;       float3 View_PrevTranslatedWorldCameraOrigin;  ; Offset: 1680
;       float PrePadding_View_1692;                   ; Offset: 1692
;       float3 View_PrevRelativeWorldCameraOrigin;    ; Offset: 1696
;       float PrePadding_View_1708;                   ; Offset: 1708
;       float3 View_PrevRelativeWorldViewOrigin;      ; Offset: 1712
;       float PrePadding_View_1724;                   ; Offset: 1724
;       float3 View_RelativePrevPreViewTranslation;   ; Offset: 1728
;       float PrePadding_View_1740;                   ; Offset: 1740
;       row_major float4x4 View_PrevClipToRelativeWorld;; Offset: 1744
;       row_major float4x4 View_PrevScreenToTranslatedWorld;; Offset: 1808
;       row_major float4x4 View_ClipToPrevClip;       ; Offset: 1872
;       row_major float4x4 View_ClipToPrevClipWithAA; ; Offset: 1936
;       float4 View_TemporalAAJitter;                 ; Offset: 2000
;       float4 View_GlobalClippingPlane;              ; Offset: 2016
;       float2 View_FieldOfViewWideAngles;            ; Offset: 2032
;       float2 View_PrevFieldOfViewWideAngles;        ; Offset: 2040
;       float4 View_ViewRectMin;                      ; Offset: 2048
;       float4 View_ViewSizeAndInvSize;               ; Offset: 2064
;       uint4 View_ViewRectMinAndSize;                ; Offset: 2080
;       float4 View_LightProbeSizeRatioAndInvSizeRatio;; Offset: 2096
;       float4 View_BufferSizeAndInvSize;             ; Offset: 2112
;       float4 View_BufferBilinearUVMinMax;           ; Offset: 2128
;       float4 View_ScreenToViewSpace;                ; Offset: 2144
;       float2 View_BufferToSceneTextureScale;        ; Offset: 2160
;       float2 View_ResolutionFractionAndInv;         ; Offset: 2168
;       int View_NumSceneColorMSAASamples;            ; Offset: 2176
;       float View_SeparateWaterMainDirLightLuminance;; Offset: 2180
;       float View_PreExposure;                       ; Offset: 2184
;       float View_OneOverPreExposure;                ; Offset: 2188
;       float4 View_DiffuseOverrideParameter;         ; Offset: 2192
;       float4 View_SpecularOverrideParameter;        ; Offset: 2208
;       float4 View_NormalOverrideParameter;          ; Offset: 2224
;       float2 View_RoughnessOverrideParameter;       ; Offset: 2240
;       float View_PrevFrameGameTime;                 ; Offset: 2248
;       float View_PrevFrameRealTime;                 ; Offset: 2252
;       float View_OutOfBoundsMask;                   ; Offset: 2256
;       float PrePadding_View_2260;                   ; Offset: 2260
;       float PrePadding_View_2264;                   ; Offset: 2264
;       float PrePadding_View_2268;                   ; Offset: 2268
;       float3 View_WorldCameraMovementSinceLastFrame;; Offset: 2272
;       float View_CullingSign;                       ; Offset: 2284
;       float View_NearPlane;                         ; Offset: 2288
;       float View_GameTime;                          ; Offset: 2292
;       float View_RealTime;                          ; Offset: 2296
;       float View_DeltaTime;                         ; Offset: 2300
;       float View_MaterialTextureMipBias;            ; Offset: 2304
;       float View_MaterialTextureDerivativeMultiply; ; Offset: 2308
;       uint View_Random;                             ; Offset: 2312
;       uint View_FrameNumber;                        ; Offset: 2316
;       uint View_StateFrameIndexMod8;                ; Offset: 2320
;       uint View_StateFrameIndex;                    ; Offset: 2324
;       uint View_DebugViewModeMask;                  ; Offset: 2328
;       float View_CameraCut;                         ; Offset: 2332
;       float View_UnlitViewmodeMask;                 ; Offset: 2336
;       float PrePadding_View_2340;                   ; Offset: 2340
;       float PrePadding_View_2344;                   ; Offset: 2344
;       float PrePadding_View_2348;                   ; Offset: 2348
;       float4 View_DirectionalLightColor;            ; Offset: 2352
;       float3 View_DirectionalLightDirection;        ; Offset: 2368
;       float PrePadding_View_2380;                   ; Offset: 2380
;       float4 View_TranslucencyLightingVolumeMin[2]; ; Offset: 2384
;       float4 View_TranslucencyLightingVolumeInvSize[2];; Offset: 2416
;       float4 View_TemporalAAParams;                 ; Offset: 2448
;       float4 View_CircleDOFParams;                  ; Offset: 2464
;       float View_DepthOfFieldSensorWidth;           ; Offset: 2480
;       float View_DepthOfFieldFocalDistance;         ; Offset: 2484
;       float View_DepthOfFieldScale;                 ; Offset: 2488
;       float View_DepthOfFieldFocalLength;           ; Offset: 2492
;       float View_DepthOfFieldFocalRegion;           ; Offset: 2496
;       float View_DepthOfFieldNearTransitionRegion;  ; Offset: 2500
;       float View_DepthOfFieldFarTransitionRegion;   ; Offset: 2504
;       float View_MotionBlurNormalizedToPixel;       ; Offset: 2508
;       float View_GeneralPurposeTweak;               ; Offset: 2512
;       float View_GeneralPurposeTweak2;              ; Offset: 2516
;       float View_DemosaicVposOffset;                ; Offset: 2520
;       float View_DecalDepthBias;                    ; Offset: 2524
;       float3 View_IndirectLightingColorScale;       ; Offset: 2528
;       float PrePadding_View_2540;                   ; Offset: 2540
;       float3 View_PrecomputedIndirectLightingColorScale;; Offset: 2544
;       float PrePadding_View_2556;                   ; Offset: 2556
;       float3 View_PrecomputedIndirectSpecularColorScale;; Offset: 2560
;       float PrePadding_View_2572;                   ; Offset: 2572
;       float4 View_AtmosphereLightDirection[2];      ; Offset: 2576
;       float4 View_AtmosphereLightIlluminanceOnGroundPostTransmittance[2];; Offset: 2608
;       float4 View_AtmosphereLightIlluminanceOuterSpace[2];; Offset: 2640
;       float4 View_AtmosphereLightDiscLuminance[2];  ; Offset: 2672
;       float4 View_AtmosphereLightDiscCosHalfApexAngle_PPTrans[2];; Offset: 2704
;       float4 View_SkyViewLutSizeAndInvSize;         ; Offset: 2736
;       float3 View_SkyCameraTranslatedWorldOrigin;   ; Offset: 2752
;       float PrePadding_View_2764;                   ; Offset: 2764
;       float4 View_SkyPlanetTranslatedWorldCenterAndViewHeight;; Offset: 2768
;       row_major float4x4 View_SkyViewLutReferential;; Offset: 2784
;       float4 View_SkyAtmosphereSkyLuminanceFactor;  ; Offset: 2848
;       float View_SkyAtmospherePresentInScene;       ; Offset: 2864
;       float View_SkyAtmosphereHeightFogContribution;; Offset: 2868
;       float View_SkyAtmosphereBottomRadiusKm;       ; Offset: 2872
;       float View_SkyAtmosphereTopRadiusKm;          ; Offset: 2876
;       float4 View_SkyAtmosphereCameraAerialPerspectiveVolumeSizeAndInvSize;; Offset: 2880
;       float View_SkyAtmosphereAerialPerspectiveStartDepthKm;; Offset: 2896
;       float View_SkyAtmosphereCameraAerialPerspectiveVolumeDepthResolution;; Offset: 2900
;       float View_SkyAtmosphereCameraAerialPerspectiveVolumeDepthResolutionInv;; Offset: 2904
;       float View_SkyAtmosphereCameraAerialPerspectiveVolumeDepthSliceLengthKm;; Offset: 2908
;       float View_SkyAtmosphereCameraAerialPerspectiveVolumeDepthSliceLengthKmInv;; Offset: 2912
;       float View_SkyAtmosphereApplyCameraAerialPerspectiveVolume;; Offset: 2916
;       float PrePadding_View_2920;                   ; Offset: 2920
;       float PrePadding_View_2924;                   ; Offset: 2924
;       float3 View_NormalCurvatureToRoughnessScaleBias;; Offset: 2928
;       float View_RenderingReflectionCaptureMask;    ; Offset: 2940
;       float View_RealTimeReflectionCapture;         ; Offset: 2944
;       float View_RealTimeReflectionCapturePreExposure;; Offset: 2948
;       float PrePadding_View_2952;                   ; Offset: 2952
;       float PrePadding_View_2956;                   ; Offset: 2956
;       float4 View_AmbientCubemapTint;               ; Offset: 2960
;       float View_AmbientCubemapIntensity;           ; Offset: 2976
;       float View_SkyLightApplyPrecomputedBentNormalShadowingFlag;; Offset: 2980
;       float View_SkyLightAffectReflectionFlag;      ; Offset: 2984
;       float View_SkyLightAffectGlobalIlluminationFlag;; Offset: 2988
;       float4 View_SkyLightColor;                    ; Offset: 2992
;       float4 View_MobileSkyIrradianceEnvironmentMap[8];; Offset: 3008
;       float View_MobilePreviewMode;                 ; Offset: 3136
;       float View_HMDEyePaddingOffset;               ; Offset: 3140
;       float View_ReflectionCubemapMaxMip;           ; Offset: 3144
;       float View_ShowDecalsMask;                    ; Offset: 3148
;       uint View_DistanceFieldAOSpecularOcclusionMode;; Offset: 3152
;       float View_IndirectCapsuleSelfShadowingIntensity;; Offset: 3156
;       float PrePadding_View_3160;                   ; Offset: 3160
;       float PrePadding_View_3164;                   ; Offset: 3164
;       float3 View_ReflectionEnvironmentRoughnessMixingScaleBiasAndLargestWeight;; Offset: 3168
;       int View_StereoPassIndex;                     ; Offset: 3180
;       float4 View_GlobalVolumeCenterAndExtent[6];   ; Offset: 3184
;       float4 View_GlobalVolumeWorldToUVAddAndMul[6];; Offset: 3280
;       float4 View_GlobalDistanceFieldMipWorldToUVScale[6];; Offset: 3376
;       float4 View_GlobalDistanceFieldMipWorldToUVBias[6];; Offset: 3472
;       float View_GlobalDistanceFieldMipFactor;      ; Offset: 3568
;       float View_GlobalDistanceFieldMipTransition;  ; Offset: 3572
;       int View_GlobalDistanceFieldClipmapSizeInPages;; Offset: 3576
;       int PrePadding_View_3580;                     ; Offset: 3580
;       float3 View_GlobalDistanceFieldInvPageAtlasSize;; Offset: 3584
;       float PrePadding_View_3596;                   ; Offset: 3596
;       float3 View_GlobalDistanceFieldInvCoverageAtlasSize;; Offset: 3600
;       float View_GlobalVolumeDimension;             ; Offset: 3612
;       float View_GlobalVolumeTexelSize;             ; Offset: 3616
;       float View_MaxGlobalDFAOConeDistance;         ; Offset: 3620
;       uint View_NumGlobalSDFClipmaps;               ; Offset: 3624
;       float View_CoveredExpandSurfaceScale;         ; Offset: 3628
;       float View_NotCoveredExpandSurfaceScale;      ; Offset: 3632
;       float View_NotCoveredMinStepScale;            ; Offset: 3636
;       float View_DitheredTransparencyStepThreshold; ; Offset: 3640
;       float View_DitheredTransparencyTraceThreshold;; Offset: 3644
;       int2 View_CursorPosition;                     ; Offset: 3648
;       float View_bCheckerboardSubsurfaceProfileRendering;; Offset: 3656
;       float PrePadding_View_3660;                   ; Offset: 3660
;       float3 View_VolumetricFogInvGridSize;         ; Offset: 3664
;       float PrePadding_View_3676;                   ; Offset: 3676
;       float3 View_VolumetricFogGridZParams;         ; Offset: 3680
;       float PrePadding_View_3692;                   ; Offset: 3692
;       float2 View_VolumetricFogSVPosToVolumeUV;     ; Offset: 3696
;       float View_VolumetricFogMaxDistance;          ; Offset: 3704
;       float PrePadding_View_3708;                   ; Offset: 3708
;       float3 View_VolumetricLightmapWorldToUVScale; ; Offset: 3712
;       float PrePadding_View_3724;                   ; Offset: 3724
;       float3 View_VolumetricLightmapWorldToUVAdd;   ; Offset: 3728
;       float PrePadding_View_3740;                   ; Offset: 3740
;       float3 View_VolumetricLightmapIndirectionTextureSize;; Offset: 3744
;       float View_VolumetricLightmapBrickSize;       ; Offset: 3756
;       float3 View_VolumetricLightmapBrickTexelSize; ; Offset: 3760
;       float View_IndirectLightingCacheShowFlag;     ; Offset: 3772
;       float View_EyeToPixelSpreadAngle;             ; Offset: 3776
;       float PrePadding_View_3780;                   ; Offset: 3780
;       float PrePadding_View_3784;                   ; Offset: 3784
;       float PrePadding_View_3788;                   ; Offset: 3788
;       float4 View_XRPassthroughCameraUVs[2];        ; Offset: 3792
;       float View_GlobalVirtualTextureMipBias;       ; Offset: 3824
;       uint View_VirtualTextureFeedbackShift;        ; Offset: 3828
;       uint View_VirtualTextureFeedbackMask;         ; Offset: 3832
;       uint View_VirtualTextureFeedbackStride;       ; Offset: 3836
;       uint View_VirtualTextureFeedbackJitterOffset; ; Offset: 3840
;       uint View_VirtualTextureFeedbackSampleOffset; ; Offset: 3844
;       uint PrePadding_View_3848;                    ; Offset: 3848
;       uint PrePadding_View_3852;                    ; Offset: 3852
;       float4 View_RuntimeVirtualTextureMipLevel;    ; Offset: 3856
;       float2 View_RuntimeVirtualTexturePackHeight;  ; Offset: 3872
;       float PrePadding_View_3880;                   ; Offset: 3880
;       float PrePadding_View_3884;                   ; Offset: 3884
;       float4 View_RuntimeVirtualTextureDebugParams; ; Offset: 3888
;       float View_OverrideLandscapeLOD;              ; Offset: 3904
;       int View_FarShadowStaticMeshLODBias;          ; Offset: 3908
;       float View_MinRoughness;                      ; Offset: 3912
;       float PrePadding_View_3916;                   ; Offset: 3916
;       float4 View_HairRenderInfo;                   ; Offset: 3920
;       uint View_EnableSkyLight;                     ; Offset: 3936
;       uint View_HairRenderInfoBits;                 ; Offset: 3940
;       uint View_HairComponents;                     ; Offset: 3944
;       float View_bSubsurfacePostprocessEnabled;     ; Offset: 3948
;       float4 View_SSProfilesTextureSizeAndInvSize;  ; Offset: 3952
;       float4 View_SSProfilesPreIntegratedTextureSizeAndInvSize;; Offset: 3968
;       float3 View_PhysicsFieldClipmapCenter;        ; Offset: 3984
;       float View_PhysicsFieldClipmapDistance;       ; Offset: 3996
;       int View_PhysicsFieldClipmapResolution;       ; Offset: 4000
;       int View_PhysicsFieldClipmapExponent;         ; Offset: 4004
;       int View_PhysicsFieldClipmapCount;            ; Offset: 4008
;       int View_PhysicsFieldTargetCount;             ; Offset: 4012
;       int4 View_PhysicsFieldTargets[32];            ; Offset: 4016
;       uint View_InstanceSceneDataSOAStride;         ; Offset: 4528
;       uint View_GPUSceneViewId;                     ; Offset: 4532
;       float View_ViewResolutionFraction;            ; Offset: 4536
;       float View_SubSurfaceColorAsTransmittanceAtDistanceInMeters;; Offset: 4540
;       uint BindlessSampler_View_MaterialTextureBilinearWrapedSampler;; Offset: 4544
;       uint PrePadding_View_4548;                    ; Offset: 4548
;       uint BindlessSampler_View_MaterialTextureBilinearClampedSampler;; Offset: 4552
;       uint PrePadding_View_4556;                    ; Offset: 4556
;       uint BindlessResource_View_VolumetricLightmapIndirectionTexture;; Offset: 4560
;       uint PrePadding_View_4564;                    ; Offset: 4564
;       uint BindlessResource_View_VolumetricLightmapBrickAmbientVector;; Offset: 4568
;       uint PrePadding_View_4572;                    ; Offset: 4572
;       uint BindlessResource_View_VolumetricLightmapBrickSHCoefficients0;; Offset: 4576
;       uint PrePadding_View_4580;                    ; Offset: 4580
;       uint BindlessResource_View_VolumetricLightmapBrickSHCoefficients1;; Offset: 4584
;       uint PrePadding_View_4588;                    ; Offset: 4588
;       uint BindlessResource_View_VolumetricLightmapBrickSHCoefficients2;; Offset: 4592
;       uint PrePadding_View_4596;                    ; Offset: 4596
;       uint BindlessResource_View_VolumetricLightmapBrickSHCoefficients3;; Offset: 4600
;       uint PrePadding_View_4604;                    ; Offset: 4604
;       uint BindlessResource_View_VolumetricLightmapBrickSHCoefficients4;; Offset: 4608
;       uint PrePadding_View_4612;                    ; Offset: 4612
;       uint BindlessResource_View_VolumetricLightmapBrickSHCoefficients5;; Offset: 4616
;       uint PrePadding_View_4620;                    ; Offset: 4620
;       uint BindlessResource_View_SkyBentNormalBrickTexture;; Offset: 4624
;       uint PrePadding_View_4628;                    ; Offset: 4628
;       uint BindlessResource_View_DirectionalLightShadowingBrickTexture;; Offset: 4632
;       uint PrePadding_View_4636;                    ; Offset: 4636
;       uint BindlessSampler_View_VolumetricLightmapBrickAmbientVectorSampler;; Offset: 4640
;       uint PrePadding_View_4644;                    ; Offset: 4644
;       uint BindlessSampler_View_VolumetricLightmapTextureSampler0;; Offset: 4648
;       uint PrePadding_View_4652;                    ; Offset: 4652
;       uint BindlessSampler_View_VolumetricLightmapTextureSampler1;; Offset: 4656
;       uint PrePadding_View_4660;                    ; Offset: 4660
;       uint BindlessSampler_View_VolumetricLightmapTextureSampler2;; Offset: 4664
;       uint PrePadding_View_4668;                    ; Offset: 4668
;       uint BindlessSampler_View_VolumetricLightmapTextureSampler3;; Offset: 4672
;       uint PrePadding_View_4676;                    ; Offset: 4676
;       uint BindlessSampler_View_VolumetricLightmapTextureSampler4;; Offset: 4680
;       uint PrePadding_View_4684;                    ; Offset: 4684
;       uint BindlessSampler_View_VolumetricLightmapTextureSampler5;; Offset: 4688
;       uint PrePadding_View_4692;                    ; Offset: 4692
;       uint BindlessSampler_View_SkyBentNormalTextureSampler;; Offset: 4696
;       uint PrePadding_View_4700;                    ; Offset: 4700
;       uint BindlessSampler_View_DirectionalLightShadowingTextureSampler;; Offset: 4704
;       uint PrePadding_View_4708;                    ; Offset: 4708
;       uint BindlessResource_View_GlobalDistanceFieldPageAtlasTexture;; Offset: 4712
;       uint PrePadding_View_4716;                    ; Offset: 4716
;       uint BindlessResource_View_GlobalDistanceFieldCoverageAtlasTexture;; Offset: 4720
;       uint PrePadding_View_4724;                    ; Offset: 4724
;       uint BindlessResource_View_GlobalDistanceFieldPageTableTexture;; Offset: 4728
;       uint PrePadding_View_4732;                    ; Offset: 4732
;       uint BindlessResource_View_GlobalDistanceFieldMipTexture;; Offset: 4736
;       uint PrePadding_View_4740;                    ; Offset: 4740
;       uint BindlessResource_View_AtmosphereTransmittanceTexture;; Offset: 4744
;       uint PrePadding_View_4748;                    ; Offset: 4748
;       uint BindlessSampler_View_AtmosphereTransmittanceTextureSampler;; Offset: 4752
;       uint PrePadding_View_4756;                    ; Offset: 4756
;       uint BindlessResource_View_AtmosphereIrradianceTexture;; Offset: 4760
;       uint PrePadding_View_4764;                    ; Offset: 4764
;       uint BindlessSampler_View_AtmosphereIrradianceTextureSampler;; Offset: 4768
;       uint PrePadding_View_4772;                    ; Offset: 4772
;       uint BindlessResource_View_AtmosphereInscatterTexture;; Offset: 4776
;       uint PrePadding_View_4780;                    ; Offset: 4780
;       uint BindlessSampler_View_AtmosphereInscatterTextureSampler;; Offset: 4784
;       uint PrePadding_View_4788;                    ; Offset: 4788
;       uint BindlessResource_View_PerlinNoiseGradientTexture;; Offset: 4792
;       uint PrePadding_View_4796;                    ; Offset: 4796
;       uint BindlessSampler_View_PerlinNoiseGradientTextureSampler;; Offset: 4800
;       uint PrePadding_View_4804;                    ; Offset: 4804
;       uint BindlessResource_View_PerlinNoise3DTexture;; Offset: 4808
;       uint PrePadding_View_4812;                    ; Offset: 4812
;       uint BindlessSampler_View_PerlinNoise3DTextureSampler;; Offset: 4816
;       uint PrePadding_View_4820;                    ; Offset: 4820
;       uint BindlessResource_View_SobolSamplingTexture;; Offset: 4824
;       uint PrePadding_View_4828;                    ; Offset: 4828
;       uint BindlessSampler_View_SharedPointWrappedSampler;; Offset: 4832
;       uint PrePadding_View_4836;                    ; Offset: 4836
;       uint BindlessSampler_View_SharedPointClampedSampler;; Offset: 4840
;       uint PrePadding_View_4844;                    ; Offset: 4844
;       uint BindlessSampler_View_SharedBilinearWrappedSampler;; Offset: 4848
;       uint PrePadding_View_4852;                    ; Offset: 4852
;       uint BindlessSampler_View_SharedBilinearClampedSampler;; Offset: 4856
;       uint PrePadding_View_4860;                    ; Offset: 4860
;       uint BindlessSampler_View_SharedBilinearAnisoClampedSampler;; Offset: 4864
;       uint PrePadding_View_4868;                    ; Offset: 4868
;       uint BindlessSampler_View_SharedTrilinearWrappedSampler;; Offset: 4872
;       uint PrePadding_View_4876;                    ; Offset: 4876
;       uint BindlessSampler_View_SharedTrilinearClampedSampler;; Offset: 4880
;       uint PrePadding_View_4884;                    ; Offset: 4884
;       uint BindlessResource_View_PreIntegratedBRDF; ; Offset: 4888
;       uint PrePadding_View_4892;                    ; Offset: 4892
;       uint BindlessSampler_View_PreIntegratedBRDFSampler;; Offset: 4896
;       uint PrePadding_View_4900;                    ; Offset: 4900
;       uint BindlessResource_View_PrimitiveSceneData;; Offset: 4904
;       uint PrePadding_View_4908;                    ; Offset: 4908
;       uint BindlessResource_View_InstanceSceneData; ; Offset: 4912
;       uint PrePadding_View_4916;                    ; Offset: 4916
;       uint BindlessResource_View_InstancePayloadData;; Offset: 4920
;       uint PrePadding_View_4924;                    ; Offset: 4924
;       uint BindlessResource_View_LightmapSceneData; ; Offset: 4928
;       uint PrePadding_View_4932;                    ; Offset: 4932
;       uint BindlessResource_View_SkyIrradianceEnvironmentMap;; Offset: 4936
;       uint PrePadding_View_4940;                    ; Offset: 4940
;       uint BindlessResource_View_TransmittanceLutTexture;; Offset: 4944
;       uint PrePadding_View_4948;                    ; Offset: 4948
;       uint BindlessSampler_View_TransmittanceLutTextureSampler;; Offset: 4952
;       uint PrePadding_View_4956;                    ; Offset: 4956
;       uint BindlessResource_View_SkyViewLutTexture; ; Offset: 4960
;       uint PrePadding_View_4964;                    ; Offset: 4964
;       uint BindlessSampler_View_SkyViewLutTextureSampler;; Offset: 4968
;       uint PrePadding_View_4972;                    ; Offset: 4972
;       uint BindlessResource_View_DistantSkyLightLutTexture;; Offset: 4976
;       uint PrePadding_View_4980;                    ; Offset: 4980
;       uint BindlessSampler_View_DistantSkyLightLutTextureSampler;; Offset: 4984
;       uint PrePadding_View_4988;                    ; Offset: 4988
;       uint BindlessResource_View_CameraAerialPerspectiveVolume;; Offset: 4992
;       uint PrePadding_View_4996;                    ; Offset: 4996
;       uint BindlessSampler_View_CameraAerialPerspectiveVolumeSampler;; Offset: 5000
;       uint PrePadding_View_5004;                    ; Offset: 5004
;       uint BindlessResource_View_HairScatteringLUTTexture;; Offset: 5008
;       uint PrePadding_View_5012;                    ; Offset: 5012
;       uint BindlessSampler_View_HairScatteringLUTSampler;; Offset: 5016
;       uint PrePadding_View_5020;                    ; Offset: 5020
;       uint BindlessResource_View_LTCMatTexture;     ; Offset: 5024
;       uint PrePadding_View_5028;                    ; Offset: 5028
;       uint BindlessSampler_View_LTCMatSampler;      ; Offset: 5032
;       uint PrePadding_View_5036;                    ; Offset: 5036
;       uint BindlessResource_View_LTCAmpTexture;     ; Offset: 5040
;       uint PrePadding_View_5044;                    ; Offset: 5044
;       uint BindlessSampler_View_LTCAmpSampler;      ; Offset: 5048
;       uint PrePadding_View_5052;                    ; Offset: 5052
;       uint View_bShadingEnergyConservation;         ; Offset: 5056
;       uint View_bShadingEnergyPreservation;         ; Offset: 5060
;       uint BindlessResource_View_ShadingEnergyGGXSpecTexture;; Offset: 5064
;       uint PrePadding_View_5068;                    ; Offset: 5068
;       uint BindlessResource_View_ShadingEnergyGGXGlassTexture;; Offset: 5072
;       uint PrePadding_View_5076;                    ; Offset: 5076
;       uint BindlessResource_View_ShadingEnergyClothSpecTexture;; Offset: 5080
;       uint PrePadding_View_5084;                    ; Offset: 5084
;       uint BindlessResource_View_ShadingEnergyDiffuseTexture;; Offset: 5088
;       uint PrePadding_View_5092;                    ; Offset: 5092
;       uint BindlessSampler_View_ShadingEnergySampler;; Offset: 5096
;       uint PrePadding_View_5100;                    ; Offset: 5100
;       uint BindlessResource_View_SSProfilesTexture; ; Offset: 5104
;       uint PrePadding_View_5108;                    ; Offset: 5108
;       uint BindlessSampler_View_SSProfilesSampler;  ; Offset: 5112
;       uint PrePadding_View_5116;                    ; Offset: 5116
;       uint BindlessSampler_View_SSProfilesTransmissionSampler;; Offset: 5120
;       uint PrePadding_View_5124;                    ; Offset: 5124
;       uint BindlessResource_View_SSProfilesPreIntegratedTexture;; Offset: 5128
;       uint PrePadding_View_5132;                    ; Offset: 5132
;       uint BindlessSampler_View_SSProfilesPreIntegratedSampler;; Offset: 5136
;       uint PrePadding_View_5140;                    ; Offset: 5140
;       uint BindlessResource_View_WaterIndirection;  ; Offset: 5144
;       uint PrePadding_View_5148;                    ; Offset: 5148
;       uint BindlessResource_View_WaterData;         ; Offset: 5152
;       uint PrePadding_View_5156;                    ; Offset: 5156
;       uint PrePadding_View_5160;                    ; Offset: 5160
;       uint PrePadding_View_5164;                    ; Offset: 5164
;       float4 View_RectLightAtlasSizeAndInvSize;     ; Offset: 5168
;       float View_RectLightAtlasMaxMipLevel;         ; Offset: 5184
;       float PrePadding_View_5188;                   ; Offset: 5188
;       uint BindlessResource_View_RectLightAtlasTexture;; Offset: 5192
;       uint PrePadding_View_5196;                    ; Offset: 5196
;       uint BindlessSampler_View_RectLightAtlasSampler;; Offset: 5200
;       uint PrePadding_View_5204;                    ; Offset: 5204
;       uint BindlessSampler_View_LandscapeWeightmapSampler;; Offset: 5208
;       uint PrePadding_View_5212;                    ; Offset: 5212
;       uint BindlessResource_View_LandscapeIndirection;; Offset: 5216
;       uint PrePadding_View_5220;                    ; Offset: 5220
;       uint BindlessResource_View_LandscapePerComponentData;; Offset: 5224
;       uint PrePadding_View_5228;                    ; Offset: 5228
;       uint BindlessResource_View_VTFeedbackBuffer;  ; Offset: 5232
;       uint PrePadding_View_5236;                    ; Offset: 5236
;       uint BindlessResource_View_EditorVisualizeLevelInstanceIds;; Offset: 5240
;       uint PrePadding_View_5244;                    ; Offset: 5244
;       uint BindlessResource_View_EditorSelectedHitProxyIds;; Offset: 5248
;       uint PrePadding_View_5252;                    ; Offset: 5252
;       uint BindlessResource_View_PhysicsFieldClipmapBuffer;; Offset: 5256
;       uint PrePadding_View_5260;                    ; Offset: 5260
;       float3 View_TLASRelativePreViewTranslation;   ; Offset: 5264
;       float PrePadding_View_5276;                   ; Offset: 5276
;       float3 View_TLASViewTilePosition;             ; Offset: 5280
;   
;   } UniformBufferConstants_View;                    ; Offset:    0 Size:  5292
;
; }
;
; cbuffer UniformBufferConstants_LandscapeMVF
; {
;
;   struct UniformBufferConstants_LandscapeMVF
;   {
;
;       int2 LandscapeMVF_SubXY;                      ; Offset:    0
;   
;   } UniformBufferConstants_LandscapeMVF;            ; Offset:    0 Size:     8
;
; }
;
; cbuffer UniformBufferConstants_LandscapeContinuousLODParameters
; {
;
;   struct UniformBufferConstants_LandscapeContinuousLODParameters
;   {
;
;       int LandscapeContinuousLODParameters_LandscapeIndex;; Offset:    0
;       int PrePadding_LandscapeContinuousLODParameters_4;; Offset:    4
;       int2 LandscapeContinuousLODParameters_Min;    ; Offset:    8
;       int2 LandscapeContinuousLODParameters_Size;   ; Offset:   16
;       uint BindlessResource_LandscapeContinuousLODParameters_SectionLODBias;; Offset:   24
;   
;   } UniformBufferConstants_LandscapeContinuousLODParameters;; Offset:    0 Size:    28
;
; }
;
; cbuffer UniformBufferConstants_LandscapeParameters
; {
;
;   struct UniformBufferConstants_LandscapeParameters
;   {
;
;       int LandscapeParameters_ComponentBaseX;       ; Offset:    0
;       int LandscapeParameters_ComponentBaseY;       ; Offset:    4
;       int LandscapeParameters_SubsectionSizeVerts;  ; Offset:    8
;       int LandscapeParameters_NumSubsections;       ; Offset:   12
;       int LandscapeParameters_LastLOD;              ; Offset:   16
;       int PrePadding_LandscapeParameters_20;        ; Offset:   20
;       int PrePadding_LandscapeParameters_24;        ; Offset:   24
;       int PrePadding_LandscapeParameters_28;        ; Offset:   28
;       float4 LandscapeParameters_HeightmapUVScaleBias;; Offset:   32
;       float4 LandscapeParameters_WeightmapUVScaleBias;; Offset:   48
;       float4 LandscapeParameters_LandscapeLightmapScaleBias;; Offset:   64
;       float4 LandscapeParameters_SubsectionSizeVertsLayerUVPan;; Offset:   80
;       float4 LandscapeParameters_SubsectionOffsetParams;; Offset:   96
;       float4 LandscapeParameters_LightmapSubsectionOffsetParams;; Offset:  112
;       row_major float4x4 LandscapeParameters_LocalToWorldNoScaling;; Offset:  128
;       uint BindlessResource_LandscapeParameters_HeightmapTexture;; Offset:  192
;       uint PrePadding_LandscapeParameters_196;      ; Offset:  196
;       uint BindlessSampler_LandscapeParameters_HeightmapTextureSampler;; Offset:  200
;       uint PrePadding_LandscapeParameters_204;      ; Offset:  204
;       uint BindlessResource_LandscapeParameters_NormalmapTexture;; Offset:  208
;       uint PrePadding_LandscapeParameters_212;      ; Offset:  212
;       uint BindlessSampler_LandscapeParameters_NormalmapTextureSampler;; Offset:  216
;       uint PrePadding_LandscapeParameters_220;      ; Offset:  220
;       uint BindlessResource_LandscapeParameters_XYOffsetmapTexture;; Offset:  224
;       uint PrePadding_LandscapeParameters_228;      ; Offset:  228
;       uint BindlessSampler_LandscapeParameters_XYOffsetmapTextureSampler;; Offset:  232
;   
;   } UniformBufferConstants_LandscapeParameters;     ; Offset:    0 Size:   236
;
; }
;
; cbuffer UniformBufferConstants_Material
; {
;
;   struct UniformBufferConstants_Material
;   {
;
;       float4 Material_PreshaderBuffer[9];           ; Offset:    0
;       uint BindlessResource_Material_Texture2D_0;   ; Offset:  144
;       uint PrePadding_Material_148;                 ; Offset:  148
;       uint BindlessSampler_Material_Texture2D_0Sampler;; Offset:  152
;       uint PrePadding_Material_156;                 ; Offset:  156
;       uint BindlessResource_Material_Texture2D_1;   ; Offset:  160
;       uint PrePadding_Material_164;                 ; Offset:  164
;       uint BindlessSampler_Material_Texture2D_1Sampler;; Offset:  168
;       uint PrePadding_Material_172;                 ; Offset:  172
;       uint BindlessResource_Material_Texture2D_2;   ; Offset:  176
;       uint PrePadding_Material_180;                 ; Offset:  180
;       uint BindlessSampler_Material_Texture2D_2Sampler;; Offset:  184
;       uint PrePadding_Material_188;                 ; Offset:  188
;       uint BindlessResource_Material_Texture2D_3;   ; Offset:  192
;       uint PrePadding_Material_196;                 ; Offset:  196
;       uint BindlessSampler_Material_Texture2D_3Sampler;; Offset:  200
;       uint PrePadding_Material_204;                 ; Offset:  204
;       uint BindlessResource_Material_Texture2D_4;   ; Offset:  208
;       uint PrePadding_Material_212;                 ; Offset:  212
;       uint BindlessSampler_Material_Texture2D_4Sampler;; Offset:  216
;       uint PrePadding_Material_220;                 ; Offset:  220
;       uint BindlessResource_Material_Texture2D_5;   ; Offset:  224
;       uint PrePadding_Material_228;                 ; Offset:  228
;       uint BindlessSampler_Material_Texture2D_5Sampler;; Offset:  232
;       uint PrePadding_Material_236;                 ; Offset:  236
;       uint BindlessResource_Material_Texture2D_6;   ; Offset:  240
;       uint PrePadding_Material_244;                 ; Offset:  244
;       uint BindlessSampler_Material_Texture2D_6Sampler;; Offset:  248
;       uint PrePadding_Material_252;                 ; Offset:  252
;       uint BindlessResource_Material_Texture2D_7;   ; Offset:  256
;       uint PrePadding_Material_260;                 ; Offset:  260
;       uint BindlessSampler_Material_Texture2D_7Sampler;; Offset:  264
;       uint PrePadding_Material_268;                 ; Offset:  268
;       uint BindlessResource_Material_Texture2D_8;   ; Offset:  272
;       uint PrePadding_Material_276;                 ; Offset:  276
;       uint BindlessSampler_Material_Texture2D_8Sampler;; Offset:  280
;       uint PrePadding_Material_284;                 ; Offset:  284
;       uint BindlessResource_Material_Texture2D_9;   ; Offset:  288
;       uint PrePadding_Material_292;                 ; Offset:  292
;       uint BindlessSampler_Material_Texture2D_9Sampler;; Offset:  296
;       uint PrePadding_Material_300;                 ; Offset:  300
;       uint BindlessResource_Material_Texture2D_10;  ; Offset:  304
;       uint PrePadding_Material_308;                 ; Offset:  308
;       uint BindlessSampler_Material_Texture2D_10Sampler;; Offset:  312
;       uint PrePadding_Material_316;                 ; Offset:  316
;       uint BindlessResource_Material_Texture2D_11;  ; Offset:  320
;       uint PrePadding_Material_324;                 ; Offset:  324
;       uint BindlessSampler_Material_Texture2D_11Sampler;; Offset:  328
;       uint PrePadding_Material_332;                 ; Offset:  332
;       uint BindlessResource_Material_Texture2D_12;  ; Offset:  336
;       uint PrePadding_Material_340;                 ; Offset:  340
;       uint BindlessSampler_Material_Texture2D_12Sampler;; Offset:  344
;       uint PrePadding_Material_348;                 ; Offset:  348
;       uint BindlessResource_Material_Texture2D_13;  ; Offset:  352
;       uint PrePadding_Material_356;                 ; Offset:  356
;       uint BindlessSampler_Material_Texture2D_13Sampler;; Offset:  360
;       uint PrePadding_Material_364;                 ; Offset:  364
;       uint BindlessResource_Material_Texture2D_14;  ; Offset:  368
;       uint PrePadding_Material_372;                 ; Offset:  372
;       uint BindlessSampler_Material_Texture2D_14Sampler;; Offset:  376
;       uint PrePadding_Material_380;                 ; Offset:  380
;       uint BindlessResource_Material_Texture2D_15;  ; Offset:  384
;       uint PrePadding_Material_388;                 ; Offset:  388
;       uint BindlessSampler_Material_Texture2D_15Sampler;; Offset:  392
;       uint PrePadding_Material_396;                 ; Offset:  396
;       uint BindlessResource_Material_Texture2D_16;  ; Offset:  400
;       uint PrePadding_Material_404;                 ; Offset:  404
;       uint BindlessSampler_Material_Texture2D_16Sampler;; Offset:  408
;       uint PrePadding_Material_412;                 ; Offset:  412
;       uint BindlessSampler_Material_Wrap_WorldGroupSettings;; Offset:  416
;       uint PrePadding_Material_420;                 ; Offset:  420
;       uint BindlessSampler_Material_Clamp_WorldGroupSettings;; Offset:  424
;   
;   } UniformBufferConstants_Material;                ; Offset:    0 Size:   428
;
; }
;
; cbuffer HitGroupSystemRootConstants
; {
;
;   struct HitGroupSystemRootConstants
;   {
;
;       struct struct.FHitGroupSystemRootConstants
;       {
;
;           uint Config;                              ; Offset:    0
;           uint IndexBufferOffsetInBytes;            ; Offset:    4
;           uint FirstPrimitive;                      ; Offset:    8
;           uint UserData;                            ; Offset:   12
;           uint BaseInstanceIndex;                   ; Offset:   16
;           uint Pad0;                                ; Offset:   20
;       
;       } HitGroupSystemRootConstants;                ; Offset:    0
;
;   
;   } HitGroupSystemRootConstants;                    ; Offset:    0 Size:    24
;
; }
;
; Resource bind info for View_PrimitiveSceneData
; {
;
;   float4 $Element;                                  ; Offset:    0 Size:    16
;
; }
;
; Resource bind info for View_InstanceSceneData
; {
;
;   float4 $Element;                                  ; Offset:    0 Size:    16
;
; }
;
;
; Resource Bindings:
;
; Name                                 Type  Format         Dim      ID      HLSL Bind  Count
; ------------------------------ ---------- ------- ----------- ------- -------------- ------
; UniformBufferConstants_View       cbuffer      NA          NA     CB0            cb0     1
; UniformBufferConstants_LandscapeMVF   cbuffer      NA          NA     CB1            cb1     1
; UniformBufferConstants_LandscapeContinuousLODParameters   cbuffer      NA          NA     CB2            cb2     1
; UniformBufferConstants_LandscapeParameters   cbuffer      NA          NA     CB3            cb3     1
; UniformBufferConstants_Material   cbuffer      NA          NA     CB4            cb4     1
; HitGroupSystemRootConstants       cbuffer      NA          NA     CB5     cb0,space2     1
; View_LandscapeWeightmapSampler    sampler      NA          NA      S0             s0     1
; LandscapeParameters_HeightmapTextureSampler   sampler      NA          NA      S1             s1     1
; LandscapeParameters_NormalmapTextureSampler   sampler      NA          NA      S2             s2     1
; LandscapeParameters_XYOffsetmapTextureSampler   sampler      NA          NA      S3             s3     1
; Material_Texture2D_2Sampler       sampler      NA          NA      S4             s4     1
; Material_Texture2D_3Sampler       sampler      NA          NA      S5             s5     1
; Material_Texture2D_4Sampler       sampler      NA          NA      S6             s6     1
; Material_Texture2D_5Sampler       sampler      NA          NA      S7             s7     1
; Material_Texture2D_6Sampler       sampler      NA          NA      S8             s8     1
; Material_Texture2D_7Sampler       sampler      NA          NA      S9             s9     1
; Material_Texture2D_8Sampler       sampler      NA          NA     S10            s10     1
; Material_Texture2D_9Sampler       sampler      NA          NA     S11            s11     1
; Material_Texture2D_10Sampler      sampler      NA          NA     S12            s12     1
; Material_Texture2D_11Sampler      sampler      NA          NA     S13            s13     1
; Material_Texture2D_12Sampler      sampler      NA          NA     S14            s14     1
; Material_Texture2D_13Sampler      sampler      NA          NA     S15            s15     1
; Material_Texture2D_14Sampler      sampler      NA          NA     S16            s16     1
; Material_Texture2D_15Sampler      sampler      NA          NA     S17            s17     1
; Material_Texture2D_16Sampler      sampler      NA          NA     S18            s18     1
; View_PrimitiveSceneData           texture  struct         r/o      T0             t0     1
; View_InstanceSceneData            texture  struct         r/o      T1             t1     1
; View_LandscapeIndirection         texture     u32         buf      T2             t2     1
; View_LandscapePerComponentData    texture     f32         buf      T3             t3     1
; LandscapeContinuousLODParameters_SectionLODBias   texture     f32         buf      T4             t4     1
; LandscapeParameters_HeightmapTexture   texture     f32          2d      T5             t5     1
; LandscapeParameters_NormalmapTexture   texture     f32          2d      T6             t6     1
; LandscapeParameters_XYOffsetmapTexture   texture     f32          2d      T7             t7     1
; Material_Texture2D_0              texture     f32          2d      T8             t8     1
; Material_Texture2D_1              texture     f32          2d      T9             t9     1
; Material_Texture2D_2              texture     f32          2d     T10            t10     1
; Material_Texture2D_3              texture     f32          2d     T11            t11     1
; Material_Texture2D_4              texture     f32          2d     T12            t12     1
; Material_Texture2D_5              texture     f32          2d     T13            t13     1
; Material_Texture2D_6              texture     f32          2d     T14            t14     1
; Material_Texture2D_7              texture     f32          2d     T15            t15     1
; Material_Texture2D_8              texture     f32          2d     T16            t16     1
; Material_Texture2D_9              texture     f32          2d     T17            t17     1
; Material_Texture2D_10             texture     f32          2d     T18            t18     1
; Material_Texture2D_11             texture     f32          2d     T19            t19     1
; Material_Texture2D_12             texture     f32          2d     T20            t20     1
; Material_Texture2D_13             texture     f32          2d     T21            t21     1
; Material_Texture2D_14             texture     f32          2d     T22            t22     1
; Material_Texture2D_15             texture     f32          2d     T23            t23     1
; Material_Texture2D_16             texture     f32          2d     T24            t24     1
; HitGroupSystemIndexBuffer         texture    byte         r/o     T25      t0,space2     1
;
target datalayout = "e-m:e-p:32:32-i1:32-i8:8-i16:16-i32:32-i64:64-f16:16-f32:32-f64:64-n8:16:32:64"
target triple = "dxil-ms-dx"

%dx.types.Handle = type { i8* }
%struct.FPackedPathTracingPayload = type { %struct.FMinimalPayload, i32, [14 x i32] }
%struct.FMinimalPayload = type { float }
%struct.FRayTracingIntersectionAttributes = type { <2 x i32> }
%dx.types.ResourceProperties = type { i32, i32 }
%dx.types.CBufRet.f32 = type { float, float, float, float }
%dx.types.CBufRet.i32 = type { i32, i32, i32, i32 }
%dx.types.ResRet.i32 = type { i32, i32, i32, i32, i32 }
%dx.types.ResRet.f32 = type { float, float, float, float, i32 }
%"class.StructuredBuffer<vector<float, 4> >" = type { <4 x float> }
%"class.Buffer<unsigned int>" = type { i32 }
%"class.Buffer<float>" = type { float }
%"class.Texture2D<vector<float, 4> >" = type { <4 x float>, %"class.Texture2D<vector<float, 4> >::mips_type" }
%"class.Texture2D<vector<float, 4> >::mips_type" = type { i32 }
%struct.ByteAddressBuffer = type { i32 }
%UniformBufferConstants_View = type { %class.matrix.float.4.4, %class.matrix.float.4.4, %class.matrix.float.4.4, %class.matrix.float.4.4, %class.matrix.float.4.4, %class.matrix.float.4.4, %class.matrix.float.4.4, %class.matrix.float.4.4, %class.matrix.float.4.4, %class.matrix.float.4.4, %class.matrix.float.4.4, %class.matrix.float.4.4, %class.matrix.float.4.4, %class.matrix.float.4.4, %class.matrix.float.4.4, %class.matrix.float.4.4, <3 x float>, float, <3 x float>, float, <3 x float>, float, <3 x float>, float, <3 x float>, float, <3 x float>, float, <3 x float>, float, <4 x float>, <4 x float>, <3 x float>, float, <3 x float>, float, <3 x float>, float, <3 x float>, float, %class.matrix.float.4.4, %class.matrix.float.4.4, %class.matrix.float.4.4, %class.matrix.float.4.4, %class.matrix.float.4.4, %class.matrix.float.4.4, %class.matrix.float.4.4, <3 x float>, float, <3 x float>, float, <3 x float>, float, <3 x float>, float, %class.matrix.float.4.4, %class.matrix.float.4.4, %class.matrix.float.4.4, %class.matrix.float.4.4, <4 x float>, <4 x float>, <2 x float>, <2 x float>, <4 x float>, <4 x float>, <4 x i32>, <4 x float>, <4 x float>, <4 x float>, <4 x float>, <2 x float>, <2 x float>, i32, float, float, float, <4 x float>, <4 x float>, <4 x float>, <2 x float>, float, float, float, float, float, float, <3 x float>, float, float, float, float, float, float, float, i32, i32, i32, i32, i32, float, float, float, float, float, <4 x float>, <3 x float>, float, [2 x <4 x float>], [2 x <4 x float>], <4 x float>, <4 x float>, float, float, float, float, float, float, float, float, float, float, float, float, <3 x float>, float, <3 x float>, float, <3 x float>, float, [2 x <4 x float>], [2 x <4 x float>], [2 x <4 x float>], [2 x <4 x float>], [2 x <4 x float>], <4 x float>, <3 x float>, float, <4 x float>, %class.matrix.float.4.4, <4 x float>, float, float, float, float, <4 x float>, float, float, float, float, float, float, float, float, <3 x float>, float, float, float, float, float, <4 x float>, float, float, float, float, <4 x float>, [8 x <4 x float>], float, float, float, float, i32, float, float, float, <3 x float>, i32, [6 x <4 x float>], [6 x <4 x float>], [6 x <4 x float>], [6 x <4 x float>], float, float, i32, i32, <3 x float>, float, <3 x float>, float, float, float, i32, float, float, float, float, float, <2 x i32>, float, float, <3 x float>, float, <3 x float>, float, <2 x float>, float, float, <3 x float>, float, <3 x float>, float, <3 x float>, float, <3 x float>, float, float, float, float, float, [2 x <4 x float>], float, i32, i32, i32, i32, i32, i32, i32, <4 x float>, <2 x float>, float, float, <4 x float>, float, i32, float, float, <4 x float>, i32, i32, i32, float, <4 x float>, <4 x float>, <3 x float>, float, i32, i32, i32, i32, [32 x <4 x i32>], i32, i32, float, float, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, <4 x float>, float, float, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, <3 x float>, float, <3 x float> }
%class.matrix.float.4.4 = type { [4 x <4 x float>] }
%UniformBufferConstants_LandscapeMVF = type { <2 x i32> }
%UniformBufferConstants_LandscapeContinuousLODParameters = type { i32, i32, <2 x i32>, <2 x i32>, i32 }
%UniformBufferConstants_LandscapeParameters = type { i32, i32, i32, i32, i32, i32, i32, i32, <4 x float>, <4 x float>, <4 x float>, <4 x float>, <4 x float>, <4 x float>, %class.matrix.float.4.4, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%UniformBufferConstants_Material = type { [9 x <4 x float>], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%HitGroupSystemRootConstants = type { %struct.FHitGroupSystemRootConstants }
%struct.FHitGroupSystemRootConstants = type { i32, i32, i32, i32, i32, i32 }
%struct.SamplerState = type { i32 }

@"\01?View_PrimitiveSceneData@@3V?$StructuredBuffer@V?$vector@M$03@@@@A" = external constant %dx.types.Handle, align 4
@"\01?View_InstanceSceneData@@3V?$StructuredBuffer@V?$vector@M$03@@@@A" = external constant %dx.types.Handle, align 4
@"\01?View_LandscapeWeightmapSampler@@3USamplerState@@A" = external constant %dx.types.Handle, align 4
@"\01?View_LandscapeIndirection@@3V?$Buffer@I@@A" = external constant %dx.types.Handle, align 4
@"\01?View_LandscapePerComponentData@@3V?$Buffer@M@@A" = external constant %dx.types.Handle, align 4
@"\01?LandscapeContinuousLODParameters_SectionLODBias@@3V?$Buffer@M@@A" = external constant %dx.types.Handle, align 4
@"\01?LandscapeParameters_HeightmapTexture@@3V?$Texture2D@V?$vector@M$03@@@@A" = external constant %dx.types.Handle, align 4
@"\01?LandscapeParameters_HeightmapTextureSampler@@3USamplerState@@A" = external constant %dx.types.Handle, align 4
@"\01?LandscapeParameters_NormalmapTexture@@3V?$Texture2D@V?$vector@M$03@@@@A" = external constant %dx.types.Handle, align 4
@"\01?LandscapeParameters_NormalmapTextureSampler@@3USamplerState@@A" = external constant %dx.types.Handle, align 4
@"\01?LandscapeParameters_XYOffsetmapTexture@@3V?$Texture2D@V?$vector@M$03@@@@A" = external constant %dx.types.Handle, align 4
@"\01?LandscapeParameters_XYOffsetmapTextureSampler@@3USamplerState@@A" = external constant %dx.types.Handle, align 4
@"\01?Material_Texture2D_0@@3V?$Texture2D@V?$vector@M$03@@@@A" = external constant %dx.types.Handle, align 4
@"\01?Material_Texture2D_1@@3V?$Texture2D@V?$vector@M$03@@@@A" = external constant %dx.types.Handle, align 4
@"\01?Material_Texture2D_2@@3V?$Texture2D@V?$vector@M$03@@@@A" = external constant %dx.types.Handle, align 4
@"\01?Material_Texture2D_2Sampler@@3USamplerState@@A" = external constant %dx.types.Handle, align 4
@"\01?Material_Texture2D_3@@3V?$Texture2D@V?$vector@M$03@@@@A" = external constant %dx.types.Handle, align 4
@"\01?Material_Texture2D_3Sampler@@3USamplerState@@A" = external constant %dx.types.Handle, align 4
@"\01?Material_Texture2D_4@@3V?$Texture2D@V?$vector@M$03@@@@A" = external constant %dx.types.Handle, align 4
@"\01?Material_Texture2D_4Sampler@@3USamplerState@@A" = external constant %dx.types.Handle, align 4
@"\01?Material_Texture2D_5@@3V?$Texture2D@V?$vector@M$03@@@@A" = external constant %dx.types.Handle, align 4
@"\01?Material_Texture2D_5Sampler@@3USamplerState@@A" = external constant %dx.types.Handle, align 4
@"\01?Material_Texture2D_6@@3V?$Texture2D@V?$vector@M$03@@@@A" = external constant %dx.types.Handle, align 4
@"\01?Material_Texture2D_6Sampler@@3USamplerState@@A" = external constant %dx.types.Handle, align 4
@"\01?Material_Texture2D_7@@3V?$Texture2D@V?$vector@M$03@@@@A" = external constant %dx.types.Handle, align 4
@"\01?Material_Texture2D_7Sampler@@3USamplerState@@A" = external constant %dx.types.Handle, align 4
@"\01?Material_Texture2D_8@@3V?$Texture2D@V?$vector@M$03@@@@A" = external constant %dx.types.Handle, align 4
@"\01?Material_Texture2D_8Sampler@@3USamplerState@@A" = external constant %dx.types.Handle, align 4
@"\01?Material_Texture2D_9@@3V?$Texture2D@V?$vector@M$03@@@@A" = external constant %dx.types.Handle, align 4
@"\01?Material_Texture2D_9Sampler@@3USamplerState@@A" = external constant %dx.types.Handle, align 4
@"\01?Material_Texture2D_10@@3V?$Texture2D@V?$vector@M$03@@@@A" = external constant %dx.types.Handle, align 4
@"\01?Material_Texture2D_10Sampler@@3USamplerState@@A" = external constant %dx.types.Handle, align 4
@"\01?Material_Texture2D_11@@3V?$Texture2D@V?$vector@M$03@@@@A" = external constant %dx.types.Handle, align 4
@"\01?Material_Texture2D_11Sampler@@3USamplerState@@A" = external constant %dx.types.Handle, align 4
@"\01?Material_Texture2D_12@@3V?$Texture2D@V?$vector@M$03@@@@A" = external constant %dx.types.Handle, align 4
@"\01?Material_Texture2D_12Sampler@@3USamplerState@@A" = external constant %dx.types.Handle, align 4
@"\01?Material_Texture2D_13@@3V?$Texture2D@V?$vector@M$03@@@@A" = external constant %dx.types.Handle, align 4
@"\01?Material_Texture2D_13Sampler@@3USamplerState@@A" = external constant %dx.types.Handle, align 4
@"\01?Material_Texture2D_14@@3V?$Texture2D@V?$vector@M$03@@@@A" = external constant %dx.types.Handle, align 4
@"\01?Material_Texture2D_14Sampler@@3USamplerState@@A" = external constant %dx.types.Handle, align 4
@"\01?Material_Texture2D_15@@3V?$Texture2D@V?$vector@M$03@@@@A" = external constant %dx.types.Handle, align 4
@"\01?Material_Texture2D_15Sampler@@3USamplerState@@A" = external constant %dx.types.Handle, align 4
@"\01?Material_Texture2D_16@@3V?$Texture2D@V?$vector@M$03@@@@A" = external constant %dx.types.Handle, align 4
@"\01?Material_Texture2D_16Sampler@@3USamplerState@@A" = external constant %dx.types.Handle, align 4
@"\01?HitGroupSystemIndexBuffer@@3UByteAddressBuffer@@A" = external constant %dx.types.Handle, align 4
@llvm.global_ctors = appending global [0 x { i32, void ()*, i8* }] zeroinitializer
@UniformBufferConstants_View = external constant %dx.types.Handle
@UniformBufferConstants_LandscapeMVF = external constant %dx.types.Handle
@UniformBufferConstants_LandscapeContinuousLODParameters = external constant %dx.types.Handle
@UniformBufferConstants_LandscapeParameters = external constant %dx.types.Handle
@UniformBufferConstants_Material = external constant %dx.types.Handle
@HitGroupSystemRootConstants = external constant %dx.types.Handle
@NeighborOffset.i.i.i.4.i.0.hca = internal unnamed_addr constant [4 x i32] [i32 0, i32 -1, i32 1, i32 0]
@NeighborOffset.i.i.i.4.i.1.hca = internal unnamed_addr constant [4 x i32] [i32 -1, i32 0, i32 0, i32 1]

; Function Attrs: nounwind
declare void @llvm.lifetime.start(i64, i8* nocapture) #0

; Function Attrs: nounwind
declare void @llvm.lifetime.end(i64, i8* nocapture) #0

; Function Attrs: nounwind
define void @"\01?PathTracingMaterialCHS@@YAXUFPackedPathTracingPayload@@UFRayTracingIntersectionAttributes@@@Z"(%struct.FPackedPathTracingPayload* noalias nocapture %PackedPayload, %struct.FRayTracingIntersectionAttributes* nocapture readonly %Attributes) #0 {
  %1 = load %dx.types.Handle, %dx.types.Handle* @"\01?Material_Texture2D_16Sampler@@3USamplerState@@A", align 4, !noalias !66
  %2 = load %dx.types.Handle, %dx.types.Handle* @"\01?Material_Texture2D_15Sampler@@3USamplerState@@A", align 4, !noalias !66
  %3 = load %dx.types.Handle, %dx.types.Handle* @"\01?Material_Texture2D_14Sampler@@3USamplerState@@A", align 4, !noalias !66
  %4 = load %dx.types.Handle, %dx.types.Handle* @"\01?Material_Texture2D_13Sampler@@3USamplerState@@A", align 4, !noalias !66
  %5 = load %dx.types.Handle, %dx.types.Handle* @"\01?Material_Texture2D_12Sampler@@3USamplerState@@A", align 4, !noalias !66
  %6 = load %dx.types.Handle, %dx.types.Handle* @"\01?Material_Texture2D_11Sampler@@3USamplerState@@A", align 4, !noalias !66
  %7 = load %dx.types.Handle, %dx.types.Handle* @"\01?Material_Texture2D_10Sampler@@3USamplerState@@A", align 4, !noalias !66
  %8 = load %dx.types.Handle, %dx.types.Handle* @"\01?Material_Texture2D_9Sampler@@3USamplerState@@A", align 4, !noalias !66
  %9 = load %dx.types.Handle, %dx.types.Handle* @"\01?Material_Texture2D_8Sampler@@3USamplerState@@A", align 4, !noalias !66
  %10 = load %dx.types.Handle, %dx.types.Handle* @"\01?Material_Texture2D_7Sampler@@3USamplerState@@A", align 4, !noalias !66
  %11 = load %dx.types.Handle, %dx.types.Handle* @"\01?Material_Texture2D_6Sampler@@3USamplerState@@A", align 4, !noalias !71
  %12 = load %dx.types.Handle, %dx.types.Handle* @"\01?Material_Texture2D_5Sampler@@3USamplerState@@A", align 4, !noalias !71
  %13 = load %dx.types.Handle, %dx.types.Handle* @"\01?Material_Texture2D_4Sampler@@3USamplerState@@A", align 4, !noalias !71
  %14 = load %dx.types.Handle, %dx.types.Handle* @"\01?Material_Texture2D_3Sampler@@3USamplerState@@A", align 4, !noalias !71
  %15 = load %dx.types.Handle, %dx.types.Handle* @"\01?Material_Texture2D_2Sampler@@3USamplerState@@A", align 4, !noalias !71
  %16 = load %dx.types.Handle, %dx.types.Handle* @"\01?LandscapeParameters_XYOffsetmapTextureSampler@@3USamplerState@@A", align 4, !noalias !73
  %17 = load %dx.types.Handle, %dx.types.Handle* @"\01?LandscapeParameters_NormalmapTextureSampler@@3USamplerState@@A", align 4
  %18 = load %dx.types.Handle, %dx.types.Handle* @"\01?LandscapeParameters_HeightmapTextureSampler@@3USamplerState@@A", align 4, !noalias !73
  %19 = load %dx.types.Handle, %dx.types.Handle* @"\01?View_LandscapeWeightmapSampler@@3USamplerState@@A", align 4, !noalias !79
  %20 = load %dx.types.Handle, %dx.types.Handle* @"\01?HitGroupSystemIndexBuffer@@3UByteAddressBuffer@@A", align 4, !noalias !82
  %21 = load %dx.types.Handle, %dx.types.Handle* @"\01?Material_Texture2D_16@@3V?$Texture2D@V?$vector@M$03@@@@A", align 4, !noalias !66
  %22 = load %dx.types.Handle, %dx.types.Handle* @"\01?Material_Texture2D_15@@3V?$Texture2D@V?$vector@M$03@@@@A", align 4, !noalias !66
  %23 = load %dx.types.Handle, %dx.types.Handle* @"\01?Material_Texture2D_14@@3V?$Texture2D@V?$vector@M$03@@@@A", align 4, !noalias !66
  %24 = load %dx.types.Handle, %dx.types.Handle* @"\01?Material_Texture2D_13@@3V?$Texture2D@V?$vector@M$03@@@@A", align 4, !noalias !66
  %25 = load %dx.types.Handle, %dx.types.Handle* @"\01?Material_Texture2D_12@@3V?$Texture2D@V?$vector@M$03@@@@A", align 4, !noalias !66
  %26 = load %dx.types.Handle, %dx.types.Handle* @"\01?Material_Texture2D_11@@3V?$Texture2D@V?$vector@M$03@@@@A", align 4, !noalias !66
  %27 = load %dx.types.Handle, %dx.types.Handle* @"\01?Material_Texture2D_10@@3V?$Texture2D@V?$vector@M$03@@@@A", align 4, !noalias !66
  %28 = load %dx.types.Handle, %dx.types.Handle* @"\01?Material_Texture2D_9@@3V?$Texture2D@V?$vector@M$03@@@@A", align 4, !noalias !66
  %29 = load %dx.types.Handle, %dx.types.Handle* @"\01?Material_Texture2D_8@@3V?$Texture2D@V?$vector@M$03@@@@A", align 4, !noalias !66
  %30 = load %dx.types.Handle, %dx.types.Handle* @"\01?Material_Texture2D_7@@3V?$Texture2D@V?$vector@M$03@@@@A", align 4, !noalias !66
  %31 = load %dx.types.Handle, %dx.types.Handle* @"\01?Material_Texture2D_6@@3V?$Texture2D@V?$vector@M$03@@@@A", align 4, !noalias !71
  %32 = load %dx.types.Handle, %dx.types.Handle* @"\01?Material_Texture2D_5@@3V?$Texture2D@V?$vector@M$03@@@@A", align 4, !noalias !71
  %33 = load %dx.types.Handle, %dx.types.Handle* @"\01?Material_Texture2D_4@@3V?$Texture2D@V?$vector@M$03@@@@A", align 4, !noalias !71
  %34 = load %dx.types.Handle, %dx.types.Handle* @"\01?Material_Texture2D_3@@3V?$Texture2D@V?$vector@M$03@@@@A", align 4, !noalias !71
  %35 = load %dx.types.Handle, %dx.types.Handle* @"\01?Material_Texture2D_2@@3V?$Texture2D@V?$vector@M$03@@@@A", align 4, !noalias !71
  %36 = load %dx.types.Handle, %dx.types.Handle* @"\01?Material_Texture2D_1@@3V?$Texture2D@V?$vector@M$03@@@@A", align 4, !noalias !71
  %37 = load %dx.types.Handle, %dx.types.Handle* @"\01?Material_Texture2D_0@@3V?$Texture2D@V?$vector@M$03@@@@A", align 4, !noalias !71
  %38 = load %dx.types.Handle, %dx.types.Handle* @"\01?LandscapeParameters_XYOffsetmapTexture@@3V?$Texture2D@V?$vector@M$03@@@@A", align 4, !noalias !73
  %39 = load %dx.types.Handle, %dx.types.Handle* @"\01?LandscapeParameters_NormalmapTexture@@3V?$Texture2D@V?$vector@M$03@@@@A", align 4
  %40 = load %dx.types.Handle, %dx.types.Handle* @"\01?LandscapeParameters_HeightmapTexture@@3V?$Texture2D@V?$vector@M$03@@@@A", align 4, !noalias !73
  %41 = load %dx.types.Handle, %dx.types.Handle* @"\01?LandscapeContinuousLODParameters_SectionLODBias@@3V?$Buffer@M@@A", align 4, !noalias !73
  %42 = load %dx.types.Handle, %dx.types.Handle* @"\01?View_LandscapePerComponentData@@3V?$Buffer@M@@A", align 4, !noalias !73
  %43 = load %dx.types.Handle, %dx.types.Handle* @"\01?View_LandscapeIndirection@@3V?$Buffer@I@@A", align 4, !noalias !73
  %44 = load %dx.types.Handle, %dx.types.Handle* @"\01?View_InstanceSceneData@@3V?$StructuredBuffer@V?$vector@M$03@@@@A", align 4, !noalias !89
  %45 = load %dx.types.Handle, %dx.types.Handle* @"\01?View_PrimitiveSceneData@@3V?$StructuredBuffer@V?$vector@M$03@@@@A", align 4
  %46 = load %dx.types.Handle, %dx.types.Handle* @HitGroupSystemRootConstants, align 4
  %47 = load %dx.types.Handle, %dx.types.Handle* @UniformBufferConstants_Material, align 4
  %48 = load %dx.types.Handle, %dx.types.Handle* @UniformBufferConstants_LandscapeParameters, align 4
  %49 = load %dx.types.Handle, %dx.types.Handle* @UniformBufferConstants_LandscapeContinuousLODParameters, align 4
  %50 = load %dx.types.Handle, %dx.types.Handle* @UniformBufferConstants_LandscapeMVF, align 4
  %51 = load %dx.types.Handle, %dx.types.Handle* @UniformBufferConstants_View, align 4
  %52 = alloca [3 x float], align 4
  %53 = alloca [3 x float], align 4
  %54 = alloca [3 x float], align 4
  %55 = alloca [3 x i32], align 4
  %56 = alloca [4 x float], align 4
  %57 = alloca [3 x float], align 4
  %58 = call %dx.types.Handle @dx.op.createHandleForLib.dx.types.Handle(i32 160, %dx.types.Handle %46)  ; CreateHandleForLib(Resource)
  %59 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %58, %dx.types.ResourceProperties { i32 13, i32 24 })  ; AnnotateHandle(res,props)  resource: CBuffer
  %60 = call %dx.types.Handle @dx.op.createHandleForLib.dx.types.Handle(i32 160, %dx.types.Handle %47)  ; CreateHandleForLib(Resource)
  %61 = call %dx.types.Handle @dx.op.createHandleForLib.dx.types.Handle(i32 160, %dx.types.Handle %48)  ; CreateHandleForLib(Resource)
  %62 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %61, %dx.types.ResourceProperties { i32 13, i32 236 })  ; AnnotateHandle(res,props)  resource: CBuffer
  %63 = call %dx.types.Handle @dx.op.createHandleForLib.dx.types.Handle(i32 160, %dx.types.Handle %49)  ; CreateHandleForLib(Resource)
  %64 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %63, %dx.types.ResourceProperties { i32 13, i32 28 })  ; AnnotateHandle(res,props)  resource: CBuffer
  %65 = call %dx.types.Handle @dx.op.createHandleForLib.dx.types.Handle(i32 160, %dx.types.Handle %50)  ; CreateHandleForLib(Resource)
  %66 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %65, %dx.types.ResourceProperties { i32 13, i32 8 })  ; AnnotateHandle(res,props)  resource: CBuffer
  %67 = call %dx.types.Handle @dx.op.createHandleForLib.dx.types.Handle(i32 160, %dx.types.Handle %51)  ; CreateHandleForLib(Resource)
  %68 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %67, %dx.types.ResourceProperties { i32 13, i32 5292 })  ; AnnotateHandle(res,props)  resource: CBuffer
  %69 = call float @dx.op.rayTCurrent.f32(i32 154)  ; RayTCurrent()
  %70 = getelementptr inbounds %struct.FPackedPathTracingPayload, %struct.FPackedPathTracingPayload* %PackedPayload, i32 0, i32 0, i32 0
  store float %69, float* %70, align 4, !tbaa !94
  %71 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %68, i32 64)  ; CBufferLoadLegacy(handle,regIndex)
  %72 = extractvalue %dx.types.CBufRet.f32 %71, 0
  %73 = extractvalue %dx.types.CBufRet.f32 %71, 1
  %74 = extractvalue %dx.types.CBufRet.f32 %71, 2
  %75 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %68, i32 76)  ; CBufferLoadLegacy(handle,regIndex)
  %76 = extractvalue %dx.types.CBufRet.f32 %75, 0
  %77 = extractvalue %dx.types.CBufRet.f32 %75, 1
  %78 = extractvalue %dx.types.CBufRet.f32 %75, 2
  %79 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %68, i32 139)  ; CBufferLoadLegacy(handle,regIndex)
  %80 = extractvalue %dx.types.CBufRet.f32 %79, 0
  %81 = extractvalue %dx.types.CBufRet.f32 %79, 2
  %82 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %68, i32 140)  ; CBufferLoadLegacy(handle,regIndex)
  %83 = extractvalue %dx.types.CBufRet.f32 %82, 0
  %84 = getelementptr inbounds %struct.FRayTracingIntersectionAttributes, %struct.FRayTracingIntersectionAttributes* %Attributes, i32 0, i32 0
  %85 = load <2 x i32>, <2 x i32>* %84, align 4
  %86 = extractelement <2 x i32> %85, i32 0
  %87 = extractelement <2 x i32> %85, i32 1
  %88 = bitcast [3 x float]* %52 to i8*
  call void @llvm.lifetime.start(i64 12, i8* %88) #0
  %89 = bitcast [3 x float]* %53 to i8*
  call void @llvm.lifetime.start(i64 12, i8* %89) #0
  %90 = bitcast [3 x float]* %54 to i8*
  call void @llvm.lifetime.start(i64 12, i8* %90) #0
  %91 = bitcast i32 %86 to float
  %92 = bitcast i32 %87 to float
  %93 = bitcast [3 x float]* %57 to i8*
  call void @llvm.lifetime.start(i64 12, i8* %93) #0, !noalias !98
  %94 = fsub fast float 1.000000e+00, %91
  %95 = fsub fast float %94, %92
  %96 = getelementptr inbounds [3 x float], [3 x float]* %57, i32 0, i32 0
  store float %95, float* %96, align 4
  %97 = getelementptr inbounds [3 x float], [3 x float]* %57, i32 0, i32 1
  %98 = bitcast float* %97 to i32*
  store i32 %86, i32* %98, align 4
  %99 = getelementptr inbounds [3 x float], [3 x float]* %57, i32 0, i32 2
  %100 = bitcast float* %99 to i32*
  store i32 %87, i32* %100, align 4
  br label %101

; <label>:101                                     ; preds = %446, %0
  %102 = phi float [ 0.000000e+00, %0 ], [ %692, %446 ]
  %103 = phi float [ 0.000000e+00, %0 ], [ %693, %446 ]
  %104 = phi float [ 0.000000e+00, %0 ], [ %694, %446 ]
  %105 = phi float [ 0.000000e+00, %0 ], [ %695, %446 ]
  %106 = phi float [ 0.000000e+00, %0 ], [ %686, %446 ]
  %107 = phi float [ 0.000000e+00, %0 ], [ %687, %446 ]
  %108 = phi i32 [ 0, %0 ], [ %699, %446 ]
  %109 = call i32 @dx.op.primitiveIndex.i32(i32 161)  ; PrimitiveIndex()
  %110 = call %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32 59, %dx.types.Handle %62, i32 0)  ; CBufferLoadLegacy(handle,regIndex)
  %111 = extractvalue %dx.types.CBufRet.i32 %110, 1
  %112 = call %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32 59, %dx.types.Handle %64, i32 0)  ; CBufferLoadLegacy(handle,regIndex)
  %113 = extractvalue %dx.types.CBufRet.i32 %112, 3
  %114 = sub nsw i32 %111, %113
  %115 = call %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32 59, %dx.types.Handle %64, i32 1)  ; CBufferLoadLegacy(handle,regIndex)
  %116 = extractvalue %dx.types.CBufRet.i32 %115, 0
  %117 = mul nsw i32 %114, %116
  %118 = extractvalue %dx.types.CBufRet.i32 %110, 0
  %119 = extractvalue %dx.types.CBufRet.i32 %112, 2
  %120 = call %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32 59, %dx.types.Handle %62, i32 1)  ; CBufferLoadLegacy(handle,regIndex)
  %121 = extractvalue %dx.types.CBufRet.i32 %120, 0
  %122 = sitofp i32 %121 to float
  %123 = extractvalue %dx.types.CBufRet.i32 %112, 0
  %124 = call %dx.types.Handle @dx.op.createHandleForLib.dx.types.Handle(i32 160, %dx.types.Handle %43)  ; CreateHandleForLib(Resource)
  %125 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %124, %dx.types.ResourceProperties { i32 10, i32 261 })  ; AnnotateHandle(res,props)  resource: TypedBuffer<U32>
  %126 = call %dx.types.ResRet.i32 @dx.op.bufferLoad.i32(i32 68, %dx.types.Handle %125, i32 %123, i32 undef)  ; BufferLoad(srv,index,wot)
  %127 = extractvalue %dx.types.ResRet.i32 %126, 0
  %128 = add i32 %117, %118
  %129 = sub i32 %128, %119
  %130 = add i32 %129, %127
  %131 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %68, i32 244)  ; CBufferLoadLegacy(handle,regIndex)
  %132 = extractvalue %dx.types.CBufRet.f32 %131, 0
  %133 = fcmp fast oge float %132, 0.000000e+00
  %134 = call %dx.types.Handle @dx.op.createHandleForLib.dx.types.Handle(i32 160, %dx.types.Handle %42)  ; CreateHandleForLib(Resource)
  %135 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %134, %dx.types.ResourceProperties { i32 10, i32 265 })  ; AnnotateHandle(res,props)  resource: TypedBuffer<F32>
  %136 = call %dx.types.ResRet.f32 @dx.op.bufferLoad.f32(i32 68, %dx.types.Handle %135, i32 %130, i32 undef)  ; BufferLoad(srv,index,wot)
  %137 = extractvalue %dx.types.ResRet.f32 %136, 0
  %138 = select i1 %133, float %132, float %137
  %139 = call %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32 59, %dx.types.Handle %68, i32 244)  ; CBufferLoadLegacy(handle,regIndex)
  %140 = extractvalue %dx.types.CBufRet.i32 %139, 1
  %141 = sitofp i32 %140 to float
  %142 = fadd fast float %141, %138
  %143 = call float @dx.op.binary.f32(i32 36, float %142, float %122)  ; FMin(a,b)
  %144 = call float @dx.op.unary.f32(i32 27, float %143)  ; Round_ni(value)
  %145 = fptoui float %144 to i32
  %146 = extractvalue %dx.types.CBufRet.i32 %110, 2
  %147 = and i32 %145, 31
  %148 = ashr i32 %146, %147
  %149 = add nsw i32 %148, -1
  %150 = sitofp i32 %149 to float
  %151 = fadd fast float %150, 1.000000e+00
  %152 = fptoui float %151 to i32
  %153 = bitcast [3 x i32]* %55 to i8*
  call void @llvm.lifetime.start(i64 12, i8* %153) #0
  %154 = call %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32 59, %dx.types.Handle %59, i32 0)  ; CBufferLoadLegacy(handle,regIndex)
  %155 = extractvalue %dx.types.CBufRet.i32 %154, 1
  %156 = extractvalue %dx.types.CBufRet.i32 %154, 0
  %157 = and i32 %156, 255
  %158 = mul i32 %109, 3
  %159 = icmp eq i32 %157, 0
  br i1 %159, label %160, label %163

; <label>:160                                     ; preds = %101
  %161 = add i32 %158, 1
  %162 = add i32 %158, 2
  br label %188

; <label>:163                                     ; preds = %101
  %164 = icmp eq i32 %157, 2
  %165 = call %dx.types.Handle @dx.op.createHandleForLib.dx.types.Handle(i32 160, %dx.types.Handle %20)  ; CreateHandleForLib(Resource)
  %166 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %165, %dx.types.ResourceProperties { i32 11, i32 0 })  ; AnnotateHandle(res,props)  resource: ByteAddressBuffer
  br i1 %164, label %167, label %181

; <label>:167                                     ; preds = %163
  %168 = mul i32 %109, 6
  %169 = add i32 %168, %155
  %170 = and i32 %169, -4
  %171 = call %dx.types.ResRet.i32 @dx.op.rawBufferLoad.i32(i32 139, %dx.types.Handle %166, i32 %170, i32 undef, i8 3, i32 4)  ; RawBufferLoad(srv,index,elementOffset,mask,alignment)
  %172 = extractvalue %dx.types.ResRet.i32 %171, 0
  %173 = extractvalue %dx.types.ResRet.i32 %171, 1
  %174 = icmp eq i32 %170, %169
  %175 = lshr i32 %172, 16
  %176 = and i32 %173, 65535
  br i1 %174, label %177, label %179

; <label>:177                                     ; preds = %167
  %178 = and i32 %172, 65535
  br label %188

; <label>:179                                     ; preds = %167
  %180 = lshr i32 %173, 16
  br label %188

; <label>:181                                     ; preds = %163
  %182 = mul i32 %157, %158
  %183 = add i32 %182, %155
  %184 = call %dx.types.ResRet.i32 @dx.op.rawBufferLoad.i32(i32 139, %dx.types.Handle %166, i32 %183, i32 undef, i8 7, i32 4)  ; RawBufferLoad(srv,index,elementOffset,mask,alignment)
  %185 = extractvalue %dx.types.ResRet.i32 %184, 0
  %186 = extractvalue %dx.types.ResRet.i32 %184, 1
  %187 = extractvalue %dx.types.ResRet.i32 %184, 2
  br label %188

; <label>:188                                     ; preds = %181, %179, %177, %160
  %189 = phi i32 [ %158, %160 ], [ %185, %181 ], [ %178, %177 ], [ %175, %179 ]
  %190 = phi i32 [ %161, %160 ], [ %186, %181 ], [ %175, %177 ], [ %176, %179 ]
  %191 = phi i32 [ %162, %160 ], [ %187, %181 ], [ %176, %177 ], [ %180, %179 ]
  %192 = getelementptr inbounds [3 x i32], [3 x i32]* %55, i32 0, i32 0
  store i32 %189, i32* %192, align 4
  %193 = getelementptr inbounds [3 x i32], [3 x i32]* %55, i32 0, i32 1
  store i32 %190, i32* %193, align 4
  %194 = getelementptr inbounds [3 x i32], [3 x i32]* %55, i32 0, i32 2
  store i32 %191, i32* %194, align 4
  %195 = getelementptr [3 x i32], [3 x i32]* %55, i32 0, i32 %108
  %196 = load i32, i32* %195, align 4, !tbaa !99, !noalias !101
  %197 = call i32 @dx.op.instanceID.i32(i32 141)  ; InstanceID()
  %198 = urem i32 %196, %152
  %199 = uitofp i32 %198 to float
  %200 = udiv i32 %196, %152
  %201 = uitofp i32 %200 to float
  %202 = call %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32 59, %dx.types.Handle %66, i32 0)  ; CBufferLoadLegacy(handle,regIndex)
  %203 = extractvalue %dx.types.CBufRet.i32 %202, 0
  %204 = sitofp i32 %203 to float
  %205 = extractvalue %dx.types.CBufRet.i32 %202, 1
  %206 = sitofp i32 %205 to float
  call void @llvm.lifetime.end(i64 12, i8* %153) #0
  %207 = and i32 %197, 2147483647
  %208 = mul i32 %207, 42
  %209 = call %dx.types.Handle @dx.op.createHandleForLib.dx.types.Handle(i32 160, %dx.types.Handle %45)  ; CreateHandleForLib(Resource)
  %210 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %209, %dx.types.ResourceProperties { i32 12, i32 16 })  ; AnnotateHandle(res,props)  resource: StructuredBuffer<stride=16>
  %211 = call %dx.types.ResRet.f32 @dx.op.rawBufferLoad.f32(i32 139, %dx.types.Handle %210, i32 %208, i32 0, i8 15, i32 4)  ; RawBufferLoad(srv,index,elementOffset,mask,alignment)
  %212 = extractvalue %dx.types.ResRet.f32 %211, 1
  %213 = bitcast float %212 to i32
  %214 = call %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32 59, %dx.types.Handle %68, i32 283)  ; CBufferLoadLegacy(handle,regIndex)
  %215 = extractvalue %dx.types.CBufRet.i32 %214, 0
  %216 = call %dx.types.Handle @dx.op.createHandleForLib.dx.types.Handle(i32 160, %dx.types.Handle %44)  ; CreateHandleForLib(Resource)
  %217 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %216, %dx.types.ResourceProperties { i32 12, i32 16 })  ; AnnotateHandle(res,props)  resource: StructuredBuffer<stride=16>
  %218 = call %dx.types.ResRet.f32 @dx.op.rawBufferLoad.f32(i32 139, %dx.types.Handle %217, i32 %213, i32 0, i8 15, i32 4)  ; RawBufferLoad(srv,index,elementOffset,mask,alignment)
  %219 = extractvalue %dx.types.ResRet.f32 %218, 0
  %220 = bitcast float %219 to i32
  %221 = and i32 %220, 1048575
  %222 = icmp eq i32 %221, 1048575
  br i1 %222, label %331, label %223, !dx.controlflow.hints !102

; <label>:223                                     ; preds = %188
  %224 = mul nuw nsw i32 %221, 42
  %225 = or i32 %224, 1
  %226 = call %dx.types.ResRet.f32 @dx.op.rawBufferLoad.f32(i32 139, %dx.types.Handle %210, i32 %225, i32 0, i8 15, i32 4)  ; RawBufferLoad(srv,index,elementOffset,mask,alignment)
  %227 = extractvalue %dx.types.ResRet.f32 %226, 0
  %228 = extractvalue %dx.types.ResRet.f32 %226, 1
  %229 = extractvalue %dx.types.ResRet.f32 %226, 2
  %230 = add i32 %215, %213
  %231 = call %dx.types.ResRet.f32 @dx.op.rawBufferLoad.f32(i32 139, %dx.types.Handle %217, i32 %230, i32 0, i8 15, i32 4)  ; RawBufferLoad(srv,index,elementOffset,mask,alignment)
  %232 = extractvalue %dx.types.ResRet.f32 %231, 0
  %233 = extractvalue %dx.types.ResRet.f32 %231, 1
  %234 = extractvalue %dx.types.ResRet.f32 %231, 2
  %235 = extractvalue %dx.types.ResRet.f32 %231, 3
  %236 = bitcast float %232 to i32
  %237 = bitcast float %233 to i32
  %238 = bitcast float %234 to i32
  %239 = bitcast float %235 to i32
  %240 = shl i32 %215, 1
  %241 = add i32 %240, %213
  %242 = call %dx.types.ResRet.f32 @dx.op.rawBufferLoad.f32(i32 139, %dx.types.Handle %217, i32 %241, i32 0, i8 15, i32 4)  ; RawBufferLoad(srv,index,elementOffset,mask,alignment)
  %243 = extractvalue %dx.types.ResRet.f32 %242, 0
  %244 = extractvalue %dx.types.ResRet.f32 %242, 1
  %245 = extractvalue %dx.types.ResRet.f32 %242, 2
  %246 = and i32 %236, 65535
  %247 = uitofp i32 %246 to float
  %248 = lshr i32 %236, 16
  %249 = uitofp i32 %248 to float
  %250 = and i32 %237, 32767
  %251 = uitofp i32 %250 to float
  %252 = fadd fast float %247, -3.276800e+04
  %253 = fadd fast float %249, -3.276800e+04
  %254 = fadd fast float %251, -1.638400e+04
  %255 = fmul fast float %254, 0x3F06A0F8E0000000
  %256 = and i32 %237, 32768
  %257 = icmp ne i32 %256, 0
  %258 = fadd fast float %252, %253
  %259 = fmul fast float %258, 0x3F00002000000000
  %260 = fsub fast float %252, %253
  %261 = fmul fast float %260, 0x3F00002000000000
  %262 = call float @dx.op.unary.f32(i32 6, float %259)  ; FAbs(value)
  %263 = call float @dx.op.unary.f32(i32 6, float %261)  ; FAbs(value)
  %264 = call float @dx.op.dot2.f32(i32 54, float 1.000000e+00, float 1.000000e+00, float %262, float %263)  ; Dot2(ax,ay,bx,by)
  %265 = fsub fast float 2.000000e+00, %264
  %266 = call float @dx.op.dot3.f32(i32 55, float %259, float %261, float %265, float %259, float %261, float %265)  ; Dot3(ax,ay,az,bx,by,bz)
  %267 = call float @dx.op.unary.f32(i32 25, float %266)  ; Rsqrt(value)
  %268 = fmul fast float %267, %259
  %269 = fmul fast float %267, %261
  %270 = fmul fast float %267, %265
  %271 = fadd fast float %270, 1.000000e+00
  %272 = fdiv fast float 1.000000e+00, %271
  %273 = fmul fast float %269, %268
  %274 = fmul fast float %273, %272
  %275 = fsub fast float -0.000000e+00, %274
  %276 = fmul fast float %268, %268
  %277 = fmul fast float %276, %272
  %278 = fsub fast float 1.000000e+00, %277
  %279 = fmul fast float %269, %269
  %280 = fmul fast float %279, %272
  %281 = fsub fast float 1.000000e+00, %280
  %282 = fmul fast float %255, %255
  %283 = fsub fast float 1.000000e+00, %282
  %284 = call float @dx.op.unary.f32(i32 24, float %283)  ; Sqrt(value)
  %285 = select i1 %257, float %255, float %284
  %286 = select i1 %257, float %284, float %255
  %287 = fmul fast float %278, %285
  %288 = fmul fast float %285, %275
  %289 = fmul fast float %285, %268
  %290 = fmul fast float %286, %275
  %291 = fmul fast float %281, %286
  %292 = fmul fast float %269, %286
  %293 = fsub fast float -0.000000e+00, %292
  %294 = fadd fast float %287, %290
  %295 = fadd fast float %288, %291
  %296 = fsub fast float %293, %289
  %297 = fmul fast float %296, %269
  %298 = fmul fast float %295, %270
  %299 = fsub fast float %297, %298
  %300 = fmul fast float %294, %270
  %301 = fmul fast float %296, %268
  %302 = fsub fast float %300, %301
  %303 = fmul fast float %295, %268
  %304 = fmul fast float %294, %269
  %305 = fsub fast float %303, %304
  %306 = lshr i32 %239, 16
  %307 = shl i32 %306, 23
  %308 = add i32 %307, -125829120
  %309 = bitcast i32 %308 to float
  %310 = lshr i32 %238, 16
  %311 = and i32 %238, 65535
  %312 = and i32 %239, 65535
  %313 = uitofp i32 %311 to float
  %314 = uitofp i32 %310 to float
  %315 = uitofp i32 %312 to float
  %316 = fadd fast float %313, -3.276800e+04
  %317 = fadd fast float %314, -3.276800e+04
  %318 = fadd fast float %315, -3.276800e+04
  %319 = fmul fast float %309, %316
  %320 = fmul fast float %309, %317
  %321 = fmul fast float %309, %318
  %322 = fmul fast float %294, %319
  %323 = fmul fast float %295, %319
  %324 = fmul fast float %296, %319
  %325 = fmul fast float %299, %320
  %326 = fmul fast float %302, %320
  %327 = fmul fast float %305, %320
  %328 = fmul fast float %268, %321
  %329 = fmul fast float %269, %321
  %330 = fmul fast float %270, %321
  br label %331

; <label>:331                                     ; preds = %223, %188
  %332 = phi float [ %227, %223 ], [ 0.000000e+00, %188 ]
  %333 = phi float [ %228, %223 ], [ 0.000000e+00, %188 ]
  %334 = phi float [ %229, %223 ], [ 0.000000e+00, %188 ]
  %335 = phi float [ %322, %223 ], [ 0.000000e+00, %188 ]
  %336 = phi float [ %323, %223 ], [ 0.000000e+00, %188 ]
  %337 = phi float [ %324, %223 ], [ 0.000000e+00, %188 ]
  %338 = phi float [ %325, %223 ], [ 0.000000e+00, %188 ]
  %339 = phi float [ %326, %223 ], [ 0.000000e+00, %188 ]
  %340 = phi float [ %327, %223 ], [ 0.000000e+00, %188 ]
  %341 = phi float [ %328, %223 ], [ 0.000000e+00, %188 ]
  %342 = phi float [ %329, %223 ], [ 0.000000e+00, %188 ]
  %343 = phi float [ %330, %223 ], [ 0.000000e+00, %188 ]
  %344 = phi float [ %243, %223 ], [ 0.000000e+00, %188 ]
  %345 = phi float [ %244, %223 ], [ 0.000000e+00, %188 ]
  %346 = phi float [ %245, %223 ], [ 0.000000e+00, %188 ]
  %347 = sub nsw i32 %118, %119
  %348 = add nsw i32 %347, %117
  %349 = add i32 %127, %348
  %350 = call %dx.types.ResRet.f32 @dx.op.bufferLoad.f32(i32 68, %dx.types.Handle %135, i32 %349, i32 undef)  ; BufferLoad(srv,index,wot)
  %351 = extractvalue %dx.types.ResRet.f32 %350, 0
  %352 = select i1 %133, float %132, float %351
  %353 = fadd fast float %141, %352
  %354 = call float @dx.op.binary.f32(i32 36, float %353, float %122)  ; FMin(a,b)
  %355 = call float @dx.op.unary.f32(i32 27, float %354)  ; Round_ni(value)
  %356 = fptoui float %355 to i32
  %357 = and i32 %356, 31
  %358 = ashr i32 %146, %357
  %359 = add nsw i32 %358, -1
  %360 = sitofp i32 %359 to float
  %361 = fdiv fast float 1.000000e+00, %360
  %362 = call %dx.types.Handle @dx.op.createHandleForLib.dx.types.Handle(i32 160, %dx.types.Handle %41)  ; CreateHandleForLib(Resource)
  %363 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %362, %dx.types.ResourceProperties { i32 10, i32 265 })  ; AnnotateHandle(res,props)  resource: TypedBuffer<F32>
  %364 = call %dx.types.ResRet.f32 @dx.op.bufferLoad.f32(i32 68, %dx.types.Handle %363, i32 %348, i32 undef)  ; BufferLoad(srv,index,wot)
  %365 = fmul fast float %361, %199
  %366 = fmul fast float %361, %201
  %367 = fadd fast float %365, %204
  %368 = fadd fast float %366, %206
  %369 = extractvalue %dx.types.CBufRet.i32 %110, 3
  %370 = sitofp i32 %369 to float
  %371 = fdiv fast float %367, %370
  %372 = fdiv fast float %368, %370
  %373 = fsub fast float 1.000000e+00, %371
  %374 = fmul fast float %372, 2.000000e+00
  %375 = fmul fast float %373, 2.000000e+00
  %376 = fmul fast float %354, %374
  %377 = fmul fast float %354, %375
  %378 = fsub fast float 1.000000e+00, %374
  %379 = fsub fast float 1.000000e+00, %375
  call void @llvm.lifetime.start(i64 16, i8* bitcast ([4 x i32]* @NeighborOffset.i.i.i.4.i.0.hca to i8*)) #0
  call void @llvm.lifetime.start(i64 16, i8* bitcast ([4 x i32]* @NeighborOffset.i.i.i.4.i.1.hca to i8*)) #0
  %380 = bitcast [4 x float]* %56 to i8*
  call void @llvm.lifetime.start(i64 16, i8* %380) #0, !noalias !73
  br label %381

; <label>:381                                     ; preds = %441, %331
  %382 = phi i32 [ -1, %331 ], [ %445, %441 ]
  %383 = phi i32 [ 0, %331 ], [ %443, %441 ]
  %384 = phi i32 [ 0, %331 ], [ %439, %441 ]
  %385 = call %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32 59, %dx.types.Handle %62, i32 0)  ; CBufferLoadLegacy(handle,regIndex)
  %386 = extractvalue %dx.types.CBufRet.i32 %385, 0
  %387 = extractvalue %dx.types.CBufRet.i32 %385, 1
  %388 = add i32 %386, %383
  %389 = add i32 %387, %382
  %390 = call %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32 59, %dx.types.Handle %64, i32 0)  ; CBufferLoadLegacy(handle,regIndex)
  %391 = extractvalue %dx.types.CBufRet.i32 %390, 2
  %392 = extractvalue %dx.types.CBufRet.i32 %390, 3
  %393 = call i32 @dx.op.binary.i32(i32 37, i32 %391, i32 %388)  ; IMax(a,b)
  %394 = call i32 @dx.op.binary.i32(i32 37, i32 %392, i32 %389)  ; IMax(a,b)
  %395 = call %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32 59, %dx.types.Handle %64, i32 1)  ; CBufferLoadLegacy(handle,regIndex)
  %396 = extractvalue %dx.types.CBufRet.i32 %395, 0
  %397 = extractvalue %dx.types.CBufRet.i32 %395, 1
  %398 = add i32 %391, -1
  %399 = add i32 %398, %396
  %400 = add i32 %392, -1
  %401 = add i32 %400, %397
  %402 = call i32 @dx.op.binary.i32(i32 38, i32 %399, i32 %393)  ; IMin(a,b)
  %403 = call i32 @dx.op.binary.i32(i32 38, i32 %401, i32 %394)  ; IMin(a,b)
  %404 = sub nsw i32 %403, %392
  %405 = mul nsw i32 %404, %396
  %406 = sub i32 %402, %391
  %407 = add nsw i32 %406, %405
  %408 = extractvalue %dx.types.CBufRet.i32 %390, 0
  %409 = call %dx.types.Handle @dx.op.createHandleForLib.dx.types.Handle(i32 160, %dx.types.Handle %43)  ; CreateHandleForLib(Resource)
  %410 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %409, %dx.types.ResourceProperties { i32 10, i32 261 })  ; AnnotateHandle(res,props)  resource: TypedBuffer<U32>
  %411 = call %dx.types.ResRet.i32 @dx.op.bufferLoad.i32(i32 68, %dx.types.Handle %410, i32 %408, i32 undef)  ; BufferLoad(srv,index,wot)
  %412 = extractvalue %dx.types.ResRet.i32 %411, 0
  %413 = add i32 %407, %412
  %414 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %68, i32 244)  ; CBufferLoadLegacy(handle,regIndex)
  %415 = extractvalue %dx.types.CBufRet.f32 %414, 0
  %416 = fcmp fast oge float %415, 0.000000e+00
  %417 = call %dx.types.Handle @dx.op.createHandleForLib.dx.types.Handle(i32 160, %dx.types.Handle %42)  ; CreateHandleForLib(Resource)
  %418 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %417, %dx.types.ResourceProperties { i32 10, i32 265 })  ; AnnotateHandle(res,props)  resource: TypedBuffer<F32>
  %419 = call %dx.types.ResRet.f32 @dx.op.bufferLoad.f32(i32 68, %dx.types.Handle %418, i32 %413, i32 undef)  ; BufferLoad(srv,index,wot)
  %420 = extractvalue %dx.types.ResRet.f32 %419, 0
  %421 = select i1 %416, float %415, float %420
  %422 = call %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32 59, %dx.types.Handle %62, i32 1)  ; CBufferLoadLegacy(handle,regIndex)
  %423 = extractvalue %dx.types.CBufRet.i32 %422, 0
  %424 = sitofp i32 %423 to float
  %425 = add i32 %412, %348
  %426 = call %dx.types.ResRet.f32 @dx.op.bufferLoad.f32(i32 68, %dx.types.Handle %418, i32 %425, i32 undef)  ; BufferLoad(srv,index,wot)
  %427 = extractvalue %dx.types.ResRet.f32 %426, 0
  %428 = select i1 %416, float %415, float %427
  %429 = call %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32 59, %dx.types.Handle %68, i32 244)  ; CBufferLoadLegacy(handle,regIndex)
  %430 = extractvalue %dx.types.CBufRet.i32 %429, 1
  %431 = sitofp i32 %430 to float
  %432 = fadd fast float %431, %428
  %433 = call float @dx.op.binary.f32(i32 36, float %432, float %424)  ; FMin(a,b)
  %434 = call float @dx.op.binary.f32(i32 35, float %421, float %433)  ; FMax(a,b)
  %435 = getelementptr inbounds [4 x float], [4 x float]* %56, i32 0, i32 %384
  %436 = fadd fast float %431, %434
  %437 = select i1 %416, float %415, float %436
  %438 = call float @dx.op.binary.f32(i32 36, float %437, float %424)  ; FMin(a,b)
  store float %438, float* %435, align 4, !tbaa !94, !noalias !73
  %439 = add nuw nsw i32 %384, 1
  %440 = icmp eq i32 %439, 4
  br i1 %440, label %446, label %441

; <label>:441                                     ; preds = %381
  %442 = getelementptr [4 x i32], [4 x i32]* @NeighborOffset.i.i.i.4.i.0.hca, i32 0, i32 %439
  %443 = load i32, i32* %442, align 4
  %444 = getelementptr [4 x i32], [4 x i32]* @NeighborOffset.i.i.i.4.i.1.hca, i32 0, i32 %439
  %445 = load i32, i32* %444, align 4
  br label %381

; <label>:446                                     ; preds = %381
  %447 = uitofp i32 %356 to float
  %448 = extractvalue %dx.types.ResRet.f32 %364, 0
  %449 = fsub fast float 1.000000e+00, %372
  %450 = fmul fast float %371, 2.000000e+00
  %451 = fmul fast float %449, 2.000000e+00
  %452 = fmul fast float %354, %450
  %453 = fmul fast float %354, %451
  %454 = fsub fast float 1.000000e+00, %450
  %455 = fsub fast float 1.000000e+00, %451
  %456 = getelementptr inbounds [4 x float], [4 x float]* %56, i32 0, i32 0
  %457 = load float, float* %456, align 4, !tbaa !94, !noalias !73
  %458 = getelementptr inbounds [4 x float], [4 x float]* %56, i32 0, i32 1
  %459 = load float, float* %458, align 4, !tbaa !94, !noalias !73
  %460 = getelementptr inbounds [4 x float], [4 x float]* %56, i32 0, i32 2
  %461 = load float, float* %460, align 4, !tbaa !94, !noalias !73
  %462 = getelementptr inbounds [4 x float], [4 x float]* %56, i32 0, i32 3
  %463 = load float, float* %462, align 4, !tbaa !94, !noalias !73
  call void @llvm.lifetime.end(i64 16, i8* %380) #0, !noalias !73
  call void @llvm.lifetime.end(i64 16, i8* bitcast ([4 x i32]* @NeighborOffset.i.i.i.4.i.0.hca to i8*)) #0
  call void @llvm.lifetime.end(i64 16, i8* bitcast ([4 x i32]* @NeighborOffset.i.i.i.4.i.1.hca to i8*)) #0
  %464 = fmul fast float %457, %378
  %465 = fmul fast float %459, %454
  %466 = fmul fast float %461, %379
  %467 = fmul fast float %463, %455
  %468 = fadd fast float %464, %376
  %469 = fadd fast float %465, %452
  %470 = fadd fast float %466, %377
  %471 = fadd fast float %467, %453
  %472 = fadd fast float %367, %368
  %473 = fdiv fast float %472, %370
  %474 = fcmp fast ogt float %473, 1.000000e+00
  %475 = fcmp fast olt float %371, %372
  %476 = select i1 %475, float %471, float %470
  %477 = select i1 %475, float %469, float %468
  %478 = select i1 %474, float %476, float %477
  %479 = call float @dx.op.unary.f32(i32 27, float %478)  ; Round_ni(value)
  %480 = fsub fast float %478, %479
  %481 = fsub fast float %479, %447
  %482 = fsub fast float -0.000000e+00, %481
  %483 = call float @dx.op.unary.f32(i32 21, float %482)  ; Exp(value)
  %484 = fmul fast float %483, %199
  %485 = fmul fast float %483, %201
  %486 = call float @dx.op.unary.f32(i32 27, float %484)  ; Round_ni(value)
  %487 = call float @dx.op.unary.f32(i32 27, float %485)  ; Round_ni(value)
  %488 = fsub fast float -0.000000e+00, %479
  %489 = call float @dx.op.unary.f32(i32 21, float %488)  ; Exp(value)
  %490 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %62, i32 5)  ; CBufferLoadLegacy(handle,regIndex)
  %491 = extractvalue %dx.types.CBufRet.f32 %490, 0
  %492 = fmul fast float %491, %489
  %493 = fadd fast float %492, -1.000000e+00
  %494 = fmul fast float %489, 5.000000e-01
  %495 = fmul fast float %494, %491
  %496 = call float @dx.op.binary.f32(i32 35, float %495, float 2.000000e+00)  ; FMax(a,b)
  %497 = fadd fast float %496, -1.000000e+00
  %498 = extractvalue %dx.types.CBufRet.f32 %490, 1
  %499 = fmul fast float %498, %493
  %500 = fmul fast float %498, %497
  %501 = fdiv fast float %486, %499
  %502 = fdiv fast float %487, %499
  %503 = fmul fast float %486, 5.000000e-01
  %504 = fmul fast float %487, 5.000000e-01
  %505 = call float @dx.op.unary.f32(i32 27, float %503)  ; Round_ni(value)
  %506 = call float @dx.op.unary.f32(i32 27, float %504)  ; Round_ni(value)
  %507 = fdiv fast float %505, %500
  %508 = fdiv fast float %506, %500
  %509 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %62, i32 2)  ; CBufferLoadLegacy(handle,regIndex)
  %510 = extractvalue %dx.types.CBufRet.f32 %509, 0
  %511 = extractvalue %dx.types.CBufRet.f32 %509, 1
  %512 = fmul fast float %510, %501
  %513 = fmul fast float %511, %502
  %514 = extractvalue %dx.types.CBufRet.f32 %509, 2
  %515 = extractvalue %dx.types.CBufRet.f32 %509, 3
  %516 = fadd fast float %512, %514
  %517 = fadd fast float %513, %515
  %518 = fmul fast float %510, 5.000000e-01
  %519 = fmul fast float %511, 5.000000e-01
  %520 = fadd fast float %516, %518
  %521 = fadd fast float %517, %519
  %522 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %62, i32 6)  ; CBufferLoadLegacy(handle,regIndex)
  %523 = extractvalue %dx.types.CBufRet.f32 %522, 0
  %524 = extractvalue %dx.types.CBufRet.f32 %522, 1
  %525 = fmul fast float %523, %204
  %526 = fmul fast float %524, %206
  %527 = fadd fast float %520, %525
  %528 = fadd fast float %521, %526
  %529 = fsub fast float %479, %448
  %530 = call %dx.types.Handle @dx.op.createHandleForLib.dx.types.Handle(i32 160, %dx.types.Handle %40)  ; CreateHandleForLib(Resource)
  %531 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %530, %dx.types.ResourceProperties { i32 2, i32 1033 })  ; AnnotateHandle(res,props)  resource: Texture2D<4xF32>
  %532 = call %dx.types.Handle @dx.op.createHandleForLib.dx.types.Handle(i32 160, %dx.types.Handle %18)  ; CreateHandleForLib(Resource)
  %533 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %532, %dx.types.ResourceProperties { i32 14, i32 0 })  ; AnnotateHandle(res,props)  resource: SamplerState
  %534 = call %dx.types.ResRet.f32 @dx.op.sampleLevel.f32(i32 62, %dx.types.Handle %531, %dx.types.Handle %533, float %527, float %528, float undef, float undef, i32 0, i32 0, i32 undef, float %529)  ; SampleLevel(srv,sampler,coord0,coord1,coord2,coord3,offset0,offset1,offset2,LOD)
  %535 = extractvalue %dx.types.ResRet.f32 %534, 0
  %536 = extractvalue %dx.types.ResRet.f32 %534, 1
  %537 = fmul fast float %535, 6.528000e+04
  %538 = fmul fast float %536, 2.550000e+02
  %539 = fadd fast float %538, -3.276800e+04
  %540 = fadd fast float %539, %537
  %541 = fmul fast float %510, %507
  %542 = fmul fast float %511, %508
  %543 = fadd fast float %541, %514
  %544 = fadd fast float %542, %515
  %545 = fadd fast float %543, %518
  %546 = fadd fast float %544, %519
  %547 = fadd fast float %545, %525
  %548 = fadd fast float %546, %526
  %549 = fsub fast float 1.000000e+00, %448
  %550 = fadd fast float %549, %479
  %551 = call %dx.types.ResRet.f32 @dx.op.sampleLevel.f32(i32 62, %dx.types.Handle %531, %dx.types.Handle %533, float %547, float %548, float undef, float undef, i32 0, i32 0, i32 undef, float %550)  ; SampleLevel(srv,sampler,coord0,coord1,coord2,coord3,offset0,offset1,offset2,LOD)
  %552 = extractvalue %dx.types.ResRet.f32 %551, 0
  %553 = extractvalue %dx.types.ResRet.f32 %551, 1
  %554 = fmul fast float %552, 6.528000e+04
  %555 = fmul fast float %553, 2.550000e+02
  %556 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %62, i32 3)  ; CBufferLoadLegacy(handle,regIndex)
  %557 = extractvalue %dx.types.CBufRet.f32 %556, 0
  %558 = extractvalue %dx.types.CBufRet.f32 %556, 1
  %559 = fmul fast float %557, %501
  %560 = fmul fast float %558, %502
  %561 = extractvalue %dx.types.CBufRet.f32 %556, 2
  %562 = extractvalue %dx.types.CBufRet.f32 %556, 3
  %563 = fadd fast float %559, %561
  %564 = fadd fast float %560, %562
  %565 = extractvalue %dx.types.CBufRet.f32 %522, 2
  %566 = fmul fast float %565, %204
  %567 = fmul fast float %565, %206
  %568 = fadd fast float %563, %566
  %569 = fadd fast float %564, %567
  %570 = call %dx.types.Handle @dx.op.createHandleForLib.dx.types.Handle(i32 160, %dx.types.Handle %38)  ; CreateHandleForLib(Resource)
  %571 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %570, %dx.types.ResourceProperties { i32 2, i32 1033 })  ; AnnotateHandle(res,props)  resource: Texture2D<4xF32>
  %572 = call %dx.types.Handle @dx.op.createHandleForLib.dx.types.Handle(i32 160, %dx.types.Handle %16)  ; CreateHandleForLib(Resource)
  %573 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %572, %dx.types.ResourceProperties { i32 14, i32 0 })  ; AnnotateHandle(res,props)  resource: SamplerState
  %574 = call %dx.types.ResRet.f32 @dx.op.sampleLevel.f32(i32 62, %dx.types.Handle %571, %dx.types.Handle %573, float %568, float %569, float undef, float undef, i32 0, i32 0, i32 undef, float %479)  ; SampleLevel(srv,sampler,coord0,coord1,coord2,coord3,offset0,offset1,offset2,LOD)
  %575 = extractvalue %dx.types.ResRet.f32 %574, 0
  %576 = extractvalue %dx.types.ResRet.f32 %574, 1
  %577 = extractvalue %dx.types.ResRet.f32 %574, 2
  %578 = extractvalue %dx.types.ResRet.f32 %574, 3
  %579 = fmul fast float %557, %507
  %580 = fmul fast float %558, %508
  %581 = fadd fast float %579, %561
  %582 = fadd fast float %580, %562
  %583 = fadd fast float %581, %566
  %584 = fadd fast float %582, %567
  %585 = fadd fast float %479, 1.000000e+00
  %586 = call %dx.types.ResRet.f32 @dx.op.sampleLevel.f32(i32 62, %dx.types.Handle %571, %dx.types.Handle %573, float %583, float %584, float undef, float undef, i32 0, i32 0, i32 undef, float %585)  ; SampleLevel(srv,sampler,coord0,coord1,coord2,coord3,offset0,offset1,offset2,LOD)
  %587 = extractvalue %dx.types.ResRet.f32 %586, 0
  %588 = extractvalue %dx.types.ResRet.f32 %586, 1
  %589 = extractvalue %dx.types.ResRet.f32 %586, 2
  %590 = extractvalue %dx.types.ResRet.f32 %586, 3
  %591 = fmul fast float %575, 6.528000e+04
  %592 = fmul fast float %576, 2.550000e+02
  %593 = fadd fast float %592, -3.276800e+04
  %594 = fadd fast float %593, %591
  %595 = fmul fast float %594, 3.906250e-03
  %596 = fmul fast float %577, 6.528000e+04
  %597 = fmul fast float %578, 2.550000e+02
  %598 = fadd fast float %597, -3.276800e+04
  %599 = fadd fast float %598, %596
  %600 = fmul fast float %599, 3.906250e-03
  %601 = fmul fast float %587, 6.528000e+04
  %602 = fmul fast float %588, 2.550000e+02
  %603 = fadd fast float %602, -3.276800e+04
  %604 = fadd fast float %603, %601
  %605 = fmul fast float %604, 3.906250e-03
  %606 = fmul fast float %589, 6.528000e+04
  %607 = fmul fast float %590, 2.550000e+02
  %608 = fadd fast float %607, -3.276800e+04
  %609 = fadd fast float %608, %606
  %610 = fmul fast float %609, 3.906250e-03
  %611 = fadd fast float %595, %501
  %612 = fadd fast float %600, %502
  %613 = fsub fast float %507, %611
  %614 = fadd fast float %613, %605
  %615 = fsub fast float %508, %612
  %616 = fadd fast float %615, %610
  %617 = fsub fast float -3.276800e+04, %540
  %618 = fadd fast float %617, %555
  %619 = fadd fast float %618, %554
  %620 = fmul fast float %614, %480
  %621 = fmul fast float %616, %480
  %622 = fmul fast float %619, %480
  %623 = fadd fast float %620, %611
  %624 = fadd fast float %621, %612
  %625 = fadd fast float %622, %540
  %626 = fmul fast float %625, 7.812500e-03
  %627 = extractvalue %dx.types.CBufRet.f32 %522, 3
  %628 = fmul fast float %627, %204
  %629 = fmul fast float %627, %206
  %630 = fadd fast float %623, %628
  %631 = fadd fast float %624, %629
  %632 = fmul fast float %630, %336
  %633 = fmul fast float %631, %338
  %634 = fmul fast float %631, %339
  %635 = fmul fast float %631, %340
  %636 = fmul fast float %626, %341
  %637 = fmul fast float %626, %342
  %638 = fmul fast float %626, %343
  %639 = fsub fast float %332, %72
  %640 = fsub fast float %333, %73
  %641 = fsub fast float %334, %74
  %642 = fmul fast float %639, 2.097152e+06
  %643 = fmul fast float %640, 2.097152e+06
  %644 = fmul fast float %641, 2.097152e+06
  %645 = fadd fast float %642, %76
  %646 = fadd fast float %645, %344
  %647 = fadd fast float %646, %636
  %648 = fadd fast float %647, %633
  %649 = fadd fast float %643, %77
  %650 = fadd fast float %649, %345
  %651 = fadd fast float %650, %637
  %652 = fadd fast float %651, %634
  %653 = fadd fast float %644, %78
  %654 = fadd fast float %653, %346
  %655 = fadd fast float %654, %638
  %656 = fadd fast float %655, %635
  %657 = extractvalue %dx.types.CBufRet.f32 %490, 2
  %658 = extractvalue %dx.types.CBufRet.f32 %490, 3
  %659 = fadd fast float %628, %657
  %660 = fadd fast float %629, %658
  %661 = fmul fast float %623, %557
  %662 = fadd fast float %566, %561
  %663 = fadd fast float %567, %562
  %664 = fmul fast float %623, %510
  %665 = fadd fast float %664, %514
  %666 = fadd fast float %665, %518
  %667 = fadd fast float %666, %525
  %668 = fmul fast float %630, %335
  %669 = fmul fast float %630, %337
  %670 = fadd fast float %648, %668
  %671 = fadd fast float %652, %632
  %672 = fadd fast float %656, %669
  %673 = fadd fast float %659, %623
  %674 = fadd fast float %660, %624
  %675 = fmul fast float %624, %558
  %676 = fadd fast float %662, %661
  %677 = fadd fast float %663, %675
  %678 = fmul fast float %624, %511
  %679 = fadd fast float %678, %515
  %680 = fadd fast float %679, %519
  %681 = fadd fast float %680, %526
  %682 = getelementptr [3 x float], [3 x float]* %57, i32 0, i32 %108
  %683 = load float, float* %682, align 4, !tbaa !94, !noalias !98
  %684 = fmul fast float %683, %673
  %685 = fmul fast float %683, %674
  %686 = fadd fast float %684, %106
  %687 = fadd fast float %685, %107
  %688 = fmul fast float %683, %676
  %689 = fmul fast float %683, %677
  %690 = fmul fast float %683, %667
  %691 = fmul fast float %683, %681
  %692 = fadd fast float %688, %102
  %693 = fadd fast float %689, %103
  %694 = fadd fast float %690, %104
  %695 = fadd fast float %691, %105
  %696 = getelementptr [3 x float], [3 x float]* %52, i32 0, i32 %108
  %697 = getelementptr [3 x float], [3 x float]* %53, i32 0, i32 %108
  %698 = getelementptr [3 x float], [3 x float]* %54, i32 0, i32 %108
  store float %670, float* %696, align 4
  store float %671, float* %697, align 4
  store float %672, float* %698, align 4
  %699 = add nuw nsw i32 %108, 1
  %700 = icmp eq i32 %699, 3
  br i1 %700, label %701, label %101

; <label>:701                                     ; preds = %446
  %702 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %60, %dx.types.ResourceProperties { i32 13, i32 428 })  ; AnnotateHandle(res,props)  resource: CBuffer
  %703 = extractvalue %dx.types.CBufRet.f32 %79, 1
  %704 = extractvalue %dx.types.CBufRet.f32 %79, 3
  %705 = extractvalue %dx.types.CBufRet.f32 %82, 1
  %706 = getelementptr [3 x float], [3 x float]* %52, i32 0, i32 1
  %707 = getelementptr [3 x float], [3 x float]* %53, i32 0, i32 1
  %708 = getelementptr [3 x float], [3 x float]* %54, i32 0, i32 1
  %709 = load float, float* %706, align 4
  %710 = load float, float* %707, align 4
  %711 = load float, float* %708, align 4
  %712 = getelementptr [3 x float], [3 x float]* %52, i32 0, i32 0
  %713 = getelementptr [3 x float], [3 x float]* %53, i32 0, i32 0
  %714 = getelementptr [3 x float], [3 x float]* %54, i32 0, i32 0
  %715 = load float, float* %712, align 4
  %716 = load float, float* %713, align 4
  %717 = load float, float* %714, align 4
  %718 = fsub fast float %709, %715
  %719 = fsub fast float %710, %716
  %720 = fsub fast float %711, %717
  %721 = getelementptr [3 x float], [3 x float]* %52, i32 0, i32 2
  %722 = getelementptr [3 x float], [3 x float]* %53, i32 0, i32 2
  %723 = getelementptr [3 x float], [3 x float]* %54, i32 0, i32 2
  %724 = load float, float* %721, align 4
  %725 = load float, float* %722, align 4
  %726 = load float, float* %723, align 4
  %727 = fsub fast float %724, %715
  %728 = fsub fast float %725, %716
  %729 = fsub fast float %726, %717
  %730 = fmul fast float %728, %720
  %731 = fmul fast float %729, %719
  %732 = fsub fast float %730, %731
  %733 = fmul fast float %729, %718
  %734 = fmul fast float %727, %720
  %735 = fsub fast float %733, %734
  %736 = fmul fast float %727, %719
  %737 = fmul fast float %728, %718
  %738 = fsub fast float %736, %737
  %739 = call float @dx.op.dot3.f32(i32 55, float %732, float %735, float %738, float %732, float %735, float %738)  ; Dot3(ax,ay,az,bx,by,bz)
  %740 = call float @dx.op.unary.f32(i32 25, float %739)  ; Rsqrt(value)
  %741 = fmul fast float %732, %740
  %742 = fmul fast float %735, %740
  %743 = fmul fast float %738, %740
  call void @llvm.lifetime.end(i64 12, i8* %93) #0, !noalias !98
  call void @llvm.lifetime.end(i64 12, i8* %88) #0
  call void @llvm.lifetime.end(i64 12, i8* %89) #0
  call void @llvm.lifetime.end(i64 12, i8* %90) #0
  %744 = call %dx.types.Handle @dx.op.createHandleForLib.dx.types.Handle(i32 160, %dx.types.Handle %39)  ; CreateHandleForLib(Resource)
  %745 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %744, %dx.types.ResourceProperties { i32 2, i32 1033 })  ; AnnotateHandle(res,props)  resource: Texture2D<4xF32>
  %746 = call %dx.types.Handle @dx.op.createHandleForLib.dx.types.Handle(i32 160, %dx.types.Handle %17)  ; CreateHandleForLib(Resource)
  %747 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %746, %dx.types.ResourceProperties { i32 14, i32 0 })  ; AnnotateHandle(res,props)  resource: SamplerState
  %748 = call %dx.types.ResRet.f32 @dx.op.sampleLevel.f32(i32 62, %dx.types.Handle %745, %dx.types.Handle %747, float %694, float %695, float undef, float undef, i32 0, i32 0, i32 undef, float 0.000000e+00)  ; SampleLevel(srv,sampler,coord0,coord1,coord2,coord3,offset0,offset1,offset2,LOD)
  %749 = extractvalue %dx.types.ResRet.f32 %748, 2
  %750 = extractvalue %dx.types.ResRet.f32 %748, 3
  %751 = fmul fast float %749, 2.000000e+00
  %752 = fmul fast float %750, 2.000000e+00
  %753 = fadd fast float %751, -1.000000e+00
  %754 = fadd fast float %752, -1.000000e+00
  %755 = call float @dx.op.dot2.f32(i32 54, float %753, float %754, float %753, float %754)  ; Dot2(ax,ay,bx,by)
  %756 = fsub fast float 1.000000e+00, %755
  %757 = call float @dx.op.binary.f32(i32 35, float %756, float 0.000000e+00)  ; FMax(a,b)
  %758 = call float @dx.op.unary.f32(i32 24, float %757)  ; Sqrt(value)
  %759 = fsub fast float -0.000000e+00, %753
  %760 = call float @dx.op.dot3.f32(i32 55, float %758, float 0.000000e+00, float %759, float %758, float 0.000000e+00, float %759)  ; Dot3(ax,ay,az,bx,by,bz)
  %761 = call float @dx.op.unary.f32(i32 25, float %760)  ; Rsqrt(value)
  %762 = fmul fast float %761, %758
  %763 = fmul fast float %761, %759
  %764 = fmul fast float %763, %754
  %765 = fmul fast float %762, %758
  %766 = fmul fast float %763, %753
  %767 = fsub fast float %765, %766
  %768 = fmul fast float %754, %762
  %769 = fsub fast float -0.000000e+00, %768
  %770 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %62, i32 8)  ; CBufferLoadLegacy(handle,regIndex)
  %771 = extractvalue %dx.types.CBufRet.f32 %770, 0
  %772 = extractvalue %dx.types.CBufRet.f32 %770, 1
  %773 = extractvalue %dx.types.CBufRet.f32 %770, 2
  %774 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %62, i32 9)  ; CBufferLoadLegacy(handle,regIndex)
  %775 = extractvalue %dx.types.CBufRet.f32 %774, 0
  %776 = extractvalue %dx.types.CBufRet.f32 %774, 1
  %777 = extractvalue %dx.types.CBufRet.f32 %774, 2
  %778 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %62, i32 10)  ; CBufferLoadLegacy(handle,regIndex)
  %779 = extractvalue %dx.types.CBufRet.f32 %778, 0
  %780 = extractvalue %dx.types.CBufRet.f32 %778, 1
  %781 = extractvalue %dx.types.CBufRet.f32 %778, 2
  %782 = fmul fast float %771, %762
  %783 = call float @dx.op.tertiary.f32(i32 46, float %763, float %779, float %782)  ; FMad(a,b,c)
  %784 = fmul fast float %772, %762
  %785 = call float @dx.op.tertiary.f32(i32 46, float %763, float %780, float %784)  ; FMad(a,b,c)
  %786 = fmul fast float %773, %762
  %787 = call float @dx.op.tertiary.f32(i32 46, float %763, float %781, float %786)  ; FMad(a,b,c)
  %788 = fmul fast float %764, %771
  %789 = call float @dx.op.tertiary.f32(i32 46, float %767, float %775, float %788)  ; FMad(a,b,c)
  %790 = call float @dx.op.tertiary.f32(i32 46, float %769, float %779, float %789)  ; FMad(a,b,c)
  %791 = fmul fast float %764, %772
  %792 = call float @dx.op.tertiary.f32(i32 46, float %767, float %776, float %791)  ; FMad(a,b,c)
  %793 = call float @dx.op.tertiary.f32(i32 46, float %769, float %780, float %792)  ; FMad(a,b,c)
  %794 = fmul fast float %764, %773
  %795 = call float @dx.op.tertiary.f32(i32 46, float %767, float %777, float %794)  ; FMad(a,b,c)
  %796 = call float @dx.op.tertiary.f32(i32 46, float %769, float %781, float %795)  ; FMad(a,b,c)
  %797 = fmul fast float %771, %753
  %798 = call float @dx.op.tertiary.f32(i32 46, float %754, float %775, float %797)  ; FMad(a,b,c)
  %799 = call float @dx.op.tertiary.f32(i32 46, float %758, float %779, float %798)  ; FMad(a,b,c)
  %800 = fmul fast float %772, %753
  %801 = call float @dx.op.tertiary.f32(i32 46, float %754, float %776, float %800)  ; FMad(a,b,c)
  %802 = call float @dx.op.tertiary.f32(i32 46, float %758, float %780, float %801)  ; FMad(a,b,c)
  %803 = fmul fast float %773, %753
  %804 = call float @dx.op.tertiary.f32(i32 46, float %754, float %777, float %803)  ; FMad(a,b,c)
  %805 = call float @dx.op.tertiary.f32(i32 46, float %758, float %781, float %804)  ; FMad(a,b,c)
  %806 = call i32 @dx.op.hitKind.i32(i32 143)  ; HitKind()
  %807 = icmp eq i32 %806, 254
  %808 = select i1 %807, float 1.000000e+00, float -1.000000e+00
  %809 = call %dx.types.Handle @dx.op.createHandleForLib.dx.types.Handle(i32 160, %dx.types.Handle %37)  ; CreateHandleForLib(Resource)
  %810 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %809, %dx.types.ResourceProperties { i32 2, i32 1033 })  ; AnnotateHandle(res,props)  resource: Texture2D<4xF32>
  %811 = call %dx.types.Handle @dx.op.createHandleForLib.dx.types.Handle(i32 160, %dx.types.Handle %19)  ; CreateHandleForLib(Resource)
  %812 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %811, %dx.types.ResourceProperties { i32 14, i32 0 })  ; AnnotateHandle(res,props)  resource: SamplerState
  %813 = call %dx.types.ResRet.f32 @dx.op.sampleLevel.f32(i32 62, %dx.types.Handle %810, %dx.types.Handle %812, float %692, float %693, float undef, float undef, i32 0, i32 0, i32 undef, float 0.000000e+00)  ; SampleLevel(srv,sampler,coord0,coord1,coord2,coord3,offset0,offset1,offset2,LOD)
  %814 = extractvalue %dx.types.ResRet.f32 %813, 0
  %815 = extractvalue %dx.types.ResRet.f32 %813, 1
  %816 = extractvalue %dx.types.ResRet.f32 %813, 2
  %817 = extractvalue %dx.types.ResRet.f32 %813, 3
  %818 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %702, i32 1)  ; CBufferLoadLegacy(handle,regIndex)
  %819 = extractvalue %dx.types.CBufRet.f32 %818, 0
  %820 = extractvalue %dx.types.CBufRet.f32 %818, 1
  %821 = extractvalue %dx.types.CBufRet.f32 %818, 2
  %822 = extractvalue %dx.types.CBufRet.f32 %818, 3
  %823 = call float @dx.op.dot4.f32(i32 56, float %814, float %815, float %816, float %817, float %819, float %820, float %821, float %822)  ; Dot4(ax,ay,az,aw,bx,by,bz,bw)
  %824 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %702, i32 2)  ; CBufferLoadLegacy(handle,regIndex)
  %825 = extractvalue %dx.types.CBufRet.f32 %824, 0
  %826 = extractvalue %dx.types.CBufRet.f32 %824, 1
  %827 = extractvalue %dx.types.CBufRet.f32 %824, 2
  %828 = extractvalue %dx.types.CBufRet.f32 %824, 3
  %829 = call float @dx.op.dot4.f32(i32 56, float %814, float %815, float %816, float %817, float %825, float %826, float %827, float %828)  ; Dot4(ax,ay,az,aw,bx,by,bz,bw)
  %830 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %702, i32 3)  ; CBufferLoadLegacy(handle,regIndex)
  %831 = extractvalue %dx.types.CBufRet.f32 %830, 0
  %832 = extractvalue %dx.types.CBufRet.f32 %830, 1
  %833 = extractvalue %dx.types.CBufRet.f32 %830, 2
  %834 = extractvalue %dx.types.CBufRet.f32 %830, 3
  %835 = call float @dx.op.dot4.f32(i32 56, float %814, float %815, float %816, float %817, float %831, float %832, float %833, float %834)  ; Dot4(ax,ay,az,aw,bx,by,bz,bw)
  %836 = call %dx.types.Handle @dx.op.createHandleForLib.dx.types.Handle(i32 160, %dx.types.Handle %36)  ; CreateHandleForLib(Resource)
  %837 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %836, %dx.types.ResourceProperties { i32 2, i32 1033 })  ; AnnotateHandle(res,props)  resource: Texture2D<4xF32>
  %838 = call %dx.types.ResRet.f32 @dx.op.sampleLevel.f32(i32 62, %dx.types.Handle %837, %dx.types.Handle %812, float %692, float %693, float undef, float undef, i32 0, i32 0, i32 undef, float 0.000000e+00)  ; SampleLevel(srv,sampler,coord0,coord1,coord2,coord3,offset0,offset1,offset2,LOD)
  %839 = extractvalue %dx.types.ResRet.f32 %838, 0
  %840 = extractvalue %dx.types.ResRet.f32 %838, 1
  %841 = extractvalue %dx.types.ResRet.f32 %838, 2
  %842 = extractvalue %dx.types.ResRet.f32 %838, 3
  %843 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %702, i32 4)  ; CBufferLoadLegacy(handle,regIndex)
  %844 = extractvalue %dx.types.CBufRet.f32 %843, 0
  %845 = extractvalue %dx.types.CBufRet.f32 %843, 1
  %846 = extractvalue %dx.types.CBufRet.f32 %843, 2
  %847 = extractvalue %dx.types.CBufRet.f32 %843, 3
  %848 = call float @dx.op.dot4.f32(i32 56, float %839, float %840, float %841, float %842, float %844, float %845, float %846, float %847)  ; Dot4(ax,ay,az,aw,bx,by,bz,bw)
  %849 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %702, i32 5)  ; CBufferLoadLegacy(handle,regIndex)
  %850 = extractvalue %dx.types.CBufRet.f32 %849, 0
  %851 = extractvalue %dx.types.CBufRet.f32 %849, 1
  %852 = extractvalue %dx.types.CBufRet.f32 %849, 2
  %853 = extractvalue %dx.types.CBufRet.f32 %849, 3
  %854 = call float @dx.op.dot4.f32(i32 56, float %814, float %815, float %816, float %817, float %850, float %851, float %852, float %853)  ; Dot4(ax,ay,az,aw,bx,by,bz,bw)
  %855 = call float @dx.op.dot2.f32(i32 54, float %686, float %687, float -0.000000e+00, float 1.000000e+00)  ; Dot2(ax,ay,bx,by)
  %856 = call float @dx.op.dot2.f32(i32 54, float %686, float %687, float 1.000000e+00, float 0.000000e+00)  ; Dot2(ax,ay,bx,by)
  %857 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %702, i32 6)  ; CBufferLoadLegacy(handle,regIndex)
  %858 = extractvalue %dx.types.CBufRet.f32 %857, 0
  %859 = fmul fast float %858, %856
  %860 = fmul fast float %858, %855
  %861 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %68, i32 144)  ; CBufferLoadLegacy(handle,regIndex)
  %862 = extractvalue %dx.types.CBufRet.f32 %861, 0
  %863 = call %dx.types.Handle @dx.op.createHandleForLib.dx.types.Handle(i32 160, %dx.types.Handle %35)  ; CreateHandleForLib(Resource)
  %864 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %863, %dx.types.ResourceProperties { i32 2, i32 1033 })  ; AnnotateHandle(res,props)  resource: Texture2D<4xF32>
  %865 = call %dx.types.Handle @dx.op.createHandleForLib.dx.types.Handle(i32 160, %dx.types.Handle %15)  ; CreateHandleForLib(Resource)
  %866 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %865, %dx.types.ResourceProperties { i32 14, i32 0 })  ; AnnotateHandle(res,props)  resource: SamplerState
  %867 = call %dx.types.ResRet.f32 @dx.op.sampleLevel.f32(i32 62, %dx.types.Handle %864, %dx.types.Handle %866, float %859, float %860, float undef, float undef, i32 0, i32 0, i32 undef, float %862)  ; SampleLevel(srv,sampler,coord0,coord1,coord2,coord3,offset0,offset1,offset2,LOD)
  %868 = extractvalue %dx.types.ResRet.f32 %867, 0
  %869 = extractvalue %dx.types.ResRet.f32 %867, 1
  %870 = fmul fast float %868, 2.000000e+00
  %871 = fmul fast float %869, 2.000000e+00
  %872 = fadd fast float %870, -1.000000e+00
  %873 = fadd fast float %871, -1.000000e+00
  %874 = call float @dx.op.dot2.f32(i32 54, float %872, float %873, float %872, float %873)  ; Dot2(ax,ay,bx,by)
  %875 = fsub fast float 1.000000e+00, %874
  %876 = call float @dx.op.unary.f32(i32 7, float %875)  ; Saturate(value)
  %877 = call float @dx.op.unary.f32(i32 24, float %876)  ; Sqrt(value)
  %878 = fmul fast float %872, %823
  %879 = fmul fast float %873, %823
  %880 = fmul fast float %877, %823
  %881 = extractvalue %dx.types.CBufRet.f32 %857, 1
  %882 = fmul fast float %881, %856
  %883 = fmul fast float %881, %855
  %884 = call %dx.types.Handle @dx.op.createHandleForLib.dx.types.Handle(i32 160, %dx.types.Handle %34)  ; CreateHandleForLib(Resource)
  %885 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %884, %dx.types.ResourceProperties { i32 2, i32 1033 })  ; AnnotateHandle(res,props)  resource: Texture2D<4xF32>
  %886 = call %dx.types.Handle @dx.op.createHandleForLib.dx.types.Handle(i32 160, %dx.types.Handle %14)  ; CreateHandleForLib(Resource)
  %887 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %886, %dx.types.ResourceProperties { i32 14, i32 0 })  ; AnnotateHandle(res,props)  resource: SamplerState
  %888 = call %dx.types.ResRet.f32 @dx.op.sampleLevel.f32(i32 62, %dx.types.Handle %885, %dx.types.Handle %887, float %882, float %883, float undef, float undef, i32 0, i32 0, i32 undef, float %862)  ; SampleLevel(srv,sampler,coord0,coord1,coord2,coord3,offset0,offset1,offset2,LOD)
  %889 = extractvalue %dx.types.ResRet.f32 %888, 0
  %890 = extractvalue %dx.types.ResRet.f32 %888, 1
  %891 = fmul fast float %889, 2.000000e+00
  %892 = fmul fast float %890, 2.000000e+00
  %893 = fadd fast float %891, -1.000000e+00
  %894 = fadd fast float %892, -1.000000e+00
  %895 = call float @dx.op.dot2.f32(i32 54, float %893, float %894, float %893, float %894)  ; Dot2(ax,ay,bx,by)
  %896 = fsub fast float 1.000000e+00, %895
  %897 = call float @dx.op.unary.f32(i32 7, float %896)  ; Saturate(value)
  %898 = call float @dx.op.unary.f32(i32 24, float %897)  ; Sqrt(value)
  %899 = fmul fast float %893, %829
  %900 = fmul fast float %894, %829
  %901 = fmul fast float %898, %829
  %902 = fadd fast float %899, %878
  %903 = fadd fast float %900, %879
  %904 = fadd fast float %901, %880
  %905 = extractvalue %dx.types.CBufRet.f32 %857, 2
  %906 = fmul fast float %905, %856
  %907 = fmul fast float %905, %855
  %908 = call %dx.types.Handle @dx.op.createHandleForLib.dx.types.Handle(i32 160, %dx.types.Handle %33)  ; CreateHandleForLib(Resource)
  %909 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %908, %dx.types.ResourceProperties { i32 2, i32 1033 })  ; AnnotateHandle(res,props)  resource: Texture2D<4xF32>
  %910 = call %dx.types.Handle @dx.op.createHandleForLib.dx.types.Handle(i32 160, %dx.types.Handle %13)  ; CreateHandleForLib(Resource)
  %911 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %910, %dx.types.ResourceProperties { i32 14, i32 0 })  ; AnnotateHandle(res,props)  resource: SamplerState
  %912 = call %dx.types.ResRet.f32 @dx.op.sampleLevel.f32(i32 62, %dx.types.Handle %909, %dx.types.Handle %911, float %906, float %907, float undef, float undef, i32 0, i32 0, i32 undef, float %862)  ; SampleLevel(srv,sampler,coord0,coord1,coord2,coord3,offset0,offset1,offset2,LOD)
  %913 = extractvalue %dx.types.ResRet.f32 %912, 0
  %914 = extractvalue %dx.types.ResRet.f32 %912, 1
  %915 = fmul fast float %913, 2.000000e+00
  %916 = fmul fast float %914, 2.000000e+00
  %917 = fadd fast float %915, -1.000000e+00
  %918 = fadd fast float %916, -1.000000e+00
  %919 = call float @dx.op.dot2.f32(i32 54, float %917, float %918, float %917, float %918)  ; Dot2(ax,ay,bx,by)
  %920 = fsub fast float 1.000000e+00, %919
  %921 = call float @dx.op.unary.f32(i32 7, float %920)  ; Saturate(value)
  %922 = call float @dx.op.unary.f32(i32 24, float %921)  ; Sqrt(value)
  %923 = fmul fast float %917, %835
  %924 = fmul fast float %918, %835
  %925 = fmul fast float %922, %835
  %926 = fadd fast float %902, %923
  %927 = fadd fast float %903, %924
  %928 = fadd fast float %904, %925
  %929 = extractvalue %dx.types.CBufRet.f32 %857, 3
  %930 = fmul fast float %929, %856
  %931 = fmul fast float %929, %855
  %932 = call %dx.types.Handle @dx.op.createHandleForLib.dx.types.Handle(i32 160, %dx.types.Handle %32)  ; CreateHandleForLib(Resource)
  %933 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %932, %dx.types.ResourceProperties { i32 2, i32 1033 })  ; AnnotateHandle(res,props)  resource: Texture2D<4xF32>
  %934 = call %dx.types.Handle @dx.op.createHandleForLib.dx.types.Handle(i32 160, %dx.types.Handle %12)  ; CreateHandleForLib(Resource)
  %935 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %934, %dx.types.ResourceProperties { i32 14, i32 0 })  ; AnnotateHandle(res,props)  resource: SamplerState
  %936 = call %dx.types.ResRet.f32 @dx.op.sampleLevel.f32(i32 62, %dx.types.Handle %933, %dx.types.Handle %935, float %930, float %931, float undef, float undef, i32 0, i32 0, i32 undef, float %862)  ; SampleLevel(srv,sampler,coord0,coord1,coord2,coord3,offset0,offset1,offset2,LOD)
  %937 = extractvalue %dx.types.ResRet.f32 %936, 0
  %938 = extractvalue %dx.types.ResRet.f32 %936, 1
  %939 = fmul fast float %937, 2.000000e+00
  %940 = fmul fast float %938, 2.000000e+00
  %941 = fadd fast float %939, -1.000000e+00
  %942 = fadd fast float %940, -1.000000e+00
  %943 = call float @dx.op.dot2.f32(i32 54, float %941, float %942, float %941, float %942)  ; Dot2(ax,ay,bx,by)
  %944 = fsub fast float 1.000000e+00, %943
  %945 = call float @dx.op.unary.f32(i32 7, float %944)  ; Saturate(value)
  %946 = call float @dx.op.unary.f32(i32 24, float %945)  ; Sqrt(value)
  %947 = fmul fast float %941, %848
  %948 = fmul fast float %942, %848
  %949 = fmul fast float %946, %848
  %950 = fadd fast float %926, %947
  %951 = fadd fast float %927, %948
  %952 = fadd fast float %928, %949
  %953 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %702, i32 7)  ; CBufferLoadLegacy(handle,regIndex)
  %954 = extractvalue %dx.types.CBufRet.f32 %953, 0
  %955 = fmul fast float %954, %856
  %956 = fmul fast float %954, %855
  %957 = call %dx.types.Handle @dx.op.createHandleForLib.dx.types.Handle(i32 160, %dx.types.Handle %31)  ; CreateHandleForLib(Resource)
  %958 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %957, %dx.types.ResourceProperties { i32 2, i32 1033 })  ; AnnotateHandle(res,props)  resource: Texture2D<4xF32>
  %959 = call %dx.types.Handle @dx.op.createHandleForLib.dx.types.Handle(i32 160, %dx.types.Handle %11)  ; CreateHandleForLib(Resource)
  %960 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %959, %dx.types.ResourceProperties { i32 14, i32 0 })  ; AnnotateHandle(res,props)  resource: SamplerState
  %961 = call %dx.types.ResRet.f32 @dx.op.sampleLevel.f32(i32 62, %dx.types.Handle %958, %dx.types.Handle %960, float %955, float %956, float undef, float undef, i32 0, i32 0, i32 undef, float %862)  ; SampleLevel(srv,sampler,coord0,coord1,coord2,coord3,offset0,offset1,offset2,LOD)
  %962 = extractvalue %dx.types.ResRet.f32 %961, 0
  %963 = extractvalue %dx.types.ResRet.f32 %961, 1
  %964 = fmul fast float %962, 2.000000e+00
  %965 = fmul fast float %963, 2.000000e+00
  %966 = fadd fast float %964, -1.000000e+00
  %967 = fadd fast float %965, -1.000000e+00
  %968 = call float @dx.op.dot2.f32(i32 54, float %966, float %967, float %966, float %967)  ; Dot2(ax,ay,bx,by)
  %969 = fsub fast float 1.000000e+00, %968
  %970 = call float @dx.op.unary.f32(i32 7, float %969)  ; Saturate(value)
  %971 = call float @dx.op.unary.f32(i32 24, float %970)  ; Sqrt(value)
  %972 = fmul fast float %966, %854
  %973 = fmul fast float %967, %854
  %974 = fmul fast float %971, %854
  %975 = fadd fast float %950, %972
  %976 = fadd fast float %951, %973
  %977 = fadd fast float %952, %974
  %978 = fmul fast float %975, %704
  %979 = fmul fast float %976, %704
  %980 = fmul fast float %977, %704
  %981 = fadd fast float %978, %80
  %982 = fadd fast float %979, %703
  %983 = fadd fast float %980, %81
  %984 = call float @dx.op.dot3.f32(i32 55, float %981, float %982, float %983, float %981, float %982, float %983)  ; Dot3(ax,ay,az,bx,by,bz)
  %985 = call float @dx.op.unary.f32(i32 25, float %984)  ; Rsqrt(value)
  %986 = fmul fast float %981, %985
  %987 = fmul fast float %982, %985
  %988 = fmul fast float %983, %985
  %989 = fmul fast float %986, %783
  %990 = call float @dx.op.tertiary.f32(i32 46, float %987, float %790, float %989)  ; FMad(a,b,c)
  %991 = call float @dx.op.tertiary.f32(i32 46, float %988, float %799, float %990)  ; FMad(a,b,c)
  %992 = fmul fast float %986, %785
  %993 = call float @dx.op.tertiary.f32(i32 46, float %987, float %793, float %992)  ; FMad(a,b,c)
  %994 = call float @dx.op.tertiary.f32(i32 46, float %988, float %802, float %993)  ; FMad(a,b,c)
  %995 = fmul fast float %986, %787
  %996 = call float @dx.op.tertiary.f32(i32 46, float %987, float %796, float %995)  ; FMad(a,b,c)
  %997 = call float @dx.op.tertiary.f32(i32 46, float %988, float %805, float %996)  ; FMad(a,b,c)
  %998 = call float @dx.op.dot3.f32(i32 55, float %991, float %994, float %997, float %991, float %994, float %997)  ; Dot3(ax,ay,az,bx,by,bz)
  %999 = call float @dx.op.unary.f32(i32 25, float %998)  ; Rsqrt(value)
  %1000 = fmul fast float %991, %808
  %1001 = fmul fast float %1000, %999
  %1002 = fmul fast float %994, %808
  %1003 = fmul fast float %1002, %999
  %1004 = fmul fast float %997, %808
  %1005 = fmul fast float %1004, %999
  %1006 = extractvalue %dx.types.CBufRet.f32 %953, 1
  %1007 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %702, i32 8)  ; CBufferLoadLegacy(handle,regIndex)
  %1008 = extractvalue %dx.types.CBufRet.f32 %1007, 0
  %1009 = extractvalue %dx.types.CBufRet.f32 %1007, 1
  %1010 = extractvalue %dx.types.CBufRet.f32 %1007, 2
  %1011 = fmul fast float %1008, %1006
  %1012 = fmul fast float %1009, %1006
  %1013 = fmul fast float %1010, %1006
  %1014 = call %dx.types.Handle @dx.op.createHandleForLib.dx.types.Handle(i32 160, %dx.types.Handle %30)  ; CreateHandleForLib(Resource)
  %1015 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %1014, %dx.types.ResourceProperties { i32 2, i32 1033 })  ; AnnotateHandle(res,props)  resource: Texture2D<4xF32>
  %1016 = call %dx.types.Handle @dx.op.createHandleForLib.dx.types.Handle(i32 160, %dx.types.Handle %10)  ; CreateHandleForLib(Resource)
  %1017 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %1016, %dx.types.ResourceProperties { i32 14, i32 0 })  ; AnnotateHandle(res,props)  resource: SamplerState
  %1018 = call %dx.types.ResRet.f32 @dx.op.sampleLevel.f32(i32 62, %dx.types.Handle %1015, %dx.types.Handle %1017, float %859, float %860, float undef, float undef, i32 0, i32 0, i32 undef, float %862)  ; SampleLevel(srv,sampler,coord0,coord1,coord2,coord3,offset0,offset1,offset2,LOD)
  %1019 = extractvalue %dx.types.ResRet.f32 %1018, 0
  %1020 = extractvalue %dx.types.ResRet.f32 %1018, 1
  %1021 = extractvalue %dx.types.ResRet.f32 %1018, 2
  %1022 = fmul fast float %1019, %823
  %1023 = fmul fast float %1020, %823
  %1024 = fmul fast float %1021, %823
  %1025 = call %dx.types.Handle @dx.op.createHandleForLib.dx.types.Handle(i32 160, %dx.types.Handle %29)  ; CreateHandleForLib(Resource)
  %1026 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %1025, %dx.types.ResourceProperties { i32 2, i32 1033 })  ; AnnotateHandle(res,props)  resource: Texture2D<4xF32>
  %1027 = call %dx.types.Handle @dx.op.createHandleForLib.dx.types.Handle(i32 160, %dx.types.Handle %9)  ; CreateHandleForLib(Resource)
  %1028 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %1027, %dx.types.ResourceProperties { i32 14, i32 0 })  ; AnnotateHandle(res,props)  resource: SamplerState
  %1029 = call %dx.types.ResRet.f32 @dx.op.sampleLevel.f32(i32 62, %dx.types.Handle %1026, %dx.types.Handle %1028, float %882, float %883, float undef, float undef, i32 0, i32 0, i32 undef, float %862)  ; SampleLevel(srv,sampler,coord0,coord1,coord2,coord3,offset0,offset1,offset2,LOD)
  %1030 = extractvalue %dx.types.ResRet.f32 %1029, 0
  %1031 = extractvalue %dx.types.ResRet.f32 %1029, 1
  %1032 = extractvalue %dx.types.ResRet.f32 %1029, 2
  %1033 = fmul fast float %1030, %829
  %1034 = fmul fast float %1031, %829
  %1035 = fmul fast float %1032, %829
  %1036 = fadd fast float %1033, %1022
  %1037 = fadd fast float %1034, %1023
  %1038 = fadd fast float %1035, %1024
  %1039 = call %dx.types.Handle @dx.op.createHandleForLib.dx.types.Handle(i32 160, %dx.types.Handle %28)  ; CreateHandleForLib(Resource)
  %1040 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %1039, %dx.types.ResourceProperties { i32 2, i32 1033 })  ; AnnotateHandle(res,props)  resource: Texture2D<4xF32>
  %1041 = call %dx.types.Handle @dx.op.createHandleForLib.dx.types.Handle(i32 160, %dx.types.Handle %8)  ; CreateHandleForLib(Resource)
  %1042 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %1041, %dx.types.ResourceProperties { i32 14, i32 0 })  ; AnnotateHandle(res,props)  resource: SamplerState
  %1043 = call %dx.types.ResRet.f32 @dx.op.sampleLevel.f32(i32 62, %dx.types.Handle %1040, %dx.types.Handle %1042, float %906, float %907, float undef, float undef, i32 0, i32 0, i32 undef, float %862)  ; SampleLevel(srv,sampler,coord0,coord1,coord2,coord3,offset0,offset1,offset2,LOD)
  %1044 = extractvalue %dx.types.ResRet.f32 %1043, 0
  %1045 = extractvalue %dx.types.ResRet.f32 %1043, 1
  %1046 = extractvalue %dx.types.ResRet.f32 %1043, 2
  %1047 = fmul fast float %1044, %835
  %1048 = fmul fast float %1045, %835
  %1049 = fmul fast float %1046, %835
  %1050 = fadd fast float %1036, %1047
  %1051 = fadd fast float %1037, %1048
  %1052 = fadd fast float %1038, %1049
  %1053 = call %dx.types.Handle @dx.op.createHandleForLib.dx.types.Handle(i32 160, %dx.types.Handle %27)  ; CreateHandleForLib(Resource)
  %1054 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %1053, %dx.types.ResourceProperties { i32 2, i32 1033 })  ; AnnotateHandle(res,props)  resource: Texture2D<4xF32>
  %1055 = call %dx.types.Handle @dx.op.createHandleForLib.dx.types.Handle(i32 160, %dx.types.Handle %7)  ; CreateHandleForLib(Resource)
  %1056 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %1055, %dx.types.ResourceProperties { i32 14, i32 0 })  ; AnnotateHandle(res,props)  resource: SamplerState
  %1057 = call %dx.types.ResRet.f32 @dx.op.sampleLevel.f32(i32 62, %dx.types.Handle %1054, %dx.types.Handle %1056, float %930, float %931, float undef, float undef, i32 0, i32 0, i32 undef, float %862)  ; SampleLevel(srv,sampler,coord0,coord1,coord2,coord3,offset0,offset1,offset2,LOD)
  %1058 = extractvalue %dx.types.ResRet.f32 %1057, 0
  %1059 = extractvalue %dx.types.ResRet.f32 %1057, 1
  %1060 = extractvalue %dx.types.ResRet.f32 %1057, 2
  %1061 = fmul fast float %1058, %848
  %1062 = fmul fast float %1059, %848
  %1063 = fmul fast float %1060, %848
  %1064 = fadd fast float %1050, %1061
  %1065 = fadd fast float %1051, %1062
  %1066 = fadd fast float %1052, %1063
  %1067 = call %dx.types.Handle @dx.op.createHandleForLib.dx.types.Handle(i32 160, %dx.types.Handle %26)  ; CreateHandleForLib(Resource)
  %1068 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %1067, %dx.types.ResourceProperties { i32 2, i32 1033 })  ; AnnotateHandle(res,props)  resource: Texture2D<4xF32>
  %1069 = call %dx.types.Handle @dx.op.createHandleForLib.dx.types.Handle(i32 160, %dx.types.Handle %6)  ; CreateHandleForLib(Resource)
  %1070 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %1069, %dx.types.ResourceProperties { i32 14, i32 0 })  ; AnnotateHandle(res,props)  resource: SamplerState
  %1071 = call %dx.types.ResRet.f32 @dx.op.sampleLevel.f32(i32 62, %dx.types.Handle %1068, %dx.types.Handle %1070, float %955, float %956, float undef, float undef, i32 0, i32 0, i32 undef, float %862)  ; SampleLevel(srv,sampler,coord0,coord1,coord2,coord3,offset0,offset1,offset2,LOD)
  %1072 = extractvalue %dx.types.ResRet.f32 %1071, 0
  %1073 = extractvalue %dx.types.ResRet.f32 %1071, 1
  %1074 = extractvalue %dx.types.ResRet.f32 %1071, 2
  %1075 = fmul fast float %1072, %854
  %1076 = fmul fast float %1073, %854
  %1077 = fmul fast float %1074, %854
  %1078 = fadd fast float %1064, %1075
  %1079 = fadd fast float %1065, %1076
  %1080 = fadd fast float %1066, %1077
  %1081 = call %dx.types.Handle @dx.op.createHandleForLib.dx.types.Handle(i32 160, %dx.types.Handle %25)  ; CreateHandleForLib(Resource)
  %1082 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %1081, %dx.types.ResourceProperties { i32 2, i32 1033 })  ; AnnotateHandle(res,props)  resource: Texture2D<4xF32>
  %1083 = call %dx.types.Handle @dx.op.createHandleForLib.dx.types.Handle(i32 160, %dx.types.Handle %5)  ; CreateHandleForLib(Resource)
  %1084 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %1083, %dx.types.ResourceProperties { i32 14, i32 0 })  ; AnnotateHandle(res,props)  resource: SamplerState
  %1085 = call %dx.types.ResRet.f32 @dx.op.sampleLevel.f32(i32 62, %dx.types.Handle %1082, %dx.types.Handle %1084, float %859, float %860, float undef, float undef, i32 0, i32 0, i32 undef, float %862)  ; SampleLevel(srv,sampler,coord0,coord1,coord2,coord3,offset0,offset1,offset2,LOD)
  %1086 = extractvalue %dx.types.ResRet.f32 %1085, 0
  %1087 = fmul fast float %1086, %823
  %1088 = call %dx.types.Handle @dx.op.createHandleForLib.dx.types.Handle(i32 160, %dx.types.Handle %24)  ; CreateHandleForLib(Resource)
  %1089 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %1088, %dx.types.ResourceProperties { i32 2, i32 1033 })  ; AnnotateHandle(res,props)  resource: Texture2D<4xF32>
  %1090 = call %dx.types.Handle @dx.op.createHandleForLib.dx.types.Handle(i32 160, %dx.types.Handle %4)  ; CreateHandleForLib(Resource)
  %1091 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %1090, %dx.types.ResourceProperties { i32 14, i32 0 })  ; AnnotateHandle(res,props)  resource: SamplerState
  %1092 = call %dx.types.ResRet.f32 @dx.op.sampleLevel.f32(i32 62, %dx.types.Handle %1089, %dx.types.Handle %1091, float %882, float %883, float undef, float undef, i32 0, i32 0, i32 undef, float %862)  ; SampleLevel(srv,sampler,coord0,coord1,coord2,coord3,offset0,offset1,offset2,LOD)
  %1093 = extractvalue %dx.types.ResRet.f32 %1092, 0
  %1094 = fmul fast float %1093, %829
  %1095 = fadd fast float %1094, %1087
  %1096 = call %dx.types.Handle @dx.op.createHandleForLib.dx.types.Handle(i32 160, %dx.types.Handle %23)  ; CreateHandleForLib(Resource)
  %1097 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %1096, %dx.types.ResourceProperties { i32 2, i32 1033 })  ; AnnotateHandle(res,props)  resource: Texture2D<4xF32>
  %1098 = call %dx.types.Handle @dx.op.createHandleForLib.dx.types.Handle(i32 160, %dx.types.Handle %3)  ; CreateHandleForLib(Resource)
  %1099 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %1098, %dx.types.ResourceProperties { i32 14, i32 0 })  ; AnnotateHandle(res,props)  resource: SamplerState
  %1100 = call %dx.types.ResRet.f32 @dx.op.sampleLevel.f32(i32 62, %dx.types.Handle %1097, %dx.types.Handle %1099, float %906, float %907, float undef, float undef, i32 0, i32 0, i32 undef, float %862)  ; SampleLevel(srv,sampler,coord0,coord1,coord2,coord3,offset0,offset1,offset2,LOD)
  %1101 = extractvalue %dx.types.ResRet.f32 %1100, 0
  %1102 = fmul fast float %1101, %835
  %1103 = fadd fast float %1095, %1102
  %1104 = call %dx.types.Handle @dx.op.createHandleForLib.dx.types.Handle(i32 160, %dx.types.Handle %22)  ; CreateHandleForLib(Resource)
  %1105 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %1104, %dx.types.ResourceProperties { i32 2, i32 1033 })  ; AnnotateHandle(res,props)  resource: Texture2D<4xF32>
  %1106 = call %dx.types.Handle @dx.op.createHandleForLib.dx.types.Handle(i32 160, %dx.types.Handle %2)  ; CreateHandleForLib(Resource)
  %1107 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %1106, %dx.types.ResourceProperties { i32 14, i32 0 })  ; AnnotateHandle(res,props)  resource: SamplerState
  %1108 = call %dx.types.ResRet.f32 @dx.op.sampleLevel.f32(i32 62, %dx.types.Handle %1105, %dx.types.Handle %1107, float %930, float %931, float undef, float undef, i32 0, i32 0, i32 undef, float %862)  ; SampleLevel(srv,sampler,coord0,coord1,coord2,coord3,offset0,offset1,offset2,LOD)
  %1109 = extractvalue %dx.types.ResRet.f32 %1108, 0
  %1110 = fmul fast float %1109, %848
  %1111 = fadd fast float %1103, %1110
  %1112 = call %dx.types.Handle @dx.op.createHandleForLib.dx.types.Handle(i32 160, %dx.types.Handle %21)  ; CreateHandleForLib(Resource)
  %1113 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %1112, %dx.types.ResourceProperties { i32 2, i32 1033 })  ; AnnotateHandle(res,props)  resource: Texture2D<4xF32>
  %1114 = call %dx.types.Handle @dx.op.createHandleForLib.dx.types.Handle(i32 160, %dx.types.Handle %1)  ; CreateHandleForLib(Resource)
  %1115 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %1114, %dx.types.ResourceProperties { i32 14, i32 0 })  ; AnnotateHandle(res,props)  resource: SamplerState
  %1116 = call %dx.types.ResRet.f32 @dx.op.sampleLevel.f32(i32 62, %dx.types.Handle %1113, %dx.types.Handle %1115, float %955, float %956, float undef, float undef, i32 0, i32 0, i32 undef, float %862)  ; SampleLevel(srv,sampler,coord0,coord1,coord2,coord3,offset0,offset1,offset2,LOD)
  %1117 = extractvalue %dx.types.ResRet.f32 %1116, 0
  %1118 = fmul fast float %1117, %854
  %1119 = fadd fast float %1111, %1118
  %1120 = mul nuw nsw i32 %221, 42
  %1121 = call %dx.types.ResRet.f32 @dx.op.rawBufferLoad.f32(i32 139, %dx.types.Handle %210, i32 %1120, i32 0, i8 15, i32 4)  ; RawBufferLoad(srv,index,elementOffset,mask,alignment)
  %1122 = extractvalue %dx.types.ResRet.f32 %1121, 0
  %1123 = bitcast float %1122 to i32
  %1124 = lshr i32 %1123, 2
  %1125 = and i32 %1124, 2
  %1126 = call float @dx.op.rayTCurrent.f32(i32 154)  ; RayTCurrent()
  %1127 = zext i1 %807 to i32
  %1128 = or i32 %1125, %1127
  %1129 = call float @dx.op.unary.f32(i32 7, float %1078)  ; Saturate(value)
  %1130 = call float @dx.op.unary.f32(i32 7, float %1079)  ; Saturate(value)
  %1131 = call float @dx.op.unary.f32(i32 7, float %1080)  ; Saturate(value)
  %1132 = call float @dx.op.unary.f32(i32 7, float %1119)  ; Saturate(value)
  %1133 = fmul fast float %1132, %705
  %1134 = fadd fast float %1133, %83
  %1135 = and i32 %1123, 64
  %1136 = icmp ne i32 %1135, 0
  %1137 = select i1 %1136, float -1.000000e+00, float 1.000000e+00
  %1138 = fmul fast float %1137, %808
  %1139 = fmul fast float %741, %1138
  %1140 = fmul fast float %742, %1138
  %1141 = fmul fast float %743, %1138
  %1142 = call float @dx.op.dot3.f32(i32 55, float %799, float %802, float %805, float %799, float %802, float %805)  ; Dot3(ax,ay,az,bx,by,bz)
  %1143 = call float @dx.op.unary.f32(i32 25, float %1142)  ; Rsqrt(value)
  %1144 = fmul fast float %808, %799
  %1145 = fmul fast float %1144, %1143
  %1146 = fmul fast float %808, %802
  %1147 = fmul fast float %1146, %1143
  %1148 = fmul fast float %808, %805
  %1149 = fmul fast float %1148, %1143
  %1150 = call float @dx.op.binary.f32(i32 35, float %1011, float 0.000000e+00)  ; FMax(a,b)
  %1151 = call float @dx.op.binary.f32(i32 35, float %1012, float 0.000000e+00)  ; FMax(a,b)
  %1152 = call float @dx.op.binary.f32(i32 35, float %1013, float 0.000000e+00)  ; FMax(a,b)
  %1153 = call i32 @dx.op.legacyF32ToF16(i32 130, float %1150)  ; LegacyF32ToF16(value)
  %1154 = call i32 @dx.op.legacyF32ToF16(i32 130, float %1151)  ; LegacyF32ToF16(value)
  %1155 = shl i32 %1154, 16
  %1156 = or i32 %1155, %1153
  %1157 = call i32 @dx.op.legacyF32ToF16(i32 130, float %1152)  ; LegacyF32ToF16(value)
  %1158 = call float @dx.op.unary.f32(i32 6, float %1001)  ; FAbs(value)
  %1159 = call float @dx.op.unary.f32(i32 6, float %1003)  ; FAbs(value)
  %1160 = call float @dx.op.unary.f32(i32 6, float %1005)  ; FAbs(value)
  %1161 = call float @dx.op.dot3.f32(i32 55, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float %1158, float %1159, float %1160)  ; Dot3(ax,ay,az,bx,by,bz)
  %1162 = fdiv fast float %1001, %1161
  %1163 = fdiv fast float %1003, %1161
  %1164 = fcmp fast ugt float %1005, 0.000000e+00
  br i1 %1164, label %1176, label %1165

; <label>:1165                                    ; preds = %701
  %1166 = call float @dx.op.unary.f32(i32 6, float %1163)  ; FAbs(value)
  %1167 = call float @dx.op.unary.f32(i32 6, float %1162)  ; FAbs(value)
  %1168 = fsub fast float 1.000000e+00, %1166
  %1169 = fsub fast float 1.000000e+00, %1167
  %1170 = fcmp fast oge float %1162, 0.000000e+00
  %1171 = fcmp fast oge float %1163, 0.000000e+00
  %1172 = select i1 %1170, float 1.000000e+00, float -1.000000e+00
  %1173 = select i1 %1171, float 1.000000e+00, float -1.000000e+00
  %1174 = fmul fast float %1168, %1172
  %1175 = fmul fast float %1169, %1173
  br label %1176

; <label>:1176                                    ; preds = %1165, %701
  %1177 = phi float [ %1174, %1165 ], [ %1162, %701 ]
  %1178 = phi float [ %1175, %1165 ], [ %1163, %701 ]
  %1179 = fmul fast float %1177, 2.047000e+03
  %1180 = fmul fast float %1178, 2.047000e+03
  %1181 = fadd fast float %1179, 2.047000e+03
  %1182 = fadd fast float %1180, 2.047000e+03
  %1183 = call float @dx.op.unary.f32(i32 26, float %1181)  ; Round_ne(value)
  %1184 = call float @dx.op.unary.f32(i32 26, float %1182)  ; Round_ne(value)
  %1185 = fptosi float %1183 to i32
  %1186 = fptosi float %1184 to i32
  %1187 = shl i32 %1186, 12
  %1188 = add i32 %1187, %1185
  %1189 = call float @dx.op.unary.f32(i32 6, float %1139)  ; FAbs(value)
  %1190 = call float @dx.op.unary.f32(i32 6, float %1140)  ; FAbs(value)
  %1191 = call float @dx.op.unary.f32(i32 6, float %1141)  ; FAbs(value)
  %1192 = call float @dx.op.dot3.f32(i32 55, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float %1189, float %1190, float %1191)  ; Dot3(ax,ay,az,bx,by,bz)
  %1193 = fdiv fast float %1139, %1192
  %1194 = fdiv fast float %1140, %1192
  %1195 = fcmp fast ugt float %1141, 0.000000e+00
  br i1 %1195, label %1207, label %1196

; <label>:1196                                    ; preds = %1176
  %1197 = call float @dx.op.unary.f32(i32 6, float %1194)  ; FAbs(value)
  %1198 = call float @dx.op.unary.f32(i32 6, float %1193)  ; FAbs(value)
  %1199 = fsub fast float 1.000000e+00, %1197
  %1200 = fsub fast float 1.000000e+00, %1198
  %1201 = fcmp fast oge float %1193, 0.000000e+00
  %1202 = fcmp fast oge float %1194, 0.000000e+00
  %1203 = select i1 %1201, float 1.000000e+00, float -1.000000e+00
  %1204 = select i1 %1202, float 1.000000e+00, float -1.000000e+00
  %1205 = fmul fast float %1199, %1203
  %1206 = fmul fast float %1200, %1204
  br label %1207

; <label>:1207                                    ; preds = %1196, %1176
  %1208 = phi float [ %1205, %1196 ], [ %1193, %1176 ]
  %1209 = phi float [ %1206, %1196 ], [ %1194, %1176 ]
  %1210 = fmul fast float %1208, 2.047000e+03
  %1211 = fmul fast float %1209, 2.047000e+03
  %1212 = fadd fast float %1210, 2.047000e+03
  %1213 = fadd fast float %1211, 2.047000e+03
  %1214 = call float @dx.op.unary.f32(i32 26, float %1212)  ; Round_ne(value)
  %1215 = call float @dx.op.unary.f32(i32 26, float %1213)  ; Round_ne(value)
  %1216 = fptosi float %1214 to i32
  %1217 = fptosi float %1215 to i32
  %1218 = shl i32 %1217, 12
  %1219 = add i32 %1218, %1216
  %1220 = shl i32 %1188, 16
  %1221 = or i32 %1220, %1157
  %1222 = lshr i32 %1188, 16
  %1223 = shl i32 %1219, 8
  %1224 = or i32 %1223, %1222
  %1225 = call i32 @dx.op.legacyF32ToF16(i32 130, float %1129)  ; LegacyF32ToF16(value)
  %1226 = call i32 @dx.op.legacyF32ToF16(i32 130, float %1130)  ; LegacyF32ToF16(value)
  %1227 = shl i32 %1226, 16
  %1228 = or i32 %1227, %1225
  %1229 = call i32 @dx.op.legacyF32ToF16(i32 130, float %1131)  ; LegacyF32ToF16(value)
  %1230 = call i32 @dx.op.legacyF32ToF16(i32 130, float 1.000000e+00)  ; LegacyF32ToF16(value)
  %1231 = shl i32 %1230, 16
  %1232 = or i32 %1231, %1229
  %1233 = call i32 @dx.op.legacyF32ToF16(i32 130, float 0.000000e+00)  ; LegacyF32ToF16(value)
  %1234 = call i32 @dx.op.legacyF32ToF16(i32 130, float 5.000000e-01)  ; LegacyF32ToF16(value)
  %1235 = shl i32 %1234, 16
  %1236 = or i32 %1235, %1233
  %1237 = call i32 @dx.op.legacyF32ToF16(i32 130, float %1134)  ; LegacyF32ToF16(value)
  %1238 = shl i32 %1233, 16
  %1239 = or i32 %1238, %1237
  %1240 = shl nuw nsw i32 %1128, 23
  %1241 = shl i32 %1123, 19
  %1242 = and i32 %1241, -536870912
  %1243 = or i32 %1242, %1240
  %1244 = or i32 %1243, %1230
  %1245 = or i32 %1244, 65536
  %1246 = call float @dx.op.unary.f32(i32 6, float %1145)  ; FAbs(value)
  %1247 = call float @dx.op.unary.f32(i32 6, float %1147)  ; FAbs(value)
  %1248 = call float @dx.op.unary.f32(i32 6, float %1149)  ; FAbs(value)
  %1249 = call float @dx.op.dot3.f32(i32 55, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float %1246, float %1247, float %1248)  ; Dot3(ax,ay,az,bx,by,bz)
  %1250 = fdiv fast float %1145, %1249
  %1251 = fdiv fast float %1147, %1249
  %1252 = fcmp fast ugt float %1149, 0.000000e+00
  br i1 %1252, label %1264, label %1253

; <label>:1253                                    ; preds = %1207
  %1254 = call float @dx.op.unary.f32(i32 6, float %1251)  ; FAbs(value)
  %1255 = call float @dx.op.unary.f32(i32 6, float %1250)  ; FAbs(value)
  %1256 = fsub fast float 1.000000e+00, %1254
  %1257 = fsub fast float 1.000000e+00, %1255
  %1258 = fcmp fast oge float %1250, 0.000000e+00
  %1259 = fcmp fast oge float %1251, 0.000000e+00
  %1260 = select i1 %1258, float 1.000000e+00, float -1.000000e+00
  %1261 = select i1 %1259, float 1.000000e+00, float -1.000000e+00
  %1262 = fmul fast float %1256, %1260
  %1263 = fmul fast float %1257, %1261
  br label %1264

; <label>:1264                                    ; preds = %1253, %1207
  %1265 = phi float [ %1262, %1253 ], [ %1250, %1207 ]
  %1266 = phi float [ %1263, %1253 ], [ %1251, %1207 ]
  %1267 = fmul fast float %1265, 2.047000e+03
  %1268 = fmul fast float %1266, 2.047000e+03
  %1269 = fadd fast float %1267, 2.047000e+03
  %1270 = fadd fast float %1268, 2.047000e+03
  %1271 = call float @dx.op.unary.f32(i32 26, float %1269)  ; Round_ne(value)
  %1272 = call float @dx.op.unary.f32(i32 26, float %1270)  ; Round_ne(value)
  %1273 = fptosi float %1271 to i32
  %1274 = fptosi float %1272 to i32
  %1275 = shl i32 %1274, 12
  %1276 = add i32 %1275, %1273
  %1277 = call float @dx.op.unary.f32(i32 6, float 0x7FF8000000000000)  ; FAbs(value)
  %1278 = fsub fast float 1.000000e+00, %1277
  %1279 = fmul fast float %1278, 2.047000e+03
  %1280 = fsub fast float 2.047000e+03, %1279
  %1281 = call float @dx.op.unary.f32(i32 26, float %1280)  ; Round_ne(value)
  %1282 = fptosi float %1281 to i32
  %1283 = mul i32 %1282, 4097
  %1284 = mul i32 %1282, 1048832
  %1285 = and i32 %1284, -16777216
  %1286 = or i32 %1285, %1276
  %1287 = and i32 %1283, 65535
  %1288 = or i32 %1287, %1238
  %1289 = or i32 %1238, %1233
  %1290 = or i32 %1231, %1230
  %1291 = or i32 %1238, %1230
  store float %1126, float* %70, align 4
  %1292 = getelementptr inbounds %struct.FPackedPathTracingPayload, %struct.FPackedPathTracingPayload* %PackedPayload, i32 0, i32 1
  store i32 0, i32* %1292, align 4
  %1293 = getelementptr inbounds %struct.FPackedPathTracingPayload, %struct.FPackedPathTracingPayload* %PackedPayload, i32 0, i32 2, i32 0
  store i32 %1156, i32* %1293, align 4
  %1294 = getelementptr inbounds %struct.FPackedPathTracingPayload, %struct.FPackedPathTracingPayload* %PackedPayload, i32 0, i32 2, i32 1
  store i32 %1221, i32* %1294, align 4
  %1295 = getelementptr inbounds %struct.FPackedPathTracingPayload, %struct.FPackedPathTracingPayload* %PackedPayload, i32 0, i32 2, i32 2
  store i32 %1224, i32* %1295, align 4
  %1296 = getelementptr inbounds %struct.FPackedPathTracingPayload, %struct.FPackedPathTracingPayload* %PackedPayload, i32 0, i32 2, i32 3
  store i32 %1228, i32* %1296, align 4
  %1297 = getelementptr inbounds %struct.FPackedPathTracingPayload, %struct.FPackedPathTracingPayload* %PackedPayload, i32 0, i32 2, i32 4
  store i32 %1232, i32* %1297, align 4
  %1298 = getelementptr inbounds %struct.FPackedPathTracingPayload, %struct.FPackedPathTracingPayload* %PackedPayload, i32 0, i32 2, i32 5
  store i32 %1236, i32* %1298, align 4
  %1299 = getelementptr inbounds %struct.FPackedPathTracingPayload, %struct.FPackedPathTracingPayload* %PackedPayload, i32 0, i32 2, i32 6
  store i32 %1239, i32* %1299, align 4
  %1300 = getelementptr inbounds %struct.FPackedPathTracingPayload, %struct.FPackedPathTracingPayload* %PackedPayload, i32 0, i32 2, i32 7
  store i32 %1245, i32* %1300, align 4
  %1301 = getelementptr inbounds %struct.FPackedPathTracingPayload, %struct.FPackedPathTracingPayload* %PackedPayload, i32 0, i32 2, i32 8
  store i32 %1286, i32* %1301, align 4
  %1302 = getelementptr inbounds %struct.FPackedPathTracingPayload, %struct.FPackedPathTracingPayload* %PackedPayload, i32 0, i32 2, i32 9
  store i32 %1288, i32* %1302, align 4
  %1303 = getelementptr inbounds %struct.FPackedPathTracingPayload, %struct.FPackedPathTracingPayload* %PackedPayload, i32 0, i32 2, i32 10
  store i32 %1289, i32* %1303, align 4
  %1304 = getelementptr inbounds %struct.FPackedPathTracingPayload, %struct.FPackedPathTracingPayload* %PackedPayload, i32 0, i32 2, i32 11
  store i32 %1290, i32* %1304, align 4
  %1305 = getelementptr inbounds %struct.FPackedPathTracingPayload, %struct.FPackedPathTracingPayload* %PackedPayload, i32 0, i32 2, i32 12
  store i32 %1291, i32* %1305, align 4
  %1306 = getelementptr inbounds %struct.FPackedPathTracingPayload, %struct.FPackedPathTracingPayload* %PackedPayload, i32 0, i32 2, i32 13
  store i32 0, i32* %1306, align 4
  ret void
}

; Function Attrs: nounwind readnone
declare float @dx.op.binary.f32(i32, float, float) #1

; Function Attrs: nounwind readnone
declare float @dx.op.unary.f32(i32, float) #1

; Function Attrs: nounwind readnone
declare i32 @dx.op.instanceID.i32(i32) #1

; Function Attrs: nounwind readnone
declare i32 @dx.op.primitiveIndex.i32(i32) #1

; Function Attrs: nounwind readnone
declare i32 @dx.op.hitKind.i32(i32) #1

; Function Attrs: nounwind readnone
declare float @dx.op.dot3.f32(i32, float, float, float, float, float, float) #1

; Function Attrs: nounwind readnone
declare i32 @dx.op.legacyF32ToF16(i32, float) #1

; Function Attrs: nounwind readonly
declare %dx.types.ResRet.f32 @dx.op.sampleLevel.f32(i32, %dx.types.Handle, %dx.types.Handle, float, float, float, float, i32, i32, i32, float) #2

; Function Attrs: nounwind readnone
declare float @dx.op.dot2.f32(i32, float, float, float, float) #1

; Function Attrs: nounwind readnone
declare float @dx.op.dot4.f32(i32, float, float, float, float, float, float, float, float) #1

; Function Attrs: nounwind readonly
declare %dx.types.ResRet.i32 @dx.op.rawBufferLoad.i32(i32, %dx.types.Handle, i32, i32, i8, i32) #2

; Function Attrs: nounwind readonly
declare %dx.types.ResRet.f32 @dx.op.bufferLoad.f32(i32, %dx.types.Handle, i32, i32) #2

; Function Attrs: nounwind readonly
declare %dx.types.ResRet.f32 @dx.op.rawBufferLoad.f32(i32, %dx.types.Handle, i32, i32, i8, i32) #2

; Function Attrs: nounwind readonly
declare %dx.types.ResRet.i32 @dx.op.bufferLoad.i32(i32, %dx.types.Handle, i32, i32) #2

; Function Attrs: nounwind readnone
declare i32 @dx.op.binary.i32(i32, i32, i32) #1

; Function Attrs: nounwind readonly
declare float @dx.op.rayTCurrent.f32(i32) #2

; Function Attrs: nounwind readonly
declare %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32, %dx.types.Handle, i32) #2

; Function Attrs: nounwind readonly
declare %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32, %dx.types.Handle, i32) #2

; Function Attrs: nounwind readnone
declare float @dx.op.tertiary.f32(i32, float, float, float) #1

; Function Attrs: nounwind readnone
declare %dx.types.Handle @dx.op.annotateHandle(i32, %dx.types.Handle, %dx.types.ResourceProperties) #1

; Function Attrs: nounwind readonly
declare %dx.types.Handle @dx.op.createHandleForLib.dx.types.Handle(i32, %dx.types.Handle) #2

attributes #0 = { nounwind }
attributes #1 = { nounwind readnone }
attributes #2 = { nounwind readonly }

!llvm.ident = !{!0}
!dx.version = !{!1}
!dx.valver = !{!1}
!dx.shaderModel = !{!2}
!dx.resources = !{!3}
!dx.entryPoints = !{!61, !64}

!0 = !{!"clang version 3.7.0 (tags/RELEASE_370/final)"}
!1 = !{i32 1, i32 6}
!2 = !{!"lib", i32 6, i32 6}
!3 = !{!4, null, !34, !41}
!4 = !{!5, !7, !8, !10, !12, !13, !14, !15, !16, !17, !18, !19, !20, !21, !22, !23, !24, !25, !26, !27, !28, !29, !30, !31, !32, !33}
!5 = !{i32 0, %"class.StructuredBuffer<vector<float, 4> >"* bitcast (%dx.types.Handle* @"\01?View_PrimitiveSceneData@@3V?$StructuredBuffer@V?$vector@M$03@@@@A" to %"class.StructuredBuffer<vector<float, 4> >"*), !"View_PrimitiveSceneData", i32 0, i32 0, i32 1, i32 12, i32 0, !6}
!6 = !{i32 1, i32 16}
!7 = !{i32 1, %"class.StructuredBuffer<vector<float, 4> >"* bitcast (%dx.types.Handle* @"\01?View_InstanceSceneData@@3V?$StructuredBuffer@V?$vector@M$03@@@@A" to %"class.StructuredBuffer<vector<float, 4> >"*), !"View_InstanceSceneData", i32 0, i32 1, i32 1, i32 12, i32 0, !6}
!8 = !{i32 2, %"class.Buffer<unsigned int>"* bitcast (%dx.types.Handle* @"\01?View_LandscapeIndirection@@3V?$Buffer@I@@A" to %"class.Buffer<unsigned int>"*), !"View_LandscapeIndirection", i32 0, i32 2, i32 1, i32 10, i32 0, !9}
!9 = !{i32 0, i32 5}
!10 = !{i32 3, %"class.Buffer<float>"* bitcast (%dx.types.Handle* @"\01?View_LandscapePerComponentData@@3V?$Buffer@M@@A" to %"class.Buffer<float>"*), !"View_LandscapePerComponentData", i32 0, i32 3, i32 1, i32 10, i32 0, !11}
!11 = !{i32 0, i32 9}
!12 = !{i32 4, %"class.Buffer<float>"* bitcast (%dx.types.Handle* @"\01?LandscapeContinuousLODParameters_SectionLODBias@@3V?$Buffer@M@@A" to %"class.Buffer<float>"*), !"LandscapeContinuousLODParameters_SectionLODBias", i32 0, i32 4, i32 1, i32 10, i32 0, !11}
!13 = !{i32 5, %"class.Texture2D<vector<float, 4> >"* bitcast (%dx.types.Handle* @"\01?LandscapeParameters_HeightmapTexture@@3V?$Texture2D@V?$vector@M$03@@@@A" to %"class.Texture2D<vector<float, 4> >"*), !"LandscapeParameters_HeightmapTexture", i32 0, i32 5, i32 1, i32 2, i32 0, !11}
!14 = !{i32 6, %"class.Texture2D<vector<float, 4> >"* bitcast (%dx.types.Handle* @"\01?LandscapeParameters_NormalmapTexture@@3V?$Texture2D@V?$vector@M$03@@@@A" to %"class.Texture2D<vector<float, 4> >"*), !"LandscapeParameters_NormalmapTexture", i32 0, i32 6, i32 1, i32 2, i32 0, !11}
!15 = !{i32 7, %"class.Texture2D<vector<float, 4> >"* bitcast (%dx.types.Handle* @"\01?LandscapeParameters_XYOffsetmapTexture@@3V?$Texture2D@V?$vector@M$03@@@@A" to %"class.Texture2D<vector<float, 4> >"*), !"LandscapeParameters_XYOffsetmapTexture", i32 0, i32 7, i32 1, i32 2, i32 0, !11}
!16 = !{i32 8, %"class.Texture2D<vector<float, 4> >"* bitcast (%dx.types.Handle* @"\01?Material_Texture2D_0@@3V?$Texture2D@V?$vector@M$03@@@@A" to %"class.Texture2D<vector<float, 4> >"*), !"Material_Texture2D_0", i32 0, i32 8, i32 1, i32 2, i32 0, !11}
!17 = !{i32 9, %"class.Texture2D<vector<float, 4> >"* bitcast (%dx.types.Handle* @"\01?Material_Texture2D_1@@3V?$Texture2D@V?$vector@M$03@@@@A" to %"class.Texture2D<vector<float, 4> >"*), !"Material_Texture2D_1", i32 0, i32 9, i32 1, i32 2, i32 0, !11}
!18 = !{i32 10, %"class.Texture2D<vector<float, 4> >"* bitcast (%dx.types.Handle* @"\01?Material_Texture2D_2@@3V?$Texture2D@V?$vector@M$03@@@@A" to %"class.Texture2D<vector<float, 4> >"*), !"Material_Texture2D_2", i32 0, i32 10, i32 1, i32 2, i32 0, !11}
!19 = !{i32 11, %"class.Texture2D<vector<float, 4> >"* bitcast (%dx.types.Handle* @"\01?Material_Texture2D_3@@3V?$Texture2D@V?$vector@M$03@@@@A" to %"class.Texture2D<vector<float, 4> >"*), !"Material_Texture2D_3", i32 0, i32 11, i32 1, i32 2, i32 0, !11}
!20 = !{i32 12, %"class.Texture2D<vector<float, 4> >"* bitcast (%dx.types.Handle* @"\01?Material_Texture2D_4@@3V?$Texture2D@V?$vector@M$03@@@@A" to %"class.Texture2D<vector<float, 4> >"*), !"Material_Texture2D_4", i32 0, i32 12, i32 1, i32 2, i32 0, !11}
!21 = !{i32 13, %"class.Texture2D<vector<float, 4> >"* bitcast (%dx.types.Handle* @"\01?Material_Texture2D_5@@3V?$Texture2D@V?$vector@M$03@@@@A" to %"class.Texture2D<vector<float, 4> >"*), !"Material_Texture2D_5", i32 0, i32 13, i32 1, i32 2, i32 0, !11}
!22 = !{i32 14, %"class.Texture2D<vector<float, 4> >"* bitcast (%dx.types.Handle* @"\01?Material_Texture2D_6@@3V?$Texture2D@V?$vector@M$03@@@@A" to %"class.Texture2D<vector<float, 4> >"*), !"Material_Texture2D_6", i32 0, i32 14, i32 1, i32 2, i32 0, !11}
!23 = !{i32 15, %"class.Texture2D<vector<float, 4> >"* bitcast (%dx.types.Handle* @"\01?Material_Texture2D_7@@3V?$Texture2D@V?$vector@M$03@@@@A" to %"class.Texture2D<vector<float, 4> >"*), !"Material_Texture2D_7", i32 0, i32 15, i32 1, i32 2, i32 0, !11}
!24 = !{i32 16, %"class.Texture2D<vector<float, 4> >"* bitcast (%dx.types.Handle* @"\01?Material_Texture2D_8@@3V?$Texture2D@V?$vector@M$03@@@@A" to %"class.Texture2D<vector<float, 4> >"*), !"Material_Texture2D_8", i32 0, i32 16, i32 1, i32 2, i32 0, !11}
!25 = !{i32 17, %"class.Texture2D<vector<float, 4> >"* bitcast (%dx.types.Handle* @"\01?Material_Texture2D_9@@3V?$Texture2D@V?$vector@M$03@@@@A" to %"class.Texture2D<vector<float, 4> >"*), !"Material_Texture2D_9", i32 0, i32 17, i32 1, i32 2, i32 0, !11}
!26 = !{i32 18, %"class.Texture2D<vector<float, 4> >"* bitcast (%dx.types.Handle* @"\01?Material_Texture2D_10@@3V?$Texture2D@V?$vector@M$03@@@@A" to %"class.Texture2D<vector<float, 4> >"*), !"Material_Texture2D_10", i32 0, i32 18, i32 1, i32 2, i32 0, !11}
!27 = !{i32 19, %"class.Texture2D<vector<float, 4> >"* bitcast (%dx.types.Handle* @"\01?Material_Texture2D_11@@3V?$Texture2D@V?$vector@M$03@@@@A" to %"class.Texture2D<vector<float, 4> >"*), !"Material_Texture2D_11", i32 0, i32 19, i32 1, i32 2, i32 0, !11}
!28 = !{i32 20, %"class.Texture2D<vector<float, 4> >"* bitcast (%dx.types.Handle* @"\01?Material_Texture2D_12@@3V?$Texture2D@V?$vector@M$03@@@@A" to %"class.Texture2D<vector<float, 4> >"*), !"Material_Texture2D_12", i32 0, i32 20, i32 1, i32 2, i32 0, !11}
!29 = !{i32 21, %"class.Texture2D<vector<float, 4> >"* bitcast (%dx.types.Handle* @"\01?Material_Texture2D_13@@3V?$Texture2D@V?$vector@M$03@@@@A" to %"class.Texture2D<vector<float, 4> >"*), !"Material_Texture2D_13", i32 0, i32 21, i32 1, i32 2, i32 0, !11}
!30 = !{i32 22, %"class.Texture2D<vector<float, 4> >"* bitcast (%dx.types.Handle* @"\01?Material_Texture2D_14@@3V?$Texture2D@V?$vector@M$03@@@@A" to %"class.Texture2D<vector<float, 4> >"*), !"Material_Texture2D_14", i32 0, i32 22, i32 1, i32 2, i32 0, !11}
!31 = !{i32 23, %"class.Texture2D<vector<float, 4> >"* bitcast (%dx.types.Handle* @"\01?Material_Texture2D_15@@3V?$Texture2D@V?$vector@M$03@@@@A" to %"class.Texture2D<vector<float, 4> >"*), !"Material_Texture2D_15", i32 0, i32 23, i32 1, i32 2, i32 0, !11}
!32 = !{i32 24, %"class.Texture2D<vector<float, 4> >"* bitcast (%dx.types.Handle* @"\01?Material_Texture2D_16@@3V?$Texture2D@V?$vector@M$03@@@@A" to %"class.Texture2D<vector<float, 4> >"*), !"Material_Texture2D_16", i32 0, i32 24, i32 1, i32 2, i32 0, !11}
!33 = !{i32 25, %struct.ByteAddressBuffer* bitcast (%dx.types.Handle* @"\01?HitGroupSystemIndexBuffer@@3UByteAddressBuffer@@A" to %struct.ByteAddressBuffer*), !"HitGroupSystemIndexBuffer", i32 2, i32 0, i32 1, i32 11, i32 0, null}
!34 = !{!35, !36, !37, !38, !39, !40}
!35 = !{i32 0, %UniformBufferConstants_View* bitcast (%dx.types.Handle* @UniformBufferConstants_View to %UniformBufferConstants_View*), !"UniformBufferConstants_View", i32 0, i32 0, i32 1, i32 5292, null}
!36 = !{i32 1, %UniformBufferConstants_LandscapeMVF* bitcast (%dx.types.Handle* @UniformBufferConstants_LandscapeMVF to %UniformBufferConstants_LandscapeMVF*), !"UniformBufferConstants_LandscapeMVF", i32 0, i32 1, i32 1, i32 8, null}
!37 = !{i32 2, %UniformBufferConstants_LandscapeContinuousLODParameters* bitcast (%dx.types.Handle* @UniformBufferConstants_LandscapeContinuousLODParameters to %UniformBufferConstants_LandscapeContinuousLODParameters*), !"UniformBufferConstants_LandscapeContinuousLODParameters", i32 0, i32 2, i32 1, i32 28, null}
!38 = !{i32 3, %UniformBufferConstants_LandscapeParameters* bitcast (%dx.types.Handle* @UniformBufferConstants_LandscapeParameters to %UniformBufferConstants_LandscapeParameters*), !"UniformBufferConstants_LandscapeParameters", i32 0, i32 3, i32 1, i32 236, null}
!39 = !{i32 4, %UniformBufferConstants_Material* bitcast (%dx.types.Handle* @UniformBufferConstants_Material to %UniformBufferConstants_Material*), !"UniformBufferConstants_Material", i32 0, i32 4, i32 1, i32 428, null}
!40 = !{i32 5, %HitGroupSystemRootConstants* bitcast (%dx.types.Handle* @HitGroupSystemRootConstants to %HitGroupSystemRootConstants*), !"HitGroupSystemRootConstants", i32 2, i32 0, i32 1, i32 24, null}
!41 = !{!42, !43, !44, !45, !46, !47, !48, !49, !50, !51, !52, !53, !54, !55, !56, !57, !58, !59, !60}
!42 = !{i32 0, %struct.SamplerState* bitcast (%dx.types.Handle* @"\01?View_LandscapeWeightmapSampler@@3USamplerState@@A" to %struct.SamplerState*), !"View_LandscapeWeightmapSampler", i32 0, i32 0, i32 1, i32 0, null}
!43 = !{i32 1, %struct.SamplerState* bitcast (%dx.types.Handle* @"\01?LandscapeParameters_HeightmapTextureSampler@@3USamplerState@@A" to %struct.SamplerState*), !"LandscapeParameters_HeightmapTextureSampler", i32 0, i32 1, i32 1, i32 0, null}
!44 = !{i32 2, %struct.SamplerState* bitcast (%dx.types.Handle* @"\01?LandscapeParameters_NormalmapTextureSampler@@3USamplerState@@A" to %struct.SamplerState*), !"LandscapeParameters_NormalmapTextureSampler", i32 0, i32 2, i32 1, i32 0, null}
!45 = !{i32 3, %struct.SamplerState* bitcast (%dx.types.Handle* @"\01?LandscapeParameters_XYOffsetmapTextureSampler@@3USamplerState@@A" to %struct.SamplerState*), !"LandscapeParameters_XYOffsetmapTextureSampler", i32 0, i32 3, i32 1, i32 0, null}
!46 = !{i32 4, %struct.SamplerState* bitcast (%dx.types.Handle* @"\01?Material_Texture2D_2Sampler@@3USamplerState@@A" to %struct.SamplerState*), !"Material_Texture2D_2Sampler", i32 0, i32 4, i32 1, i32 0, null}
!47 = !{i32 5, %struct.SamplerState* bitcast (%dx.types.Handle* @"\01?Material_Texture2D_3Sampler@@3USamplerState@@A" to %struct.SamplerState*), !"Material_Texture2D_3Sampler", i32 0, i32 5, i32 1, i32 0, null}
!48 = !{i32 6, %struct.SamplerState* bitcast (%dx.types.Handle* @"\01?Material_Texture2D_4Sampler@@3USamplerState@@A" to %struct.SamplerState*), !"Material_Texture2D_4Sampler", i32 0, i32 6, i32 1, i32 0, null}
!49 = !{i32 7, %struct.SamplerState* bitcast (%dx.types.Handle* @"\01?Material_Texture2D_5Sampler@@3USamplerState@@A" to %struct.SamplerState*), !"Material_Texture2D_5Sampler", i32 0, i32 7, i32 1, i32 0, null}
!50 = !{i32 8, %struct.SamplerState* bitcast (%dx.types.Handle* @"\01?Material_Texture2D_6Sampler@@3USamplerState@@A" to %struct.SamplerState*), !"Material_Texture2D_6Sampler", i32 0, i32 8, i32 1, i32 0, null}
!51 = !{i32 9, %struct.SamplerState* bitcast (%dx.types.Handle* @"\01?Material_Texture2D_7Sampler@@3USamplerState@@A" to %struct.SamplerState*), !"Material_Texture2D_7Sampler", i32 0, i32 9, i32 1, i32 0, null}
!52 = !{i32 10, %struct.SamplerState* bitcast (%dx.types.Handle* @"\01?Material_Texture2D_8Sampler@@3USamplerState@@A" to %struct.SamplerState*), !"Material_Texture2D_8Sampler", i32 0, i32 10, i32 1, i32 0, null}
!53 = !{i32 11, %struct.SamplerState* bitcast (%dx.types.Handle* @"\01?Material_Texture2D_9Sampler@@3USamplerState@@A" to %struct.SamplerState*), !"Material_Texture2D_9Sampler", i32 0, i32 11, i32 1, i32 0, null}
!54 = !{i32 12, %struct.SamplerState* bitcast (%dx.types.Handle* @"\01?Material_Texture2D_10Sampler@@3USamplerState@@A" to %struct.SamplerState*), !"Material_Texture2D_10Sampler", i32 0, i32 12, i32 1, i32 0, null}
!55 = !{i32 13, %struct.SamplerState* bitcast (%dx.types.Handle* @"\01?Material_Texture2D_11Sampler@@3USamplerState@@A" to %struct.SamplerState*), !"Material_Texture2D_11Sampler", i32 0, i32 13, i32 1, i32 0, null}
!56 = !{i32 14, %struct.SamplerState* bitcast (%dx.types.Handle* @"\01?Material_Texture2D_12Sampler@@3USamplerState@@A" to %struct.SamplerState*), !"Material_Texture2D_12Sampler", i32 0, i32 14, i32 1, i32 0, null}
!57 = !{i32 15, %struct.SamplerState* bitcast (%dx.types.Handle* @"\01?Material_Texture2D_13Sampler@@3USamplerState@@A" to %struct.SamplerState*), !"Material_Texture2D_13Sampler", i32 0, i32 15, i32 1, i32 0, null}
!58 = !{i32 16, %struct.SamplerState* bitcast (%dx.types.Handle* @"\01?Material_Texture2D_14Sampler@@3USamplerState@@A" to %struct.SamplerState*), !"Material_Texture2D_14Sampler", i32 0, i32 16, i32 1, i32 0, null}
!59 = !{i32 17, %struct.SamplerState* bitcast (%dx.types.Handle* @"\01?Material_Texture2D_15Sampler@@3USamplerState@@A" to %struct.SamplerState*), !"Material_Texture2D_15Sampler", i32 0, i32 17, i32 1, i32 0, null}
!60 = !{i32 18, %struct.SamplerState* bitcast (%dx.types.Handle* @"\01?Material_Texture2D_16Sampler@@3USamplerState@@A" to %struct.SamplerState*), !"Material_Texture2D_16Sampler", i32 0, i32 18, i32 1, i32 0, null}
!61 = !{null, !"", null, !3, !62}
!62 = !{i32 0, i64 8388624, i32 5, !63}
!63 = !{i32 0}
!64 = !{void (%struct.FPackedPathTracingPayload*, %struct.FRayTracingIntersectionAttributes*)* @"\01?PathTracingMaterialCHS@@YAXUFPackedPathTracingPayload@@UFRayTracingIntersectionAttributes@@@Z", !"\01?PathTracingMaterialCHS@@YAXUFPackedPathTracingPayload@@UFRayTracingIntersectionAttributes@@@Z", null, null, !65}
!65 = !{i32 8, i32 10, i32 6, i32 64, i32 7, i32 8, i32 5, !63}
!66 = !{!67, !69}
!67 = distinct !{!67, !68, !"\01?internal.CalcPixelMaterialInputs@@YAXUFMaterialPixelParameters@@UFPixelMaterialInputs@@@Z: %PixelMaterialInputs"}
!68 = distinct !{!68, !"\01?internal.CalcPixelMaterialInputs@@YAXUFMaterialPixelParameters@@UFPixelMaterialInputs@@@Z"}
!69 = distinct !{!69, !70, !"\01?internal.CalcMaterialParametersEx@@YAXUFMaterialPixelParameters@@UFPixelMaterialInputs@@V?$vector@M$03@@2_NV?$vector@M$02@@4@Z: %PixelMaterialInputs"}
!70 = distinct !{!70, !"\01?internal.CalcMaterialParametersEx@@YAXUFMaterialPixelParameters@@UFPixelMaterialInputs@@V?$vector@M$03@@2_NV?$vector@M$02@@4@Z"}
!71 = !{!72, !67, !69}
!72 = distinct !{!72, !68, !"\01?internal.CalcPixelMaterialInputs@@YAXUFMaterialPixelParameters@@UFPixelMaterialInputs@@@Z: %Parameters"}
!73 = !{!74, !76, !78}
!74 = distinct !{!74, !75, !"\01?internal.GetVertexFactoryIntermediates@@YA?AUFVertexFactoryIntermediates@@UFVertexFactoryInput@@@Z: %agg.result"}
!75 = distinct !{!75, !"\01?internal.GetVertexFactoryIntermediates@@YA?AUFVertexFactoryIntermediates@@UFVertexFactoryInput@@@Z"}
!76 = distinct !{!76, !77, !"\01?internal.CalcInterpolants@@YAXUFRayCone@@UFRayTracingIntersectionAttributes@@UFVertexFactoryInterpolantsVSToPS@@AIAV?$vector@M$02@@@Z: %Interpolants"}
!77 = distinct !{!77, !"\01?internal.CalcInterpolants@@YAXUFRayCone@@UFRayTracingIntersectionAttributes@@UFVertexFactoryInterpolantsVSToPS@@AIAV?$vector@M$02@@@Z"}
!78 = distinct !{!78, !77, !"\01?internal.CalcInterpolants@@YAXUFRayCone@@UFRayTracingIntersectionAttributes@@UFVertexFactoryInterpolantsVSToPS@@AIAV?$vector@M$02@@@Z: %FaceNormal"}
!79 = !{!80, !72, !67, !69}
!80 = distinct !{!80, !81, !"\01?internal.GetMaterialSharedSampler@@YA?AUSamplerState@@U1@0@Z: %agg.result"}
!81 = distinct !{!81, !"\01?internal.GetMaterialSharedSampler@@YA?AUSamplerState@@U1@0@Z"}
!82 = !{!83, !85, !87, !76, !78}
!83 = distinct !{!83, !84, !"\01?internal.LoadTriangleBaseAttributes@@YA?AUFTriangleBaseAttributes@@UByteAddressBuffer@@II0III@Z: %agg.result"}
!84 = distinct !{!84, !"\01?internal.LoadTriangleBaseAttributes@@YA?AUFTriangleBaseAttributes@@UByteAddressBuffer@@II0III@Z"}
!85 = distinct !{!85, !86, !"\01?internal.LoadTriangleBaseAttributes@@YA?AUFTriangleBaseAttributes@@I@Z: %agg.result"}
!86 = distinct !{!86, !"\01?internal.LoadTriangleBaseAttributes@@YA?AUFTriangleBaseAttributes@@I@Z"}
!87 = distinct !{!87, !88, !"\01?internal.LoadVertexFactoryInputForHGS@@YA?AUFVertexFactoryInput@@IH@Z: %agg.result"}
!88 = distinct !{!88, !"\01?internal.LoadVertexFactoryInputForHGS@@YA?AUFVertexFactoryInput@@IH@Z"}
!89 = !{!90, !92, !74, !76, !78}
!90 = distinct !{!90, !91, !"\01?internal.GetInstanceSceneData@@YA?AUFInstanceSceneData@@II_N@Z: %agg.result"}
!91 = distinct !{!91, !"\01?internal.GetInstanceSceneData@@YA?AUFInstanceSceneData@@II_N@Z"}
!92 = distinct !{!92, !93, !"\01?internal.GetSceneDataIntermediates@@YA?AUFSceneDataIntermediates@@II@Z: %agg.result"}
!93 = distinct !{!93, !"\01?internal.GetSceneDataIntermediates@@YA?AUFSceneDataIntermediates@@II@Z"}
!94 = !{!95, !95, i64 0}
!95 = !{!"float", !96, i64 0}
!96 = !{!"omnipotent char", !97, i64 0}
!97 = !{!"Simple C/C++ TBAA"}
!98 = !{!76, !78}
!99 = !{!100, !100, i64 0}
!100 = !{!"int", !96, i64 0}
!101 = !{!87, !76, !78}
!102 = distinct !{!102, !"dx.controlflow.hints", i32 1}
