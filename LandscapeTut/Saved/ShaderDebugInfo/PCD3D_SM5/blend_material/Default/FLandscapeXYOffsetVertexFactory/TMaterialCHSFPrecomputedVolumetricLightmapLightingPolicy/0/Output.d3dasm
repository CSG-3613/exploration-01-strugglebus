; shader hash: d882585d6e5caa3eda567303eb7acf81
;
; Buffer Definitions:
;
; cbuffer UniformBufferConstants_View
; {
;
;   struct UniformBufferConstants_View
;   {
;
;       row_major float4x4 View_TranslatedWorldToClip;; Offset:    0
;       row_major float4x4 View_TranslatedWorldToSubpixelClip;; Offset:   64
;       row_major float4x4 View_RelativeWorldToClip;  ; Offset:  128
;       row_major float4x4 View_ClipToRelativeWorld;  ; Offset:  192
;       row_major float4x4 View_TranslatedWorldToView;; Offset:  256
;       row_major float4x4 View_ViewToTranslatedWorld;; Offset:  320
;       row_major float4x4 View_TranslatedWorldToCameraView;; Offset:  384
;       row_major float4x4 View_CameraViewToTranslatedWorld;; Offset:  448
;       row_major float4x4 View_ViewToClip;           ; Offset:  512
;       row_major float4x4 View_ViewToClipNoAA;       ; Offset:  576
;       row_major float4x4 View_ClipToView;           ; Offset:  640
;       row_major float4x4 View_ClipToTranslatedWorld;; Offset:  704
;       row_major float4x4 View_SVPositionToTranslatedWorld;; Offset:  768
;       row_major float4x4 View_ScreenToRelativeWorld;; Offset:  832
;       row_major float4x4 View_ScreenToTranslatedWorld;; Offset:  896
;       row_major float4x4 View_MobileMultiviewShadowTransform;; Offset:  960
;       float3 View_ViewTilePosition;                 ; Offset: 1024
;       float PrePadding_View_1036;                   ; Offset: 1036
;       float3 View_MatrixTilePosition;               ; Offset: 1040
;       float PrePadding_View_1052;                   ; Offset: 1052
;       float3 View_ViewForward;                      ; Offset: 1056
;       float PrePadding_View_1068;                   ; Offset: 1068
;       float3 View_ViewUp;                           ; Offset: 1072
;       float PrePadding_View_1084;                   ; Offset: 1084
;       float3 View_ViewRight;                        ; Offset: 1088
;       float PrePadding_View_1100;                   ; Offset: 1100
;       float3 View_HMDViewNoRollUp;                  ; Offset: 1104
;       float PrePadding_View_1116;                   ; Offset: 1116
;       float3 View_HMDViewNoRollRight;               ; Offset: 1120
;       float PrePadding_View_1132;                   ; Offset: 1132
;       float4 View_InvDeviceZToWorldZTransform;      ; Offset: 1136
;       float4 View_ScreenPositionScaleBias;          ; Offset: 1152
;       float3 View_RelativeWorldCameraOrigin;        ; Offset: 1168
;       float PrePadding_View_1180;                   ; Offset: 1180
;       float3 View_TranslatedWorldCameraOrigin;      ; Offset: 1184
;       float PrePadding_View_1196;                   ; Offset: 1196
;       float3 View_RelativeWorldViewOrigin;          ; Offset: 1200
;       float PrePadding_View_1212;                   ; Offset: 1212
;       float3 View_RelativePreViewTranslation;       ; Offset: 1216
;       float PrePadding_View_1228;                   ; Offset: 1228
;       row_major float4x4 View_PrevViewToClip;       ; Offset: 1232
;       row_major float4x4 View_PrevClipToView;       ; Offset: 1296
;       row_major float4x4 View_PrevTranslatedWorldToClip;; Offset: 1360
;       row_major float4x4 View_PrevTranslatedWorldToView;; Offset: 1424
;       row_major float4x4 View_PrevViewToTranslatedWorld;; Offset: 1488
;       row_major float4x4 View_PrevTranslatedWorldToCameraView;; Offset: 1552
;       row_major float4x4 View_PrevCameraViewToTranslatedWorld;; Offset: 1616
;       float3 View_PrevTranslatedWorldCameraOrigin;  ; Offset: 1680
;       float PrePadding_View_1692;                   ; Offset: 1692
;       float3 View_PrevRelativeWorldCameraOrigin;    ; Offset: 1696
;       float PrePadding_View_1708;                   ; Offset: 1708
;       float3 View_PrevRelativeWorldViewOrigin;      ; Offset: 1712
;       float PrePadding_View_1724;                   ; Offset: 1724
;       float3 View_RelativePrevPreViewTranslation;   ; Offset: 1728
;       float PrePadding_View_1740;                   ; Offset: 1740
;       row_major float4x4 View_PrevClipToRelativeWorld;; Offset: 1744
;       row_major float4x4 View_PrevScreenToTranslatedWorld;; Offset: 1808
;       row_major float4x4 View_ClipToPrevClip;       ; Offset: 1872
;       row_major float4x4 View_ClipToPrevClipWithAA; ; Offset: 1936
;       float4 View_TemporalAAJitter;                 ; Offset: 2000
;       float4 View_GlobalClippingPlane;              ; Offset: 2016
;       float2 View_FieldOfViewWideAngles;            ; Offset: 2032
;       float2 View_PrevFieldOfViewWideAngles;        ; Offset: 2040
;       float4 View_ViewRectMin;                      ; Offset: 2048
;       float4 View_ViewSizeAndInvSize;               ; Offset: 2064
;       uint4 View_ViewRectMinAndSize;                ; Offset: 2080
;       float4 View_LightProbeSizeRatioAndInvSizeRatio;; Offset: 2096
;       float4 View_BufferSizeAndInvSize;             ; Offset: 2112
;       float4 View_BufferBilinearUVMinMax;           ; Offset: 2128
;       float4 View_ScreenToViewSpace;                ; Offset: 2144
;       float2 View_BufferToSceneTextureScale;        ; Offset: 2160
;       float2 View_ResolutionFractionAndInv;         ; Offset: 2168
;       int View_NumSceneColorMSAASamples;            ; Offset: 2176
;       float View_SeparateWaterMainDirLightLuminance;; Offset: 2180
;       float View_PreExposure;                       ; Offset: 2184
;       float View_OneOverPreExposure;                ; Offset: 2188
;       float4 View_DiffuseOverrideParameter;         ; Offset: 2192
;       float4 View_SpecularOverrideParameter;        ; Offset: 2208
;       float4 View_NormalOverrideParameter;          ; Offset: 2224
;       float2 View_RoughnessOverrideParameter;       ; Offset: 2240
;       float View_PrevFrameGameTime;                 ; Offset: 2248
;       float View_PrevFrameRealTime;                 ; Offset: 2252
;       float View_OutOfBoundsMask;                   ; Offset: 2256
;       float PrePadding_View_2260;                   ; Offset: 2260
;       float PrePadding_View_2264;                   ; Offset: 2264
;       float PrePadding_View_2268;                   ; Offset: 2268
;       float3 View_WorldCameraMovementSinceLastFrame;; Offset: 2272
;       float View_CullingSign;                       ; Offset: 2284
;       float View_NearPlane;                         ; Offset: 2288
;       float View_GameTime;                          ; Offset: 2292
;       float View_RealTime;                          ; Offset: 2296
;       float View_DeltaTime;                         ; Offset: 2300
;       float View_MaterialTextureMipBias;            ; Offset: 2304
;       float View_MaterialTextureDerivativeMultiply; ; Offset: 2308
;       uint View_Random;                             ; Offset: 2312
;       uint View_FrameNumber;                        ; Offset: 2316
;       uint View_StateFrameIndexMod8;                ; Offset: 2320
;       uint View_StateFrameIndex;                    ; Offset: 2324
;       uint View_DebugViewModeMask;                  ; Offset: 2328
;       float View_CameraCut;                         ; Offset: 2332
;       float View_UnlitViewmodeMask;                 ; Offset: 2336
;       float PrePadding_View_2340;                   ; Offset: 2340
;       float PrePadding_View_2344;                   ; Offset: 2344
;       float PrePadding_View_2348;                   ; Offset: 2348
;       float4 View_DirectionalLightColor;            ; Offset: 2352
;       float3 View_DirectionalLightDirection;        ; Offset: 2368
;       float PrePadding_View_2380;                   ; Offset: 2380
;       float4 View_TranslucencyLightingVolumeMin[2]; ; Offset: 2384
;       float4 View_TranslucencyLightingVolumeInvSize[2];; Offset: 2416
;       float4 View_TemporalAAParams;                 ; Offset: 2448
;       float4 View_CircleDOFParams;                  ; Offset: 2464
;       float View_DepthOfFieldSensorWidth;           ; Offset: 2480
;       float View_DepthOfFieldFocalDistance;         ; Offset: 2484
;       float View_DepthOfFieldScale;                 ; Offset: 2488
;       float View_DepthOfFieldFocalLength;           ; Offset: 2492
;       float View_DepthOfFieldFocalRegion;           ; Offset: 2496
;       float View_DepthOfFieldNearTransitionRegion;  ; Offset: 2500
;       float View_DepthOfFieldFarTransitionRegion;   ; Offset: 2504
;       float View_MotionBlurNormalizedToPixel;       ; Offset: 2508
;       float View_GeneralPurposeTweak;               ; Offset: 2512
;       float View_GeneralPurposeTweak2;              ; Offset: 2516
;       float View_DemosaicVposOffset;                ; Offset: 2520
;       float View_DecalDepthBias;                    ; Offset: 2524
;       float3 View_IndirectLightingColorScale;       ; Offset: 2528
;       float PrePadding_View_2540;                   ; Offset: 2540
;       float3 View_PrecomputedIndirectLightingColorScale;; Offset: 2544
;       float PrePadding_View_2556;                   ; Offset: 2556
;       float3 View_PrecomputedIndirectSpecularColorScale;; Offset: 2560
;       float PrePadding_View_2572;                   ; Offset: 2572
;       float4 View_AtmosphereLightDirection[2];      ; Offset: 2576
;       float4 View_AtmosphereLightIlluminanceOnGroundPostTransmittance[2];; Offset: 2608
;       float4 View_AtmosphereLightIlluminanceOuterSpace[2];; Offset: 2640
;       float4 View_AtmosphereLightDiscLuminance[2];  ; Offset: 2672
;       float4 View_AtmosphereLightDiscCosHalfApexAngle_PPTrans[2];; Offset: 2704
;       float4 View_SkyViewLutSizeAndInvSize;         ; Offset: 2736
;       float3 View_SkyCameraTranslatedWorldOrigin;   ; Offset: 2752
;       float PrePadding_View_2764;                   ; Offset: 2764
;       float4 View_SkyPlanetTranslatedWorldCenterAndViewHeight;; Offset: 2768
;       row_major float4x4 View_SkyViewLutReferential;; Offset: 2784
;       float4 View_SkyAtmosphereSkyLuminanceFactor;  ; Offset: 2848
;       float View_SkyAtmospherePresentInScene;       ; Offset: 2864
;       float View_SkyAtmosphereHeightFogContribution;; Offset: 2868
;       float View_SkyAtmosphereBottomRadiusKm;       ; Offset: 2872
;       float View_SkyAtmosphereTopRadiusKm;          ; Offset: 2876
;       float4 View_SkyAtmosphereCameraAerialPerspectiveVolumeSizeAndInvSize;; Offset: 2880
;       float View_SkyAtmosphereAerialPerspectiveStartDepthKm;; Offset: 2896
;       float View_SkyAtmosphereCameraAerialPerspectiveVolumeDepthResolution;; Offset: 2900
;       float View_SkyAtmosphereCameraAerialPerspectiveVolumeDepthResolutionInv;; Offset: 2904
;       float View_SkyAtmosphereCameraAerialPerspectiveVolumeDepthSliceLengthKm;; Offset: 2908
;       float View_SkyAtmosphereCameraAerialPerspectiveVolumeDepthSliceLengthKmInv;; Offset: 2912
;       float View_SkyAtmosphereApplyCameraAerialPerspectiveVolume;; Offset: 2916
;       float PrePadding_View_2920;                   ; Offset: 2920
;       float PrePadding_View_2924;                   ; Offset: 2924
;       float3 View_NormalCurvatureToRoughnessScaleBias;; Offset: 2928
;       float View_RenderingReflectionCaptureMask;    ; Offset: 2940
;       float View_RealTimeReflectionCapture;         ; Offset: 2944
;       float View_RealTimeReflectionCapturePreExposure;; Offset: 2948
;       float PrePadding_View_2952;                   ; Offset: 2952
;       float PrePadding_View_2956;                   ; Offset: 2956
;       float4 View_AmbientCubemapTint;               ; Offset: 2960
;       float View_AmbientCubemapIntensity;           ; Offset: 2976
;       float View_SkyLightApplyPrecomputedBentNormalShadowingFlag;; Offset: 2980
;       float View_SkyLightAffectReflectionFlag;      ; Offset: 2984
;       float View_SkyLightAffectGlobalIlluminationFlag;; Offset: 2988
;       float4 View_SkyLightColor;                    ; Offset: 2992
;       float4 View_MobileSkyIrradianceEnvironmentMap[8];; Offset: 3008
;       float View_MobilePreviewMode;                 ; Offset: 3136
;       float View_HMDEyePaddingOffset;               ; Offset: 3140
;       float View_ReflectionCubemapMaxMip;           ; Offset: 3144
;       float View_ShowDecalsMask;                    ; Offset: 3148
;       uint View_DistanceFieldAOSpecularOcclusionMode;; Offset: 3152
;       float View_IndirectCapsuleSelfShadowingIntensity;; Offset: 3156
;       float PrePadding_View_3160;                   ; Offset: 3160
;       float PrePadding_View_3164;                   ; Offset: 3164
;       float3 View_ReflectionEnvironmentRoughnessMixingScaleBiasAndLargestWeight;; Offset: 3168
;       int View_StereoPassIndex;                     ; Offset: 3180
;       float4 View_GlobalVolumeCenterAndExtent[6];   ; Offset: 3184
;       float4 View_GlobalVolumeWorldToUVAddAndMul[6];; Offset: 3280
;       float4 View_GlobalDistanceFieldMipWorldToUVScale[6];; Offset: 3376
;       float4 View_GlobalDistanceFieldMipWorldToUVBias[6];; Offset: 3472
;       float View_GlobalDistanceFieldMipFactor;      ; Offset: 3568
;       float View_GlobalDistanceFieldMipTransition;  ; Offset: 3572
;       int View_GlobalDistanceFieldClipmapSizeInPages;; Offset: 3576
;       int PrePadding_View_3580;                     ; Offset: 3580
;       float3 View_GlobalDistanceFieldInvPageAtlasSize;; Offset: 3584
;       float PrePadding_View_3596;                   ; Offset: 3596
;       float3 View_GlobalDistanceFieldInvCoverageAtlasSize;; Offset: 3600
;       float View_GlobalVolumeDimension;             ; Offset: 3612
;       float View_GlobalVolumeTexelSize;             ; Offset: 3616
;       float View_MaxGlobalDFAOConeDistance;         ; Offset: 3620
;       uint View_NumGlobalSDFClipmaps;               ; Offset: 3624
;       float View_CoveredExpandSurfaceScale;         ; Offset: 3628
;       float View_NotCoveredExpandSurfaceScale;      ; Offset: 3632
;       float View_NotCoveredMinStepScale;            ; Offset: 3636
;       float View_DitheredTransparencyStepThreshold; ; Offset: 3640
;       float View_DitheredTransparencyTraceThreshold;; Offset: 3644
;       int2 View_CursorPosition;                     ; Offset: 3648
;       float View_bCheckerboardSubsurfaceProfileRendering;; Offset: 3656
;       float PrePadding_View_3660;                   ; Offset: 3660
;       float3 View_VolumetricFogInvGridSize;         ; Offset: 3664
;       float PrePadding_View_3676;                   ; Offset: 3676
;       float3 View_VolumetricFogGridZParams;         ; Offset: 3680
;       float PrePadding_View_3692;                   ; Offset: 3692
;       float2 View_VolumetricFogSVPosToVolumeUV;     ; Offset: 3696
;       float View_VolumetricFogMaxDistance;          ; Offset: 3704
;       float PrePadding_View_3708;                   ; Offset: 3708
;       float3 View_VolumetricLightmapWorldToUVScale; ; Offset: 3712
;       float PrePadding_View_3724;                   ; Offset: 3724
;       float3 View_VolumetricLightmapWorldToUVAdd;   ; Offset: 3728
;       float PrePadding_View_3740;                   ; Offset: 3740
;       float3 View_VolumetricLightmapIndirectionTextureSize;; Offset: 3744
;       float View_VolumetricLightmapBrickSize;       ; Offset: 3756
;       float3 View_VolumetricLightmapBrickTexelSize; ; Offset: 3760
;       float View_IndirectLightingCacheShowFlag;     ; Offset: 3772
;       float View_EyeToPixelSpreadAngle;             ; Offset: 3776
;       float PrePadding_View_3780;                   ; Offset: 3780
;       float PrePadding_View_3784;                   ; Offset: 3784
;       float PrePadding_View_3788;                   ; Offset: 3788
;       float4 View_XRPassthroughCameraUVs[2];        ; Offset: 3792
;       float View_GlobalVirtualTextureMipBias;       ; Offset: 3824
;       uint View_VirtualTextureFeedbackShift;        ; Offset: 3828
;       uint View_VirtualTextureFeedbackMask;         ; Offset: 3832
;       uint View_VirtualTextureFeedbackStride;       ; Offset: 3836
;       uint View_VirtualTextureFeedbackJitterOffset; ; Offset: 3840
;       uint View_VirtualTextureFeedbackSampleOffset; ; Offset: 3844
;       uint PrePadding_View_3848;                    ; Offset: 3848
;       uint PrePadding_View_3852;                    ; Offset: 3852
;       float4 View_RuntimeVirtualTextureMipLevel;    ; Offset: 3856
;       float2 View_RuntimeVirtualTexturePackHeight;  ; Offset: 3872
;       float PrePadding_View_3880;                   ; Offset: 3880
;       float PrePadding_View_3884;                   ; Offset: 3884
;       float4 View_RuntimeVirtualTextureDebugParams; ; Offset: 3888
;       float View_OverrideLandscapeLOD;              ; Offset: 3904
;       int View_FarShadowStaticMeshLODBias;          ; Offset: 3908
;       float View_MinRoughness;                      ; Offset: 3912
;       float PrePadding_View_3916;                   ; Offset: 3916
;       float4 View_HairRenderInfo;                   ; Offset: 3920
;       uint View_EnableSkyLight;                     ; Offset: 3936
;       uint View_HairRenderInfoBits;                 ; Offset: 3940
;       uint View_HairComponents;                     ; Offset: 3944
;       float View_bSubsurfacePostprocessEnabled;     ; Offset: 3948
;       float4 View_SSProfilesTextureSizeAndInvSize;  ; Offset: 3952
;       float4 View_SSProfilesPreIntegratedTextureSizeAndInvSize;; Offset: 3968
;       float3 View_PhysicsFieldClipmapCenter;        ; Offset: 3984
;       float View_PhysicsFieldClipmapDistance;       ; Offset: 3996
;       int View_PhysicsFieldClipmapResolution;       ; Offset: 4000
;       int View_PhysicsFieldClipmapExponent;         ; Offset: 4004
;       int View_PhysicsFieldClipmapCount;            ; Offset: 4008
;       int View_PhysicsFieldTargetCount;             ; Offset: 4012
;       int4 View_PhysicsFieldTargets[32];            ; Offset: 4016
;       uint View_InstanceSceneDataSOAStride;         ; Offset: 4528
;       uint View_GPUSceneViewId;                     ; Offset: 4532
;       float View_ViewResolutionFraction;            ; Offset: 4536
;       float View_SubSurfaceColorAsTransmittanceAtDistanceInMeters;; Offset: 4540
;       uint BindlessSampler_View_MaterialTextureBilinearWrapedSampler;; Offset: 4544
;       uint PrePadding_View_4548;                    ; Offset: 4548
;       uint BindlessSampler_View_MaterialTextureBilinearClampedSampler;; Offset: 4552
;       uint PrePadding_View_4556;                    ; Offset: 4556
;       uint BindlessResource_View_VolumetricLightmapIndirectionTexture;; Offset: 4560
;       uint PrePadding_View_4564;                    ; Offset: 4564
;       uint BindlessResource_View_VolumetricLightmapBrickAmbientVector;; Offset: 4568
;       uint PrePadding_View_4572;                    ; Offset: 4572
;       uint BindlessResource_View_VolumetricLightmapBrickSHCoefficients0;; Offset: 4576
;       uint PrePadding_View_4580;                    ; Offset: 4580
;       uint BindlessResource_View_VolumetricLightmapBrickSHCoefficients1;; Offset: 4584
;       uint PrePadding_View_4588;                    ; Offset: 4588
;       uint BindlessResource_View_VolumetricLightmapBrickSHCoefficients2;; Offset: 4592
;       uint PrePadding_View_4596;                    ; Offset: 4596
;       uint BindlessResource_View_VolumetricLightmapBrickSHCoefficients3;; Offset: 4600
;       uint PrePadding_View_4604;                    ; Offset: 4604
;       uint BindlessResource_View_VolumetricLightmapBrickSHCoefficients4;; Offset: 4608
;       uint PrePadding_View_4612;                    ; Offset: 4612
;       uint BindlessResource_View_VolumetricLightmapBrickSHCoefficients5;; Offset: 4616
;       uint PrePadding_View_4620;                    ; Offset: 4620
;       uint BindlessResource_View_SkyBentNormalBrickTexture;; Offset: 4624
;       uint PrePadding_View_4628;                    ; Offset: 4628
;       uint BindlessResource_View_DirectionalLightShadowingBrickTexture;; Offset: 4632
;       uint PrePadding_View_4636;                    ; Offset: 4636
;       uint BindlessSampler_View_VolumetricLightmapBrickAmbientVectorSampler;; Offset: 4640
;       uint PrePadding_View_4644;                    ; Offset: 4644
;       uint BindlessSampler_View_VolumetricLightmapTextureSampler0;; Offset: 4648
;       uint PrePadding_View_4652;                    ; Offset: 4652
;       uint BindlessSampler_View_VolumetricLightmapTextureSampler1;; Offset: 4656
;       uint PrePadding_View_4660;                    ; Offset: 4660
;       uint BindlessSampler_View_VolumetricLightmapTextureSampler2;; Offset: 4664
;       uint PrePadding_View_4668;                    ; Offset: 4668
;       uint BindlessSampler_View_VolumetricLightmapTextureSampler3;; Offset: 4672
;       uint PrePadding_View_4676;                    ; Offset: 4676
;       uint BindlessSampler_View_VolumetricLightmapTextureSampler4;; Offset: 4680
;       uint PrePadding_View_4684;                    ; Offset: 4684
;       uint BindlessSampler_View_VolumetricLightmapTextureSampler5;; Offset: 4688
;       uint PrePadding_View_4692;                    ; Offset: 4692
;       uint BindlessSampler_View_SkyBentNormalTextureSampler;; Offset: 4696
;       uint PrePadding_View_4700;                    ; Offset: 4700
;       uint BindlessSampler_View_DirectionalLightShadowingTextureSampler;; Offset: 4704
;       uint PrePadding_View_4708;                    ; Offset: 4708
;       uint BindlessResource_View_GlobalDistanceFieldPageAtlasTexture;; Offset: 4712
;       uint PrePadding_View_4716;                    ; Offset: 4716
;       uint BindlessResource_View_GlobalDistanceFieldCoverageAtlasTexture;; Offset: 4720
;       uint PrePadding_View_4724;                    ; Offset: 4724
;       uint BindlessResource_View_GlobalDistanceFieldPageTableTexture;; Offset: 4728
;       uint PrePadding_View_4732;                    ; Offset: 4732
;       uint BindlessResource_View_GlobalDistanceFieldMipTexture;; Offset: 4736
;       uint PrePadding_View_4740;                    ; Offset: 4740
;       uint BindlessResource_View_AtmosphereTransmittanceTexture;; Offset: 4744
;       uint PrePadding_View_4748;                    ; Offset: 4748
;       uint BindlessSampler_View_AtmosphereTransmittanceTextureSampler;; Offset: 4752
;       uint PrePadding_View_4756;                    ; Offset: 4756
;       uint BindlessResource_View_AtmosphereIrradianceTexture;; Offset: 4760
;       uint PrePadding_View_4764;                    ; Offset: 4764
;       uint BindlessSampler_View_AtmosphereIrradianceTextureSampler;; Offset: 4768
;       uint PrePadding_View_4772;                    ; Offset: 4772
;       uint BindlessResource_View_AtmosphereInscatterTexture;; Offset: 4776
;       uint PrePadding_View_4780;                    ; Offset: 4780
;       uint BindlessSampler_View_AtmosphereInscatterTextureSampler;; Offset: 4784
;       uint PrePadding_View_4788;                    ; Offset: 4788
;       uint BindlessResource_View_PerlinNoiseGradientTexture;; Offset: 4792
;       uint PrePadding_View_4796;                    ; Offset: 4796
;       uint BindlessSampler_View_PerlinNoiseGradientTextureSampler;; Offset: 4800
;       uint PrePadding_View_4804;                    ; Offset: 4804
;       uint BindlessResource_View_PerlinNoise3DTexture;; Offset: 4808
;       uint PrePadding_View_4812;                    ; Offset: 4812
;       uint BindlessSampler_View_PerlinNoise3DTextureSampler;; Offset: 4816
;       uint PrePadding_View_4820;                    ; Offset: 4820
;       uint BindlessResource_View_SobolSamplingTexture;; Offset: 4824
;       uint PrePadding_View_4828;                    ; Offset: 4828
;       uint BindlessSampler_View_SharedPointWrappedSampler;; Offset: 4832
;       uint PrePadding_View_4836;                    ; Offset: 4836
;       uint BindlessSampler_View_SharedPointClampedSampler;; Offset: 4840
;       uint PrePadding_View_4844;                    ; Offset: 4844
;       uint BindlessSampler_View_SharedBilinearWrappedSampler;; Offset: 4848
;       uint PrePadding_View_4852;                    ; Offset: 4852
;       uint BindlessSampler_View_SharedBilinearClampedSampler;; Offset: 4856
;       uint PrePadding_View_4860;                    ; Offset: 4860
;       uint BindlessSampler_View_SharedBilinearAnisoClampedSampler;; Offset: 4864
;       uint PrePadding_View_4868;                    ; Offset: 4868
;       uint BindlessSampler_View_SharedTrilinearWrappedSampler;; Offset: 4872
;       uint PrePadding_View_4876;                    ; Offset: 4876
;       uint BindlessSampler_View_SharedTrilinearClampedSampler;; Offset: 4880
;       uint PrePadding_View_4884;                    ; Offset: 4884
;       uint BindlessResource_View_PreIntegratedBRDF; ; Offset: 4888
;       uint PrePadding_View_4892;                    ; Offset: 4892
;       uint BindlessSampler_View_PreIntegratedBRDFSampler;; Offset: 4896
;       uint PrePadding_View_4900;                    ; Offset: 4900
;       uint BindlessResource_View_PrimitiveSceneData;; Offset: 4904
;       uint PrePadding_View_4908;                    ; Offset: 4908
;       uint BindlessResource_View_InstanceSceneData; ; Offset: 4912
;       uint PrePadding_View_4916;                    ; Offset: 4916
;       uint BindlessResource_View_InstancePayloadData;; Offset: 4920
;       uint PrePadding_View_4924;                    ; Offset: 4924
;       uint BindlessResource_View_LightmapSceneData; ; Offset: 4928
;       uint PrePadding_View_4932;                    ; Offset: 4932
;       uint BindlessResource_View_SkyIrradianceEnvironmentMap;; Offset: 4936
;       uint PrePadding_View_4940;                    ; Offset: 4940
;       uint BindlessResource_View_TransmittanceLutTexture;; Offset: 4944
;       uint PrePadding_View_4948;                    ; Offset: 4948
;       uint BindlessSampler_View_TransmittanceLutTextureSampler;; Offset: 4952
;       uint PrePadding_View_4956;                    ; Offset: 4956
;       uint BindlessResource_View_SkyViewLutTexture; ; Offset: 4960
;       uint PrePadding_View_4964;                    ; Offset: 4964
;       uint BindlessSampler_View_SkyViewLutTextureSampler;; Offset: 4968
;       uint PrePadding_View_4972;                    ; Offset: 4972
;       uint BindlessResource_View_DistantSkyLightLutTexture;; Offset: 4976
;       uint PrePadding_View_4980;                    ; Offset: 4980
;       uint BindlessSampler_View_DistantSkyLightLutTextureSampler;; Offset: 4984
;       uint PrePadding_View_4988;                    ; Offset: 4988
;       uint BindlessResource_View_CameraAerialPerspectiveVolume;; Offset: 4992
;       uint PrePadding_View_4996;                    ; Offset: 4996
;       uint BindlessSampler_View_CameraAerialPerspectiveVolumeSampler;; Offset: 5000
;       uint PrePadding_View_5004;                    ; Offset: 5004
;       uint BindlessResource_View_HairScatteringLUTTexture;; Offset: 5008
;       uint PrePadding_View_5012;                    ; Offset: 5012
;       uint BindlessSampler_View_HairScatteringLUTSampler;; Offset: 5016
;       uint PrePadding_View_5020;                    ; Offset: 5020
;       uint BindlessResource_View_LTCMatTexture;     ; Offset: 5024
;       uint PrePadding_View_5028;                    ; Offset: 5028
;       uint BindlessSampler_View_LTCMatSampler;      ; Offset: 5032
;       uint PrePadding_View_5036;                    ; Offset: 5036
;       uint BindlessResource_View_LTCAmpTexture;     ; Offset: 5040
;       uint PrePadding_View_5044;                    ; Offset: 5044
;       uint BindlessSampler_View_LTCAmpSampler;      ; Offset: 5048
;       uint PrePadding_View_5052;                    ; Offset: 5052
;       uint View_bShadingEnergyConservation;         ; Offset: 5056
;       uint View_bShadingEnergyPreservation;         ; Offset: 5060
;       uint BindlessResource_View_ShadingEnergyGGXSpecTexture;; Offset: 5064
;       uint PrePadding_View_5068;                    ; Offset: 5068
;       uint BindlessResource_View_ShadingEnergyGGXGlassTexture;; Offset: 5072
;       uint PrePadding_View_5076;                    ; Offset: 5076
;       uint BindlessResource_View_ShadingEnergyClothSpecTexture;; Offset: 5080
;       uint PrePadding_View_5084;                    ; Offset: 5084
;       uint BindlessResource_View_ShadingEnergyDiffuseTexture;; Offset: 5088
;       uint PrePadding_View_5092;                    ; Offset: 5092
;       uint BindlessSampler_View_ShadingEnergySampler;; Offset: 5096
;       uint PrePadding_View_5100;                    ; Offset: 5100
;       uint BindlessResource_View_SSProfilesTexture; ; Offset: 5104
;       uint PrePadding_View_5108;                    ; Offset: 5108
;       uint BindlessSampler_View_SSProfilesSampler;  ; Offset: 5112
;       uint PrePadding_View_5116;                    ; Offset: 5116
;       uint BindlessSampler_View_SSProfilesTransmissionSampler;; Offset: 5120
;       uint PrePadding_View_5124;                    ; Offset: 5124
;       uint BindlessResource_View_SSProfilesPreIntegratedTexture;; Offset: 5128
;       uint PrePadding_View_5132;                    ; Offset: 5132
;       uint BindlessSampler_View_SSProfilesPreIntegratedSampler;; Offset: 5136
;       uint PrePadding_View_5140;                    ; Offset: 5140
;       uint BindlessResource_View_WaterIndirection;  ; Offset: 5144
;       uint PrePadding_View_5148;                    ; Offset: 5148
;       uint BindlessResource_View_WaterData;         ; Offset: 5152
;       uint PrePadding_View_5156;                    ; Offset: 5156
;       uint PrePadding_View_5160;                    ; Offset: 5160
;       uint PrePadding_View_5164;                    ; Offset: 5164
;       float4 View_RectLightAtlasSizeAndInvSize;     ; Offset: 5168
;       float View_RectLightAtlasMaxMipLevel;         ; Offset: 5184
;       float PrePadding_View_5188;                   ; Offset: 5188
;       uint BindlessResource_View_RectLightAtlasTexture;; Offset: 5192
;       uint PrePadding_View_5196;                    ; Offset: 5196
;       uint BindlessSampler_View_RectLightAtlasSampler;; Offset: 5200
;       uint PrePadding_View_5204;                    ; Offset: 5204
;       uint BindlessSampler_View_LandscapeWeightmapSampler;; Offset: 5208
;       uint PrePadding_View_5212;                    ; Offset: 5212
;       uint BindlessResource_View_LandscapeIndirection;; Offset: 5216
;       uint PrePadding_View_5220;                    ; Offset: 5220
;       uint BindlessResource_View_LandscapePerComponentData;; Offset: 5224
;       uint PrePadding_View_5228;                    ; Offset: 5228
;       uint BindlessResource_View_VTFeedbackBuffer;  ; Offset: 5232
;       uint PrePadding_View_5236;                    ; Offset: 5236
;       uint BindlessResource_View_EditorVisualizeLevelInstanceIds;; Offset: 5240
;       uint PrePadding_View_5244;                    ; Offset: 5244
;       uint BindlessResource_View_EditorSelectedHitProxyIds;; Offset: 5248
;       uint PrePadding_View_5252;                    ; Offset: 5252
;       uint BindlessResource_View_PhysicsFieldClipmapBuffer;; Offset: 5256
;       uint PrePadding_View_5260;                    ; Offset: 5260
;       float3 View_TLASRelativePreViewTranslation;   ; Offset: 5264
;       float PrePadding_View_5276;                   ; Offset: 5276
;       float3 View_TLASViewTilePosition;             ; Offset: 5280
;   
;   } UniformBufferConstants_View;                    ; Offset:    0 Size:  5292
;
; }
;
; cbuffer UniformBufferConstants_LandscapeMVF
; {
;
;   struct UniformBufferConstants_LandscapeMVF
;   {
;
;       int2 LandscapeMVF_SubXY;                      ; Offset:    0
;   
;   } UniformBufferConstants_LandscapeMVF;            ; Offset:    0 Size:     8
;
; }
;
; cbuffer UniformBufferConstants_LandscapeContinuousLODParameters
; {
;
;   struct UniformBufferConstants_LandscapeContinuousLODParameters
;   {
;
;       int LandscapeContinuousLODParameters_LandscapeIndex;; Offset:    0
;       int PrePadding_LandscapeContinuousLODParameters_4;; Offset:    4
;       int2 LandscapeContinuousLODParameters_Min;    ; Offset:    8
;       int2 LandscapeContinuousLODParameters_Size;   ; Offset:   16
;       uint BindlessResource_LandscapeContinuousLODParameters_SectionLODBias;; Offset:   24
;   
;   } UniformBufferConstants_LandscapeContinuousLODParameters;; Offset:    0 Size:    28
;
; }
;
; cbuffer UniformBufferConstants_LandscapeParameters
; {
;
;   struct UniformBufferConstants_LandscapeParameters
;   {
;
;       int LandscapeParameters_ComponentBaseX;       ; Offset:    0
;       int LandscapeParameters_ComponentBaseY;       ; Offset:    4
;       int LandscapeParameters_SubsectionSizeVerts;  ; Offset:    8
;       int LandscapeParameters_NumSubsections;       ; Offset:   12
;       int LandscapeParameters_LastLOD;              ; Offset:   16
;       int PrePadding_LandscapeParameters_20;        ; Offset:   20
;       int PrePadding_LandscapeParameters_24;        ; Offset:   24
;       int PrePadding_LandscapeParameters_28;        ; Offset:   28
;       float4 LandscapeParameters_HeightmapUVScaleBias;; Offset:   32
;       float4 LandscapeParameters_WeightmapUVScaleBias;; Offset:   48
;       float4 LandscapeParameters_LandscapeLightmapScaleBias;; Offset:   64
;       float4 LandscapeParameters_SubsectionSizeVertsLayerUVPan;; Offset:   80
;       float4 LandscapeParameters_SubsectionOffsetParams;; Offset:   96
;       float4 LandscapeParameters_LightmapSubsectionOffsetParams;; Offset:  112
;       row_major float4x4 LandscapeParameters_LocalToWorldNoScaling;; Offset:  128
;       uint BindlessResource_LandscapeParameters_HeightmapTexture;; Offset:  192
;       uint PrePadding_LandscapeParameters_196;      ; Offset:  196
;       uint BindlessSampler_LandscapeParameters_HeightmapTextureSampler;; Offset:  200
;       uint PrePadding_LandscapeParameters_204;      ; Offset:  204
;       uint BindlessResource_LandscapeParameters_NormalmapTexture;; Offset:  208
;       uint PrePadding_LandscapeParameters_212;      ; Offset:  212
;       uint BindlessSampler_LandscapeParameters_NormalmapTextureSampler;; Offset:  216
;       uint PrePadding_LandscapeParameters_220;      ; Offset:  220
;       uint BindlessResource_LandscapeParameters_XYOffsetmapTexture;; Offset:  224
;       uint PrePadding_LandscapeParameters_228;      ; Offset:  228
;       uint BindlessSampler_LandscapeParameters_XYOffsetmapTextureSampler;; Offset:  232
;   
;   } UniformBufferConstants_LandscapeParameters;     ; Offset:    0 Size:   236
;
; }
;
; cbuffer UniformBufferConstants_Material
; {
;
;   struct UniformBufferConstants_Material
;   {
;
;       float4 Material_PreshaderBuffer[9];           ; Offset:    0
;       uint BindlessResource_Material_Texture2D_0;   ; Offset:  144
;       uint PrePadding_Material_148;                 ; Offset:  148
;       uint BindlessSampler_Material_Texture2D_0Sampler;; Offset:  152
;       uint PrePadding_Material_156;                 ; Offset:  156
;       uint BindlessResource_Material_Texture2D_1;   ; Offset:  160
;       uint PrePadding_Material_164;                 ; Offset:  164
;       uint BindlessSampler_Material_Texture2D_1Sampler;; Offset:  168
;       uint PrePadding_Material_172;                 ; Offset:  172
;       uint BindlessResource_Material_Texture2D_2;   ; Offset:  176
;       uint PrePadding_Material_180;                 ; Offset:  180
;       uint BindlessSampler_Material_Texture2D_2Sampler;; Offset:  184
;       uint PrePadding_Material_188;                 ; Offset:  188
;       uint BindlessResource_Material_Texture2D_3;   ; Offset:  192
;       uint PrePadding_Material_196;                 ; Offset:  196
;       uint BindlessSampler_Material_Texture2D_3Sampler;; Offset:  200
;       uint PrePadding_Material_204;                 ; Offset:  204
;       uint BindlessResource_Material_Texture2D_4;   ; Offset:  208
;       uint PrePadding_Material_212;                 ; Offset:  212
;       uint BindlessSampler_Material_Texture2D_4Sampler;; Offset:  216
;       uint PrePadding_Material_220;                 ; Offset:  220
;       uint BindlessResource_Material_Texture2D_5;   ; Offset:  224
;       uint PrePadding_Material_228;                 ; Offset:  228
;       uint BindlessSampler_Material_Texture2D_5Sampler;; Offset:  232
;       uint PrePadding_Material_236;                 ; Offset:  236
;       uint BindlessResource_Material_Texture2D_6;   ; Offset:  240
;       uint PrePadding_Material_244;                 ; Offset:  244
;       uint BindlessSampler_Material_Texture2D_6Sampler;; Offset:  248
;       uint PrePadding_Material_252;                 ; Offset:  252
;       uint BindlessResource_Material_Texture2D_7;   ; Offset:  256
;       uint PrePadding_Material_260;                 ; Offset:  260
;       uint BindlessSampler_Material_Texture2D_7Sampler;; Offset:  264
;       uint PrePadding_Material_268;                 ; Offset:  268
;       uint BindlessResource_Material_Texture2D_8;   ; Offset:  272
;       uint PrePadding_Material_276;                 ; Offset:  276
;       uint BindlessSampler_Material_Texture2D_8Sampler;; Offset:  280
;       uint PrePadding_Material_284;                 ; Offset:  284
;       uint BindlessResource_Material_Texture2D_9;   ; Offset:  288
;       uint PrePadding_Material_292;                 ; Offset:  292
;       uint BindlessSampler_Material_Texture2D_9Sampler;; Offset:  296
;       uint PrePadding_Material_300;                 ; Offset:  300
;       uint BindlessResource_Material_Texture2D_10;  ; Offset:  304
;       uint PrePadding_Material_308;                 ; Offset:  308
;       uint BindlessSampler_Material_Texture2D_10Sampler;; Offset:  312
;       uint PrePadding_Material_316;                 ; Offset:  316
;       uint BindlessResource_Material_Texture2D_11;  ; Offset:  320
;       uint PrePadding_Material_324;                 ; Offset:  324
;       uint BindlessSampler_Material_Texture2D_11Sampler;; Offset:  328
;       uint PrePadding_Material_332;                 ; Offset:  332
;       uint BindlessResource_Material_Texture2D_12;  ; Offset:  336
;       uint PrePadding_Material_340;                 ; Offset:  340
;       uint BindlessSampler_Material_Texture2D_12Sampler;; Offset:  344
;       uint PrePadding_Material_348;                 ; Offset:  348
;       uint BindlessResource_Material_Texture2D_13;  ; Offset:  352
;       uint PrePadding_Material_356;                 ; Offset:  356
;       uint BindlessSampler_Material_Texture2D_13Sampler;; Offset:  360
;       uint PrePadding_Material_364;                 ; Offset:  364
;       uint BindlessResource_Material_Texture2D_14;  ; Offset:  368
;       uint PrePadding_Material_372;                 ; Offset:  372
;       uint BindlessSampler_Material_Texture2D_14Sampler;; Offset:  376
;       uint PrePadding_Material_380;                 ; Offset:  380
;       uint BindlessResource_Material_Texture2D_15;  ; Offset:  384
;       uint PrePadding_Material_388;                 ; Offset:  388
;       uint BindlessSampler_Material_Texture2D_15Sampler;; Offset:  392
;       uint PrePadding_Material_396;                 ; Offset:  396
;       uint BindlessResource_Material_Texture2D_16;  ; Offset:  400
;       uint PrePadding_Material_404;                 ; Offset:  404
;       uint BindlessSampler_Material_Texture2D_16Sampler;; Offset:  408
;       uint PrePadding_Material_412;                 ; Offset:  412
;       uint BindlessSampler_Material_Wrap_WorldGroupSettings;; Offset:  416
;       uint PrePadding_Material_420;                 ; Offset:  420
;       uint BindlessSampler_Material_Clamp_WorldGroupSettings;; Offset:  424
;   
;   } UniformBufferConstants_Material;                ; Offset:    0 Size:   428
;
; }
;
; cbuffer HitGroupSystemRootConstants
; {
;
;   struct HitGroupSystemRootConstants
;   {
;
;       struct struct.FHitGroupSystemRootConstants
;       {
;
;           uint Config;                              ; Offset:    0
;           uint IndexBufferOffsetInBytes;            ; Offset:    4
;           uint FirstPrimitive;                      ; Offset:    8
;           uint UserData;                            ; Offset:   12
;           uint BaseInstanceIndex;                   ; Offset:   16
;           uint Pad0;                                ; Offset:   20
;       
;       } HitGroupSystemRootConstants;                ; Offset:    0
;
;   
;   } HitGroupSystemRootConstants;                    ; Offset:    0 Size:    24
;
; }
;
; Resource bind info for View_PrimitiveSceneData
; {
;
;   float4 $Element;                                  ; Offset:    0 Size:    16
;
; }
;
; Resource bind info for View_InstanceSceneData
; {
;
;   float4 $Element;                                  ; Offset:    0 Size:    16
;
; }
;
; Resource bind info for View_SkyIrradianceEnvironmentMap
; {
;
;   float4 $Element;                                  ; Offset:    0 Size:    16
;
; }
;
;
; Resource Bindings:
;
; Name                                 Type  Format         Dim      ID      HLSL Bind  Count
; ------------------------------ ---------- ------- ----------- ------- -------------- ------
; UniformBufferConstants_View       cbuffer      NA          NA     CB0            cb0     1
; UniformBufferConstants_LandscapeMVF   cbuffer      NA          NA     CB1            cb1     1
; UniformBufferConstants_LandscapeContinuousLODParameters   cbuffer      NA          NA     CB2            cb2     1
; UniformBufferConstants_LandscapeParameters   cbuffer      NA          NA     CB3            cb3     1
; UniformBufferConstants_Material   cbuffer      NA          NA     CB4            cb4     1
; HitGroupSystemRootConstants       cbuffer      NA          NA     CB5     cb0,space2     1
; View_SharedBilinearClampedSampler   sampler      NA          NA      S0             s0     1
; View_LandscapeWeightmapSampler    sampler      NA          NA      S1             s1     1
; LandscapeParameters_HeightmapTextureSampler   sampler      NA          NA      S2             s2     1
; LandscapeParameters_NormalmapTextureSampler   sampler      NA          NA      S3             s3     1
; LandscapeParameters_XYOffsetmapTextureSampler   sampler      NA          NA      S4             s4     1
; Material_Texture2D_2Sampler       sampler      NA          NA      S5             s5     1
; Material_Texture2D_3Sampler       sampler      NA          NA      S6             s6     1
; Material_Texture2D_4Sampler       sampler      NA          NA      S7             s7     1
; Material_Texture2D_5Sampler       sampler      NA          NA      S8             s8     1
; Material_Texture2D_6Sampler       sampler      NA          NA      S9             s9     1
; Material_Texture2D_7Sampler       sampler      NA          NA     S10            s10     1
; Material_Texture2D_8Sampler       sampler      NA          NA     S11            s11     1
; Material_Texture2D_9Sampler       sampler      NA          NA     S12            s12     1
; Material_Texture2D_10Sampler      sampler      NA          NA     S13            s13     1
; Material_Texture2D_11Sampler      sampler      NA          NA     S14            s14     1
; Material_Texture2D_12Sampler      sampler      NA          NA     S15            s15     1
; Material_Texture2D_13Sampler      sampler      NA          NA     S16            s16     1
; Material_Texture2D_14Sampler      sampler      NA          NA     S17            s17     1
; Material_Texture2D_15Sampler      sampler      NA          NA     S18            s18     1
; Material_Texture2D_16Sampler      sampler      NA          NA     S19            s19     1
; View_VolumetricLightmapIndirectionTexture   texture     u32          3d      T0             t0     1
; View_VolumetricLightmapBrickAmbientVector   texture     f32          3d      T1             t1     1
; View_VolumetricLightmapBrickSHCoefficients0   texture     f32          3d      T2             t2     1
; View_VolumetricLightmapBrickSHCoefficients1   texture     f32          3d      T3             t3     1
; View_VolumetricLightmapBrickSHCoefficients2   texture     f32          3d      T4             t4     1
; View_VolumetricLightmapBrickSHCoefficients3   texture     f32          3d      T5             t5     1
; View_VolumetricLightmapBrickSHCoefficients4   texture     f32          3d      T6             t6     1
; View_VolumetricLightmapBrickSHCoefficients5   texture     f32          3d      T7             t7     1
; View_SkyBentNormalBrickTexture    texture     f32          3d      T8             t8     1
; View_PrimitiveSceneData           texture  struct         r/o      T9             t9     1
; View_InstanceSceneData            texture  struct         r/o     T10            t10     1
; View_SkyIrradianceEnvironmentMap   texture  struct         r/o     T11            t11     1
; View_LandscapeIndirection         texture     u32         buf     T12            t12     1
; View_LandscapePerComponentData    texture     f32         buf     T13            t13     1
; LandscapeContinuousLODParameters_SectionLODBias   texture     f32         buf     T14            t14     1
; LandscapeParameters_HeightmapTexture   texture     f32          2d     T15            t15     1
; LandscapeParameters_NormalmapTexture   texture     f32          2d     T16            t16     1
; LandscapeParameters_XYOffsetmapTexture   texture     f32          2d     T17            t17     1
; Material_Texture2D_0              texture     f32          2d     T18            t18     1
; Material_Texture2D_1              texture     f32          2d     T19            t19     1
; Material_Texture2D_2              texture     f32          2d     T20            t20     1
; Material_Texture2D_3              texture     f32          2d     T21            t21     1
; Material_Texture2D_4              texture     f32          2d     T22            t22     1
; Material_Texture2D_5              texture     f32          2d     T23            t23     1
; Material_Texture2D_6              texture     f32          2d     T24            t24     1
; Material_Texture2D_7              texture     f32          2d     T25            t25     1
; Material_Texture2D_8              texture     f32          2d     T26            t26     1
; Material_Texture2D_9              texture     f32          2d     T27            t27     1
; Material_Texture2D_10             texture     f32          2d     T28            t28     1
; Material_Texture2D_11             texture     f32          2d     T29            t29     1
; Material_Texture2D_12             texture     f32          2d     T30            t30     1
; Material_Texture2D_13             texture     f32          2d     T31            t31     1
; Material_Texture2D_14             texture     f32          2d     T32            t32     1
; Material_Texture2D_15             texture     f32          2d     T33            t33     1
; Material_Texture2D_16             texture     f32          2d     T34            t34     1
; HitGroupSystemIndexBuffer         texture    byte         r/o     T35      t0,space2     1
;
target datalayout = "e-m:e-p:32:32-i1:32-i8:8-i16:16-i32:32-i64:64-f16:16-f32:32-f64:64-n8:16:32:64"
target triple = "dxil-ms-dx"

%dx.types.Handle = type { i8* }
%struct.FPackedMaterialClosestHitPayload = type { %struct.FMinimalPayload, i32, float, [3 x i32], [2 x i32], i32, i32, [2 x i32], i32, [2 x i32], i32 }
%struct.FMinimalPayload = type { float }
%struct.FRayTracingIntersectionAttributes = type { <2 x i32> }
%dx.types.ResourceProperties = type { i32, i32 }
%dx.types.CBufRet.i32 = type { i32, i32, i32, i32 }
%dx.types.ResRet.i32 = type { i32, i32, i32, i32, i32 }
%dx.types.CBufRet.f32 = type { float, float, float, float }
%dx.types.ResRet.f32 = type { float, float, float, float, i32 }
%"class.Texture3D<vector<unsigned int, 4> >" = type { <4 x i32>, %"class.Texture3D<vector<unsigned int, 4> >::mips_type" }
%"class.Texture3D<vector<unsigned int, 4> >::mips_type" = type { i32 }
%"class.Texture3D<vector<float, 4> >" = type { <4 x float>, %"class.Texture3D<vector<float, 4> >::mips_type" }
%"class.Texture3D<vector<float, 4> >::mips_type" = type { i32 }
%"class.StructuredBuffer<vector<float, 4> >" = type { <4 x float> }
%"class.Buffer<unsigned int>" = type { i32 }
%"class.Buffer<float>" = type { float }
%"class.Texture2D<vector<float, 4> >" = type { <4 x float>, %"class.Texture2D<vector<float, 4> >::mips_type" }
%"class.Texture2D<vector<float, 4> >::mips_type" = type { i32 }
%struct.ByteAddressBuffer = type { i32 }
%UniformBufferConstants_View = type { %class.matrix.float.4.4, %class.matrix.float.4.4, %class.matrix.float.4.4, %class.matrix.float.4.4, %class.matrix.float.4.4, %class.matrix.float.4.4, %class.matrix.float.4.4, %class.matrix.float.4.4, %class.matrix.float.4.4, %class.matrix.float.4.4, %class.matrix.float.4.4, %class.matrix.float.4.4, %class.matrix.float.4.4, %class.matrix.float.4.4, %class.matrix.float.4.4, %class.matrix.float.4.4, <3 x float>, float, <3 x float>, float, <3 x float>, float, <3 x float>, float, <3 x float>, float, <3 x float>, float, <3 x float>, float, <4 x float>, <4 x float>, <3 x float>, float, <3 x float>, float, <3 x float>, float, <3 x float>, float, %class.matrix.float.4.4, %class.matrix.float.4.4, %class.matrix.float.4.4, %class.matrix.float.4.4, %class.matrix.float.4.4, %class.matrix.float.4.4, %class.matrix.float.4.4, <3 x float>, float, <3 x float>, float, <3 x float>, float, <3 x float>, float, %class.matrix.float.4.4, %class.matrix.float.4.4, %class.matrix.float.4.4, %class.matrix.float.4.4, <4 x float>, <4 x float>, <2 x float>, <2 x float>, <4 x float>, <4 x float>, <4 x i32>, <4 x float>, <4 x float>, <4 x float>, <4 x float>, <2 x float>, <2 x float>, i32, float, float, float, <4 x float>, <4 x float>, <4 x float>, <2 x float>, float, float, float, float, float, float, <3 x float>, float, float, float, float, float, float, float, i32, i32, i32, i32, i32, float, float, float, float, float, <4 x float>, <3 x float>, float, [2 x <4 x float>], [2 x <4 x float>], <4 x float>, <4 x float>, float, float, float, float, float, float, float, float, float, float, float, float, <3 x float>, float, <3 x float>, float, <3 x float>, float, [2 x <4 x float>], [2 x <4 x float>], [2 x <4 x float>], [2 x <4 x float>], [2 x <4 x float>], <4 x float>, <3 x float>, float, <4 x float>, %class.matrix.float.4.4, <4 x float>, float, float, float, float, <4 x float>, float, float, float, float, float, float, float, float, <3 x float>, float, float, float, float, float, <4 x float>, float, float, float, float, <4 x float>, [8 x <4 x float>], float, float, float, float, i32, float, float, float, <3 x float>, i32, [6 x <4 x float>], [6 x <4 x float>], [6 x <4 x float>], [6 x <4 x float>], float, float, i32, i32, <3 x float>, float, <3 x float>, float, float, float, i32, float, float, float, float, float, <2 x i32>, float, float, <3 x float>, float, <3 x float>, float, <2 x float>, float, float, <3 x float>, float, <3 x float>, float, <3 x float>, float, <3 x float>, float, float, float, float, float, [2 x <4 x float>], float, i32, i32, i32, i32, i32, i32, i32, <4 x float>, <2 x float>, float, float, <4 x float>, float, i32, float, float, <4 x float>, i32, i32, i32, float, <4 x float>, <4 x float>, <3 x float>, float, i32, i32, i32, i32, [32 x <4 x i32>], i32, i32, float, float, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, <4 x float>, float, float, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, <3 x float>, float, <3 x float> }
%class.matrix.float.4.4 = type { [4 x <4 x float>] }
%UniformBufferConstants_LandscapeMVF = type { <2 x i32> }
%UniformBufferConstants_LandscapeContinuousLODParameters = type { i32, i32, <2 x i32>, <2 x i32>, i32 }
%UniformBufferConstants_LandscapeParameters = type { i32, i32, i32, i32, i32, i32, i32, i32, <4 x float>, <4 x float>, <4 x float>, <4 x float>, <4 x float>, <4 x float>, %class.matrix.float.4.4, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%UniformBufferConstants_Material = type { [9 x <4 x float>], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%HitGroupSystemRootConstants = type { %struct.FHitGroupSystemRootConstants }
%struct.FHitGroupSystemRootConstants = type { i32, i32, i32, i32, i32, i32 }
%struct.SamplerState = type { i32 }

@"\01?View_VolumetricLightmapIndirectionTexture@@3V?$Texture3D@V?$vector@I$03@@@@A" = external constant %dx.types.Handle, align 4
@"\01?View_VolumetricLightmapBrickAmbientVector@@3V?$Texture3D@V?$vector@M$03@@@@A" = external constant %dx.types.Handle, align 4
@"\01?View_VolumetricLightmapBrickSHCoefficients0@@3V?$Texture3D@V?$vector@M$03@@@@A" = external constant %dx.types.Handle, align 4
@"\01?View_VolumetricLightmapBrickSHCoefficients1@@3V?$Texture3D@V?$vector@M$03@@@@A" = external constant %dx.types.Handle, align 4
@"\01?View_VolumetricLightmapBrickSHCoefficients2@@3V?$Texture3D@V?$vector@M$03@@@@A" = external constant %dx.types.Handle, align 4
@"\01?View_VolumetricLightmapBrickSHCoefficients3@@3V?$Texture3D@V?$vector@M$03@@@@A" = external constant %dx.types.Handle, align 4
@"\01?View_VolumetricLightmapBrickSHCoefficients4@@3V?$Texture3D@V?$vector@M$03@@@@A" = external constant %dx.types.Handle, align 4
@"\01?View_VolumetricLightmapBrickSHCoefficients5@@3V?$Texture3D@V?$vector@M$03@@@@A" = external constant %dx.types.Handle, align 4
@"\01?View_SkyBentNormalBrickTexture@@3V?$Texture3D@V?$vector@M$03@@@@A" = external constant %dx.types.Handle, align 4
@"\01?View_SharedBilinearClampedSampler@@3USamplerState@@A" = external constant %dx.types.Handle, align 4
@"\01?View_PrimitiveSceneData@@3V?$StructuredBuffer@V?$vector@M$03@@@@A" = external constant %dx.types.Handle, align 4
@"\01?View_InstanceSceneData@@3V?$StructuredBuffer@V?$vector@M$03@@@@A" = external constant %dx.types.Handle, align 4
@"\01?View_SkyIrradianceEnvironmentMap@@3V?$StructuredBuffer@V?$vector@M$03@@@@A" = external constant %dx.types.Handle, align 4
@"\01?View_LandscapeWeightmapSampler@@3USamplerState@@A" = external constant %dx.types.Handle, align 4
@"\01?View_LandscapeIndirection@@3V?$Buffer@I@@A" = external constant %dx.types.Handle, align 4
@"\01?View_LandscapePerComponentData@@3V?$Buffer@M@@A" = external constant %dx.types.Handle, align 4
@"\01?LandscapeContinuousLODParameters_SectionLODBias@@3V?$Buffer@M@@A" = external constant %dx.types.Handle, align 4
@"\01?LandscapeParameters_HeightmapTexture@@3V?$Texture2D@V?$vector@M$03@@@@A" = external constant %dx.types.Handle, align 4
@"\01?LandscapeParameters_HeightmapTextureSampler@@3USamplerState@@A" = external constant %dx.types.Handle, align 4
@"\01?LandscapeParameters_NormalmapTexture@@3V?$Texture2D@V?$vector@M$03@@@@A" = external constant %dx.types.Handle, align 4
@"\01?LandscapeParameters_NormalmapTextureSampler@@3USamplerState@@A" = external constant %dx.types.Handle, align 4
@"\01?LandscapeParameters_XYOffsetmapTexture@@3V?$Texture2D@V?$vector@M$03@@@@A" = external constant %dx.types.Handle, align 4
@"\01?LandscapeParameters_XYOffsetmapTextureSampler@@3USamplerState@@A" = external constant %dx.types.Handle, align 4
@"\01?Material_Texture2D_0@@3V?$Texture2D@V?$vector@M$03@@@@A" = external constant %dx.types.Handle, align 4
@"\01?Material_Texture2D_1@@3V?$Texture2D@V?$vector@M$03@@@@A" = external constant %dx.types.Handle, align 4
@"\01?Material_Texture2D_2@@3V?$Texture2D@V?$vector@M$03@@@@A" = external constant %dx.types.Handle, align 4
@"\01?Material_Texture2D_2Sampler@@3USamplerState@@A" = external constant %dx.types.Handle, align 4
@"\01?Material_Texture2D_3@@3V?$Texture2D@V?$vector@M$03@@@@A" = external constant %dx.types.Handle, align 4
@"\01?Material_Texture2D_3Sampler@@3USamplerState@@A" = external constant %dx.types.Handle, align 4
@"\01?Material_Texture2D_4@@3V?$Texture2D@V?$vector@M$03@@@@A" = external constant %dx.types.Handle, align 4
@"\01?Material_Texture2D_4Sampler@@3USamplerState@@A" = external constant %dx.types.Handle, align 4
@"\01?Material_Texture2D_5@@3V?$Texture2D@V?$vector@M$03@@@@A" = external constant %dx.types.Handle, align 4
@"\01?Material_Texture2D_5Sampler@@3USamplerState@@A" = external constant %dx.types.Handle, align 4
@"\01?Material_Texture2D_6@@3V?$Texture2D@V?$vector@M$03@@@@A" = external constant %dx.types.Handle, align 4
@"\01?Material_Texture2D_6Sampler@@3USamplerState@@A" = external constant %dx.types.Handle, align 4
@"\01?Material_Texture2D_7@@3V?$Texture2D@V?$vector@M$03@@@@A" = external constant %dx.types.Handle, align 4
@"\01?Material_Texture2D_7Sampler@@3USamplerState@@A" = external constant %dx.types.Handle, align 4
@"\01?Material_Texture2D_8@@3V?$Texture2D@V?$vector@M$03@@@@A" = external constant %dx.types.Handle, align 4
@"\01?Material_Texture2D_8Sampler@@3USamplerState@@A" = external constant %dx.types.Handle, align 4
@"\01?Material_Texture2D_9@@3V?$Texture2D@V?$vector@M$03@@@@A" = external constant %dx.types.Handle, align 4
@"\01?Material_Texture2D_9Sampler@@3USamplerState@@A" = external constant %dx.types.Handle, align 4
@"\01?Material_Texture2D_10@@3V?$Texture2D@V?$vector@M$03@@@@A" = external constant %dx.types.Handle, align 4
@"\01?Material_Texture2D_10Sampler@@3USamplerState@@A" = external constant %dx.types.Handle, align 4
@"\01?Material_Texture2D_11@@3V?$Texture2D@V?$vector@M$03@@@@A" = external constant %dx.types.Handle, align 4
@"\01?Material_Texture2D_11Sampler@@3USamplerState@@A" = external constant %dx.types.Handle, align 4
@"\01?Material_Texture2D_12@@3V?$Texture2D@V?$vector@M$03@@@@A" = external constant %dx.types.Handle, align 4
@"\01?Material_Texture2D_12Sampler@@3USamplerState@@A" = external constant %dx.types.Handle, align 4
@"\01?Material_Texture2D_13@@3V?$Texture2D@V?$vector@M$03@@@@A" = external constant %dx.types.Handle, align 4
@"\01?Material_Texture2D_13Sampler@@3USamplerState@@A" = external constant %dx.types.Handle, align 4
@"\01?Material_Texture2D_14@@3V?$Texture2D@V?$vector@M$03@@@@A" = external constant %dx.types.Handle, align 4
@"\01?Material_Texture2D_14Sampler@@3USamplerState@@A" = external constant %dx.types.Handle, align 4
@"\01?Material_Texture2D_15@@3V?$Texture2D@V?$vector@M$03@@@@A" = external constant %dx.types.Handle, align 4
@"\01?Material_Texture2D_15Sampler@@3USamplerState@@A" = external constant %dx.types.Handle, align 4
@"\01?Material_Texture2D_16@@3V?$Texture2D@V?$vector@M$03@@@@A" = external constant %dx.types.Handle, align 4
@"\01?Material_Texture2D_16Sampler@@3USamplerState@@A" = external constant %dx.types.Handle, align 4
@"\01?HitGroupSystemIndexBuffer@@3UByteAddressBuffer@@A" = external constant %dx.types.Handle, align 4
@llvm.global_ctors = appending global [0 x { i32, void ()*, i8* }] zeroinitializer
@UniformBufferConstants_View = external constant %dx.types.Handle
@UniformBufferConstants_LandscapeMVF = external constant %dx.types.Handle
@UniformBufferConstants_LandscapeContinuousLODParameters = external constant %dx.types.Handle
@UniformBufferConstants_LandscapeParameters = external constant %dx.types.Handle
@UniformBufferConstants_Material = external constant %dx.types.Handle
@HitGroupSystemRootConstants = external constant %dx.types.Handle
@NeighborOffset.i.i.i.i.0.hca = internal unnamed_addr constant [4 x i32] [i32 0, i32 -1, i32 1, i32 0]
@NeighborOffset.i.i.i.i.1.hca = internal unnamed_addr constant [4 x i32] [i32 -1, i32 0, i32 0, i32 1]

; Function Attrs: nounwind
declare void @llvm.lifetime.start(i64, i8* nocapture) #0

; Function Attrs: nounwind
declare void @llvm.lifetime.end(i64, i8* nocapture) #0

; Function Attrs: nounwind
define void @"\01?MaterialCHS@@YAXUFPackedMaterialClosestHitPayload@@UFRayTracingIntersectionAttributes@@@Z"(%struct.FPackedMaterialClosestHitPayload* noalias %PackedPayload, %struct.FRayTracingIntersectionAttributes* nocapture readonly %Attributes) #0 {
  %1 = load %dx.types.Handle, %dx.types.Handle* @"\01?Material_Texture2D_16Sampler@@3USamplerState@@A", align 4, !noalias !77
  %2 = load %dx.types.Handle, %dx.types.Handle* @"\01?Material_Texture2D_15Sampler@@3USamplerState@@A", align 4, !noalias !77
  %3 = load %dx.types.Handle, %dx.types.Handle* @"\01?Material_Texture2D_14Sampler@@3USamplerState@@A", align 4, !noalias !77
  %4 = load %dx.types.Handle, %dx.types.Handle* @"\01?Material_Texture2D_13Sampler@@3USamplerState@@A", align 4, !noalias !77
  %5 = load %dx.types.Handle, %dx.types.Handle* @"\01?Material_Texture2D_12Sampler@@3USamplerState@@A", align 4, !noalias !77
  %6 = load %dx.types.Handle, %dx.types.Handle* @"\01?Material_Texture2D_11Sampler@@3USamplerState@@A", align 4, !noalias !77
  %7 = load %dx.types.Handle, %dx.types.Handle* @"\01?Material_Texture2D_10Sampler@@3USamplerState@@A", align 4, !noalias !77
  %8 = load %dx.types.Handle, %dx.types.Handle* @"\01?Material_Texture2D_9Sampler@@3USamplerState@@A", align 4, !noalias !77
  %9 = load %dx.types.Handle, %dx.types.Handle* @"\01?Material_Texture2D_8Sampler@@3USamplerState@@A", align 4, !noalias !77
  %10 = load %dx.types.Handle, %dx.types.Handle* @"\01?Material_Texture2D_7Sampler@@3USamplerState@@A", align 4, !noalias !77
  %11 = load %dx.types.Handle, %dx.types.Handle* @"\01?Material_Texture2D_6Sampler@@3USamplerState@@A", align 4, !noalias !82
  %12 = load %dx.types.Handle, %dx.types.Handle* @"\01?Material_Texture2D_5Sampler@@3USamplerState@@A", align 4, !noalias !82
  %13 = load %dx.types.Handle, %dx.types.Handle* @"\01?Material_Texture2D_4Sampler@@3USamplerState@@A", align 4, !noalias !82
  %14 = load %dx.types.Handle, %dx.types.Handle* @"\01?Material_Texture2D_3Sampler@@3USamplerState@@A", align 4, !noalias !82
  %15 = load %dx.types.Handle, %dx.types.Handle* @"\01?Material_Texture2D_2Sampler@@3USamplerState@@A", align 4, !noalias !82
  %16 = load %dx.types.Handle, %dx.types.Handle* @"\01?LandscapeParameters_XYOffsetmapTextureSampler@@3USamplerState@@A", align 4, !noalias !84
  %17 = load %dx.types.Handle, %dx.types.Handle* @"\01?LandscapeParameters_NormalmapTextureSampler@@3USamplerState@@A", align 4
  %18 = load %dx.types.Handle, %dx.types.Handle* @"\01?LandscapeParameters_HeightmapTextureSampler@@3USamplerState@@A", align 4, !noalias !84
  %19 = load %dx.types.Handle, %dx.types.Handle* @"\01?View_LandscapeWeightmapSampler@@3USamplerState@@A", align 4, !noalias !92
  %20 = load %dx.types.Handle, %dx.types.Handle* @"\01?View_SharedBilinearClampedSampler@@3USamplerState@@A", align 4, !noalias !95
  %21 = load %dx.types.Handle, %dx.types.Handle* @"\01?HitGroupSystemIndexBuffer@@3UByteAddressBuffer@@A", align 4, !noalias !105
  %22 = load %dx.types.Handle, %dx.types.Handle* @"\01?Material_Texture2D_16@@3V?$Texture2D@V?$vector@M$03@@@@A", align 4, !noalias !77
  %23 = load %dx.types.Handle, %dx.types.Handle* @"\01?Material_Texture2D_15@@3V?$Texture2D@V?$vector@M$03@@@@A", align 4, !noalias !77
  %24 = load %dx.types.Handle, %dx.types.Handle* @"\01?Material_Texture2D_14@@3V?$Texture2D@V?$vector@M$03@@@@A", align 4, !noalias !77
  %25 = load %dx.types.Handle, %dx.types.Handle* @"\01?Material_Texture2D_13@@3V?$Texture2D@V?$vector@M$03@@@@A", align 4, !noalias !77
  %26 = load %dx.types.Handle, %dx.types.Handle* @"\01?Material_Texture2D_12@@3V?$Texture2D@V?$vector@M$03@@@@A", align 4, !noalias !77
  %27 = load %dx.types.Handle, %dx.types.Handle* @"\01?Material_Texture2D_11@@3V?$Texture2D@V?$vector@M$03@@@@A", align 4, !noalias !77
  %28 = load %dx.types.Handle, %dx.types.Handle* @"\01?Material_Texture2D_10@@3V?$Texture2D@V?$vector@M$03@@@@A", align 4, !noalias !77
  %29 = load %dx.types.Handle, %dx.types.Handle* @"\01?Material_Texture2D_9@@3V?$Texture2D@V?$vector@M$03@@@@A", align 4, !noalias !77
  %30 = load %dx.types.Handle, %dx.types.Handle* @"\01?Material_Texture2D_8@@3V?$Texture2D@V?$vector@M$03@@@@A", align 4, !noalias !77
  %31 = load %dx.types.Handle, %dx.types.Handle* @"\01?Material_Texture2D_7@@3V?$Texture2D@V?$vector@M$03@@@@A", align 4, !noalias !77
  %32 = load %dx.types.Handle, %dx.types.Handle* @"\01?Material_Texture2D_6@@3V?$Texture2D@V?$vector@M$03@@@@A", align 4, !noalias !82
  %33 = load %dx.types.Handle, %dx.types.Handle* @"\01?Material_Texture2D_5@@3V?$Texture2D@V?$vector@M$03@@@@A", align 4, !noalias !82
  %34 = load %dx.types.Handle, %dx.types.Handle* @"\01?Material_Texture2D_4@@3V?$Texture2D@V?$vector@M$03@@@@A", align 4, !noalias !82
  %35 = load %dx.types.Handle, %dx.types.Handle* @"\01?Material_Texture2D_3@@3V?$Texture2D@V?$vector@M$03@@@@A", align 4, !noalias !82
  %36 = load %dx.types.Handle, %dx.types.Handle* @"\01?Material_Texture2D_2@@3V?$Texture2D@V?$vector@M$03@@@@A", align 4, !noalias !82
  %37 = load %dx.types.Handle, %dx.types.Handle* @"\01?Material_Texture2D_1@@3V?$Texture2D@V?$vector@M$03@@@@A", align 4, !noalias !82
  %38 = load %dx.types.Handle, %dx.types.Handle* @"\01?Material_Texture2D_0@@3V?$Texture2D@V?$vector@M$03@@@@A", align 4, !noalias !82
  %39 = load %dx.types.Handle, %dx.types.Handle* @"\01?LandscapeParameters_XYOffsetmapTexture@@3V?$Texture2D@V?$vector@M$03@@@@A", align 4, !noalias !84
  %40 = load %dx.types.Handle, %dx.types.Handle* @"\01?LandscapeParameters_NormalmapTexture@@3V?$Texture2D@V?$vector@M$03@@@@A", align 4
  %41 = load %dx.types.Handle, %dx.types.Handle* @"\01?LandscapeParameters_HeightmapTexture@@3V?$Texture2D@V?$vector@M$03@@@@A", align 4, !noalias !84
  %42 = load %dx.types.Handle, %dx.types.Handle* @"\01?LandscapeContinuousLODParameters_SectionLODBias@@3V?$Buffer@M@@A", align 4, !noalias !84
  %43 = load %dx.types.Handle, %dx.types.Handle* @"\01?View_LandscapePerComponentData@@3V?$Buffer@M@@A", align 4, !noalias !84
  %44 = load %dx.types.Handle, %dx.types.Handle* @"\01?View_LandscapeIndirection@@3V?$Buffer@I@@A", align 4, !noalias !84
  %45 = load %dx.types.Handle, %dx.types.Handle* @"\01?View_SkyIrradianceEnvironmentMap@@3V?$StructuredBuffer@V?$vector@M$03@@@@A", align 4, !noalias !95
  %46 = load %dx.types.Handle, %dx.types.Handle* @"\01?View_InstanceSceneData@@3V?$StructuredBuffer@V?$vector@M$03@@@@A", align 4, !noalias !112
  %47 = load %dx.types.Handle, %dx.types.Handle* @"\01?View_PrimitiveSceneData@@3V?$StructuredBuffer@V?$vector@M$03@@@@A", align 4
  %48 = load %dx.types.Handle, %dx.types.Handle* @"\01?View_SkyBentNormalBrickTexture@@3V?$Texture3D@V?$vector@M$03@@@@A", align 4, !noalias !95
  %49 = load %dx.types.Handle, %dx.types.Handle* @"\01?View_VolumetricLightmapBrickSHCoefficients5@@3V?$Texture3D@V?$vector@M$03@@@@A", align 4, !noalias !117
  %50 = load %dx.types.Handle, %dx.types.Handle* @"\01?View_VolumetricLightmapBrickSHCoefficients4@@3V?$Texture3D@V?$vector@M$03@@@@A", align 4, !noalias !120
  %51 = load %dx.types.Handle, %dx.types.Handle* @"\01?View_VolumetricLightmapBrickSHCoefficients3@@3V?$Texture3D@V?$vector@M$03@@@@A", align 4, !noalias !117
  %52 = load %dx.types.Handle, %dx.types.Handle* @"\01?View_VolumetricLightmapBrickSHCoefficients2@@3V?$Texture3D@V?$vector@M$03@@@@A", align 4, !noalias !120
  %53 = load %dx.types.Handle, %dx.types.Handle* @"\01?View_VolumetricLightmapBrickSHCoefficients1@@3V?$Texture3D@V?$vector@M$03@@@@A", align 4, !noalias !117
  %54 = load %dx.types.Handle, %dx.types.Handle* @"\01?View_VolumetricLightmapBrickSHCoefficients0@@3V?$Texture3D@V?$vector@M$03@@@@A", align 4, !noalias !120
  %55 = load %dx.types.Handle, %dx.types.Handle* @"\01?View_VolumetricLightmapBrickAmbientVector@@3V?$Texture3D@V?$vector@M$03@@@@A", align 4, !noalias !120
  %56 = load %dx.types.Handle, %dx.types.Handle* @"\01?View_VolumetricLightmapIndirectionTexture@@3V?$Texture3D@V?$vector@I$03@@@@A", align 4, !noalias !126
  %57 = load %dx.types.Handle, %dx.types.Handle* @HitGroupSystemRootConstants, align 4
  %58 = load %dx.types.Handle, %dx.types.Handle* @UniformBufferConstants_Material, align 4
  %59 = load %dx.types.Handle, %dx.types.Handle* @UniformBufferConstants_LandscapeParameters, align 4
  %60 = load %dx.types.Handle, %dx.types.Handle* @UniformBufferConstants_LandscapeContinuousLODParameters, align 4
  %61 = load %dx.types.Handle, %dx.types.Handle* @UniformBufferConstants_LandscapeMVF, align 4
  %62 = load %dx.types.Handle, %dx.types.Handle* @UniformBufferConstants_View, align 4
  %63 = alloca [3 x float], align 4
  %64 = alloca [3 x float], align 4
  %65 = alloca [3 x float], align 4
  %66 = alloca [3 x i32], align 4
  %67 = alloca [3 x i32], align 4
  %68 = alloca [4 x float], align 4
  %69 = alloca [3 x float], align 4
  %70 = alloca [4 x float], align 4
  %71 = call %dx.types.Handle @dx.op.createHandleForLib.dx.types.Handle(i32 160, %dx.types.Handle %57)  ; CreateHandleForLib(Resource)
  %72 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %71, %dx.types.ResourceProperties { i32 13, i32 24 })  ; AnnotateHandle(res,props)  resource: CBuffer
  %73 = call %dx.types.Handle @dx.op.createHandleForLib.dx.types.Handle(i32 160, %dx.types.Handle %58)  ; CreateHandleForLib(Resource)
  %74 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %73, %dx.types.ResourceProperties { i32 13, i32 428 })  ; AnnotateHandle(res,props)  resource: CBuffer
  %75 = call %dx.types.Handle @dx.op.createHandleForLib.dx.types.Handle(i32 160, %dx.types.Handle %59)  ; CreateHandleForLib(Resource)
  %76 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %75, %dx.types.ResourceProperties { i32 13, i32 236 })  ; AnnotateHandle(res,props)  resource: CBuffer
  %77 = call %dx.types.Handle @dx.op.createHandleForLib.dx.types.Handle(i32 160, %dx.types.Handle %60)  ; CreateHandleForLib(Resource)
  %78 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %77, %dx.types.ResourceProperties { i32 13, i32 28 })  ; AnnotateHandle(res,props)  resource: CBuffer
  %79 = call %dx.types.Handle @dx.op.createHandleForLib.dx.types.Handle(i32 160, %dx.types.Handle %61)  ; CreateHandleForLib(Resource)
  %80 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %79, %dx.types.ResourceProperties { i32 13, i32 8 })  ; AnnotateHandle(res,props)  resource: CBuffer
  %81 = call %dx.types.Handle @dx.op.createHandleForLib.dx.types.Handle(i32 160, %dx.types.Handle %62)  ; CreateHandleForLib(Resource)
  %82 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %81, %dx.types.ResourceProperties { i32 13, i32 5292 })  ; AnnotateHandle(res,props)  resource: CBuffer
  %83 = call float @dx.op.rayTCurrent.f32(i32 154)  ; RayTCurrent()
  %84 = getelementptr inbounds %struct.FPackedMaterialClosestHitPayload, %struct.FPackedMaterialClosestHitPayload* %PackedPayload, i32 0, i32 0, i32 0
  store float %83, float* %84, align 4, !tbaa !127
  %85 = getelementptr inbounds %struct.FPackedMaterialClosestHitPayload, %struct.FPackedMaterialClosestHitPayload* %PackedPayload, i32 0, i32 6
  %86 = load i32, i32* %85, align 4, !tbaa !131
  %87 = and i32 %86, 33554432
  %88 = icmp ne i32 %87, 0
  br i1 %88, label %89, label %729

; <label>:89                                      ; preds = %0
  %90 = bitcast [3 x float]* %63 to i8*
  call void @llvm.lifetime.start(i64 12, i8* %90) #0
  %91 = bitcast [3 x float]* %64 to i8*
  call void @llvm.lifetime.start(i64 12, i8* %91) #0
  %92 = bitcast [3 x float]* %65 to i8*
  call void @llvm.lifetime.start(i64 12, i8* %92) #0
  %93 = getelementptr inbounds [4 x float], [4 x float]* %70, i32 0, i32 0
  br label %94

; <label>:94                                      ; preds = %433, %89
  %95 = phi i32 [ 0, %89 ], [ %645, %433 ]
  %96 = call i32 @dx.op.primitiveIndex.i32(i32 161)  ; PrimitiveIndex()
  %97 = call %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32 59, %dx.types.Handle %76, i32 0)  ; CBufferLoadLegacy(handle,regIndex)
  %98 = extractvalue %dx.types.CBufRet.i32 %97, 1
  %99 = call %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32 59, %dx.types.Handle %78, i32 0)  ; CBufferLoadLegacy(handle,regIndex)
  %100 = extractvalue %dx.types.CBufRet.i32 %99, 3
  %101 = sub nsw i32 %98, %100
  %102 = call %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32 59, %dx.types.Handle %78, i32 1)  ; CBufferLoadLegacy(handle,regIndex)
  %103 = extractvalue %dx.types.CBufRet.i32 %102, 0
  %104 = mul nsw i32 %101, %103
  %105 = extractvalue %dx.types.CBufRet.i32 %97, 0
  %106 = extractvalue %dx.types.CBufRet.i32 %99, 2
  %107 = call %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32 59, %dx.types.Handle %76, i32 1)  ; CBufferLoadLegacy(handle,regIndex)
  %108 = extractvalue %dx.types.CBufRet.i32 %107, 0
  %109 = sitofp i32 %108 to float
  %110 = extractvalue %dx.types.CBufRet.i32 %99, 0
  %111 = call %dx.types.Handle @dx.op.createHandleForLib.dx.types.Handle(i32 160, %dx.types.Handle %44)  ; CreateHandleForLib(Resource)
  %112 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %111, %dx.types.ResourceProperties { i32 10, i32 261 })  ; AnnotateHandle(res,props)  resource: TypedBuffer<U32>
  %113 = call %dx.types.ResRet.i32 @dx.op.bufferLoad.i32(i32 68, %dx.types.Handle %112, i32 %110, i32 undef)  ; BufferLoad(srv,index,wot)
  %114 = extractvalue %dx.types.ResRet.i32 %113, 0
  %115 = add i32 %104, %105
  %116 = sub i32 %115, %106
  %117 = add i32 %116, %114
  %118 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %82, i32 244)  ; CBufferLoadLegacy(handle,regIndex)
  %119 = extractvalue %dx.types.CBufRet.f32 %118, 0
  %120 = fcmp fast oge float %119, 0.000000e+00
  %121 = call %dx.types.Handle @dx.op.createHandleForLib.dx.types.Handle(i32 160, %dx.types.Handle %43)  ; CreateHandleForLib(Resource)
  %122 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %121, %dx.types.ResourceProperties { i32 10, i32 265 })  ; AnnotateHandle(res,props)  resource: TypedBuffer<F32>
  %123 = call %dx.types.ResRet.f32 @dx.op.bufferLoad.f32(i32 68, %dx.types.Handle %122, i32 %117, i32 undef)  ; BufferLoad(srv,index,wot)
  %124 = extractvalue %dx.types.ResRet.f32 %123, 0
  %125 = select i1 %120, float %119, float %124
  %126 = call %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32 59, %dx.types.Handle %82, i32 244)  ; CBufferLoadLegacy(handle,regIndex)
  %127 = extractvalue %dx.types.CBufRet.i32 %126, 1
  %128 = sitofp i32 %127 to float
  %129 = fadd fast float %128, %125
  %130 = call float @dx.op.binary.f32(i32 36, float %129, float %109)  ; FMin(a,b)
  %131 = call float @dx.op.unary.f32(i32 27, float %130)  ; Round_ni(value)
  %132 = fptoui float %131 to i32
  %133 = extractvalue %dx.types.CBufRet.i32 %97, 2
  %134 = and i32 %132, 31
  %135 = ashr i32 %133, %134
  %136 = add nsw i32 %135, -1
  %137 = sitofp i32 %136 to float
  %138 = fadd fast float %137, 1.000000e+00
  %139 = fptoui float %138 to i32
  %140 = bitcast [3 x i32]* %66 to i8*
  call void @llvm.lifetime.start(i64 12, i8* %140) #0
  %141 = call %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32 59, %dx.types.Handle %72, i32 0)  ; CBufferLoadLegacy(handle,regIndex)
  %142 = extractvalue %dx.types.CBufRet.i32 %141, 1
  %143 = extractvalue %dx.types.CBufRet.i32 %141, 0
  %144 = and i32 %143, 255
  %145 = mul i32 %96, 3
  %146 = icmp eq i32 %144, 0
  br i1 %146, label %147, label %150

; <label>:147                                     ; preds = %94
  %148 = add i32 %145, 1
  %149 = add i32 %145, 2
  br label %175

; <label>:150                                     ; preds = %94
  %151 = icmp eq i32 %144, 2
  %152 = call %dx.types.Handle @dx.op.createHandleForLib.dx.types.Handle(i32 160, %dx.types.Handle %21)  ; CreateHandleForLib(Resource)
  %153 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %152, %dx.types.ResourceProperties { i32 11, i32 0 })  ; AnnotateHandle(res,props)  resource: ByteAddressBuffer
  br i1 %151, label %154, label %168

; <label>:154                                     ; preds = %150
  %155 = mul i32 %96, 6
  %156 = add i32 %155, %142
  %157 = and i32 %156, -4
  %158 = call %dx.types.ResRet.i32 @dx.op.rawBufferLoad.i32(i32 139, %dx.types.Handle %153, i32 %157, i32 undef, i8 3, i32 4)  ; RawBufferLoad(srv,index,elementOffset,mask,alignment)
  %159 = extractvalue %dx.types.ResRet.i32 %158, 0
  %160 = extractvalue %dx.types.ResRet.i32 %158, 1
  %161 = icmp eq i32 %157, %156
  %162 = lshr i32 %159, 16
  %163 = and i32 %160, 65535
  br i1 %161, label %164, label %166

; <label>:164                                     ; preds = %154
  %165 = and i32 %159, 65535
  br label %175

; <label>:166                                     ; preds = %154
  %167 = lshr i32 %160, 16
  br label %175

; <label>:168                                     ; preds = %150
  %169 = mul i32 %144, %145
  %170 = add i32 %169, %142
  %171 = call %dx.types.ResRet.i32 @dx.op.rawBufferLoad.i32(i32 139, %dx.types.Handle %153, i32 %170, i32 undef, i8 7, i32 4)  ; RawBufferLoad(srv,index,elementOffset,mask,alignment)
  %172 = extractvalue %dx.types.ResRet.i32 %171, 0
  %173 = extractvalue %dx.types.ResRet.i32 %171, 1
  %174 = extractvalue %dx.types.ResRet.i32 %171, 2
  br label %175

; <label>:175                                     ; preds = %168, %166, %164, %147
  %176 = phi i32 [ %145, %147 ], [ %172, %168 ], [ %165, %164 ], [ %162, %166 ]
  %177 = phi i32 [ %148, %147 ], [ %173, %168 ], [ %162, %164 ], [ %163, %166 ]
  %178 = phi i32 [ %149, %147 ], [ %174, %168 ], [ %163, %164 ], [ %167, %166 ]
  %179 = getelementptr inbounds [3 x i32], [3 x i32]* %66, i32 0, i32 0
  store i32 %176, i32* %179, align 4
  %180 = getelementptr inbounds [3 x i32], [3 x i32]* %66, i32 0, i32 1
  store i32 %177, i32* %180, align 4
  %181 = getelementptr inbounds [3 x i32], [3 x i32]* %66, i32 0, i32 2
  store i32 %178, i32* %181, align 4
  %182 = getelementptr [3 x i32], [3 x i32]* %66, i32 0, i32 %95
  %183 = load i32, i32* %182, align 4, !tbaa !131, !noalias !133
  %184 = call i32 @dx.op.instanceID.i32(i32 141)  ; InstanceID()
  %185 = urem i32 %183, %139
  %186 = uitofp i32 %185 to float
  %187 = udiv i32 %183, %139
  %188 = uitofp i32 %187 to float
  %189 = call %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32 59, %dx.types.Handle %80, i32 0)  ; CBufferLoadLegacy(handle,regIndex)
  %190 = extractvalue %dx.types.CBufRet.i32 %189, 0
  %191 = sitofp i32 %190 to float
  %192 = extractvalue %dx.types.CBufRet.i32 %189, 1
  %193 = sitofp i32 %192 to float
  call void @llvm.lifetime.end(i64 12, i8* %140) #0
  %194 = and i32 %184, 2147483647
  %195 = mul i32 %194, 42
  %196 = call %dx.types.Handle @dx.op.createHandleForLib.dx.types.Handle(i32 160, %dx.types.Handle %47)  ; CreateHandleForLib(Resource)
  %197 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %196, %dx.types.ResourceProperties { i32 12, i32 16 })  ; AnnotateHandle(res,props)  resource: StructuredBuffer<stride=16>
  %198 = call %dx.types.ResRet.f32 @dx.op.rawBufferLoad.f32(i32 139, %dx.types.Handle %197, i32 %195, i32 0, i8 15, i32 4)  ; RawBufferLoad(srv,index,elementOffset,mask,alignment)
  %199 = extractvalue %dx.types.ResRet.f32 %198, 1
  %200 = bitcast float %199 to i32
  %201 = call %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32 59, %dx.types.Handle %82, i32 283)  ; CBufferLoadLegacy(handle,regIndex)
  %202 = extractvalue %dx.types.CBufRet.i32 %201, 0
  %203 = call %dx.types.Handle @dx.op.createHandleForLib.dx.types.Handle(i32 160, %dx.types.Handle %46)  ; CreateHandleForLib(Resource)
  %204 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %203, %dx.types.ResourceProperties { i32 12, i32 16 })  ; AnnotateHandle(res,props)  resource: StructuredBuffer<stride=16>
  %205 = call %dx.types.ResRet.f32 @dx.op.rawBufferLoad.f32(i32 139, %dx.types.Handle %204, i32 %200, i32 0, i8 15, i32 4)  ; RawBufferLoad(srv,index,elementOffset,mask,alignment)
  %206 = extractvalue %dx.types.ResRet.f32 %205, 0
  %207 = bitcast float %206 to i32
  %208 = and i32 %207, 1048575
  %209 = icmp eq i32 %208, 1048575
  br i1 %209, label %318, label %210, !dx.controlflow.hints !136

; <label>:210                                     ; preds = %175
  %211 = mul nuw nsw i32 %208, 42
  %212 = or i32 %211, 1
  %213 = call %dx.types.ResRet.f32 @dx.op.rawBufferLoad.f32(i32 139, %dx.types.Handle %197, i32 %212, i32 0, i8 15, i32 4)  ; RawBufferLoad(srv,index,elementOffset,mask,alignment)
  %214 = extractvalue %dx.types.ResRet.f32 %213, 0
  %215 = extractvalue %dx.types.ResRet.f32 %213, 1
  %216 = extractvalue %dx.types.ResRet.f32 %213, 2
  %217 = add i32 %202, %200
  %218 = call %dx.types.ResRet.f32 @dx.op.rawBufferLoad.f32(i32 139, %dx.types.Handle %204, i32 %217, i32 0, i8 15, i32 4)  ; RawBufferLoad(srv,index,elementOffset,mask,alignment)
  %219 = extractvalue %dx.types.ResRet.f32 %218, 0
  %220 = extractvalue %dx.types.ResRet.f32 %218, 1
  %221 = extractvalue %dx.types.ResRet.f32 %218, 2
  %222 = extractvalue %dx.types.ResRet.f32 %218, 3
  %223 = bitcast float %219 to i32
  %224 = bitcast float %220 to i32
  %225 = bitcast float %221 to i32
  %226 = bitcast float %222 to i32
  %227 = shl i32 %202, 1
  %228 = add i32 %227, %200
  %229 = call %dx.types.ResRet.f32 @dx.op.rawBufferLoad.f32(i32 139, %dx.types.Handle %204, i32 %228, i32 0, i8 15, i32 4)  ; RawBufferLoad(srv,index,elementOffset,mask,alignment)
  %230 = extractvalue %dx.types.ResRet.f32 %229, 0
  %231 = extractvalue %dx.types.ResRet.f32 %229, 1
  %232 = extractvalue %dx.types.ResRet.f32 %229, 2
  %233 = and i32 %223, 65535
  %234 = uitofp i32 %233 to float
  %235 = lshr i32 %223, 16
  %236 = uitofp i32 %235 to float
  %237 = and i32 %224, 32767
  %238 = uitofp i32 %237 to float
  %239 = fadd fast float %234, -3.276800e+04
  %240 = fadd fast float %236, -3.276800e+04
  %241 = fadd fast float %238, -1.638400e+04
  %242 = fmul fast float %241, 0x3F06A0F8E0000000
  %243 = and i32 %224, 32768
  %244 = icmp ne i32 %243, 0
  %245 = fadd fast float %239, %240
  %246 = fmul fast float %245, 0x3F00002000000000
  %247 = fsub fast float %239, %240
  %248 = fmul fast float %247, 0x3F00002000000000
  %249 = call float @dx.op.unary.f32(i32 6, float %246)  ; FAbs(value)
  %250 = call float @dx.op.unary.f32(i32 6, float %248)  ; FAbs(value)
  %251 = call float @dx.op.dot2.f32(i32 54, float 1.000000e+00, float 1.000000e+00, float %249, float %250)  ; Dot2(ax,ay,bx,by)
  %252 = fsub fast float 2.000000e+00, %251
  %253 = call float @dx.op.dot3.f32(i32 55, float %246, float %248, float %252, float %246, float %248, float %252)  ; Dot3(ax,ay,az,bx,by,bz)
  %254 = call float @dx.op.unary.f32(i32 25, float %253)  ; Rsqrt(value)
  %255 = fmul fast float %254, %246
  %256 = fmul fast float %254, %248
  %257 = fmul fast float %254, %252
  %258 = fadd fast float %257, 1.000000e+00
  %259 = fdiv fast float 1.000000e+00, %258
  %260 = fmul fast float %256, %255
  %261 = fmul fast float %260, %259
  %262 = fsub fast float -0.000000e+00, %261
  %263 = fmul fast float %255, %255
  %264 = fmul fast float %263, %259
  %265 = fsub fast float 1.000000e+00, %264
  %266 = fmul fast float %256, %256
  %267 = fmul fast float %266, %259
  %268 = fsub fast float 1.000000e+00, %267
  %269 = fmul fast float %242, %242
  %270 = fsub fast float 1.000000e+00, %269
  %271 = call float @dx.op.unary.f32(i32 24, float %270)  ; Sqrt(value)
  %272 = select i1 %244, float %242, float %271
  %273 = select i1 %244, float %271, float %242
  %274 = fmul fast float %265, %272
  %275 = fmul fast float %272, %262
  %276 = fmul fast float %272, %255
  %277 = fmul fast float %273, %262
  %278 = fmul fast float %268, %273
  %279 = fmul fast float %256, %273
  %280 = fsub fast float -0.000000e+00, %279
  %281 = fadd fast float %274, %277
  %282 = fadd fast float %275, %278
  %283 = fsub fast float %280, %276
  %284 = fmul fast float %283, %256
  %285 = fmul fast float %282, %257
  %286 = fsub fast float %284, %285
  %287 = fmul fast float %281, %257
  %288 = fmul fast float %283, %255
  %289 = fsub fast float %287, %288
  %290 = fmul fast float %282, %255
  %291 = fmul fast float %281, %256
  %292 = fsub fast float %290, %291
  %293 = lshr i32 %226, 16
  %294 = shl i32 %293, 23
  %295 = add i32 %294, -125829120
  %296 = bitcast i32 %295 to float
  %297 = lshr i32 %225, 16
  %298 = and i32 %225, 65535
  %299 = and i32 %226, 65535
  %300 = uitofp i32 %298 to float
  %301 = uitofp i32 %297 to float
  %302 = uitofp i32 %299 to float
  %303 = fadd fast float %300, -3.276800e+04
  %304 = fadd fast float %301, -3.276800e+04
  %305 = fadd fast float %302, -3.276800e+04
  %306 = fmul fast float %296, %303
  %307 = fmul fast float %296, %304
  %308 = fmul fast float %296, %305
  %309 = fmul fast float %281, %306
  %310 = fmul fast float %282, %306
  %311 = fmul fast float %283, %306
  %312 = fmul fast float %286, %307
  %313 = fmul fast float %289, %307
  %314 = fmul fast float %292, %307
  %315 = fmul fast float %255, %308
  %316 = fmul fast float %256, %308
  %317 = fmul fast float %257, %308
  br label %318

; <label>:318                                     ; preds = %210, %175
  %319 = phi float [ %214, %210 ], [ 0.000000e+00, %175 ]
  %320 = phi float [ %215, %210 ], [ 0.000000e+00, %175 ]
  %321 = phi float [ %216, %210 ], [ 0.000000e+00, %175 ]
  %322 = phi float [ %309, %210 ], [ 0.000000e+00, %175 ]
  %323 = phi float [ %310, %210 ], [ 0.000000e+00, %175 ]
  %324 = phi float [ %311, %210 ], [ 0.000000e+00, %175 ]
  %325 = phi float [ %312, %210 ], [ 0.000000e+00, %175 ]
  %326 = phi float [ %313, %210 ], [ 0.000000e+00, %175 ]
  %327 = phi float [ %314, %210 ], [ 0.000000e+00, %175 ]
  %328 = phi float [ %315, %210 ], [ 0.000000e+00, %175 ]
  %329 = phi float [ %316, %210 ], [ 0.000000e+00, %175 ]
  %330 = phi float [ %317, %210 ], [ 0.000000e+00, %175 ]
  %331 = phi float [ %230, %210 ], [ 0.000000e+00, %175 ]
  %332 = phi float [ %231, %210 ], [ 0.000000e+00, %175 ]
  %333 = phi float [ %232, %210 ], [ 0.000000e+00, %175 ]
  %334 = sub nsw i32 %105, %106
  %335 = add nsw i32 %334, %104
  %336 = add i32 %114, %335
  %337 = call %dx.types.ResRet.f32 @dx.op.bufferLoad.f32(i32 68, %dx.types.Handle %122, i32 %336, i32 undef)  ; BufferLoad(srv,index,wot)
  %338 = extractvalue %dx.types.ResRet.f32 %337, 0
  %339 = select i1 %120, float %119, float %338
  %340 = fadd fast float %128, %339
  %341 = call float @dx.op.binary.f32(i32 36, float %340, float %109)  ; FMin(a,b)
  %342 = call float @dx.op.unary.f32(i32 27, float %341)  ; Round_ni(value)
  %343 = fptoui float %342 to i32
  %344 = and i32 %343, 31
  %345 = ashr i32 %133, %344
  %346 = add nsw i32 %345, -1
  %347 = sitofp i32 %346 to float
  %348 = fdiv fast float 1.000000e+00, %347
  %349 = call %dx.types.Handle @dx.op.createHandleForLib.dx.types.Handle(i32 160, %dx.types.Handle %42)  ; CreateHandleForLib(Resource)
  %350 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %349, %dx.types.ResourceProperties { i32 10, i32 265 })  ; AnnotateHandle(res,props)  resource: TypedBuffer<F32>
  %351 = call %dx.types.ResRet.f32 @dx.op.bufferLoad.f32(i32 68, %dx.types.Handle %350, i32 %335, i32 undef)  ; BufferLoad(srv,index,wot)
  %352 = fmul fast float %348, %186
  %353 = fmul fast float %348, %188
  %354 = fadd fast float %352, %191
  %355 = fadd fast float %353, %193
  %356 = extractvalue %dx.types.CBufRet.i32 %97, 3
  %357 = sitofp i32 %356 to float
  %358 = fdiv fast float %354, %357
  %359 = fdiv fast float %355, %357
  %360 = fsub fast float 1.000000e+00, %358
  %361 = fmul fast float %359, 2.000000e+00
  %362 = fmul fast float %360, 2.000000e+00
  %363 = fmul fast float %341, %361
  %364 = fmul fast float %341, %362
  %365 = fsub fast float 1.000000e+00, %361
  %366 = fsub fast float 1.000000e+00, %362
  call void @llvm.lifetime.start(i64 16, i8* bitcast ([4 x i32]* @NeighborOffset.i.i.i.i.0.hca to i8*)) #0
  call void @llvm.lifetime.start(i64 16, i8* bitcast ([4 x i32]* @NeighborOffset.i.i.i.i.1.hca to i8*)) #0
  %367 = bitcast [4 x float]* %70 to i8*
  call void @llvm.lifetime.start(i64 16, i8* %367) #0, !noalias !137
  br label %368

; <label>:368                                     ; preds = %428, %318
  %369 = phi i32 [ -1, %318 ], [ %432, %428 ]
  %370 = phi i32 [ 0, %318 ], [ %430, %428 ]
  %371 = phi i32 [ 0, %318 ], [ %426, %428 ]
  %372 = call %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32 59, %dx.types.Handle %76, i32 0)  ; CBufferLoadLegacy(handle,regIndex)
  %373 = extractvalue %dx.types.CBufRet.i32 %372, 0
  %374 = extractvalue %dx.types.CBufRet.i32 %372, 1
  %375 = add i32 %373, %370
  %376 = add i32 %374, %369
  %377 = call %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32 59, %dx.types.Handle %78, i32 0)  ; CBufferLoadLegacy(handle,regIndex)
  %378 = extractvalue %dx.types.CBufRet.i32 %377, 2
  %379 = extractvalue %dx.types.CBufRet.i32 %377, 3
  %380 = call i32 @dx.op.binary.i32(i32 37, i32 %378, i32 %375)  ; IMax(a,b)
  %381 = call i32 @dx.op.binary.i32(i32 37, i32 %379, i32 %376)  ; IMax(a,b)
  %382 = call %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32 59, %dx.types.Handle %78, i32 1)  ; CBufferLoadLegacy(handle,regIndex)
  %383 = extractvalue %dx.types.CBufRet.i32 %382, 0
  %384 = extractvalue %dx.types.CBufRet.i32 %382, 1
  %385 = add i32 %378, -1
  %386 = add i32 %385, %383
  %387 = add i32 %379, -1
  %388 = add i32 %387, %384
  %389 = call i32 @dx.op.binary.i32(i32 38, i32 %386, i32 %380)  ; IMin(a,b)
  %390 = call i32 @dx.op.binary.i32(i32 38, i32 %388, i32 %381)  ; IMin(a,b)
  %391 = sub nsw i32 %390, %379
  %392 = mul nsw i32 %391, %383
  %393 = sub i32 %389, %378
  %394 = add nsw i32 %393, %392
  %395 = extractvalue %dx.types.CBufRet.i32 %377, 0
  %396 = call %dx.types.Handle @dx.op.createHandleForLib.dx.types.Handle(i32 160, %dx.types.Handle %44)  ; CreateHandleForLib(Resource)
  %397 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %396, %dx.types.ResourceProperties { i32 10, i32 261 })  ; AnnotateHandle(res,props)  resource: TypedBuffer<U32>
  %398 = call %dx.types.ResRet.i32 @dx.op.bufferLoad.i32(i32 68, %dx.types.Handle %397, i32 %395, i32 undef)  ; BufferLoad(srv,index,wot)
  %399 = extractvalue %dx.types.ResRet.i32 %398, 0
  %400 = add i32 %394, %399
  %401 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %82, i32 244)  ; CBufferLoadLegacy(handle,regIndex)
  %402 = extractvalue %dx.types.CBufRet.f32 %401, 0
  %403 = fcmp fast oge float %402, 0.000000e+00
  %404 = call %dx.types.Handle @dx.op.createHandleForLib.dx.types.Handle(i32 160, %dx.types.Handle %43)  ; CreateHandleForLib(Resource)
  %405 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %404, %dx.types.ResourceProperties { i32 10, i32 265 })  ; AnnotateHandle(res,props)  resource: TypedBuffer<F32>
  %406 = call %dx.types.ResRet.f32 @dx.op.bufferLoad.f32(i32 68, %dx.types.Handle %405, i32 %400, i32 undef)  ; BufferLoad(srv,index,wot)
  %407 = extractvalue %dx.types.ResRet.f32 %406, 0
  %408 = select i1 %403, float %402, float %407
  %409 = call %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32 59, %dx.types.Handle %76, i32 1)  ; CBufferLoadLegacy(handle,regIndex)
  %410 = extractvalue %dx.types.CBufRet.i32 %409, 0
  %411 = sitofp i32 %410 to float
  %412 = add i32 %399, %335
  %413 = call %dx.types.ResRet.f32 @dx.op.bufferLoad.f32(i32 68, %dx.types.Handle %405, i32 %412, i32 undef)  ; BufferLoad(srv,index,wot)
  %414 = extractvalue %dx.types.ResRet.f32 %413, 0
  %415 = select i1 %403, float %402, float %414
  %416 = call %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32 59, %dx.types.Handle %82, i32 244)  ; CBufferLoadLegacy(handle,regIndex)
  %417 = extractvalue %dx.types.CBufRet.i32 %416, 1
  %418 = sitofp i32 %417 to float
  %419 = fadd fast float %418, %415
  %420 = call float @dx.op.binary.f32(i32 36, float %419, float %411)  ; FMin(a,b)
  %421 = call float @dx.op.binary.f32(i32 35, float %408, float %420)  ; FMax(a,b)
  %422 = getelementptr inbounds [4 x float], [4 x float]* %70, i32 0, i32 %371
  %423 = fadd fast float %418, %421
  %424 = select i1 %403, float %402, float %423
  %425 = call float @dx.op.binary.f32(i32 36, float %424, float %411)  ; FMin(a,b)
  store float %425, float* %422, align 4, !tbaa !127, !noalias !137
  %426 = add nuw nsw i32 %371, 1
  %427 = icmp eq i32 %426, 4
  br i1 %427, label %433, label %428

; <label>:428                                     ; preds = %368
  %429 = getelementptr [4 x i32], [4 x i32]* @NeighborOffset.i.i.i.i.0.hca, i32 0, i32 %426
  %430 = load i32, i32* %429, align 4
  %431 = getelementptr [4 x i32], [4 x i32]* @NeighborOffset.i.i.i.i.1.hca, i32 0, i32 %426
  %432 = load i32, i32* %431, align 4
  br label %368

; <label>:433                                     ; preds = %368
  %434 = uitofp i32 %343 to float
  %435 = extractvalue %dx.types.ResRet.f32 %351, 0
  %436 = fsub fast float 1.000000e+00, %359
  %437 = fmul fast float %358, 2.000000e+00
  %438 = fmul fast float %436, 2.000000e+00
  %439 = fmul fast float %341, %437
  %440 = fmul fast float %341, %438
  %441 = fsub fast float 1.000000e+00, %437
  %442 = fsub fast float 1.000000e+00, %438
  %443 = load float, float* %93, align 4, !tbaa !127, !noalias !137
  %444 = getelementptr inbounds [4 x float], [4 x float]* %70, i32 0, i32 1
  %445 = load float, float* %444, align 4, !tbaa !127, !noalias !137
  %446 = getelementptr inbounds [4 x float], [4 x float]* %70, i32 0, i32 2
  %447 = load float, float* %446, align 4, !tbaa !127, !noalias !137
  %448 = getelementptr inbounds [4 x float], [4 x float]* %70, i32 0, i32 3
  %449 = load float, float* %448, align 4, !tbaa !127, !noalias !137
  call void @llvm.lifetime.end(i64 16, i8* %367) #0, !noalias !137
  call void @llvm.lifetime.end(i64 16, i8* bitcast ([4 x i32]* @NeighborOffset.i.i.i.i.0.hca to i8*)) #0
  call void @llvm.lifetime.end(i64 16, i8* bitcast ([4 x i32]* @NeighborOffset.i.i.i.i.1.hca to i8*)) #0
  %450 = fmul fast float %443, %365
  %451 = fmul fast float %445, %441
  %452 = fmul fast float %447, %366
  %453 = fmul fast float %449, %442
  %454 = fadd fast float %450, %363
  %455 = fadd fast float %451, %439
  %456 = fadd fast float %452, %364
  %457 = fadd fast float %453, %440
  %458 = fadd fast float %354, %355
  %459 = fdiv fast float %458, %357
  %460 = fcmp fast ogt float %459, 1.000000e+00
  %461 = fcmp fast olt float %358, %359
  %462 = select i1 %461, float %457, float %456
  %463 = select i1 %461, float %455, float %454
  %464 = select i1 %460, float %462, float %463
  %465 = call float @dx.op.unary.f32(i32 27, float %464)  ; Round_ni(value)
  %466 = fsub fast float %464, %465
  %467 = fsub fast float %465, %434
  %468 = fsub fast float -0.000000e+00, %467
  %469 = call float @dx.op.unary.f32(i32 21, float %468)  ; Exp(value)
  %470 = fmul fast float %469, %186
  %471 = fmul fast float %469, %188
  %472 = call float @dx.op.unary.f32(i32 27, float %470)  ; Round_ni(value)
  %473 = call float @dx.op.unary.f32(i32 27, float %471)  ; Round_ni(value)
  %474 = fsub fast float -0.000000e+00, %465
  %475 = call float @dx.op.unary.f32(i32 21, float %474)  ; Exp(value)
  %476 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %76, i32 5)  ; CBufferLoadLegacy(handle,regIndex)
  %477 = extractvalue %dx.types.CBufRet.f32 %476, 0
  %478 = fmul fast float %477, %475
  %479 = fadd fast float %478, -1.000000e+00
  %480 = fmul fast float %475, 5.000000e-01
  %481 = fmul fast float %480, %477
  %482 = call float @dx.op.binary.f32(i32 35, float %481, float 2.000000e+00)  ; FMax(a,b)
  %483 = fadd fast float %482, -1.000000e+00
  %484 = extractvalue %dx.types.CBufRet.f32 %476, 1
  %485 = fmul fast float %484, %479
  %486 = fmul fast float %484, %483
  %487 = fdiv fast float %472, %485
  %488 = fdiv fast float %473, %485
  %489 = fmul fast float %472, 5.000000e-01
  %490 = fmul fast float %473, 5.000000e-01
  %491 = call float @dx.op.unary.f32(i32 27, float %489)  ; Round_ni(value)
  %492 = call float @dx.op.unary.f32(i32 27, float %490)  ; Round_ni(value)
  %493 = fdiv fast float %491, %486
  %494 = fdiv fast float %492, %486
  %495 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %76, i32 2)  ; CBufferLoadLegacy(handle,regIndex)
  %496 = extractvalue %dx.types.CBufRet.f32 %495, 0
  %497 = extractvalue %dx.types.CBufRet.f32 %495, 1
  %498 = fmul fast float %496, %487
  %499 = fmul fast float %497, %488
  %500 = extractvalue %dx.types.CBufRet.f32 %495, 2
  %501 = extractvalue %dx.types.CBufRet.f32 %495, 3
  %502 = fadd fast float %498, %500
  %503 = fadd fast float %499, %501
  %504 = fmul fast float %496, 5.000000e-01
  %505 = fmul fast float %497, 5.000000e-01
  %506 = fadd fast float %502, %504
  %507 = fadd fast float %503, %505
  %508 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %76, i32 6)  ; CBufferLoadLegacy(handle,regIndex)
  %509 = extractvalue %dx.types.CBufRet.f32 %508, 0
  %510 = extractvalue %dx.types.CBufRet.f32 %508, 1
  %511 = fmul fast float %509, %191
  %512 = fmul fast float %510, %193
  %513 = fadd fast float %506, %511
  %514 = fadd fast float %507, %512
  %515 = fsub fast float %465, %435
  %516 = call %dx.types.Handle @dx.op.createHandleForLib.dx.types.Handle(i32 160, %dx.types.Handle %41)  ; CreateHandleForLib(Resource)
  %517 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %516, %dx.types.ResourceProperties { i32 2, i32 1033 })  ; AnnotateHandle(res,props)  resource: Texture2D<4xF32>
  %518 = call %dx.types.Handle @dx.op.createHandleForLib.dx.types.Handle(i32 160, %dx.types.Handle %18)  ; CreateHandleForLib(Resource)
  %519 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %518, %dx.types.ResourceProperties { i32 14, i32 0 })  ; AnnotateHandle(res,props)  resource: SamplerState
  %520 = call %dx.types.ResRet.f32 @dx.op.sampleLevel.f32(i32 62, %dx.types.Handle %517, %dx.types.Handle %519, float %513, float %514, float undef, float undef, i32 0, i32 0, i32 undef, float %515)  ; SampleLevel(srv,sampler,coord0,coord1,coord2,coord3,offset0,offset1,offset2,LOD)
  %521 = extractvalue %dx.types.ResRet.f32 %520, 0
  %522 = extractvalue %dx.types.ResRet.f32 %520, 1
  %523 = fmul fast float %521, 6.528000e+04
  %524 = fmul fast float %522, 2.550000e+02
  %525 = fadd fast float %524, -3.276800e+04
  %526 = fadd fast float %525, %523
  %527 = fmul fast float %496, %493
  %528 = fmul fast float %497, %494
  %529 = fadd fast float %527, %500
  %530 = fadd fast float %528, %501
  %531 = fadd fast float %529, %504
  %532 = fadd fast float %530, %505
  %533 = fadd fast float %531, %511
  %534 = fadd fast float %532, %512
  %535 = fsub fast float 1.000000e+00, %435
  %536 = fadd fast float %535, %465
  %537 = call %dx.types.ResRet.f32 @dx.op.sampleLevel.f32(i32 62, %dx.types.Handle %517, %dx.types.Handle %519, float %533, float %534, float undef, float undef, i32 0, i32 0, i32 undef, float %536)  ; SampleLevel(srv,sampler,coord0,coord1,coord2,coord3,offset0,offset1,offset2,LOD)
  %538 = extractvalue %dx.types.ResRet.f32 %537, 0
  %539 = extractvalue %dx.types.ResRet.f32 %537, 1
  %540 = fmul fast float %538, 6.528000e+04
  %541 = fmul fast float %539, 2.550000e+02
  %542 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %76, i32 3)  ; CBufferLoadLegacy(handle,regIndex)
  %543 = extractvalue %dx.types.CBufRet.f32 %542, 0
  %544 = extractvalue %dx.types.CBufRet.f32 %542, 1
  %545 = fmul fast float %543, %487
  %546 = fmul fast float %544, %488
  %547 = extractvalue %dx.types.CBufRet.f32 %542, 2
  %548 = extractvalue %dx.types.CBufRet.f32 %542, 3
  %549 = fadd fast float %545, %547
  %550 = fadd fast float %546, %548
  %551 = extractvalue %dx.types.CBufRet.f32 %508, 2
  %552 = fmul fast float %551, %191
  %553 = fmul fast float %551, %193
  %554 = fadd fast float %549, %552
  %555 = fadd fast float %550, %553
  %556 = call %dx.types.Handle @dx.op.createHandleForLib.dx.types.Handle(i32 160, %dx.types.Handle %39)  ; CreateHandleForLib(Resource)
  %557 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %556, %dx.types.ResourceProperties { i32 2, i32 1033 })  ; AnnotateHandle(res,props)  resource: Texture2D<4xF32>
  %558 = call %dx.types.Handle @dx.op.createHandleForLib.dx.types.Handle(i32 160, %dx.types.Handle %16)  ; CreateHandleForLib(Resource)
  %559 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %558, %dx.types.ResourceProperties { i32 14, i32 0 })  ; AnnotateHandle(res,props)  resource: SamplerState
  %560 = call %dx.types.ResRet.f32 @dx.op.sampleLevel.f32(i32 62, %dx.types.Handle %557, %dx.types.Handle %559, float %554, float %555, float undef, float undef, i32 0, i32 0, i32 undef, float %465)  ; SampleLevel(srv,sampler,coord0,coord1,coord2,coord3,offset0,offset1,offset2,LOD)
  %561 = extractvalue %dx.types.ResRet.f32 %560, 0
  %562 = extractvalue %dx.types.ResRet.f32 %560, 1
  %563 = extractvalue %dx.types.ResRet.f32 %560, 2
  %564 = extractvalue %dx.types.ResRet.f32 %560, 3
  %565 = fmul fast float %543, %493
  %566 = fmul fast float %544, %494
  %567 = fadd fast float %565, %547
  %568 = fadd fast float %566, %548
  %569 = fadd fast float %567, %552
  %570 = fadd fast float %568, %553
  %571 = fadd fast float %465, 1.000000e+00
  %572 = call %dx.types.ResRet.f32 @dx.op.sampleLevel.f32(i32 62, %dx.types.Handle %557, %dx.types.Handle %559, float %569, float %570, float undef, float undef, i32 0, i32 0, i32 undef, float %571)  ; SampleLevel(srv,sampler,coord0,coord1,coord2,coord3,offset0,offset1,offset2,LOD)
  %573 = extractvalue %dx.types.ResRet.f32 %572, 0
  %574 = extractvalue %dx.types.ResRet.f32 %572, 1
  %575 = extractvalue %dx.types.ResRet.f32 %572, 2
  %576 = extractvalue %dx.types.ResRet.f32 %572, 3
  %577 = fmul fast float %561, 6.528000e+04
  %578 = fmul fast float %562, 2.550000e+02
  %579 = fadd fast float %578, -3.276800e+04
  %580 = fadd fast float %579, %577
  %581 = fmul fast float %580, 3.906250e-03
  %582 = fmul fast float %563, 6.528000e+04
  %583 = fmul fast float %564, 2.550000e+02
  %584 = fadd fast float %583, -3.276800e+04
  %585 = fadd fast float %584, %582
  %586 = fmul fast float %585, 3.906250e-03
  %587 = fmul fast float %573, 6.528000e+04
  %588 = fmul fast float %574, 2.550000e+02
  %589 = fadd fast float %588, -3.276800e+04
  %590 = fadd fast float %589, %587
  %591 = fmul fast float %590, 3.906250e-03
  %592 = fmul fast float %575, 6.528000e+04
  %593 = fmul fast float %576, 2.550000e+02
  %594 = fadd fast float %593, -3.276800e+04
  %595 = fadd fast float %594, %592
  %596 = fmul fast float %595, 3.906250e-03
  %597 = fadd fast float %581, %487
  %598 = fadd fast float %586, %488
  %599 = fsub fast float %493, %597
  %600 = fadd fast float %599, %591
  %601 = fsub fast float %494, %598
  %602 = fadd fast float %601, %596
  %603 = fsub fast float -3.276800e+04, %526
  %604 = fadd fast float %603, %541
  %605 = fadd fast float %604, %540
  %606 = fmul fast float %600, %466
  %607 = fmul fast float %602, %466
  %608 = fmul fast float %605, %466
  %609 = fadd fast float %608, %526
  %610 = fmul fast float %609, 7.812500e-03
  %611 = extractvalue %dx.types.CBufRet.f32 %508, 3
  %612 = fmul fast float %611, %191
  %613 = fmul fast float %611, %193
  %614 = fadd fast float %612, %597
  %615 = fadd fast float %614, %606
  %616 = fadd fast float %613, %598
  %617 = fadd fast float %616, %607
  %618 = fmul fast float %615, %322
  %619 = fmul fast float %615, %323
  %620 = fmul fast float %615, %324
  %621 = fmul fast float %617, %325
  %622 = fmul fast float %617, %326
  %623 = fmul fast float %617, %327
  %624 = fmul fast float %610, %328
  %625 = fmul fast float %610, %329
  %626 = fmul fast float %610, %330
  %627 = fmul fast float %319, 2.097152e+06
  %628 = fmul fast float %320, 2.097152e+06
  %629 = fmul fast float %321, 2.097152e+06
  %630 = fadd fast float %331, %627
  %631 = fadd fast float %630, %624
  %632 = fadd fast float %631, %621
  %633 = fadd fast float %632, %618
  %634 = fadd fast float %332, %628
  %635 = fadd fast float %634, %625
  %636 = fadd fast float %635, %622
  %637 = fadd fast float %636, %619
  %638 = fadd fast float %333, %629
  %639 = fadd fast float %638, %626
  %640 = fadd fast float %639, %623
  %641 = fadd fast float %640, %620
  %642 = getelementptr [3 x float], [3 x float]* %63, i32 0, i32 %95
  %643 = getelementptr [3 x float], [3 x float]* %64, i32 0, i32 %95
  %644 = getelementptr [3 x float], [3 x float]* %65, i32 0, i32 %95
  store float %633, float* %642, align 4
  store float %637, float* %643, align 4
  store float %641, float* %644, align 4
  %645 = add nuw nsw i32 %95, 1
  %646 = icmp eq i32 %645, 3
  br i1 %646, label %647, label %94

; <label>:647                                     ; preds = %433
  %648 = getelementptr [3 x float], [3 x float]* %63, i32 0, i32 1
  %649 = getelementptr [3 x float], [3 x float]* %64, i32 0, i32 1
  %650 = getelementptr [3 x float], [3 x float]* %65, i32 0, i32 1
  %651 = load float, float* %648, align 4
  %652 = load float, float* %649, align 4
  %653 = load float, float* %650, align 4
  %654 = getelementptr [3 x float], [3 x float]* %63, i32 0, i32 0
  %655 = getelementptr [3 x float], [3 x float]* %64, i32 0, i32 0
  %656 = getelementptr [3 x float], [3 x float]* %65, i32 0, i32 0
  %657 = load float, float* %654, align 4
  %658 = load float, float* %655, align 4
  %659 = load float, float* %656, align 4
  %660 = fsub fast float %651, %657
  %661 = fsub fast float %652, %658
  %662 = fsub fast float %653, %659
  %663 = getelementptr [3 x float], [3 x float]* %63, i32 0, i32 2
  %664 = getelementptr [3 x float], [3 x float]* %64, i32 0, i32 2
  %665 = getelementptr [3 x float], [3 x float]* %65, i32 0, i32 2
  %666 = load float, float* %663, align 4
  %667 = load float, float* %664, align 4
  %668 = load float, float* %665, align 4
  %669 = fsub fast float %666, %657
  %670 = fsub fast float %667, %658
  %671 = fsub fast float %668, %659
  %672 = fmul fast float %670, %662
  %673 = fmul fast float %671, %661
  %674 = fsub fast float %672, %673
  %675 = fmul fast float %671, %660
  %676 = fmul fast float %669, %662
  %677 = fsub fast float %675, %676
  %678 = fmul fast float %669, %661
  %679 = fmul fast float %670, %660
  %680 = fsub fast float %678, %679
  %681 = call float @dx.op.dot3.f32(i32 55, float %674, float %677, float %680, float %674, float %677, float %680)  ; Dot3(ax,ay,az,bx,by,bz)
  %682 = fcmp fast oeq float %681, 0.000000e+00
  %683 = uitofp i1 %682 to float
  %684 = call float @dx.op.worldRayDirection.f32(i32 148, i8 0)  ; WorldRayDirection(col)
  %685 = call float @dx.op.worldRayDirection.f32(i32 148, i8 1)  ; WorldRayDirection(col)
  %686 = call float @dx.op.worldRayDirection.f32(i32 148, i8 2)  ; WorldRayDirection(col)
  %687 = fsub fast float -0.000000e+00, %684
  %688 = fsub fast float -0.000000e+00, %685
  %689 = fsub fast float -0.000000e+00, %686
  %690 = call float @dx.op.unary.f32(i32 25, float %681)  ; Rsqrt(value)
  %691 = fmul fast float %690, %674
  %692 = fmul fast float %690, %677
  %693 = fmul fast float %690, %680
  %694 = fsub fast float %687, %691
  %695 = fsub fast float %688, %692
  %696 = fsub fast float %689, %693
  %697 = fmul fast float %694, %683
  %698 = fmul fast float %695, %683
  %699 = fmul fast float %696, %683
  %700 = fadd fast float %697, %691
  %701 = fadd fast float %698, %692
  %702 = fadd fast float %699, %693
  call void @llvm.lifetime.end(i64 12, i8* %90) #0
  call void @llvm.lifetime.end(i64 12, i8* %91) #0
  call void @llvm.lifetime.end(i64 12, i8* %92) #0
  %703 = call i32 @dx.op.instanceIndex.i32(i32 142)  ; InstanceIndex()
  %704 = call %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32 59, %dx.types.Handle %72, i32 1)  ; CBufferLoadLegacy(handle,regIndex)
  %705 = extractvalue %dx.types.CBufRet.i32 %704, 0
  %706 = sub i32 %703, %705
  %707 = call i32 @dx.op.legacyF32ToF16(i32 130, float %700)  ; LegacyF32ToF16(value)
  %708 = shl i32 %707, 16
  %709 = getelementptr inbounds %struct.FPackedMaterialClosestHitPayload, %struct.FPackedMaterialClosestHitPayload* %PackedPayload, i32 0, i32 3, i32 1
  %710 = load i32, i32* %709, align 4, !tbaa !131
  %711 = or i32 %710, %708
  store i32 %711, i32* %709, align 4, !tbaa !131
  %712 = call i32 @dx.op.legacyF32ToF16(i32 130, float %701)  ; LegacyF32ToF16(value)
  %713 = call i32 @dx.op.legacyF32ToF16(i32 130, float %702)  ; LegacyF32ToF16(value)
  %714 = shl i32 %713, 16
  %715 = getelementptr inbounds %struct.FPackedMaterialClosestHitPayload, %struct.FPackedMaterialClosestHitPayload* %PackedPayload, i32 0, i32 3, i32 2
  %716 = or i32 %714, %712
  store i32 %716, i32* %715, align 4, !tbaa !131
  %717 = mul i32 %184, 42
  %718 = call %dx.types.Handle @dx.op.createHandleForLib.dx.types.Handle(i32 160, %dx.types.Handle %47)  ; CreateHandleForLib(Resource)
  %719 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %718, %dx.types.ResourceProperties { i32 12, i32 16 })  ; AnnotateHandle(res,props)  resource: StructuredBuffer<stride=16>
  %720 = call %dx.types.ResRet.f32 @dx.op.rawBufferLoad.f32(i32 139, %dx.types.Handle %719, i32 %717, i32 0, i8 15, i32 4)  ; RawBufferLoad(srv,index,elementOffset,mask,alignment)
  %721 = extractvalue %dx.types.ResRet.f32 %720, 2
  %722 = bitcast float %721 to i32
  %723 = icmp eq i32 %722, 1
  %724 = select i1 %723, i32 0, i32 %706
  %725 = extractvalue %dx.types.ResRet.f32 %720, 1
  %726 = bitcast float %725 to i32
  %727 = add i32 %726, %724
  %728 = getelementptr inbounds %struct.FPackedMaterialClosestHitPayload, %struct.FPackedMaterialClosestHitPayload* %PackedPayload, i32 0, i32 9, i32 1
  store i32 %727, i32* %728, align 4, !tbaa !131
  br label %729

; <label>:729                                     ; preds = %647, %0
  %730 = and i32 %86, 8388608
  %731 = icmp eq i32 %730, 0
  br i1 %731, label %732, label %2057

; <label>:732                                     ; preds = %729
  %733 = getelementptr inbounds %struct.FPackedMaterialClosestHitPayload, %struct.FPackedMaterialClosestHitPayload* %PackedPayload, i32 0, i32 2
  %734 = load float, float* %733, align 4, !tbaa !127
  %735 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %82, i32 64)  ; CBufferLoadLegacy(handle,regIndex)
  %736 = extractvalue %dx.types.CBufRet.f32 %735, 1
  %737 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %82, i32 76)  ; CBufferLoadLegacy(handle,regIndex)
  %738 = extractvalue %dx.types.CBufRet.f32 %737, 1
  %739 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %82, i32 139)  ; CBufferLoadLegacy(handle,regIndex)
  %740 = extractvalue %dx.types.CBufRet.f32 %739, 0
  %741 = extractvalue %dx.types.CBufRet.f32 %739, 2
  %742 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %82, i32 140)  ; CBufferLoadLegacy(handle,regIndex)
  %743 = extractvalue %dx.types.CBufRet.f32 %742, 0
  %744 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %82, i32 187)  ; CBufferLoadLegacy(handle,regIndex)
  %745 = extractvalue %dx.types.CBufRet.f32 %744, 1
  %746 = getelementptr inbounds %struct.FPackedMaterialClosestHitPayload, %struct.FPackedMaterialClosestHitPayload* %PackedPayload, i32 0, i32 1
  %747 = load i32, i32* %746, align 4, !tbaa !131, !noalias !140
  %748 = and i32 %747, 65535
  %749 = lshr i32 %747, 16
  %750 = call float @dx.op.legacyF16ToF32(i32 131, i32 %749)  ; LegacyF16ToF32(value)
  %751 = call float @dx.op.rayTCurrent.f32(i32 154)  ; RayTCurrent()
  %752 = fmul fast float %751, %750
  %753 = getelementptr inbounds %struct.FRayTracingIntersectionAttributes, %struct.FRayTracingIntersectionAttributes* %Attributes, i32 0, i32 0
  %754 = load <2 x i32>, <2 x i32>* %753, align 4
  %755 = extractelement <2 x i32> %754, i32 0
  %756 = extractelement <2 x i32> %754, i32 1
  %757 = bitcast i32 %755 to float
  %758 = bitcast i32 %756 to float
  %759 = bitcast [3 x float]* %69 to i8*
  call void @llvm.lifetime.start(i64 12, i8* %759) #0, !noalias !143
  %760 = fsub fast float 1.000000e+00, %757
  %761 = fsub fast float %760, %758
  %762 = getelementptr inbounds [3 x float], [3 x float]* %69, i32 0, i32 0
  store float %761, float* %762, align 4
  %763 = getelementptr inbounds [3 x float], [3 x float]* %69, i32 0, i32 1
  %764 = bitcast float* %763 to i32*
  store i32 %755, i32* %764, align 4
  %765 = getelementptr inbounds [3 x float], [3 x float]* %69, i32 0, i32 2
  %766 = bitcast float* %765 to i32*
  store i32 %756, i32* %766, align 4
  br label %767

; <label>:767                                     ; preds = %981, %732
  %768 = phi float [ 0.000000e+00, %732 ], [ %1153, %981 ]
  %769 = phi float [ 0.000000e+00, %732 ], [ %1154, %981 ]
  %770 = phi float [ 0.000000e+00, %732 ], [ %1155, %981 ]
  %771 = phi float [ 0.000000e+00, %732 ], [ %1156, %981 ]
  %772 = phi float [ 0.000000e+00, %732 ], [ %1147, %981 ]
  %773 = phi float [ 0.000000e+00, %732 ], [ %1148, %981 ]
  %774 = phi i32 [ 0, %732 ], [ %1157, %981 ]
  %775 = call i32 @dx.op.primitiveIndex.i32(i32 161)  ; PrimitiveIndex()
  %776 = call %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32 59, %dx.types.Handle %76, i32 0)  ; CBufferLoadLegacy(handle,regIndex)
  %777 = extractvalue %dx.types.CBufRet.i32 %776, 1
  %778 = call %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32 59, %dx.types.Handle %78, i32 0)  ; CBufferLoadLegacy(handle,regIndex)
  %779 = extractvalue %dx.types.CBufRet.i32 %778, 3
  %780 = sub nsw i32 %777, %779
  %781 = call %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32 59, %dx.types.Handle %78, i32 1)  ; CBufferLoadLegacy(handle,regIndex)
  %782 = extractvalue %dx.types.CBufRet.i32 %781, 0
  %783 = mul nsw i32 %780, %782
  %784 = extractvalue %dx.types.CBufRet.i32 %776, 0
  %785 = extractvalue %dx.types.CBufRet.i32 %778, 2
  %786 = call %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32 59, %dx.types.Handle %76, i32 1)  ; CBufferLoadLegacy(handle,regIndex)
  %787 = extractvalue %dx.types.CBufRet.i32 %786, 0
  %788 = sitofp i32 %787 to float
  %789 = extractvalue %dx.types.CBufRet.i32 %778, 0
  %790 = call %dx.types.Handle @dx.op.createHandleForLib.dx.types.Handle(i32 160, %dx.types.Handle %44)  ; CreateHandleForLib(Resource)
  %791 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %790, %dx.types.ResourceProperties { i32 10, i32 261 })  ; AnnotateHandle(res,props)  resource: TypedBuffer<U32>
  %792 = call %dx.types.ResRet.i32 @dx.op.bufferLoad.i32(i32 68, %dx.types.Handle %791, i32 %789, i32 undef)  ; BufferLoad(srv,index,wot)
  %793 = extractvalue %dx.types.ResRet.i32 %792, 0
  %794 = add i32 %783, %784
  %795 = sub i32 %794, %785
  %796 = add i32 %795, %793
  %797 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %82, i32 244)  ; CBufferLoadLegacy(handle,regIndex)
  %798 = extractvalue %dx.types.CBufRet.f32 %797, 0
  %799 = fcmp fast oge float %798, 0.000000e+00
  %800 = call %dx.types.Handle @dx.op.createHandleForLib.dx.types.Handle(i32 160, %dx.types.Handle %43)  ; CreateHandleForLib(Resource)
  %801 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %800, %dx.types.ResourceProperties { i32 10, i32 265 })  ; AnnotateHandle(res,props)  resource: TypedBuffer<F32>
  %802 = call %dx.types.ResRet.f32 @dx.op.bufferLoad.f32(i32 68, %dx.types.Handle %801, i32 %796, i32 undef)  ; BufferLoad(srv,index,wot)
  %803 = extractvalue %dx.types.ResRet.f32 %802, 0
  %804 = select i1 %799, float %798, float %803
  %805 = call %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32 59, %dx.types.Handle %82, i32 244)  ; CBufferLoadLegacy(handle,regIndex)
  %806 = extractvalue %dx.types.CBufRet.i32 %805, 1
  %807 = sitofp i32 %806 to float
  %808 = fadd fast float %807, %804
  %809 = call float @dx.op.binary.f32(i32 36, float %808, float %788)  ; FMin(a,b)
  %810 = call float @dx.op.unary.f32(i32 27, float %809)  ; Round_ni(value)
  %811 = fptoui float %810 to i32
  %812 = extractvalue %dx.types.CBufRet.i32 %776, 2
  %813 = and i32 %811, 31
  %814 = ashr i32 %812, %813
  %815 = add nsw i32 %814, -1
  %816 = sitofp i32 %815 to float
  %817 = fadd fast float %816, 1.000000e+00
  %818 = fptoui float %817 to i32
  %819 = bitcast [3 x i32]* %67 to i8*
  call void @llvm.lifetime.start(i64 12, i8* %819) #0
  %820 = call %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32 59, %dx.types.Handle %72, i32 0)  ; CBufferLoadLegacy(handle,regIndex)
  %821 = extractvalue %dx.types.CBufRet.i32 %820, 1
  %822 = extractvalue %dx.types.CBufRet.i32 %820, 0
  %823 = and i32 %822, 255
  %824 = mul i32 %775, 3
  %825 = icmp eq i32 %823, 0
  br i1 %825, label %826, label %829

; <label>:826                                     ; preds = %767
  %827 = add i32 %824, 1
  %828 = add i32 %824, 2
  br label %854

; <label>:829                                     ; preds = %767
  %830 = icmp eq i32 %823, 2
  %831 = call %dx.types.Handle @dx.op.createHandleForLib.dx.types.Handle(i32 160, %dx.types.Handle %21)  ; CreateHandleForLib(Resource)
  %832 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %831, %dx.types.ResourceProperties { i32 11, i32 0 })  ; AnnotateHandle(res,props)  resource: ByteAddressBuffer
  br i1 %830, label %833, label %847

; <label>:833                                     ; preds = %829
  %834 = mul i32 %775, 6
  %835 = add i32 %834, %821
  %836 = and i32 %835, -4
  %837 = call %dx.types.ResRet.i32 @dx.op.rawBufferLoad.i32(i32 139, %dx.types.Handle %832, i32 %836, i32 undef, i8 3, i32 4)  ; RawBufferLoad(srv,index,elementOffset,mask,alignment)
  %838 = extractvalue %dx.types.ResRet.i32 %837, 0
  %839 = extractvalue %dx.types.ResRet.i32 %837, 1
  %840 = icmp eq i32 %836, %835
  %841 = lshr i32 %838, 16
  %842 = and i32 %839, 65535
  br i1 %840, label %843, label %845

; <label>:843                                     ; preds = %833
  %844 = and i32 %838, 65535
  br label %854

; <label>:845                                     ; preds = %833
  %846 = lshr i32 %839, 16
  br label %854

; <label>:847                                     ; preds = %829
  %848 = mul i32 %823, %824
  %849 = add i32 %848, %821
  %850 = call %dx.types.ResRet.i32 @dx.op.rawBufferLoad.i32(i32 139, %dx.types.Handle %832, i32 %849, i32 undef, i8 7, i32 4)  ; RawBufferLoad(srv,index,elementOffset,mask,alignment)
  %851 = extractvalue %dx.types.ResRet.i32 %850, 0
  %852 = extractvalue %dx.types.ResRet.i32 %850, 1
  %853 = extractvalue %dx.types.ResRet.i32 %850, 2
  br label %854

; <label>:854                                     ; preds = %847, %845, %843, %826
  %855 = phi i32 [ %824, %826 ], [ %851, %847 ], [ %844, %843 ], [ %841, %845 ]
  %856 = phi i32 [ %827, %826 ], [ %852, %847 ], [ %841, %843 ], [ %842, %845 ]
  %857 = phi i32 [ %828, %826 ], [ %853, %847 ], [ %842, %843 ], [ %846, %845 ]
  %858 = getelementptr inbounds [3 x i32], [3 x i32]* %67, i32 0, i32 0
  store i32 %855, i32* %858, align 4
  %859 = getelementptr inbounds [3 x i32], [3 x i32]* %67, i32 0, i32 1
  store i32 %856, i32* %859, align 4
  %860 = getelementptr inbounds [3 x i32], [3 x i32]* %67, i32 0, i32 2
  store i32 %857, i32* %860, align 4
  %861 = getelementptr [3 x i32], [3 x i32]* %67, i32 0, i32 %774
  %862 = load i32, i32* %861, align 4, !tbaa !131, !noalias !144
  %863 = call i32 @dx.op.instanceID.i32(i32 141)  ; InstanceID()
  %864 = urem i32 %862, %818
  %865 = uitofp i32 %864 to float
  %866 = udiv i32 %862, %818
  %867 = uitofp i32 %866 to float
  %868 = call %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32 59, %dx.types.Handle %80, i32 0)  ; CBufferLoadLegacy(handle,regIndex)
  %869 = extractvalue %dx.types.CBufRet.i32 %868, 0
  %870 = sitofp i32 %869 to float
  %871 = extractvalue %dx.types.CBufRet.i32 %868, 1
  %872 = sitofp i32 %871 to float
  call void @llvm.lifetime.end(i64 12, i8* %819) #0
  %873 = and i32 %863, 2147483647
  %874 = mul i32 %873, 42
  %875 = call %dx.types.Handle @dx.op.createHandleForLib.dx.types.Handle(i32 160, %dx.types.Handle %47)  ; CreateHandleForLib(Resource)
  %876 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %875, %dx.types.ResourceProperties { i32 12, i32 16 })  ; AnnotateHandle(res,props)  resource: StructuredBuffer<stride=16>
  %877 = call %dx.types.ResRet.f32 @dx.op.rawBufferLoad.f32(i32 139, %dx.types.Handle %876, i32 %874, i32 0, i8 15, i32 4)  ; RawBufferLoad(srv,index,elementOffset,mask,alignment)
  %878 = extractvalue %dx.types.ResRet.f32 %877, 1
  %879 = bitcast float %878 to i32
  %880 = call %dx.types.Handle @dx.op.createHandleForLib.dx.types.Handle(i32 160, %dx.types.Handle %46)  ; CreateHandleForLib(Resource)
  %881 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %880, %dx.types.ResourceProperties { i32 12, i32 16 })  ; AnnotateHandle(res,props)  resource: StructuredBuffer<stride=16>
  %882 = call %dx.types.ResRet.f32 @dx.op.rawBufferLoad.f32(i32 139, %dx.types.Handle %881, i32 %879, i32 0, i8 15, i32 4)  ; RawBufferLoad(srv,index,elementOffset,mask,alignment)
  %883 = extractvalue %dx.types.ResRet.f32 %882, 0
  %884 = bitcast float %883 to i32
  %885 = sub nsw i32 %784, %785
  %886 = add nsw i32 %885, %783
  %887 = add i32 %793, %886
  %888 = call %dx.types.ResRet.f32 @dx.op.bufferLoad.f32(i32 68, %dx.types.Handle %801, i32 %887, i32 undef)  ; BufferLoad(srv,index,wot)
  %889 = extractvalue %dx.types.ResRet.f32 %888, 0
  %890 = select i1 %799, float %798, float %889
  %891 = fadd fast float %807, %890
  %892 = call float @dx.op.binary.f32(i32 36, float %891, float %788)  ; FMin(a,b)
  %893 = call float @dx.op.unary.f32(i32 27, float %892)  ; Round_ni(value)
  %894 = fptoui float %893 to i32
  %895 = and i32 %894, 31
  %896 = ashr i32 %812, %895
  %897 = add nsw i32 %896, -1
  %898 = sitofp i32 %897 to float
  %899 = fdiv fast float 1.000000e+00, %898
  %900 = fmul fast float %899, %865
  %901 = fmul fast float %899, %867
  %902 = fadd fast float %900, %870
  %903 = fadd fast float %901, %872
  %904 = extractvalue %dx.types.CBufRet.i32 %776, 3
  %905 = sitofp i32 %904 to float
  %906 = fdiv fast float %902, %905
  %907 = fdiv fast float %903, %905
  %908 = fsub fast float 1.000000e+00, %906
  %909 = fmul fast float %907, 2.000000e+00
  %910 = fmul fast float %908, 2.000000e+00
  %911 = fmul fast float %892, %909
  %912 = fmul fast float %892, %910
  %913 = fsub fast float 1.000000e+00, %909
  %914 = fsub fast float 1.000000e+00, %910
  call void @llvm.lifetime.start(i64 16, i8* bitcast ([4 x i32]* @NeighborOffset.i.i.i.i.0.hca to i8*)) #0
  call void @llvm.lifetime.start(i64 16, i8* bitcast ([4 x i32]* @NeighborOffset.i.i.i.i.1.hca to i8*)) #0
  %915 = bitcast [4 x float]* %68 to i8*
  call void @llvm.lifetime.start(i64 16, i8* %915) #0, !noalias !84
  br label %916

; <label>:916                                     ; preds = %976, %854
  %917 = phi i32 [ -1, %854 ], [ %980, %976 ]
  %918 = phi i32 [ 0, %854 ], [ %978, %976 ]
  %919 = phi i32 [ 0, %854 ], [ %974, %976 ]
  %920 = call %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32 59, %dx.types.Handle %76, i32 0)  ; CBufferLoadLegacy(handle,regIndex)
  %921 = extractvalue %dx.types.CBufRet.i32 %920, 0
  %922 = extractvalue %dx.types.CBufRet.i32 %920, 1
  %923 = add i32 %921, %918
  %924 = add i32 %922, %917
  %925 = call %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32 59, %dx.types.Handle %78, i32 0)  ; CBufferLoadLegacy(handle,regIndex)
  %926 = extractvalue %dx.types.CBufRet.i32 %925, 2
  %927 = extractvalue %dx.types.CBufRet.i32 %925, 3
  %928 = call i32 @dx.op.binary.i32(i32 37, i32 %926, i32 %923)  ; IMax(a,b)
  %929 = call i32 @dx.op.binary.i32(i32 37, i32 %927, i32 %924)  ; IMax(a,b)
  %930 = call %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32 59, %dx.types.Handle %78, i32 1)  ; CBufferLoadLegacy(handle,regIndex)
  %931 = extractvalue %dx.types.CBufRet.i32 %930, 0
  %932 = extractvalue %dx.types.CBufRet.i32 %930, 1
  %933 = add i32 %926, -1
  %934 = add i32 %933, %931
  %935 = add i32 %927, -1
  %936 = add i32 %935, %932
  %937 = call i32 @dx.op.binary.i32(i32 38, i32 %934, i32 %928)  ; IMin(a,b)
  %938 = call i32 @dx.op.binary.i32(i32 38, i32 %936, i32 %929)  ; IMin(a,b)
  %939 = sub nsw i32 %938, %927
  %940 = mul nsw i32 %939, %931
  %941 = sub i32 %937, %926
  %942 = add nsw i32 %941, %940
  %943 = extractvalue %dx.types.CBufRet.i32 %925, 0
  %944 = call %dx.types.Handle @dx.op.createHandleForLib.dx.types.Handle(i32 160, %dx.types.Handle %44)  ; CreateHandleForLib(Resource)
  %945 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %944, %dx.types.ResourceProperties { i32 10, i32 261 })  ; AnnotateHandle(res,props)  resource: TypedBuffer<U32>
  %946 = call %dx.types.ResRet.i32 @dx.op.bufferLoad.i32(i32 68, %dx.types.Handle %945, i32 %943, i32 undef)  ; BufferLoad(srv,index,wot)
  %947 = extractvalue %dx.types.ResRet.i32 %946, 0
  %948 = add i32 %942, %947
  %949 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %82, i32 244)  ; CBufferLoadLegacy(handle,regIndex)
  %950 = extractvalue %dx.types.CBufRet.f32 %949, 0
  %951 = fcmp fast oge float %950, 0.000000e+00
  %952 = call %dx.types.Handle @dx.op.createHandleForLib.dx.types.Handle(i32 160, %dx.types.Handle %43)  ; CreateHandleForLib(Resource)
  %953 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %952, %dx.types.ResourceProperties { i32 10, i32 265 })  ; AnnotateHandle(res,props)  resource: TypedBuffer<F32>
  %954 = call %dx.types.ResRet.f32 @dx.op.bufferLoad.f32(i32 68, %dx.types.Handle %953, i32 %948, i32 undef)  ; BufferLoad(srv,index,wot)
  %955 = extractvalue %dx.types.ResRet.f32 %954, 0
  %956 = select i1 %951, float %950, float %955
  %957 = call %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32 59, %dx.types.Handle %76, i32 1)  ; CBufferLoadLegacy(handle,regIndex)
  %958 = extractvalue %dx.types.CBufRet.i32 %957, 0
  %959 = sitofp i32 %958 to float
  %960 = add i32 %947, %886
  %961 = call %dx.types.ResRet.f32 @dx.op.bufferLoad.f32(i32 68, %dx.types.Handle %953, i32 %960, i32 undef)  ; BufferLoad(srv,index,wot)
  %962 = extractvalue %dx.types.ResRet.f32 %961, 0
  %963 = select i1 %951, float %950, float %962
  %964 = call %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32 59, %dx.types.Handle %82, i32 244)  ; CBufferLoadLegacy(handle,regIndex)
  %965 = extractvalue %dx.types.CBufRet.i32 %964, 1
  %966 = sitofp i32 %965 to float
  %967 = fadd fast float %966, %963
  %968 = call float @dx.op.binary.f32(i32 36, float %967, float %959)  ; FMin(a,b)
  %969 = call float @dx.op.binary.f32(i32 35, float %956, float %968)  ; FMax(a,b)
  %970 = getelementptr inbounds [4 x float], [4 x float]* %68, i32 0, i32 %919
  %971 = fadd fast float %966, %969
  %972 = select i1 %951, float %950, float %971
  %973 = call float @dx.op.binary.f32(i32 36, float %972, float %959)  ; FMin(a,b)
  store float %973, float* %970, align 4, !tbaa !127, !noalias !84
  %974 = add nuw nsw i32 %919, 1
  %975 = icmp eq i32 %974, 4
  br i1 %975, label %981, label %976

; <label>:976                                     ; preds = %916
  %977 = getelementptr [4 x i32], [4 x i32]* @NeighborOffset.i.i.i.i.0.hca, i32 0, i32 %974
  %978 = load i32, i32* %977, align 4
  %979 = getelementptr [4 x i32], [4 x i32]* @NeighborOffset.i.i.i.i.1.hca, i32 0, i32 %974
  %980 = load i32, i32* %979, align 4
  br label %916

; <label>:981                                     ; preds = %916
  %982 = uitofp i32 %894 to float
  %983 = fsub fast float 1.000000e+00, %907
  %984 = fmul fast float %906, 2.000000e+00
  %985 = fmul fast float %983, 2.000000e+00
  %986 = fmul fast float %892, %984
  %987 = fmul fast float %892, %985
  %988 = fsub fast float 1.000000e+00, %984
  %989 = fsub fast float 1.000000e+00, %985
  %990 = getelementptr inbounds [4 x float], [4 x float]* %68, i32 0, i32 0
  %991 = load float, float* %990, align 4, !tbaa !127, !noalias !84
  %992 = getelementptr inbounds [4 x float], [4 x float]* %68, i32 0, i32 1
  %993 = load float, float* %992, align 4, !tbaa !127, !noalias !84
  %994 = getelementptr inbounds [4 x float], [4 x float]* %68, i32 0, i32 2
  %995 = load float, float* %994, align 4, !tbaa !127, !noalias !84
  %996 = getelementptr inbounds [4 x float], [4 x float]* %68, i32 0, i32 3
  %997 = load float, float* %996, align 4, !tbaa !127, !noalias !84
  call void @llvm.lifetime.end(i64 16, i8* %915) #0, !noalias !84
  call void @llvm.lifetime.end(i64 16, i8* bitcast ([4 x i32]* @NeighborOffset.i.i.i.i.0.hca to i8*)) #0
  call void @llvm.lifetime.end(i64 16, i8* bitcast ([4 x i32]* @NeighborOffset.i.i.i.i.1.hca to i8*)) #0
  %998 = fmul fast float %991, %913
  %999 = fmul fast float %993, %988
  %1000 = fmul fast float %995, %914
  %1001 = fmul fast float %997, %989
  %1002 = fadd fast float %998, %911
  %1003 = fadd fast float %999, %986
  %1004 = fadd fast float %1000, %912
  %1005 = fadd fast float %1001, %987
  %1006 = fadd fast float %902, %903
  %1007 = fdiv fast float %1006, %905
  %1008 = fcmp fast ogt float %1007, 1.000000e+00
  %1009 = fcmp fast olt float %906, %907
  %1010 = select i1 %1009, float %1005, float %1004
  %1011 = select i1 %1009, float %1003, float %1002
  %1012 = select i1 %1008, float %1010, float %1011
  %1013 = call float @dx.op.unary.f32(i32 27, float %1012)  ; Round_ni(value)
  %1014 = fsub fast float %1012, %1013
  %1015 = fsub fast float %1013, %982
  %1016 = fsub fast float -0.000000e+00, %1015
  %1017 = call float @dx.op.unary.f32(i32 21, float %1016)  ; Exp(value)
  %1018 = fmul fast float %1017, %865
  %1019 = fmul fast float %1017, %867
  %1020 = call float @dx.op.unary.f32(i32 27, float %1018)  ; Round_ni(value)
  %1021 = call float @dx.op.unary.f32(i32 27, float %1019)  ; Round_ni(value)
  %1022 = fsub fast float -0.000000e+00, %1013
  %1023 = call float @dx.op.unary.f32(i32 21, float %1022)  ; Exp(value)
  %1024 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %76, i32 5)  ; CBufferLoadLegacy(handle,regIndex)
  %1025 = extractvalue %dx.types.CBufRet.f32 %1024, 0
  %1026 = fmul fast float %1025, %1023
  %1027 = fadd fast float %1026, -1.000000e+00
  %1028 = fmul fast float %1023, 5.000000e-01
  %1029 = fmul fast float %1028, %1025
  %1030 = call float @dx.op.binary.f32(i32 35, float %1029, float 2.000000e+00)  ; FMax(a,b)
  %1031 = fadd fast float %1030, -1.000000e+00
  %1032 = extractvalue %dx.types.CBufRet.f32 %1024, 1
  %1033 = fmul fast float %1032, %1027
  %1034 = fmul fast float %1032, %1031
  %1035 = fdiv fast float %1020, %1033
  %1036 = fdiv fast float %1021, %1033
  %1037 = fmul fast float %1020, 5.000000e-01
  %1038 = fmul fast float %1021, 5.000000e-01
  %1039 = call float @dx.op.unary.f32(i32 27, float %1037)  ; Round_ni(value)
  %1040 = call float @dx.op.unary.f32(i32 27, float %1038)  ; Round_ni(value)
  %1041 = fdiv fast float %1039, %1034
  %1042 = fdiv fast float %1040, %1034
  %1043 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %76, i32 3)  ; CBufferLoadLegacy(handle,regIndex)
  %1044 = extractvalue %dx.types.CBufRet.f32 %1043, 0
  %1045 = extractvalue %dx.types.CBufRet.f32 %1043, 1
  %1046 = fmul fast float %1044, %1035
  %1047 = fmul fast float %1045, %1036
  %1048 = extractvalue %dx.types.CBufRet.f32 %1043, 2
  %1049 = extractvalue %dx.types.CBufRet.f32 %1043, 3
  %1050 = fadd fast float %1046, %1048
  %1051 = fadd fast float %1047, %1049
  %1052 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %76, i32 6)  ; CBufferLoadLegacy(handle,regIndex)
  %1053 = extractvalue %dx.types.CBufRet.f32 %1052, 2
  %1054 = fmul fast float %1053, %870
  %1055 = fmul fast float %1053, %872
  %1056 = fadd fast float %1050, %1054
  %1057 = fadd fast float %1051, %1055
  %1058 = call %dx.types.Handle @dx.op.createHandleForLib.dx.types.Handle(i32 160, %dx.types.Handle %39)  ; CreateHandleForLib(Resource)
  %1059 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %1058, %dx.types.ResourceProperties { i32 2, i32 1033 })  ; AnnotateHandle(res,props)  resource: Texture2D<4xF32>
  %1060 = call %dx.types.Handle @dx.op.createHandleForLib.dx.types.Handle(i32 160, %dx.types.Handle %16)  ; CreateHandleForLib(Resource)
  %1061 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %1060, %dx.types.ResourceProperties { i32 14, i32 0 })  ; AnnotateHandle(res,props)  resource: SamplerState
  %1062 = call %dx.types.ResRet.f32 @dx.op.sampleLevel.f32(i32 62, %dx.types.Handle %1059, %dx.types.Handle %1061, float %1056, float %1057, float undef, float undef, i32 0, i32 0, i32 undef, float %1013)  ; SampleLevel(srv,sampler,coord0,coord1,coord2,coord3,offset0,offset1,offset2,LOD)
  %1063 = extractvalue %dx.types.ResRet.f32 %1062, 0
  %1064 = extractvalue %dx.types.ResRet.f32 %1062, 1
  %1065 = extractvalue %dx.types.ResRet.f32 %1062, 2
  %1066 = extractvalue %dx.types.ResRet.f32 %1062, 3
  %1067 = fmul fast float %1044, %1041
  %1068 = fmul fast float %1045, %1042
  %1069 = fadd fast float %1067, %1048
  %1070 = fadd fast float %1068, %1049
  %1071 = fadd fast float %1069, %1054
  %1072 = fadd fast float %1070, %1055
  %1073 = fadd fast float %1013, 1.000000e+00
  %1074 = call %dx.types.ResRet.f32 @dx.op.sampleLevel.f32(i32 62, %dx.types.Handle %1059, %dx.types.Handle %1061, float %1071, float %1072, float undef, float undef, i32 0, i32 0, i32 undef, float %1073)  ; SampleLevel(srv,sampler,coord0,coord1,coord2,coord3,offset0,offset1,offset2,LOD)
  %1075 = extractvalue %dx.types.ResRet.f32 %1074, 0
  %1076 = extractvalue %dx.types.ResRet.f32 %1074, 1
  %1077 = extractvalue %dx.types.ResRet.f32 %1074, 2
  %1078 = extractvalue %dx.types.ResRet.f32 %1074, 3
  %1079 = fmul fast float %1063, 6.528000e+04
  %1080 = fmul fast float %1064, 2.550000e+02
  %1081 = fadd fast float %1080, -3.276800e+04
  %1082 = fadd fast float %1081, %1079
  %1083 = fmul fast float %1082, 3.906250e-03
  %1084 = fmul fast float %1065, 6.528000e+04
  %1085 = fmul fast float %1066, 2.550000e+02
  %1086 = fadd fast float %1085, -3.276800e+04
  %1087 = fadd fast float %1086, %1084
  %1088 = fmul fast float %1087, 3.906250e-03
  %1089 = fmul fast float %1075, 6.528000e+04
  %1090 = fmul fast float %1076, 2.550000e+02
  %1091 = fadd fast float %1090, -3.276800e+04
  %1092 = fadd fast float %1091, %1089
  %1093 = fmul fast float %1092, 3.906250e-03
  %1094 = fmul fast float %1077, 6.528000e+04
  %1095 = fmul fast float %1078, 2.550000e+02
  %1096 = fadd fast float %1095, -3.276800e+04
  %1097 = fadd fast float %1096, %1094
  %1098 = fadd fast float %1083, %1035
  %1099 = fadd fast float %1088, %1036
  %1100 = fsub fast float %1041, %1098
  %1101 = fadd fast float %1100, %1093
  %1102 = fsub fast float %1042, %1099
  %1103 = fmul fast float %1101, %1014
  %1104 = fadd fast float %1103, %1098
  %1105 = extractvalue %dx.types.CBufRet.f32 %1024, 2
  %1106 = extractvalue %dx.types.CBufRet.f32 %1024, 3
  %1107 = extractvalue %dx.types.CBufRet.f32 %1052, 3
  %1108 = fmul fast float %1107, %870
  %1109 = fmul fast float %1107, %872
  %1110 = fadd fast float %1108, %1105
  %1111 = fadd fast float %1109, %1106
  %1112 = fmul fast float %1104, %1044
  %1113 = fadd fast float %1054, %1048
  %1114 = fadd fast float %1055, %1049
  %1115 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %76, i32 2)  ; CBufferLoadLegacy(handle,regIndex)
  %1116 = extractvalue %dx.types.CBufRet.f32 %1115, 0
  %1117 = fmul fast float %1104, %1116
  %1118 = extractvalue %dx.types.CBufRet.f32 %1115, 2
  %1119 = fadd fast float %1117, %1118
  %1120 = fmul fast float %1116, 5.000000e-01
  %1121 = fadd fast float %1119, %1120
  %1122 = extractvalue %dx.types.CBufRet.f32 %1052, 0
  %1123 = fmul fast float %1122, %870
  %1124 = fadd fast float %1121, %1123
  %1125 = fmul fast float %1097, 3.906250e-03
  %1126 = fadd fast float %1102, %1125
  %1127 = fmul fast float %1126, %1014
  %1128 = fadd fast float %1127, %1099
  %1129 = fadd fast float %1110, %1104
  %1130 = fadd fast float %1111, %1128
  %1131 = fmul fast float %1128, %1045
  %1132 = fadd fast float %1113, %1112
  %1133 = fadd fast float %1114, %1131
  %1134 = extractvalue %dx.types.CBufRet.f32 %1115, 1
  %1135 = fmul fast float %1128, %1134
  %1136 = extractvalue %dx.types.CBufRet.f32 %1115, 3
  %1137 = fadd fast float %1135, %1136
  %1138 = fmul fast float %1134, 5.000000e-01
  %1139 = fadd fast float %1137, %1138
  %1140 = extractvalue %dx.types.CBufRet.f32 %1052, 1
  %1141 = fmul fast float %1140, %872
  %1142 = fadd fast float %1139, %1141
  %1143 = getelementptr [3 x float], [3 x float]* %69, i32 0, i32 %774
  %1144 = load float, float* %1143, align 4, !tbaa !127, !noalias !143
  %1145 = fmul fast float %1144, %1129
  %1146 = fmul fast float %1144, %1130
  %1147 = fadd fast float %1145, %772
  %1148 = fadd fast float %1146, %773
  %1149 = fmul fast float %1144, %1132
  %1150 = fmul fast float %1144, %1133
  %1151 = fmul fast float %1144, %1124
  %1152 = fmul fast float %1144, %1142
  %1153 = fadd fast float %1149, %768
  %1154 = fadd fast float %1150, %769
  %1155 = fadd fast float %1151, %770
  %1156 = fadd fast float %1152, %771
  %1157 = add nuw nsw i32 %774, 1
  %1158 = icmp eq i32 %1157, 3
  br i1 %1158, label %1159, label %767

; <label>:1159                                    ; preds = %981
  %1160 = and i32 %884, 1048575
  %1161 = extractvalue %dx.types.CBufRet.f32 %735, 0
  %1162 = extractvalue %dx.types.CBufRet.f32 %735, 2
  %1163 = extractvalue %dx.types.CBufRet.f32 %737, 0
  %1164 = extractvalue %dx.types.CBufRet.f32 %737, 2
  %1165 = extractvalue %dx.types.CBufRet.f32 %739, 1
  %1166 = extractvalue %dx.types.CBufRet.f32 %739, 3
  %1167 = extractvalue %dx.types.CBufRet.f32 %742, 1
  %1168 = extractvalue %dx.types.CBufRet.f32 %744, 0
  %1169 = extractvalue %dx.types.CBufRet.f32 %744, 2
  %1170 = call float @dx.op.legacyF16ToF32(i32 131, i32 %748)  ; LegacyF16ToF32(value)
  %1171 = fadd fast float %752, %1170
  call void @llvm.lifetime.end(i64 12, i8* %759) #0, !noalias !143
  %1172 = call %dx.types.Handle @dx.op.createHandleForLib.dx.types.Handle(i32 160, %dx.types.Handle %40)  ; CreateHandleForLib(Resource)
  %1173 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %1172, %dx.types.ResourceProperties { i32 2, i32 1033 })  ; AnnotateHandle(res,props)  resource: Texture2D<4xF32>
  %1174 = call %dx.types.Handle @dx.op.createHandleForLib.dx.types.Handle(i32 160, %dx.types.Handle %17)  ; CreateHandleForLib(Resource)
  %1175 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %1174, %dx.types.ResourceProperties { i32 14, i32 0 })  ; AnnotateHandle(res,props)  resource: SamplerState
  %1176 = call %dx.types.ResRet.f32 @dx.op.sampleLevel.f32(i32 62, %dx.types.Handle %1173, %dx.types.Handle %1175, float %1155, float %1156, float undef, float undef, i32 0, i32 0, i32 undef, float %734)  ; SampleLevel(srv,sampler,coord0,coord1,coord2,coord3,offset0,offset1,offset2,LOD)
  %1177 = extractvalue %dx.types.ResRet.f32 %1176, 2
  %1178 = extractvalue %dx.types.ResRet.f32 %1176, 3
  %1179 = fmul fast float %1177, 2.000000e+00
  %1180 = fmul fast float %1178, 2.000000e+00
  %1181 = fadd fast float %1179, -1.000000e+00
  %1182 = fadd fast float %1180, -1.000000e+00
  %1183 = call float @dx.op.dot2.f32(i32 54, float %1181, float %1182, float %1181, float %1182)  ; Dot2(ax,ay,bx,by)
  %1184 = fsub fast float 1.000000e+00, %1183
  %1185 = call float @dx.op.binary.f32(i32 35, float %1184, float 0.000000e+00)  ; FMax(a,b)
  %1186 = call float @dx.op.unary.f32(i32 24, float %1185)  ; Sqrt(value)
  %1187 = fsub fast float -0.000000e+00, %1181
  %1188 = call float @dx.op.dot3.f32(i32 55, float %1186, float 0.000000e+00, float %1187, float %1186, float 0.000000e+00, float %1187)  ; Dot3(ax,ay,az,bx,by,bz)
  %1189 = call float @dx.op.unary.f32(i32 25, float %1188)  ; Rsqrt(value)
  %1190 = fmul fast float %1189, %1186
  %1191 = fmul fast float %1189, %1187
  %1192 = fmul fast float %1191, %1182
  %1193 = fmul fast float %1190, %1186
  %1194 = fmul fast float %1191, %1181
  %1195 = fsub fast float %1193, %1194
  %1196 = fmul fast float %1182, %1190
  %1197 = fsub fast float -0.000000e+00, %1196
  %1198 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %76, i32 8)  ; CBufferLoadLegacy(handle,regIndex)
  %1199 = extractvalue %dx.types.CBufRet.f32 %1198, 0
  %1200 = extractvalue %dx.types.CBufRet.f32 %1198, 1
  %1201 = extractvalue %dx.types.CBufRet.f32 %1198, 2
  %1202 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %76, i32 9)  ; CBufferLoadLegacy(handle,regIndex)
  %1203 = extractvalue %dx.types.CBufRet.f32 %1202, 0
  %1204 = extractvalue %dx.types.CBufRet.f32 %1202, 1
  %1205 = extractvalue %dx.types.CBufRet.f32 %1202, 2
  %1206 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %76, i32 10)  ; CBufferLoadLegacy(handle,regIndex)
  %1207 = extractvalue %dx.types.CBufRet.f32 %1206, 0
  %1208 = extractvalue %dx.types.CBufRet.f32 %1206, 1
  %1209 = extractvalue %dx.types.CBufRet.f32 %1206, 2
  %1210 = fmul fast float %1199, %1190
  %1211 = call float @dx.op.tertiary.f32(i32 46, float %1191, float %1207, float %1210)  ; FMad(a,b,c)
  %1212 = fmul fast float %1200, %1190
  %1213 = call float @dx.op.tertiary.f32(i32 46, float %1191, float %1208, float %1212)  ; FMad(a,b,c)
  %1214 = fmul fast float %1201, %1190
  %1215 = call float @dx.op.tertiary.f32(i32 46, float %1191, float %1209, float %1214)  ; FMad(a,b,c)
  %1216 = fmul fast float %1192, %1199
  %1217 = call float @dx.op.tertiary.f32(i32 46, float %1195, float %1203, float %1216)  ; FMad(a,b,c)
  %1218 = call float @dx.op.tertiary.f32(i32 46, float %1197, float %1207, float %1217)  ; FMad(a,b,c)
  %1219 = fmul fast float %1192, %1200
  %1220 = call float @dx.op.tertiary.f32(i32 46, float %1195, float %1204, float %1219)  ; FMad(a,b,c)
  %1221 = call float @dx.op.tertiary.f32(i32 46, float %1197, float %1208, float %1220)  ; FMad(a,b,c)
  %1222 = fmul fast float %1192, %1201
  %1223 = call float @dx.op.tertiary.f32(i32 46, float %1195, float %1205, float %1222)  ; FMad(a,b,c)
  %1224 = call float @dx.op.tertiary.f32(i32 46, float %1197, float %1209, float %1223)  ; FMad(a,b,c)
  %1225 = fmul fast float %1199, %1181
  %1226 = call float @dx.op.tertiary.f32(i32 46, float %1182, float %1203, float %1225)  ; FMad(a,b,c)
  %1227 = call float @dx.op.tertiary.f32(i32 46, float %1186, float %1207, float %1226)  ; FMad(a,b,c)
  %1228 = fmul fast float %1200, %1181
  %1229 = call float @dx.op.tertiary.f32(i32 46, float %1182, float %1204, float %1228)  ; FMad(a,b,c)
  %1230 = call float @dx.op.tertiary.f32(i32 46, float %1186, float %1208, float %1229)  ; FMad(a,b,c)
  %1231 = fmul fast float %1201, %1181
  %1232 = call float @dx.op.tertiary.f32(i32 46, float %1182, float %1205, float %1231)  ; FMad(a,b,c)
  %1233 = call float @dx.op.tertiary.f32(i32 46, float %1186, float %1209, float %1232)  ; FMad(a,b,c)
  %1234 = call float @dx.op.worldRayOrigin.f32(i32 147, i8 0)  ; WorldRayOrigin(col)
  %1235 = call float @dx.op.worldRayOrigin.f32(i32 147, i8 1)  ; WorldRayOrigin(col)
  %1236 = call float @dx.op.worldRayOrigin.f32(i32 147, i8 2)  ; WorldRayOrigin(col)
  %1237 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %82, i32 329)  ; CBufferLoadLegacy(handle,regIndex)
  %1238 = extractvalue %dx.types.CBufRet.f32 %1237, 0
  %1239 = extractvalue %dx.types.CBufRet.f32 %1237, 1
  %1240 = extractvalue %dx.types.CBufRet.f32 %1237, 2
  %1241 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %82, i32 330)  ; CBufferLoadLegacy(handle,regIndex)
  %1242 = extractvalue %dx.types.CBufRet.f32 %1241, 0
  %1243 = extractvalue %dx.types.CBufRet.f32 %1241, 1
  %1244 = extractvalue %dx.types.CBufRet.f32 %1241, 2
  %1245 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %82, i32 64)  ; CBufferLoadLegacy(handle,regIndex)
  %1246 = extractvalue %dx.types.CBufRet.f32 %1245, 0
  %1247 = extractvalue %dx.types.CBufRet.f32 %1245, 1
  %1248 = extractvalue %dx.types.CBufRet.f32 %1245, 2
  %1249 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %82, i32 76)  ; CBufferLoadLegacy(handle,regIndex)
  %1250 = extractvalue %dx.types.CBufRet.f32 %1249, 0
  %1251 = extractvalue %dx.types.CBufRet.f32 %1249, 1
  %1252 = extractvalue %dx.types.CBufRet.f32 %1249, 2
  %1253 = fsub fast float %1242, %1246
  %1254 = fsub fast float %1243, %1247
  %1255 = fsub fast float %1244, %1248
  %1256 = call float @dx.op.worldRayDirection.f32(i32 148, i8 0)  ; WorldRayDirection(col)
  %1257 = call float @dx.op.worldRayDirection.f32(i32 148, i8 1)  ; WorldRayDirection(col)
  %1258 = call float @dx.op.worldRayDirection.f32(i32 148, i8 2)  ; WorldRayDirection(col)
  %1259 = call float @dx.op.rayTCurrent.f32(i32 154)  ; RayTCurrent()
  %1260 = fmul fast float %1259, %1256
  %1261 = fmul fast float %1259, %1257
  %1262 = fmul fast float %1259, %1258
  %1263 = call i32 @dx.op.hitKind.i32(i32 143)  ; HitKind()
  %1264 = icmp eq i32 %1263, 254
  %1265 = select i1 %1264, float 1.000000e+00, float -1.000000e+00
  %1266 = call %dx.types.Handle @dx.op.createHandleForLib.dx.types.Handle(i32 160, %dx.types.Handle %38)  ; CreateHandleForLib(Resource)
  %1267 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %1266, %dx.types.ResourceProperties { i32 2, i32 1033 })  ; AnnotateHandle(res,props)  resource: Texture2D<4xF32>
  %1268 = call %dx.types.Handle @dx.op.createHandleForLib.dx.types.Handle(i32 160, %dx.types.Handle %19)  ; CreateHandleForLib(Resource)
  %1269 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %1268, %dx.types.ResourceProperties { i32 14, i32 0 })  ; AnnotateHandle(res,props)  resource: SamplerState
  %1270 = call %dx.types.ResRet.f32 @dx.op.sampleLevel.f32(i32 62, %dx.types.Handle %1267, %dx.types.Handle %1269, float %1153, float %1154, float undef, float undef, i32 0, i32 0, i32 undef, float %734)  ; SampleLevel(srv,sampler,coord0,coord1,coord2,coord3,offset0,offset1,offset2,LOD)
  %1271 = extractvalue %dx.types.ResRet.f32 %1270, 0
  %1272 = extractvalue %dx.types.ResRet.f32 %1270, 1
  %1273 = extractvalue %dx.types.ResRet.f32 %1270, 2
  %1274 = extractvalue %dx.types.ResRet.f32 %1270, 3
  %1275 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %74, i32 1)  ; CBufferLoadLegacy(handle,regIndex)
  %1276 = extractvalue %dx.types.CBufRet.f32 %1275, 0
  %1277 = extractvalue %dx.types.CBufRet.f32 %1275, 1
  %1278 = extractvalue %dx.types.CBufRet.f32 %1275, 2
  %1279 = extractvalue %dx.types.CBufRet.f32 %1275, 3
  %1280 = call float @dx.op.dot4.f32(i32 56, float %1271, float %1272, float %1273, float %1274, float %1276, float %1277, float %1278, float %1279)  ; Dot4(ax,ay,az,aw,bx,by,bz,bw)
  %1281 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %74, i32 2)  ; CBufferLoadLegacy(handle,regIndex)
  %1282 = extractvalue %dx.types.CBufRet.f32 %1281, 0
  %1283 = extractvalue %dx.types.CBufRet.f32 %1281, 1
  %1284 = extractvalue %dx.types.CBufRet.f32 %1281, 2
  %1285 = extractvalue %dx.types.CBufRet.f32 %1281, 3
  %1286 = call float @dx.op.dot4.f32(i32 56, float %1271, float %1272, float %1273, float %1274, float %1282, float %1283, float %1284, float %1285)  ; Dot4(ax,ay,az,aw,bx,by,bz,bw)
  %1287 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %74, i32 3)  ; CBufferLoadLegacy(handle,regIndex)
  %1288 = extractvalue %dx.types.CBufRet.f32 %1287, 0
  %1289 = extractvalue %dx.types.CBufRet.f32 %1287, 1
  %1290 = extractvalue %dx.types.CBufRet.f32 %1287, 2
  %1291 = extractvalue %dx.types.CBufRet.f32 %1287, 3
  %1292 = call float @dx.op.dot4.f32(i32 56, float %1271, float %1272, float %1273, float %1274, float %1288, float %1289, float %1290, float %1291)  ; Dot4(ax,ay,az,aw,bx,by,bz,bw)
  %1293 = call %dx.types.Handle @dx.op.createHandleForLib.dx.types.Handle(i32 160, %dx.types.Handle %37)  ; CreateHandleForLib(Resource)
  %1294 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %1293, %dx.types.ResourceProperties { i32 2, i32 1033 })  ; AnnotateHandle(res,props)  resource: Texture2D<4xF32>
  %1295 = call %dx.types.ResRet.f32 @dx.op.sampleLevel.f32(i32 62, %dx.types.Handle %1294, %dx.types.Handle %1269, float %1153, float %1154, float undef, float undef, i32 0, i32 0, i32 undef, float %734)  ; SampleLevel(srv,sampler,coord0,coord1,coord2,coord3,offset0,offset1,offset2,LOD)
  %1296 = extractvalue %dx.types.ResRet.f32 %1295, 0
  %1297 = extractvalue %dx.types.ResRet.f32 %1295, 1
  %1298 = extractvalue %dx.types.ResRet.f32 %1295, 2
  %1299 = extractvalue %dx.types.ResRet.f32 %1295, 3
  %1300 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %74, i32 4)  ; CBufferLoadLegacy(handle,regIndex)
  %1301 = extractvalue %dx.types.CBufRet.f32 %1300, 0
  %1302 = extractvalue %dx.types.CBufRet.f32 %1300, 1
  %1303 = extractvalue %dx.types.CBufRet.f32 %1300, 2
  %1304 = extractvalue %dx.types.CBufRet.f32 %1300, 3
  %1305 = call float @dx.op.dot4.f32(i32 56, float %1296, float %1297, float %1298, float %1299, float %1301, float %1302, float %1303, float %1304)  ; Dot4(ax,ay,az,aw,bx,by,bz,bw)
  %1306 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %74, i32 5)  ; CBufferLoadLegacy(handle,regIndex)
  %1307 = extractvalue %dx.types.CBufRet.f32 %1306, 0
  %1308 = extractvalue %dx.types.CBufRet.f32 %1306, 1
  %1309 = extractvalue %dx.types.CBufRet.f32 %1306, 2
  %1310 = extractvalue %dx.types.CBufRet.f32 %1306, 3
  %1311 = call float @dx.op.dot4.f32(i32 56, float %1271, float %1272, float %1273, float %1274, float %1307, float %1308, float %1309, float %1310)  ; Dot4(ax,ay,az,aw,bx,by,bz,bw)
  %1312 = call float @dx.op.dot2.f32(i32 54, float %1147, float %1148, float -0.000000e+00, float 1.000000e+00)  ; Dot2(ax,ay,bx,by)
  %1313 = call float @dx.op.dot2.f32(i32 54, float %1147, float %1148, float 1.000000e+00, float 0.000000e+00)  ; Dot2(ax,ay,bx,by)
  %1314 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %74, i32 6)  ; CBufferLoadLegacy(handle,regIndex)
  %1315 = extractvalue %dx.types.CBufRet.f32 %1314, 0
  %1316 = fmul fast float %1315, %1313
  %1317 = fmul fast float %1315, %1312
  %1318 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %82, i32 144)  ; CBufferLoadLegacy(handle,regIndex)
  %1319 = extractvalue %dx.types.CBufRet.f32 %1318, 0
  %1320 = fadd fast float %1319, %734
  %1321 = call %dx.types.Handle @dx.op.createHandleForLib.dx.types.Handle(i32 160, %dx.types.Handle %36)  ; CreateHandleForLib(Resource)
  %1322 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %1321, %dx.types.ResourceProperties { i32 2, i32 1033 })  ; AnnotateHandle(res,props)  resource: Texture2D<4xF32>
  %1323 = call %dx.types.Handle @dx.op.createHandleForLib.dx.types.Handle(i32 160, %dx.types.Handle %15)  ; CreateHandleForLib(Resource)
  %1324 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %1323, %dx.types.ResourceProperties { i32 14, i32 0 })  ; AnnotateHandle(res,props)  resource: SamplerState
  %1325 = call %dx.types.ResRet.f32 @dx.op.sampleLevel.f32(i32 62, %dx.types.Handle %1322, %dx.types.Handle %1324, float %1316, float %1317, float undef, float undef, i32 0, i32 0, i32 undef, float %1320)  ; SampleLevel(srv,sampler,coord0,coord1,coord2,coord3,offset0,offset1,offset2,LOD)
  %1326 = extractvalue %dx.types.ResRet.f32 %1325, 0
  %1327 = extractvalue %dx.types.ResRet.f32 %1325, 1
  %1328 = fmul fast float %1326, 2.000000e+00
  %1329 = fmul fast float %1327, 2.000000e+00
  %1330 = fadd fast float %1328, -1.000000e+00
  %1331 = fadd fast float %1329, -1.000000e+00
  %1332 = call float @dx.op.dot2.f32(i32 54, float %1330, float %1331, float %1330, float %1331)  ; Dot2(ax,ay,bx,by)
  %1333 = fsub fast float 1.000000e+00, %1332
  %1334 = call float @dx.op.unary.f32(i32 7, float %1333)  ; Saturate(value)
  %1335 = call float @dx.op.unary.f32(i32 24, float %1334)  ; Sqrt(value)
  %1336 = fmul fast float %1330, %1280
  %1337 = fmul fast float %1331, %1280
  %1338 = fmul fast float %1335, %1280
  %1339 = extractvalue %dx.types.CBufRet.f32 %1314, 1
  %1340 = fmul fast float %1339, %1313
  %1341 = fmul fast float %1339, %1312
  %1342 = call %dx.types.Handle @dx.op.createHandleForLib.dx.types.Handle(i32 160, %dx.types.Handle %35)  ; CreateHandleForLib(Resource)
  %1343 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %1342, %dx.types.ResourceProperties { i32 2, i32 1033 })  ; AnnotateHandle(res,props)  resource: Texture2D<4xF32>
  %1344 = call %dx.types.Handle @dx.op.createHandleForLib.dx.types.Handle(i32 160, %dx.types.Handle %14)  ; CreateHandleForLib(Resource)
  %1345 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %1344, %dx.types.ResourceProperties { i32 14, i32 0 })  ; AnnotateHandle(res,props)  resource: SamplerState
  %1346 = call %dx.types.ResRet.f32 @dx.op.sampleLevel.f32(i32 62, %dx.types.Handle %1343, %dx.types.Handle %1345, float %1340, float %1341, float undef, float undef, i32 0, i32 0, i32 undef, float %1320)  ; SampleLevel(srv,sampler,coord0,coord1,coord2,coord3,offset0,offset1,offset2,LOD)
  %1347 = extractvalue %dx.types.ResRet.f32 %1346, 0
  %1348 = extractvalue %dx.types.ResRet.f32 %1346, 1
  %1349 = fmul fast float %1347, 2.000000e+00
  %1350 = fmul fast float %1348, 2.000000e+00
  %1351 = fadd fast float %1349, -1.000000e+00
  %1352 = fadd fast float %1350, -1.000000e+00
  %1353 = call float @dx.op.dot2.f32(i32 54, float %1351, float %1352, float %1351, float %1352)  ; Dot2(ax,ay,bx,by)
  %1354 = fsub fast float 1.000000e+00, %1353
  %1355 = call float @dx.op.unary.f32(i32 7, float %1354)  ; Saturate(value)
  %1356 = call float @dx.op.unary.f32(i32 24, float %1355)  ; Sqrt(value)
  %1357 = fmul fast float %1351, %1286
  %1358 = fmul fast float %1352, %1286
  %1359 = fmul fast float %1356, %1286
  %1360 = fadd fast float %1357, %1336
  %1361 = fadd fast float %1358, %1337
  %1362 = fadd fast float %1359, %1338
  %1363 = extractvalue %dx.types.CBufRet.f32 %1314, 2
  %1364 = fmul fast float %1363, %1313
  %1365 = fmul fast float %1363, %1312
  %1366 = call %dx.types.Handle @dx.op.createHandleForLib.dx.types.Handle(i32 160, %dx.types.Handle %34)  ; CreateHandleForLib(Resource)
  %1367 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %1366, %dx.types.ResourceProperties { i32 2, i32 1033 })  ; AnnotateHandle(res,props)  resource: Texture2D<4xF32>
  %1368 = call %dx.types.Handle @dx.op.createHandleForLib.dx.types.Handle(i32 160, %dx.types.Handle %13)  ; CreateHandleForLib(Resource)
  %1369 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %1368, %dx.types.ResourceProperties { i32 14, i32 0 })  ; AnnotateHandle(res,props)  resource: SamplerState
  %1370 = call %dx.types.ResRet.f32 @dx.op.sampleLevel.f32(i32 62, %dx.types.Handle %1367, %dx.types.Handle %1369, float %1364, float %1365, float undef, float undef, i32 0, i32 0, i32 undef, float %1320)  ; SampleLevel(srv,sampler,coord0,coord1,coord2,coord3,offset0,offset1,offset2,LOD)
  %1371 = extractvalue %dx.types.ResRet.f32 %1370, 0
  %1372 = extractvalue %dx.types.ResRet.f32 %1370, 1
  %1373 = fmul fast float %1371, 2.000000e+00
  %1374 = fmul fast float %1372, 2.000000e+00
  %1375 = fadd fast float %1373, -1.000000e+00
  %1376 = fadd fast float %1374, -1.000000e+00
  %1377 = call float @dx.op.dot2.f32(i32 54, float %1375, float %1376, float %1375, float %1376)  ; Dot2(ax,ay,bx,by)
  %1378 = fsub fast float 1.000000e+00, %1377
  %1379 = call float @dx.op.unary.f32(i32 7, float %1378)  ; Saturate(value)
  %1380 = call float @dx.op.unary.f32(i32 24, float %1379)  ; Sqrt(value)
  %1381 = fmul fast float %1375, %1292
  %1382 = fmul fast float %1376, %1292
  %1383 = fmul fast float %1380, %1292
  %1384 = fadd fast float %1360, %1381
  %1385 = fadd fast float %1361, %1382
  %1386 = fadd fast float %1362, %1383
  %1387 = extractvalue %dx.types.CBufRet.f32 %1314, 3
  %1388 = fmul fast float %1387, %1313
  %1389 = fmul fast float %1387, %1312
  %1390 = call %dx.types.Handle @dx.op.createHandleForLib.dx.types.Handle(i32 160, %dx.types.Handle %33)  ; CreateHandleForLib(Resource)
  %1391 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %1390, %dx.types.ResourceProperties { i32 2, i32 1033 })  ; AnnotateHandle(res,props)  resource: Texture2D<4xF32>
  %1392 = call %dx.types.Handle @dx.op.createHandleForLib.dx.types.Handle(i32 160, %dx.types.Handle %12)  ; CreateHandleForLib(Resource)
  %1393 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %1392, %dx.types.ResourceProperties { i32 14, i32 0 })  ; AnnotateHandle(res,props)  resource: SamplerState
  %1394 = call %dx.types.ResRet.f32 @dx.op.sampleLevel.f32(i32 62, %dx.types.Handle %1391, %dx.types.Handle %1393, float %1388, float %1389, float undef, float undef, i32 0, i32 0, i32 undef, float %1320)  ; SampleLevel(srv,sampler,coord0,coord1,coord2,coord3,offset0,offset1,offset2,LOD)
  %1395 = extractvalue %dx.types.ResRet.f32 %1394, 0
  %1396 = extractvalue %dx.types.ResRet.f32 %1394, 1
  %1397 = fmul fast float %1395, 2.000000e+00
  %1398 = fmul fast float %1396, 2.000000e+00
  %1399 = fadd fast float %1397, -1.000000e+00
  %1400 = fadd fast float %1398, -1.000000e+00
  %1401 = call float @dx.op.dot2.f32(i32 54, float %1399, float %1400, float %1399, float %1400)  ; Dot2(ax,ay,bx,by)
  %1402 = fsub fast float 1.000000e+00, %1401
  %1403 = call float @dx.op.unary.f32(i32 7, float %1402)  ; Saturate(value)
  %1404 = call float @dx.op.unary.f32(i32 24, float %1403)  ; Sqrt(value)
  %1405 = fmul fast float %1399, %1305
  %1406 = fmul fast float %1400, %1305
  %1407 = fmul fast float %1404, %1305
  %1408 = fadd fast float %1384, %1405
  %1409 = fadd fast float %1385, %1406
  %1410 = fadd fast float %1386, %1407
  %1411 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %74, i32 7)  ; CBufferLoadLegacy(handle,regIndex)
  %1412 = extractvalue %dx.types.CBufRet.f32 %1411, 0
  %1413 = fmul fast float %1412, %1313
  %1414 = fmul fast float %1412, %1312
  %1415 = call %dx.types.Handle @dx.op.createHandleForLib.dx.types.Handle(i32 160, %dx.types.Handle %32)  ; CreateHandleForLib(Resource)
  %1416 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %1415, %dx.types.ResourceProperties { i32 2, i32 1033 })  ; AnnotateHandle(res,props)  resource: Texture2D<4xF32>
  %1417 = call %dx.types.Handle @dx.op.createHandleForLib.dx.types.Handle(i32 160, %dx.types.Handle %11)  ; CreateHandleForLib(Resource)
  %1418 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %1417, %dx.types.ResourceProperties { i32 14, i32 0 })  ; AnnotateHandle(res,props)  resource: SamplerState
  %1419 = call %dx.types.ResRet.f32 @dx.op.sampleLevel.f32(i32 62, %dx.types.Handle %1416, %dx.types.Handle %1418, float %1413, float %1414, float undef, float undef, i32 0, i32 0, i32 undef, float %1320)  ; SampleLevel(srv,sampler,coord0,coord1,coord2,coord3,offset0,offset1,offset2,LOD)
  %1420 = extractvalue %dx.types.ResRet.f32 %1419, 0
  %1421 = extractvalue %dx.types.ResRet.f32 %1419, 1
  %1422 = fmul fast float %1420, 2.000000e+00
  %1423 = fmul fast float %1421, 2.000000e+00
  %1424 = fadd fast float %1422, -1.000000e+00
  %1425 = fadd fast float %1423, -1.000000e+00
  %1426 = call float @dx.op.dot2.f32(i32 54, float %1424, float %1425, float %1424, float %1425)  ; Dot2(ax,ay,bx,by)
  %1427 = fsub fast float 1.000000e+00, %1426
  %1428 = call float @dx.op.unary.f32(i32 7, float %1427)  ; Saturate(value)
  %1429 = call float @dx.op.unary.f32(i32 24, float %1428)  ; Sqrt(value)
  %1430 = fmul fast float %1424, %1311
  %1431 = fmul fast float %1425, %1311
  %1432 = fmul fast float %1429, %1311
  %1433 = fadd fast float %1408, %1430
  %1434 = fadd fast float %1409, %1431
  %1435 = fadd fast float %1410, %1432
  %1436 = fmul fast float %1433, %1166
  %1437 = fmul fast float %1434, %1166
  %1438 = fmul fast float %1435, %1166
  %1439 = fadd fast float %1436, %740
  %1440 = fadd fast float %1437, %1165
  %1441 = fadd fast float %1438, %741
  %1442 = call float @dx.op.dot3.f32(i32 55, float %1439, float %1440, float %1441, float %1439, float %1440, float %1441)  ; Dot3(ax,ay,az,bx,by,bz)
  %1443 = call float @dx.op.unary.f32(i32 25, float %1442)  ; Rsqrt(value)
  %1444 = fmul fast float %1439, %1443
  %1445 = fmul fast float %1440, %1443
  %1446 = fmul fast float %1441, %1443
  %1447 = fmul fast float %1444, %1211
  %1448 = call float @dx.op.tertiary.f32(i32 46, float %1445, float %1218, float %1447)  ; FMad(a,b,c)
  %1449 = call float @dx.op.tertiary.f32(i32 46, float %1446, float %1227, float %1448)  ; FMad(a,b,c)
  %1450 = fmul fast float %1444, %1213
  %1451 = call float @dx.op.tertiary.f32(i32 46, float %1445, float %1221, float %1450)  ; FMad(a,b,c)
  %1452 = call float @dx.op.tertiary.f32(i32 46, float %1446, float %1230, float %1451)  ; FMad(a,b,c)
  %1453 = fmul fast float %1444, %1215
  %1454 = call float @dx.op.tertiary.f32(i32 46, float %1445, float %1224, float %1453)  ; FMad(a,b,c)
  %1455 = call float @dx.op.tertiary.f32(i32 46, float %1446, float %1233, float %1454)  ; FMad(a,b,c)
  %1456 = call float @dx.op.dot3.f32(i32 55, float %1449, float %1452, float %1455, float %1449, float %1452, float %1455)  ; Dot3(ax,ay,az,bx,by,bz)
  %1457 = call float @dx.op.unary.f32(i32 25, float %1456)  ; Rsqrt(value)
  %1458 = fmul fast float %1449, %1265
  %1459 = fmul fast float %1458, %1457
  %1460 = fmul fast float %1452, %1265
  %1461 = fmul fast float %1460, %1457
  %1462 = fmul fast float %1455, %1265
  %1463 = fmul fast float %1462, %1457
  %1464 = extractvalue %dx.types.CBufRet.f32 %1411, 1
  %1465 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %74, i32 8)  ; CBufferLoadLegacy(handle,regIndex)
  %1466 = extractvalue %dx.types.CBufRet.f32 %1465, 0
  %1467 = extractvalue %dx.types.CBufRet.f32 %1465, 1
  %1468 = extractvalue %dx.types.CBufRet.f32 %1465, 2
  %1469 = fmul fast float %1466, %1464
  %1470 = fmul fast float %1467, %1464
  %1471 = fmul fast float %1468, %1464
  %1472 = call %dx.types.Handle @dx.op.createHandleForLib.dx.types.Handle(i32 160, %dx.types.Handle %31)  ; CreateHandleForLib(Resource)
  %1473 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %1472, %dx.types.ResourceProperties { i32 2, i32 1033 })  ; AnnotateHandle(res,props)  resource: Texture2D<4xF32>
  %1474 = call %dx.types.Handle @dx.op.createHandleForLib.dx.types.Handle(i32 160, %dx.types.Handle %10)  ; CreateHandleForLib(Resource)
  %1475 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %1474, %dx.types.ResourceProperties { i32 14, i32 0 })  ; AnnotateHandle(res,props)  resource: SamplerState
  %1476 = call %dx.types.ResRet.f32 @dx.op.sampleLevel.f32(i32 62, %dx.types.Handle %1473, %dx.types.Handle %1475, float %1316, float %1317, float undef, float undef, i32 0, i32 0, i32 undef, float %1320)  ; SampleLevel(srv,sampler,coord0,coord1,coord2,coord3,offset0,offset1,offset2,LOD)
  %1477 = extractvalue %dx.types.ResRet.f32 %1476, 0
  %1478 = extractvalue %dx.types.ResRet.f32 %1476, 1
  %1479 = extractvalue %dx.types.ResRet.f32 %1476, 2
  %1480 = fmul fast float %1477, %1280
  %1481 = fmul fast float %1478, %1280
  %1482 = fmul fast float %1479, %1280
  %1483 = call %dx.types.Handle @dx.op.createHandleForLib.dx.types.Handle(i32 160, %dx.types.Handle %30)  ; CreateHandleForLib(Resource)
  %1484 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %1483, %dx.types.ResourceProperties { i32 2, i32 1033 })  ; AnnotateHandle(res,props)  resource: Texture2D<4xF32>
  %1485 = call %dx.types.Handle @dx.op.createHandleForLib.dx.types.Handle(i32 160, %dx.types.Handle %9)  ; CreateHandleForLib(Resource)
  %1486 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %1485, %dx.types.ResourceProperties { i32 14, i32 0 })  ; AnnotateHandle(res,props)  resource: SamplerState
  %1487 = call %dx.types.ResRet.f32 @dx.op.sampleLevel.f32(i32 62, %dx.types.Handle %1484, %dx.types.Handle %1486, float %1340, float %1341, float undef, float undef, i32 0, i32 0, i32 undef, float %1320)  ; SampleLevel(srv,sampler,coord0,coord1,coord2,coord3,offset0,offset1,offset2,LOD)
  %1488 = extractvalue %dx.types.ResRet.f32 %1487, 0
  %1489 = extractvalue %dx.types.ResRet.f32 %1487, 1
  %1490 = extractvalue %dx.types.ResRet.f32 %1487, 2
  %1491 = fmul fast float %1488, %1286
  %1492 = fmul fast float %1489, %1286
  %1493 = fmul fast float %1490, %1286
  %1494 = fadd fast float %1491, %1480
  %1495 = fadd fast float %1492, %1481
  %1496 = fadd fast float %1493, %1482
  %1497 = call %dx.types.Handle @dx.op.createHandleForLib.dx.types.Handle(i32 160, %dx.types.Handle %29)  ; CreateHandleForLib(Resource)
  %1498 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %1497, %dx.types.ResourceProperties { i32 2, i32 1033 })  ; AnnotateHandle(res,props)  resource: Texture2D<4xF32>
  %1499 = call %dx.types.Handle @dx.op.createHandleForLib.dx.types.Handle(i32 160, %dx.types.Handle %8)  ; CreateHandleForLib(Resource)
  %1500 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %1499, %dx.types.ResourceProperties { i32 14, i32 0 })  ; AnnotateHandle(res,props)  resource: SamplerState
  %1501 = call %dx.types.ResRet.f32 @dx.op.sampleLevel.f32(i32 62, %dx.types.Handle %1498, %dx.types.Handle %1500, float %1364, float %1365, float undef, float undef, i32 0, i32 0, i32 undef, float %1320)  ; SampleLevel(srv,sampler,coord0,coord1,coord2,coord3,offset0,offset1,offset2,LOD)
  %1502 = extractvalue %dx.types.ResRet.f32 %1501, 0
  %1503 = extractvalue %dx.types.ResRet.f32 %1501, 1
  %1504 = extractvalue %dx.types.ResRet.f32 %1501, 2
  %1505 = fmul fast float %1502, %1292
  %1506 = fmul fast float %1503, %1292
  %1507 = fmul fast float %1504, %1292
  %1508 = fadd fast float %1494, %1505
  %1509 = fadd fast float %1495, %1506
  %1510 = fadd fast float %1496, %1507
  %1511 = call %dx.types.Handle @dx.op.createHandleForLib.dx.types.Handle(i32 160, %dx.types.Handle %28)  ; CreateHandleForLib(Resource)
  %1512 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %1511, %dx.types.ResourceProperties { i32 2, i32 1033 })  ; AnnotateHandle(res,props)  resource: Texture2D<4xF32>
  %1513 = call %dx.types.Handle @dx.op.createHandleForLib.dx.types.Handle(i32 160, %dx.types.Handle %7)  ; CreateHandleForLib(Resource)
  %1514 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %1513, %dx.types.ResourceProperties { i32 14, i32 0 })  ; AnnotateHandle(res,props)  resource: SamplerState
  %1515 = call %dx.types.ResRet.f32 @dx.op.sampleLevel.f32(i32 62, %dx.types.Handle %1512, %dx.types.Handle %1514, float %1388, float %1389, float undef, float undef, i32 0, i32 0, i32 undef, float %1320)  ; SampleLevel(srv,sampler,coord0,coord1,coord2,coord3,offset0,offset1,offset2,LOD)
  %1516 = extractvalue %dx.types.ResRet.f32 %1515, 0
  %1517 = extractvalue %dx.types.ResRet.f32 %1515, 1
  %1518 = extractvalue %dx.types.ResRet.f32 %1515, 2
  %1519 = fmul fast float %1516, %1305
  %1520 = fmul fast float %1517, %1305
  %1521 = fmul fast float %1518, %1305
  %1522 = fadd fast float %1508, %1519
  %1523 = fadd fast float %1509, %1520
  %1524 = fadd fast float %1510, %1521
  %1525 = call %dx.types.Handle @dx.op.createHandleForLib.dx.types.Handle(i32 160, %dx.types.Handle %27)  ; CreateHandleForLib(Resource)
  %1526 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %1525, %dx.types.ResourceProperties { i32 2, i32 1033 })  ; AnnotateHandle(res,props)  resource: Texture2D<4xF32>
  %1527 = call %dx.types.Handle @dx.op.createHandleForLib.dx.types.Handle(i32 160, %dx.types.Handle %6)  ; CreateHandleForLib(Resource)
  %1528 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %1527, %dx.types.ResourceProperties { i32 14, i32 0 })  ; AnnotateHandle(res,props)  resource: SamplerState
  %1529 = call %dx.types.ResRet.f32 @dx.op.sampleLevel.f32(i32 62, %dx.types.Handle %1526, %dx.types.Handle %1528, float %1413, float %1414, float undef, float undef, i32 0, i32 0, i32 undef, float %1320)  ; SampleLevel(srv,sampler,coord0,coord1,coord2,coord3,offset0,offset1,offset2,LOD)
  %1530 = extractvalue %dx.types.ResRet.f32 %1529, 0
  %1531 = extractvalue %dx.types.ResRet.f32 %1529, 1
  %1532 = extractvalue %dx.types.ResRet.f32 %1529, 2
  %1533 = fmul fast float %1530, %1311
  %1534 = fmul fast float %1531, %1311
  %1535 = fmul fast float %1532, %1311
  %1536 = fadd fast float %1522, %1533
  %1537 = fadd fast float %1523, %1534
  %1538 = fadd fast float %1524, %1535
  %1539 = call %dx.types.Handle @dx.op.createHandleForLib.dx.types.Handle(i32 160, %dx.types.Handle %26)  ; CreateHandleForLib(Resource)
  %1540 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %1539, %dx.types.ResourceProperties { i32 2, i32 1033 })  ; AnnotateHandle(res,props)  resource: Texture2D<4xF32>
  %1541 = call %dx.types.Handle @dx.op.createHandleForLib.dx.types.Handle(i32 160, %dx.types.Handle %5)  ; CreateHandleForLib(Resource)
  %1542 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %1541, %dx.types.ResourceProperties { i32 14, i32 0 })  ; AnnotateHandle(res,props)  resource: SamplerState
  %1543 = call %dx.types.ResRet.f32 @dx.op.sampleLevel.f32(i32 62, %dx.types.Handle %1540, %dx.types.Handle %1542, float %1316, float %1317, float undef, float undef, i32 0, i32 0, i32 undef, float %1320)  ; SampleLevel(srv,sampler,coord0,coord1,coord2,coord3,offset0,offset1,offset2,LOD)
  %1544 = extractvalue %dx.types.ResRet.f32 %1543, 0
  %1545 = fmul fast float %1544, %1280
  %1546 = call %dx.types.Handle @dx.op.createHandleForLib.dx.types.Handle(i32 160, %dx.types.Handle %25)  ; CreateHandleForLib(Resource)
  %1547 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %1546, %dx.types.ResourceProperties { i32 2, i32 1033 })  ; AnnotateHandle(res,props)  resource: Texture2D<4xF32>
  %1548 = call %dx.types.Handle @dx.op.createHandleForLib.dx.types.Handle(i32 160, %dx.types.Handle %4)  ; CreateHandleForLib(Resource)
  %1549 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %1548, %dx.types.ResourceProperties { i32 14, i32 0 })  ; AnnotateHandle(res,props)  resource: SamplerState
  %1550 = call %dx.types.ResRet.f32 @dx.op.sampleLevel.f32(i32 62, %dx.types.Handle %1547, %dx.types.Handle %1549, float %1340, float %1341, float undef, float undef, i32 0, i32 0, i32 undef, float %1320)  ; SampleLevel(srv,sampler,coord0,coord1,coord2,coord3,offset0,offset1,offset2,LOD)
  %1551 = extractvalue %dx.types.ResRet.f32 %1550, 0
  %1552 = fmul fast float %1551, %1286
  %1553 = fadd fast float %1552, %1545
  %1554 = call %dx.types.Handle @dx.op.createHandleForLib.dx.types.Handle(i32 160, %dx.types.Handle %24)  ; CreateHandleForLib(Resource)
  %1555 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %1554, %dx.types.ResourceProperties { i32 2, i32 1033 })  ; AnnotateHandle(res,props)  resource: Texture2D<4xF32>
  %1556 = call %dx.types.Handle @dx.op.createHandleForLib.dx.types.Handle(i32 160, %dx.types.Handle %3)  ; CreateHandleForLib(Resource)
  %1557 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %1556, %dx.types.ResourceProperties { i32 14, i32 0 })  ; AnnotateHandle(res,props)  resource: SamplerState
  %1558 = call %dx.types.ResRet.f32 @dx.op.sampleLevel.f32(i32 62, %dx.types.Handle %1555, %dx.types.Handle %1557, float %1364, float %1365, float undef, float undef, i32 0, i32 0, i32 undef, float %1320)  ; SampleLevel(srv,sampler,coord0,coord1,coord2,coord3,offset0,offset1,offset2,LOD)
  %1559 = extractvalue %dx.types.ResRet.f32 %1558, 0
  %1560 = fmul fast float %1559, %1292
  %1561 = fadd fast float %1553, %1560
  %1562 = call %dx.types.Handle @dx.op.createHandleForLib.dx.types.Handle(i32 160, %dx.types.Handle %23)  ; CreateHandleForLib(Resource)
  %1563 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %1562, %dx.types.ResourceProperties { i32 2, i32 1033 })  ; AnnotateHandle(res,props)  resource: Texture2D<4xF32>
  %1564 = call %dx.types.Handle @dx.op.createHandleForLib.dx.types.Handle(i32 160, %dx.types.Handle %2)  ; CreateHandleForLib(Resource)
  %1565 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %1564, %dx.types.ResourceProperties { i32 14, i32 0 })  ; AnnotateHandle(res,props)  resource: SamplerState
  %1566 = call %dx.types.ResRet.f32 @dx.op.sampleLevel.f32(i32 62, %dx.types.Handle %1563, %dx.types.Handle %1565, float %1388, float %1389, float undef, float undef, i32 0, i32 0, i32 undef, float %1320)  ; SampleLevel(srv,sampler,coord0,coord1,coord2,coord3,offset0,offset1,offset2,LOD)
  %1567 = extractvalue %dx.types.ResRet.f32 %1566, 0
  %1568 = fmul fast float %1567, %1305
  %1569 = fadd fast float %1561, %1568
  %1570 = call %dx.types.Handle @dx.op.createHandleForLib.dx.types.Handle(i32 160, %dx.types.Handle %22)  ; CreateHandleForLib(Resource)
  %1571 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %1570, %dx.types.ResourceProperties { i32 2, i32 1033 })  ; AnnotateHandle(res,props)  resource: Texture2D<4xF32>
  %1572 = call %dx.types.Handle @dx.op.createHandleForLib.dx.types.Handle(i32 160, %dx.types.Handle %1)  ; CreateHandleForLib(Resource)
  %1573 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %1572, %dx.types.ResourceProperties { i32 14, i32 0 })  ; AnnotateHandle(res,props)  resource: SamplerState
  %1574 = call %dx.types.ResRet.f32 @dx.op.sampleLevel.f32(i32 62, %dx.types.Handle %1571, %dx.types.Handle %1573, float %1413, float %1414, float undef, float undef, i32 0, i32 0, i32 undef, float %1320)  ; SampleLevel(srv,sampler,coord0,coord1,coord2,coord3,offset0,offset1,offset2,LOD)
  %1575 = extractvalue %dx.types.ResRet.f32 %1574, 0
  %1576 = fmul fast float %1575, %1311
  %1577 = fadd fast float %1569, %1576
  %1578 = mul nuw nsw i32 %1160, 42
  %1579 = call %dx.types.ResRet.f32 @dx.op.rawBufferLoad.f32(i32 139, %dx.types.Handle %876, i32 %1578, i32 0, i8 15, i32 4)  ; RawBufferLoad(srv,index,elementOffset,mask,alignment)
  %1580 = extractvalue %dx.types.ResRet.f32 %1579, 0
  %1581 = bitcast float %1580 to i32
  %1582 = zext i1 %1264 to i32
  %1583 = and i32 %86, 16777216
  %1584 = icmp eq i32 %1583, 0
  %1585 = call float @dx.op.unary.f32(i32 7, float %1536)  ; Saturate(value)
  %1586 = call float @dx.op.unary.f32(i32 7, float %1537)  ; Saturate(value)
  %1587 = call float @dx.op.unary.f32(i32 7, float %1538)  ; Saturate(value)
  %1588 = call float @dx.op.unary.f32(i32 7, float %1577)  ; Saturate(value)
  %1589 = fmul fast float %1588, %1167
  %1590 = fadd fast float %1589, %743
  %1591 = call float @dx.op.dot3.f32(i32 55, float %1459, float %1461, float %1463, float %1459, float %1461, float %1463)  ; Dot3(ax,ay,az,bx,by,bz)
  %1592 = call float @dx.op.unary.f32(i32 25, float %1591)  ; Rsqrt(value)
  %1593 = fmul fast float %1592, %1459
  %1594 = fmul fast float %1592, %1461
  %1595 = fmul fast float %1592, %1463
  %1596 = call float @dx.op.binary.f32(i32 35, float %1469, float 0.000000e+00)  ; FMax(a,b)
  %1597 = call float @dx.op.binary.f32(i32 35, float %1470, float 0.000000e+00)  ; FMax(a,b)
  %1598 = call float @dx.op.binary.f32(i32 35, float %1471, float 0.000000e+00)  ; FMax(a,b)
  %1599 = fadd fast float %1253, %1161
  %1600 = fmul fast float %1599, 2.097152e+06
  %1601 = fsub fast float %1234, %1163
  %1602 = fsub fast float %1601, %1238
  %1603 = fadd fast float %1602, %1250
  %1604 = fadd fast float %1603, %1260
  %1605 = fadd fast float %1604, %1600
  %1606 = fadd fast float %1254, %736
  %1607 = fmul fast float %1606, 2.097152e+06
  %1608 = fsub fast float %1235, %738
  %1609 = fsub fast float %1608, %1239
  %1610 = fadd fast float %1609, %1251
  %1611 = fadd fast float %1610, %1261
  %1612 = fadd fast float %1611, %1607
  %1613 = fadd fast float %1255, %1162
  %1614 = fmul fast float %1613, 2.097152e+06
  %1615 = fsub fast float %1236, %1164
  %1616 = fsub fast float %1615, %1240
  %1617 = fadd fast float %1616, %1252
  %1618 = fadd fast float %1617, %1262
  %1619 = fadd fast float %1618, %1614
  %1620 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %82, i32 232)  ; CBufferLoadLegacy(handle,regIndex)
  %1621 = extractvalue %dx.types.CBufRet.f32 %1620, 0
  %1622 = extractvalue %dx.types.CBufRet.f32 %1620, 1
  %1623 = extractvalue %dx.types.CBufRet.f32 %1620, 2
  %1624 = fmul fast float %1621, %1605
  %1625 = fmul fast float %1622, %1612
  %1626 = fmul fast float %1623, %1619
  %1627 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %82, i32 233)  ; CBufferLoadLegacy(handle,regIndex)
  %1628 = extractvalue %dx.types.CBufRet.f32 %1627, 0
  %1629 = extractvalue %dx.types.CBufRet.f32 %1627, 1
  %1630 = extractvalue %dx.types.CBufRet.f32 %1627, 2
  %1631 = fadd fast float %1624, %1628
  %1632 = fadd fast float %1625, %1629
  %1633 = fadd fast float %1626, %1630
  %1634 = call float @dx.op.binary.f32(i32 35, float %1631, float 0.000000e+00)  ; FMax(a,b)
  %1635 = call float @dx.op.binary.f32(i32 35, float %1632, float 0.000000e+00)  ; FMax(a,b)
  %1636 = call float @dx.op.binary.f32(i32 35, float %1633, float 0.000000e+00)  ; FMax(a,b)
  %1637 = call float @dx.op.binary.f32(i32 36, float %1634, float 0x3FEFAE1480000000)  ; FMin(a,b)
  %1638 = call float @dx.op.binary.f32(i32 36, float %1635, float 0x3FEFAE1480000000)  ; FMin(a,b)
  %1639 = call float @dx.op.binary.f32(i32 36, float %1636, float 0x3FEFAE1480000000)  ; FMin(a,b)
  %1640 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %82, i32 234)  ; CBufferLoadLegacy(handle,regIndex)
  %1641 = extractvalue %dx.types.CBufRet.f32 %1640, 0
  %1642 = extractvalue %dx.types.CBufRet.f32 %1640, 1
  %1643 = extractvalue %dx.types.CBufRet.f32 %1640, 2
  %1644 = fmul fast float %1641, %1637
  %1645 = fmul fast float %1642, %1638
  %1646 = fmul fast float %1643, %1639
  %1647 = fptosi float %1644 to i32
  %1648 = fptosi float %1645 to i32
  %1649 = fptosi float %1646 to i32
  %1650 = call %dx.types.Handle @dx.op.createHandleForLib.dx.types.Handle(i32 160, %dx.types.Handle %56)  ; CreateHandleForLib(Resource)
  %1651 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %1650, %dx.types.ResourceProperties { i32 4, i32 1029 })  ; AnnotateHandle(res,props)  resource: Texture3D<4xU32>
  %1652 = call %dx.types.ResRet.i32 @dx.op.textureLoad.i32(i32 66, %dx.types.Handle %1651, i32 0, i32 %1647, i32 %1648, i32 %1649, i32 undef, i32 undef, i32 undef)  ; TextureLoad(srv,mipLevelOrSampleCount,coord0,coord1,coord2,offset0,offset1,offset2)
  %1653 = extractvalue %dx.types.ResRet.i32 %1652, 0
  %1654 = extractvalue %dx.types.ResRet.i32 %1652, 1
  %1655 = extractvalue %dx.types.ResRet.i32 %1652, 2
  %1656 = extractvalue %dx.types.ResRet.i32 %1652, 3
  %1657 = uitofp i32 %1653 to float
  %1658 = uitofp i32 %1654 to float
  %1659 = uitofp i32 %1655 to float
  %1660 = uitofp i32 %1656 to float
  %1661 = extractvalue %dx.types.CBufRet.f32 %1640, 3
  %1662 = fadd fast float %1661, 1.000000e+00
  %1663 = fmul fast float %1662, %1657
  %1664 = fmul fast float %1662, %1658
  %1665 = fmul fast float %1662, %1659
  %1666 = fdiv fast float %1644, %1660
  %1667 = fdiv fast float %1645, %1660
  %1668 = fdiv fast float %1646, %1660
  %1669 = call float @dx.op.unary.f32(i32 22, float %1666)  ; Frc(value)
  %1670 = call float @dx.op.unary.f32(i32 22, float %1667)  ; Frc(value)
  %1671 = call float @dx.op.unary.f32(i32 22, float %1668)  ; Frc(value)
  %1672 = fmul fast float %1661, %1669
  %1673 = fmul fast float %1661, %1670
  %1674 = fmul fast float %1661, %1671
  %1675 = fadd fast float %1663, 5.000000e-01
  %1676 = fadd fast float %1675, %1672
  %1677 = fadd fast float %1664, 5.000000e-01
  %1678 = fadd fast float %1677, %1673
  %1679 = fadd fast float %1665, 5.000000e-01
  %1680 = fadd fast float %1679, %1674
  %1681 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %82, i32 235)  ; CBufferLoadLegacy(handle,regIndex)
  %1682 = extractvalue %dx.types.CBufRet.f32 %1681, 0
  %1683 = extractvalue %dx.types.CBufRet.f32 %1681, 1
  %1684 = extractvalue %dx.types.CBufRet.f32 %1681, 2
  %1685 = fmul fast float %1676, %1682
  %1686 = fmul fast float %1678, %1683
  %1687 = fmul fast float %1680, %1684
  %1688 = call %dx.types.Handle @dx.op.createHandleForLib.dx.types.Handle(i32 160, %dx.types.Handle %55)  ; CreateHandleForLib(Resource)
  %1689 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %1688, %dx.types.ResourceProperties { i32 4, i32 1033 })  ; AnnotateHandle(res,props)  resource: Texture3D<4xF32>
  %1690 = call %dx.types.Handle @dx.op.createHandleForLib.dx.types.Handle(i32 160, %dx.types.Handle %20)  ; CreateHandleForLib(Resource)
  %1691 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %1690, %dx.types.ResourceProperties { i32 14, i32 0 })  ; AnnotateHandle(res,props)  resource: SamplerState
  %1692 = call %dx.types.ResRet.f32 @dx.op.sampleLevel.f32(i32 62, %dx.types.Handle %1689, %dx.types.Handle %1691, float %1685, float %1686, float %1687, float undef, i32 0, i32 0, i32 0, float 0.000000e+00)  ; SampleLevel(srv,sampler,coord0,coord1,coord2,coord3,offset0,offset1,offset2,LOD)
  %1693 = extractvalue %dx.types.ResRet.f32 %1692, 0
  %1694 = extractvalue %dx.types.ResRet.f32 %1692, 1
  %1695 = extractvalue %dx.types.ResRet.f32 %1692, 2
  %1696 = call %dx.types.Handle @dx.op.createHandleForLib.dx.types.Handle(i32 160, %dx.types.Handle %54)  ; CreateHandleForLib(Resource)
  %1697 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %1696, %dx.types.ResourceProperties { i32 4, i32 1033 })  ; AnnotateHandle(res,props)  resource: Texture3D<4xF32>
  %1698 = call %dx.types.ResRet.f32 @dx.op.sampleLevel.f32(i32 62, %dx.types.Handle %1697, %dx.types.Handle %1691, float %1685, float %1686, float %1687, float undef, i32 0, i32 0, i32 0, float 0.000000e+00)  ; SampleLevel(srv,sampler,coord0,coord1,coord2,coord3,offset0,offset1,offset2,LOD)
  %1699 = extractvalue %dx.types.ResRet.f32 %1698, 0
  %1700 = extractvalue %dx.types.ResRet.f32 %1698, 1
  %1701 = extractvalue %dx.types.ResRet.f32 %1698, 2
  %1702 = extractvalue %dx.types.ResRet.f32 %1698, 3
  %1703 = fmul fast float %1699, 2.000000e+00
  %1704 = fmul fast float %1700, 2.000000e+00
  %1705 = fmul fast float %1701, 2.000000e+00
  %1706 = fmul fast float %1702, 2.000000e+00
  %1707 = fadd fast float %1703, -1.000000e+00
  %1708 = fadd fast float %1704, -1.000000e+00
  %1709 = fadd fast float %1705, -1.000000e+00
  %1710 = fadd fast float %1706, -1.000000e+00
  %1711 = call %dx.types.Handle @dx.op.createHandleForLib.dx.types.Handle(i32 160, %dx.types.Handle %52)  ; CreateHandleForLib(Resource)
  %1712 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %1711, %dx.types.ResourceProperties { i32 4, i32 1033 })  ; AnnotateHandle(res,props)  resource: Texture3D<4xF32>
  %1713 = call %dx.types.ResRet.f32 @dx.op.sampleLevel.f32(i32 62, %dx.types.Handle %1712, %dx.types.Handle %1691, float %1685, float %1686, float %1687, float undef, i32 0, i32 0, i32 0, float 0.000000e+00)  ; SampleLevel(srv,sampler,coord0,coord1,coord2,coord3,offset0,offset1,offset2,LOD)
  %1714 = extractvalue %dx.types.ResRet.f32 %1713, 0
  %1715 = extractvalue %dx.types.ResRet.f32 %1713, 1
  %1716 = extractvalue %dx.types.ResRet.f32 %1713, 2
  %1717 = extractvalue %dx.types.ResRet.f32 %1713, 3
  %1718 = fmul fast float %1714, 2.000000e+00
  %1719 = fmul fast float %1715, 2.000000e+00
  %1720 = fmul fast float %1716, 2.000000e+00
  %1721 = fmul fast float %1717, 2.000000e+00
  %1722 = fadd fast float %1718, -1.000000e+00
  %1723 = fadd fast float %1719, -1.000000e+00
  %1724 = fadd fast float %1720, -1.000000e+00
  %1725 = fadd fast float %1721, -1.000000e+00
  %1726 = call %dx.types.Handle @dx.op.createHandleForLib.dx.types.Handle(i32 160, %dx.types.Handle %50)  ; CreateHandleForLib(Resource)
  %1727 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %1726, %dx.types.ResourceProperties { i32 4, i32 1033 })  ; AnnotateHandle(res,props)  resource: Texture3D<4xF32>
  %1728 = call %dx.types.ResRet.f32 @dx.op.sampleLevel.f32(i32 62, %dx.types.Handle %1727, %dx.types.Handle %1691, float %1685, float %1686, float %1687, float undef, i32 0, i32 0, i32 0, float 0.000000e+00)  ; SampleLevel(srv,sampler,coord0,coord1,coord2,coord3,offset0,offset1,offset2,LOD)
  %1729 = extractvalue %dx.types.ResRet.f32 %1728, 0
  %1730 = extractvalue %dx.types.ResRet.f32 %1728, 1
  %1731 = extractvalue %dx.types.ResRet.f32 %1728, 2
  %1732 = extractvalue %dx.types.ResRet.f32 %1728, 3
  %1733 = fmul fast float %1729, 2.000000e+00
  %1734 = fmul fast float %1730, 2.000000e+00
  %1735 = fmul fast float %1731, 2.000000e+00
  %1736 = fmul fast float %1732, 2.000000e+00
  %1737 = fadd fast float %1733, -1.000000e+00
  %1738 = fadd fast float %1734, -1.000000e+00
  %1739 = fadd fast float %1735, -1.000000e+00
  %1740 = fadd fast float %1736, -1.000000e+00
  %1741 = fmul fast float %1693, 0x3FFBB67B80000000
  %1742 = fmul fast float %1741, %1707
  %1743 = fmul fast float %1741, %1708
  %1744 = fmul fast float %1741, %1709
  %1745 = fmul fast float %1693, 0x400EFBDC80000000
  %1746 = fmul fast float %1745, %1710
  %1747 = fmul fast float %1694, 0x3FFBB67B80000000
  %1748 = fmul fast float %1747, %1722
  %1749 = fmul fast float %1747, %1723
  %1750 = fmul fast float %1747, %1724
  %1751 = fmul fast float %1694, 0x400EFBDC80000000
  %1752 = fmul fast float %1751, %1725
  %1753 = fmul fast float %1695, 0x3FFBB67B80000000
  %1754 = fmul fast float %1753, %1737
  %1755 = fmul fast float %1753, %1738
  %1756 = fmul fast float %1753, %1739
  %1757 = fmul fast float %1695, 0x400EFBDC80000000
  %1758 = fmul fast float %1757, %1740
  %1759 = call %dx.types.Handle @dx.op.createHandleForLib.dx.types.Handle(i32 160, %dx.types.Handle %53)  ; CreateHandleForLib(Resource)
  %1760 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %1759, %dx.types.ResourceProperties { i32 4, i32 1033 })  ; AnnotateHandle(res,props)  resource: Texture3D<4xF32>
  %1761 = call %dx.types.ResRet.f32 @dx.op.sampleLevel.f32(i32 62, %dx.types.Handle %1760, %dx.types.Handle %1691, float %1685, float %1686, float %1687, float undef, i32 0, i32 0, i32 0, float 0.000000e+00)  ; SampleLevel(srv,sampler,coord0,coord1,coord2,coord3,offset0,offset1,offset2,LOD)
  %1762 = extractvalue %dx.types.ResRet.f32 %1761, 0
  %1763 = extractvalue %dx.types.ResRet.f32 %1761, 1
  %1764 = extractvalue %dx.types.ResRet.f32 %1761, 2
  %1765 = extractvalue %dx.types.ResRet.f32 %1761, 3
  %1766 = fmul fast float %1762, 2.000000e+00
  %1767 = fmul fast float %1763, 2.000000e+00
  %1768 = fmul fast float %1764, 2.000000e+00
  %1769 = fmul fast float %1765, 2.000000e+00
  %1770 = fadd fast float %1766, -1.000000e+00
  %1771 = fadd fast float %1767, -1.000000e+00
  %1772 = fadd fast float %1768, -1.000000e+00
  %1773 = fadd fast float %1769, -1.000000e+00
  %1774 = call %dx.types.Handle @dx.op.createHandleForLib.dx.types.Handle(i32 160, %dx.types.Handle %51)  ; CreateHandleForLib(Resource)
  %1775 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %1774, %dx.types.ResourceProperties { i32 4, i32 1033 })  ; AnnotateHandle(res,props)  resource: Texture3D<4xF32>
  %1776 = call %dx.types.ResRet.f32 @dx.op.sampleLevel.f32(i32 62, %dx.types.Handle %1775, %dx.types.Handle %1691, float %1685, float %1686, float %1687, float undef, i32 0, i32 0, i32 0, float 0.000000e+00)  ; SampleLevel(srv,sampler,coord0,coord1,coord2,coord3,offset0,offset1,offset2,LOD)
  %1777 = extractvalue %dx.types.ResRet.f32 %1776, 0
  %1778 = extractvalue %dx.types.ResRet.f32 %1776, 1
  %1779 = extractvalue %dx.types.ResRet.f32 %1776, 2
  %1780 = extractvalue %dx.types.ResRet.f32 %1776, 3
  %1781 = fmul fast float %1777, 2.000000e+00
  %1782 = fmul fast float %1778, 2.000000e+00
  %1783 = fmul fast float %1779, 2.000000e+00
  %1784 = fmul fast float %1780, 2.000000e+00
  %1785 = fadd fast float %1781, -1.000000e+00
  %1786 = fadd fast float %1782, -1.000000e+00
  %1787 = fadd fast float %1783, -1.000000e+00
  %1788 = fadd fast float %1784, -1.000000e+00
  %1789 = call %dx.types.Handle @dx.op.createHandleForLib.dx.types.Handle(i32 160, %dx.types.Handle %49)  ; CreateHandleForLib(Resource)
  %1790 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %1789, %dx.types.ResourceProperties { i32 4, i32 1033 })  ; AnnotateHandle(res,props)  resource: Texture3D<4xF32>
  %1791 = call %dx.types.ResRet.f32 @dx.op.sampleLevel.f32(i32 62, %dx.types.Handle %1790, %dx.types.Handle %1691, float %1685, float %1686, float %1687, float undef, i32 0, i32 0, i32 0, float 0.000000e+00)  ; SampleLevel(srv,sampler,coord0,coord1,coord2,coord3,offset0,offset1,offset2,LOD)
  %1792 = extractvalue %dx.types.ResRet.f32 %1791, 0
  %1793 = extractvalue %dx.types.ResRet.f32 %1791, 1
  %1794 = extractvalue %dx.types.ResRet.f32 %1791, 2
  %1795 = extractvalue %dx.types.ResRet.f32 %1791, 3
  %1796 = fmul fast float %1792, 2.000000e+00
  %1797 = fmul fast float %1793, 2.000000e+00
  %1798 = fmul fast float %1794, 2.000000e+00
  %1799 = fmul fast float %1795, 2.000000e+00
  %1800 = fadd fast float %1796, -1.000000e+00
  %1801 = fadd fast float %1797, -1.000000e+00
  %1802 = fadd fast float %1798, -1.000000e+00
  %1803 = fadd fast float %1799, -1.000000e+00
  %1804 = fmul fast float %1745, %1770
  %1805 = fmul fast float %1693, 0x4011E37860000000
  %1806 = fmul fast float %1805, %1771
  %1807 = fmul fast float %1745, %1772
  %1808 = fmul fast float %1751, %1785
  %1809 = fmul fast float %1694, 0x4011E37860000000
  %1810 = fmul fast float %1809, %1786
  %1811 = fmul fast float %1751, %1787
  %1812 = fmul fast float %1757, %1800
  %1813 = fmul fast float %1695, 0x4011E37860000000
  %1814 = fmul fast float %1813, %1801
  %1815 = fmul fast float %1757, %1802
  %1816 = fmul fast float %1593, %1593
  %1817 = fmul fast float %1594, %1594
  %1818 = fsub fast float %1816, %1817
  %1819 = fmul fast float %1594, 0xBFF05F8CE0000000
  %1820 = fmul fast float %1595, 0x3FF05F8CE0000000
  %1821 = fmul fast float %1593, 0xBFF05F8CE0000000
  %1822 = fmul fast float %1593, 0x3FEB756F20000000
  %1823 = fmul fast float %1822, %1594
  %1824 = fmul fast float %1594, 0xBFEB756F20000000
  %1825 = fmul fast float %1824, %1595
  %1826 = fmul fast float %1595, %1595
  %1827 = fmul fast float %1826, 0x3FE7C7ADC0000000
  %1828 = fadd fast float %1827, 0xBFCFB4E7C0000000
  %1829 = fmul fast float %1593, 0xBFEB756F20000000
  %1830 = fmul fast float %1829, %1595
  %1831 = call float @dx.op.dot4.f32(i32 56, float %1693, float %1742, float %1743, float %1744, float 0x3FEC5BF9E0000000, float %1819, float %1820, float %1821)  ; Dot4(ax,ay,az,aw,bx,by,bz,bw)
  %1832 = call float @dx.op.dot4.f32(i32 56, float %1746, float %1804, float %1806, float %1807, float %1823, float %1825, float %1828, float %1830)  ; Dot4(ax,ay,az,aw,bx,by,bz,bw)
  %1833 = fmul fast float %1818, 0x3FFA963680000000
  %1834 = fmul fast float %1833, %1693
  %1835 = fmul fast float %1834, %1773
  %1836 = fadd fast float %1831, %1835
  %1837 = fadd fast float %1836, %1832
  %1838 = call float @dx.op.dot4.f32(i32 56, float %1694, float %1748, float %1749, float %1750, float 0x3FEC5BF9E0000000, float %1819, float %1820, float %1821)  ; Dot4(ax,ay,az,aw,bx,by,bz,bw)
  %1839 = call float @dx.op.dot4.f32(i32 56, float %1752, float %1808, float %1810, float %1811, float %1823, float %1825, float %1828, float %1830)  ; Dot4(ax,ay,az,aw,bx,by,bz,bw)
  %1840 = fmul fast float %1833, %1694
  %1841 = fmul fast float %1840, %1788
  %1842 = fadd fast float %1838, %1841
  %1843 = fadd fast float %1842, %1839
  %1844 = call float @dx.op.dot4.f32(i32 56, float %1695, float %1754, float %1755, float %1756, float 0x3FEC5BF9E0000000, float %1819, float %1820, float %1821)  ; Dot4(ax,ay,az,aw,bx,by,bz,bw)
  %1845 = call float @dx.op.dot4.f32(i32 56, float %1758, float %1812, float %1814, float %1815, float %1823, float %1825, float %1828, float %1830)  ; Dot4(ax,ay,az,aw,bx,by,bz,bw)
  %1846 = fadd fast float %1845, %1844
  %1847 = fmul fast float %1833, %1695
  %1848 = fmul fast float %1847, %1803
  %1849 = fadd fast float %1846, %1848
  %1850 = call float @dx.op.binary.f32(i32 35, float 0.000000e+00, float %1837)  ; FMax(a,b)
  %1851 = call float @dx.op.binary.f32(i32 35, float 0.000000e+00, float %1843)  ; FMax(a,b)
  %1852 = call float @dx.op.binary.f32(i32 35, float 0.000000e+00, float %1849)  ; FMax(a,b)
  %1853 = fmul fast float %1850, 0x3FD45F3060000000
  %1854 = fmul fast float %1851, 0x3FD45F3060000000
  %1855 = fmul fast float %1852, 0x3FD45F3060000000
  %1856 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %82, i32 159)  ; CBufferLoadLegacy(handle,regIndex)
  %1857 = extractvalue %dx.types.CBufRet.f32 %1856, 0
  %1858 = extractvalue %dx.types.CBufRet.f32 %1856, 1
  %1859 = extractvalue %dx.types.CBufRet.f32 %1856, 2
  %1860 = fmul fast float %1853, %1857
  %1861 = fmul fast float %1854, %1858
  %1862 = fmul fast float %1855, %1859
  br i1 %1584, label %1981, label %1863

; <label>:1863                                    ; preds = %1159
  %1864 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %82, i32 186)  ; CBufferLoadLegacy(handle,regIndex)
  %1865 = extractvalue %dx.types.CBufRet.f32 %1864, 1
  %1866 = fcmp fast une float %1865, 0.000000e+00
  br i1 %1866, label %1867, label %1907, !dx.controlflow.hints !145

; <label>:1867                                    ; preds = %1863
  %1868 = call %dx.types.Handle @dx.op.createHandleForLib.dx.types.Handle(i32 160, %dx.types.Handle %48)  ; CreateHandleForLib(Resource)
  %1869 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %1868, %dx.types.ResourceProperties { i32 4, i32 1033 })  ; AnnotateHandle(res,props)  resource: Texture3D<4xF32>
  %1870 = call %dx.types.ResRet.f32 @dx.op.sampleLevel.f32(i32 62, %dx.types.Handle %1869, %dx.types.Handle %1691, float %1685, float %1686, float %1687, float undef, i32 0, i32 0, i32 0, float 0.000000e+00)  ; SampleLevel(srv,sampler,coord0,coord1,coord2,coord3,offset0,offset1,offset2,LOD)
  %1871 = extractvalue %dx.types.ResRet.f32 %1870, 0
  %1872 = extractvalue %dx.types.ResRet.f32 %1870, 1
  %1873 = extractvalue %dx.types.ResRet.f32 %1870, 2
  %1874 = fmul fast float %1871, 2.000000e+00
  %1875 = fmul fast float %1872, 2.000000e+00
  %1876 = fmul fast float %1873, 2.000000e+00
  %1877 = fadd fast float %1874, -1.000000e+00
  %1878 = fadd fast float %1875, -1.000000e+00
  %1879 = fadd fast float %1876, -1.000000e+00
  %1880 = fmul fast float %1877, %1877
  %1881 = fmul fast float %1878, %1878
  %1882 = fadd fast float %1880, %1881
  %1883 = fmul fast float %1879, %1879
  %1884 = fadd fast float %1882, %1883
  %1885 = call float @dx.op.unary.f32(i32 24, float %1884)  ; Sqrt(value)
  %1886 = call float @dx.op.binary.f32(i32 35, float %1885, float 0x3F1A36E2E0000000)  ; FMax(a,b)
  %1887 = fdiv fast float %1877, %1886
  %1888 = fdiv fast float %1878, %1886
  %1889 = fdiv fast float %1879, %1886
  %1890 = fsub fast float 1.000000e+00, %1885
  %1891 = fmul fast float %1890, %1890
  %1892 = fsub fast float 1.000000e+00, %1891
  %1893 = fsub fast float %1593, %1887
  %1894 = fsub fast float %1594, %1888
  %1895 = fsub fast float %1595, %1889
  %1896 = fmul fast float %1892, %1893
  %1897 = fmul fast float %1894, %1892
  %1898 = fmul fast float %1895, %1892
  %1899 = fadd fast float %1896, %1887
  %1900 = fadd fast float %1897, %1888
  %1901 = fadd fast float %1898, %1889
  %1902 = call float @dx.op.dot3.f32(i32 55, float %1887, float %1888, float %1889, float %1593, float %1594, float %1595)  ; Dot3(ax,ay,az,bx,by,bz)
  %1903 = call float @dx.op.unary.f32(i32 7, float %1902)  ; Saturate(value)
  %1904 = fsub fast float 1.000000e+00, %1903
  %1905 = fmul fast float %1904, %1892
  %1906 = fadd fast float %1905, %1903
  br label %1907

; <label>:1907                                    ; preds = %1867, %1863
  %1908 = phi float [ %1885, %1867 ], [ 1.000000e+00, %1863 ]
  %1909 = phi float [ %1906, %1867 ], [ 1.000000e+00, %1863 ]
  %1910 = phi float [ %1899, %1867 ], [ %1593, %1863 ]
  %1911 = phi float [ %1900, %1867 ], [ %1594, %1863 ]
  %1912 = phi float [ %1901, %1867 ], [ %1595, %1863 ]
  %1913 = call %dx.types.Handle @dx.op.createHandleForLib.dx.types.Handle(i32 160, %dx.types.Handle %45)  ; CreateHandleForLib(Resource)
  %1914 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %1913, %dx.types.ResourceProperties { i32 12, i32 16 })  ; AnnotateHandle(res,props)  resource: StructuredBuffer<stride=16>
  %1915 = call %dx.types.ResRet.f32 @dx.op.rawBufferLoad.f32(i32 139, %dx.types.Handle %1914, i32 0, i32 0, i8 15, i32 4)  ; RawBufferLoad(srv,index,elementOffset,mask,alignment)
  %1916 = extractvalue %dx.types.ResRet.f32 %1915, 0
  %1917 = extractvalue %dx.types.ResRet.f32 %1915, 1
  %1918 = extractvalue %dx.types.ResRet.f32 %1915, 2
  %1919 = extractvalue %dx.types.ResRet.f32 %1915, 3
  %1920 = call float @dx.op.dot4.f32(i32 56, float %1916, float %1917, float %1918, float %1919, float %1910, float %1911, float %1912, float 1.000000e+00)  ; Dot4(ax,ay,az,aw,bx,by,bz,bw)
  %1921 = call %dx.types.ResRet.f32 @dx.op.rawBufferLoad.f32(i32 139, %dx.types.Handle %1914, i32 1, i32 0, i8 15, i32 4)  ; RawBufferLoad(srv,index,elementOffset,mask,alignment)
  %1922 = extractvalue %dx.types.ResRet.f32 %1921, 0
  %1923 = extractvalue %dx.types.ResRet.f32 %1921, 1
  %1924 = extractvalue %dx.types.ResRet.f32 %1921, 2
  %1925 = extractvalue %dx.types.ResRet.f32 %1921, 3
  %1926 = call float @dx.op.dot4.f32(i32 56, float %1922, float %1923, float %1924, float %1925, float %1910, float %1911, float %1912, float 1.000000e+00)  ; Dot4(ax,ay,az,aw,bx,by,bz,bw)
  %1927 = call %dx.types.ResRet.f32 @dx.op.rawBufferLoad.f32(i32 139, %dx.types.Handle %1914, i32 2, i32 0, i8 15, i32 4)  ; RawBufferLoad(srv,index,elementOffset,mask,alignment)
  %1928 = extractvalue %dx.types.ResRet.f32 %1927, 0
  %1929 = extractvalue %dx.types.ResRet.f32 %1927, 1
  %1930 = extractvalue %dx.types.ResRet.f32 %1927, 2
  %1931 = extractvalue %dx.types.ResRet.f32 %1927, 3
  %1932 = call float @dx.op.dot4.f32(i32 56, float %1928, float %1929, float %1930, float %1931, float %1910, float %1911, float %1912, float 1.000000e+00)  ; Dot4(ax,ay,az,aw,bx,by,bz,bw)
  %1933 = fmul fast float %1911, %1910
  %1934 = fmul fast float %1912, %1911
  %1935 = fmul fast float %1912, %1912
  %1936 = fmul fast float %1912, %1910
  %1937 = call %dx.types.ResRet.f32 @dx.op.rawBufferLoad.f32(i32 139, %dx.types.Handle %1914, i32 3, i32 0, i8 15, i32 4)  ; RawBufferLoad(srv,index,elementOffset,mask,alignment)
  %1938 = extractvalue %dx.types.ResRet.f32 %1937, 0
  %1939 = extractvalue %dx.types.ResRet.f32 %1937, 1
  %1940 = extractvalue %dx.types.ResRet.f32 %1937, 2
  %1941 = extractvalue %dx.types.ResRet.f32 %1937, 3
  %1942 = call float @dx.op.dot4.f32(i32 56, float %1938, float %1939, float %1940, float %1941, float %1933, float %1934, float %1935, float %1936)  ; Dot4(ax,ay,az,aw,bx,by,bz,bw)
  %1943 = call %dx.types.ResRet.f32 @dx.op.rawBufferLoad.f32(i32 139, %dx.types.Handle %1914, i32 4, i32 0, i8 15, i32 4)  ; RawBufferLoad(srv,index,elementOffset,mask,alignment)
  %1944 = extractvalue %dx.types.ResRet.f32 %1943, 0
  %1945 = extractvalue %dx.types.ResRet.f32 %1943, 1
  %1946 = extractvalue %dx.types.ResRet.f32 %1943, 2
  %1947 = extractvalue %dx.types.ResRet.f32 %1943, 3
  %1948 = call float @dx.op.dot4.f32(i32 56, float %1944, float %1945, float %1946, float %1947, float %1933, float %1934, float %1935, float %1936)  ; Dot4(ax,ay,az,aw,bx,by,bz,bw)
  %1949 = call %dx.types.ResRet.f32 @dx.op.rawBufferLoad.f32(i32 139, %dx.types.Handle %1914, i32 5, i32 0, i8 15, i32 4)  ; RawBufferLoad(srv,index,elementOffset,mask,alignment)
  %1950 = extractvalue %dx.types.ResRet.f32 %1949, 0
  %1951 = extractvalue %dx.types.ResRet.f32 %1949, 1
  %1952 = extractvalue %dx.types.ResRet.f32 %1949, 2
  %1953 = extractvalue %dx.types.ResRet.f32 %1949, 3
  %1954 = call float @dx.op.dot4.f32(i32 56, float %1950, float %1951, float %1952, float %1953, float %1933, float %1934, float %1935, float %1936)  ; Dot4(ax,ay,az,aw,bx,by,bz,bw)
  %1955 = fmul fast float %1910, %1910
  %1956 = fmul fast float %1911, %1911
  %1957 = fsub fast float %1955, %1956
  %1958 = call %dx.types.ResRet.f32 @dx.op.rawBufferLoad.f32(i32 139, %dx.types.Handle %1914, i32 6, i32 0, i8 15, i32 4)  ; RawBufferLoad(srv,index,elementOffset,mask,alignment)
  %1959 = extractvalue %dx.types.ResRet.f32 %1958, 0
  %1960 = extractvalue %dx.types.ResRet.f32 %1958, 1
  %1961 = extractvalue %dx.types.ResRet.f32 %1958, 2
  %1962 = fmul fast float %1959, %1957
  %1963 = fmul fast float %1960, %1957
  %1964 = fmul fast float %1961, %1957
  %1965 = fadd fast float %1942, %1920
  %1966 = fadd fast float %1948, %1926
  %1967 = fadd fast float %1954, %1932
  %1968 = fadd fast float %1965, %1962
  %1969 = fadd fast float %1966, %1963
  %1970 = fadd fast float %1967, %1964
  %1971 = call float @dx.op.binary.f32(i32 35, float 0.000000e+00, float %1968)  ; FMax(a,b)
  %1972 = call float @dx.op.binary.f32(i32 35, float 0.000000e+00, float %1969)  ; FMax(a,b)
  %1973 = call float @dx.op.binary.f32(i32 35, float 0.000000e+00, float %1970)  ; FMax(a,b)
  %1974 = fmul fast float %1909, %1908
  %1975 = fmul fast float %1974, %1168
  %1976 = fmul fast float %1975, %1971
  %1977 = fmul fast float %1974, %745
  %1978 = fmul fast float %1977, %1972
  %1979 = fmul fast float %1974, %1169
  %1980 = fmul fast float %1979, %1973
  br label %1981

; <label>:1981                                    ; preds = %1907, %1159
  %1982 = phi float [ %1976, %1907 ], [ 0.000000e+00, %1159 ]
  %1983 = phi float [ %1978, %1907 ], [ 0.000000e+00, %1159 ]
  %1984 = phi float [ %1980, %1907 ], [ 0.000000e+00, %1159 ]
  %1985 = fadd fast float %1982, %1860
  %1986 = fadd fast float %1983, %1861
  %1987 = fadd fast float %1984, %1862
  %1988 = call i32 @dx.op.legacyF32ToF16(i32 130, float %1171)  ; LegacyF32ToF16(value)
  %1989 = call i32 @dx.op.legacyF32ToF16(i32 130, float %750)  ; LegacyF32ToF16(value)
  %1990 = shl i32 %1989, 16
  %1991 = or i32 %1990, %1988
  %1992 = call i32 @dx.op.legacyF32ToF16(i32 130, float %1596)  ; LegacyF32ToF16(value)
  %1993 = call i32 @dx.op.legacyF32ToF16(i32 130, float %1597)  ; LegacyF32ToF16(value)
  %1994 = shl i32 %1993, 16
  %1995 = or i32 %1994, %1992
  %1996 = call i32 @dx.op.legacyF32ToF16(i32 130, float %1598)  ; LegacyF32ToF16(value)
  %1997 = call i32 @dx.op.legacyF32ToF16(i32 130, float %1593)  ; LegacyF32ToF16(value)
  %1998 = shl i32 %1997, 16
  %1999 = or i32 %1998, %1996
  %2000 = call i32 @dx.op.legacyF32ToF16(i32 130, float %1594)  ; LegacyF32ToF16(value)
  %2001 = call i32 @dx.op.legacyF32ToF16(i32 130, float %1595)  ; LegacyF32ToF16(value)
  %2002 = shl i32 %2001, 16
  %2003 = or i32 %2002, %2000
  %2004 = call i32 @dx.op.legacyF32ToF16(i32 130, float %1585)  ; LegacyF32ToF16(value)
  %2005 = call i32 @dx.op.legacyF32ToF16(i32 130, float %1586)  ; LegacyF32ToF16(value)
  %2006 = shl i32 %2005, 16
  %2007 = or i32 %2006, %2004
  %2008 = call i32 @dx.op.legacyF32ToF16(i32 130, float %1587)  ; LegacyF32ToF16(value)
  %2009 = call i32 @dx.op.legacyF32ToF16(i32 130, float 1.000000e+00)  ; LegacyF32ToF16(value)
  %2010 = shl i32 %2009, 16
  %2011 = or i32 %2010, %2008
  %2012 = call i32 @dx.op.legacyF32ToF16(i32 130, float %1590)  ; LegacyF32ToF16(value)
  %2013 = shl i32 %2012, 16
  %2014 = or i32 %2013, 32768
  %2015 = shl nuw nsw i32 %1582, 23
  %2016 = shl i32 %1581, 19
  %2017 = and i32 %2016, -536870912
  %2018 = or i32 %2015, %2017
  %2019 = or i32 %2018, %2009
  %2020 = or i32 %2019, 65536
  %2021 = call i32 @dx.op.legacyF32ToF16(i32 130, float %1985)  ; LegacyF32ToF16(value)
  %2022 = call i32 @dx.op.legacyF32ToF16(i32 130, float %1986)  ; LegacyF32ToF16(value)
  %2023 = shl i32 %2022, 16
  %2024 = or i32 %2023, %2021
  %2025 = call i32 @dx.op.legacyF32ToF16(i32 130, float %1987)  ; LegacyF32ToF16(value)
  %2026 = call i32 @dx.op.legacyF32ToF16(i32 130, float 0.000000e+00)  ; LegacyF32ToF16(value)
  %2027 = shl i32 %2026, 16
  %2028 = or i32 %2027, %2026
  store float %1259, float* %84, align 4
  store i32 %1991, i32* %746, align 4
  store float 0.000000e+00, float* %733, align 4
  %2029 = getelementptr inbounds %struct.FPackedMaterialClosestHitPayload, %struct.FPackedMaterialClosestHitPayload* %PackedPayload, i32 0, i32 3, i32 0
  store i32 %1995, i32* %2029, align 4
  %2030 = getelementptr inbounds %struct.FPackedMaterialClosestHitPayload, %struct.FPackedMaterialClosestHitPayload* %PackedPayload, i32 0, i32 3, i32 1
  store i32 %1999, i32* %2030, align 4
  %2031 = getelementptr inbounds %struct.FPackedMaterialClosestHitPayload, %struct.FPackedMaterialClosestHitPayload* %PackedPayload, i32 0, i32 3, i32 2
  store i32 %2003, i32* %2031, align 4
  %2032 = getelementptr inbounds %struct.FPackedMaterialClosestHitPayload, %struct.FPackedMaterialClosestHitPayload* %PackedPayload, i32 0, i32 4, i32 0
  store i32 %2007, i32* %2032, align 4
  %2033 = getelementptr inbounds %struct.FPackedMaterialClosestHitPayload, %struct.FPackedMaterialClosestHitPayload* %PackedPayload, i32 0, i32 4, i32 1
  store i32 %2011, i32* %2033, align 4
  %2034 = getelementptr inbounds %struct.FPackedMaterialClosestHitPayload, %struct.FPackedMaterialClosestHitPayload* %PackedPayload, i32 0, i32 5
  store i32 %2014, i32* %2034, align 4
  store i32 %2020, i32* %85, align 4
  %2035 = getelementptr inbounds %struct.FPackedMaterialClosestHitPayload, %struct.FPackedMaterialClosestHitPayload* %PackedPayload, i32 0, i32 7, i32 0
  store i32 %2024, i32* %2035, align 4
  %2036 = getelementptr inbounds %struct.FPackedMaterialClosestHitPayload, %struct.FPackedMaterialClosestHitPayload* %PackedPayload, i32 0, i32 7, i32 1
  store i32 %2025, i32* %2036, align 4
  %2037 = getelementptr inbounds %struct.FPackedMaterialClosestHitPayload, %struct.FPackedMaterialClosestHitPayload* %PackedPayload, i32 0, i32 8
  store i32 6911, i32* %2037, align 4
  %2038 = getelementptr inbounds %struct.FPackedMaterialClosestHitPayload, %struct.FPackedMaterialClosestHitPayload* %PackedPayload, i32 0, i32 9, i32 0
  store i32 %2028, i32* %2038, align 4
  %2039 = getelementptr inbounds %struct.FPackedMaterialClosestHitPayload, %struct.FPackedMaterialClosestHitPayload* %PackedPayload, i32 0, i32 9, i32 1
  store i32 %2028, i32* %2039, align 4
  %2040 = getelementptr inbounds %struct.FPackedMaterialClosestHitPayload, %struct.FPackedMaterialClosestHitPayload* %PackedPayload, i32 0, i32 10
  store i32 0, i32* %2040, align 4
  br i1 %88, label %2041, label %2057

; <label>:2041                                    ; preds = %1981
  %2042 = call i32 @dx.op.instanceIndex.i32(i32 142)  ; InstanceIndex()
  %2043 = call %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32 59, %dx.types.Handle %72, i32 1)  ; CBufferLoadLegacy(handle,regIndex)
  %2044 = extractvalue %dx.types.CBufRet.i32 %2043, 0
  %2045 = sub i32 %2042, %2044
  %2046 = mul i32 %863, 42
  %2047 = call %dx.types.Handle @dx.op.createHandleForLib.dx.types.Handle(i32 160, %dx.types.Handle %47)  ; CreateHandleForLib(Resource)
  %2048 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %2047, %dx.types.ResourceProperties { i32 12, i32 16 })  ; AnnotateHandle(res,props)  resource: StructuredBuffer<stride=16>
  %2049 = call %dx.types.ResRet.f32 @dx.op.rawBufferLoad.f32(i32 139, %dx.types.Handle %2048, i32 %2046, i32 0, i8 15, i32 4)  ; RawBufferLoad(srv,index,elementOffset,mask,alignment)
  %2050 = extractvalue %dx.types.ResRet.f32 %2049, 2
  %2051 = bitcast float %2050 to i32
  %2052 = icmp eq i32 %2051, 1
  %2053 = select i1 %2052, i32 0, i32 %2045
  %2054 = extractvalue %dx.types.ResRet.f32 %2049, 1
  %2055 = bitcast float %2054 to i32
  %2056 = add i32 %2055, %2053
  store i32 %2056, i32* %2039, align 4, !tbaa !131
  br label %2057

; <label>:2057                                    ; preds = %2041, %1981, %729
  ret void
}

; Function Attrs: nounwind readnone
declare float @dx.op.binary.f32(i32, float, float) #1

; Function Attrs: nounwind readnone
declare float @dx.op.unary.f32(i32, float) #1

; Function Attrs: nounwind readnone
declare i32 @dx.op.instanceID.i32(i32) #1

; Function Attrs: nounwind readnone
declare i32 @dx.op.primitiveIndex.i32(i32) #1

; Function Attrs: nounwind readnone
declare i32 @dx.op.hitKind.i32(i32) #1

; Function Attrs: nounwind readnone
declare i32 @dx.op.instanceIndex.i32(i32) #1

; Function Attrs: nounwind readnone
declare float @dx.op.dot3.f32(i32, float, float, float, float, float, float) #1

; Function Attrs: nounwind readnone
declare i32 @dx.op.legacyF32ToF16(i32, float) #1

; Function Attrs: nounwind readnone
declare float @dx.op.tertiary.f32(i32, float, float, float) #1

; Function Attrs: nounwind readonly
declare %dx.types.ResRet.f32 @dx.op.sampleLevel.f32(i32, %dx.types.Handle, %dx.types.Handle, float, float, float, float, i32, i32, i32, float) #2

; Function Attrs: nounwind readnone
declare float @dx.op.dot2.f32(i32, float, float, float, float) #1

; Function Attrs: nounwind readnone
declare float @dx.op.dot4.f32(i32, float, float, float, float, float, float, float, float) #1

; Function Attrs: nounwind readnone
declare float @dx.op.legacyF16ToF32(i32, i32) #1

; Function Attrs: nounwind readnone
declare float @dx.op.worldRayOrigin.f32(i32, i8) #1

; Function Attrs: nounwind readnone
declare float @dx.op.worldRayDirection.f32(i32, i8) #1

; Function Attrs: nounwind readonly
declare %dx.types.ResRet.i32 @dx.op.rawBufferLoad.i32(i32, %dx.types.Handle, i32, i32, i8, i32) #2

; Function Attrs: nounwind readonly
declare %dx.types.ResRet.f32 @dx.op.bufferLoad.f32(i32, %dx.types.Handle, i32, i32) #2

; Function Attrs: nounwind readonly
declare %dx.types.ResRet.f32 @dx.op.rawBufferLoad.f32(i32, %dx.types.Handle, i32, i32, i8, i32) #2

; Function Attrs: nounwind readonly
declare %dx.types.ResRet.i32 @dx.op.bufferLoad.i32(i32, %dx.types.Handle, i32, i32) #2

; Function Attrs: nounwind readnone
declare i32 @dx.op.binary.i32(i32, i32, i32) #1

; Function Attrs: nounwind readonly
declare %dx.types.ResRet.i32 @dx.op.textureLoad.i32(i32, %dx.types.Handle, i32, i32, i32, i32, i32, i32, i32) #2

; Function Attrs: nounwind readonly
declare float @dx.op.rayTCurrent.f32(i32) #2

; Function Attrs: nounwind readonly
declare %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32, %dx.types.Handle, i32) #2

; Function Attrs: nounwind readonly
declare %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32, %dx.types.Handle, i32) #2

; Function Attrs: nounwind readnone
declare %dx.types.Handle @dx.op.annotateHandle(i32, %dx.types.Handle, %dx.types.ResourceProperties) #1

; Function Attrs: nounwind readonly
declare %dx.types.Handle @dx.op.createHandleForLib.dx.types.Handle(i32, %dx.types.Handle) #2

attributes #0 = { nounwind }
attributes #1 = { nounwind readnone }
attributes #2 = { nounwind readonly }

!llvm.ident = !{!0}
!dx.version = !{!1}
!dx.valver = !{!1}
!dx.shaderModel = !{!2}
!dx.resources = !{!3}
!dx.entryPoints = !{!72, !75}

!0 = !{!"clang version 3.7.0 (tags/RELEASE_370/final)"}
!1 = !{i32 1, i32 6}
!2 = !{!"lib", i32 6, i32 6}
!3 = !{!4, null, !44, !51}
!4 = !{!5, !7, !9, !10, !11, !12, !13, !14, !15, !16, !18, !19, !20, !21, !22, !23, !24, !25, !26, !27, !28, !29, !30, !31, !32, !33, !34, !35, !36, !37, !38, !39, !40, !41, !42, !43}
!5 = !{i32 0, %"class.Texture3D<vector<unsigned int, 4> >"* bitcast (%dx.types.Handle* @"\01?View_VolumetricLightmapIndirectionTexture@@3V?$Texture3D@V?$vector@I$03@@@@A" to %"class.Texture3D<vector<unsigned int, 4> >"*), !"View_VolumetricLightmapIndirectionTexture", i32 0, i32 0, i32 1, i32 4, i32 0, !6}
!6 = !{i32 0, i32 5}
!7 = !{i32 1, %"class.Texture3D<vector<float, 4> >"* bitcast (%dx.types.Handle* @"\01?View_VolumetricLightmapBrickAmbientVector@@3V?$Texture3D@V?$vector@M$03@@@@A" to %"class.Texture3D<vector<float, 4> >"*), !"View_VolumetricLightmapBrickAmbientVector", i32 0, i32 1, i32 1, i32 4, i32 0, !8}
!8 = !{i32 0, i32 9}
!9 = !{i32 2, %"class.Texture3D<vector<float, 4> >"* bitcast (%dx.types.Handle* @"\01?View_VolumetricLightmapBrickSHCoefficients0@@3V?$Texture3D@V?$vector@M$03@@@@A" to %"class.Texture3D<vector<float, 4> >"*), !"View_VolumetricLightmapBrickSHCoefficients0", i32 0, i32 2, i32 1, i32 4, i32 0, !8}
!10 = !{i32 3, %"class.Texture3D<vector<float, 4> >"* bitcast (%dx.types.Handle* @"\01?View_VolumetricLightmapBrickSHCoefficients1@@3V?$Texture3D@V?$vector@M$03@@@@A" to %"class.Texture3D<vector<float, 4> >"*), !"View_VolumetricLightmapBrickSHCoefficients1", i32 0, i32 3, i32 1, i32 4, i32 0, !8}
!11 = !{i32 4, %"class.Texture3D<vector<float, 4> >"* bitcast (%dx.types.Handle* @"\01?View_VolumetricLightmapBrickSHCoefficients2@@3V?$Texture3D@V?$vector@M$03@@@@A" to %"class.Texture3D<vector<float, 4> >"*), !"View_VolumetricLightmapBrickSHCoefficients2", i32 0, i32 4, i32 1, i32 4, i32 0, !8}
!12 = !{i32 5, %"class.Texture3D<vector<float, 4> >"* bitcast (%dx.types.Handle* @"\01?View_VolumetricLightmapBrickSHCoefficients3@@3V?$Texture3D@V?$vector@M$03@@@@A" to %"class.Texture3D<vector<float, 4> >"*), !"View_VolumetricLightmapBrickSHCoefficients3", i32 0, i32 5, i32 1, i32 4, i32 0, !8}
!13 = !{i32 6, %"class.Texture3D<vector<float, 4> >"* bitcast (%dx.types.Handle* @"\01?View_VolumetricLightmapBrickSHCoefficients4@@3V?$Texture3D@V?$vector@M$03@@@@A" to %"class.Texture3D<vector<float, 4> >"*), !"View_VolumetricLightmapBrickSHCoefficients4", i32 0, i32 6, i32 1, i32 4, i32 0, !8}
!14 = !{i32 7, %"class.Texture3D<vector<float, 4> >"* bitcast (%dx.types.Handle* @"\01?View_VolumetricLightmapBrickSHCoefficients5@@3V?$Texture3D@V?$vector@M$03@@@@A" to %"class.Texture3D<vector<float, 4> >"*), !"View_VolumetricLightmapBrickSHCoefficients5", i32 0, i32 7, i32 1, i32 4, i32 0, !8}
!15 = !{i32 8, %"class.Texture3D<vector<float, 4> >"* bitcast (%dx.types.Handle* @"\01?View_SkyBentNormalBrickTexture@@3V?$Texture3D@V?$vector@M$03@@@@A" to %"class.Texture3D<vector<float, 4> >"*), !"View_SkyBentNormalBrickTexture", i32 0, i32 8, i32 1, i32 4, i32 0, !8}
!16 = !{i32 9, %"class.StructuredBuffer<vector<float, 4> >"* bitcast (%dx.types.Handle* @"\01?View_PrimitiveSceneData@@3V?$StructuredBuffer@V?$vector@M$03@@@@A" to %"class.StructuredBuffer<vector<float, 4> >"*), !"View_PrimitiveSceneData", i32 0, i32 9, i32 1, i32 12, i32 0, !17}
!17 = !{i32 1, i32 16}
!18 = !{i32 10, %"class.StructuredBuffer<vector<float, 4> >"* bitcast (%dx.types.Handle* @"\01?View_InstanceSceneData@@3V?$StructuredBuffer@V?$vector@M$03@@@@A" to %"class.StructuredBuffer<vector<float, 4> >"*), !"View_InstanceSceneData", i32 0, i32 10, i32 1, i32 12, i32 0, !17}
!19 = !{i32 11, %"class.StructuredBuffer<vector<float, 4> >"* bitcast (%dx.types.Handle* @"\01?View_SkyIrradianceEnvironmentMap@@3V?$StructuredBuffer@V?$vector@M$03@@@@A" to %"class.StructuredBuffer<vector<float, 4> >"*), !"View_SkyIrradianceEnvironmentMap", i32 0, i32 11, i32 1, i32 12, i32 0, !17}
!20 = !{i32 12, %"class.Buffer<unsigned int>"* bitcast (%dx.types.Handle* @"\01?View_LandscapeIndirection@@3V?$Buffer@I@@A" to %"class.Buffer<unsigned int>"*), !"View_LandscapeIndirection", i32 0, i32 12, i32 1, i32 10, i32 0, !6}
!21 = !{i32 13, %"class.Buffer<float>"* bitcast (%dx.types.Handle* @"\01?View_LandscapePerComponentData@@3V?$Buffer@M@@A" to %"class.Buffer<float>"*), !"View_LandscapePerComponentData", i32 0, i32 13, i32 1, i32 10, i32 0, !8}
!22 = !{i32 14, %"class.Buffer<float>"* bitcast (%dx.types.Handle* @"\01?LandscapeContinuousLODParameters_SectionLODBias@@3V?$Buffer@M@@A" to %"class.Buffer<float>"*), !"LandscapeContinuousLODParameters_SectionLODBias", i32 0, i32 14, i32 1, i32 10, i32 0, !8}
!23 = !{i32 15, %"class.Texture2D<vector<float, 4> >"* bitcast (%dx.types.Handle* @"\01?LandscapeParameters_HeightmapTexture@@3V?$Texture2D@V?$vector@M$03@@@@A" to %"class.Texture2D<vector<float, 4> >"*), !"LandscapeParameters_HeightmapTexture", i32 0, i32 15, i32 1, i32 2, i32 0, !8}
!24 = !{i32 16, %"class.Texture2D<vector<float, 4> >"* bitcast (%dx.types.Handle* @"\01?LandscapeParameters_NormalmapTexture@@3V?$Texture2D@V?$vector@M$03@@@@A" to %"class.Texture2D<vector<float, 4> >"*), !"LandscapeParameters_NormalmapTexture", i32 0, i32 16, i32 1, i32 2, i32 0, !8}
!25 = !{i32 17, %"class.Texture2D<vector<float, 4> >"* bitcast (%dx.types.Handle* @"\01?LandscapeParameters_XYOffsetmapTexture@@3V?$Texture2D@V?$vector@M$03@@@@A" to %"class.Texture2D<vector<float, 4> >"*), !"LandscapeParameters_XYOffsetmapTexture", i32 0, i32 17, i32 1, i32 2, i32 0, !8}
!26 = !{i32 18, %"class.Texture2D<vector<float, 4> >"* bitcast (%dx.types.Handle* @"\01?Material_Texture2D_0@@3V?$Texture2D@V?$vector@M$03@@@@A" to %"class.Texture2D<vector<float, 4> >"*), !"Material_Texture2D_0", i32 0, i32 18, i32 1, i32 2, i32 0, !8}
!27 = !{i32 19, %"class.Texture2D<vector<float, 4> >"* bitcast (%dx.types.Handle* @"\01?Material_Texture2D_1@@3V?$Texture2D@V?$vector@M$03@@@@A" to %"class.Texture2D<vector<float, 4> >"*), !"Material_Texture2D_1", i32 0, i32 19, i32 1, i32 2, i32 0, !8}
!28 = !{i32 20, %"class.Texture2D<vector<float, 4> >"* bitcast (%dx.types.Handle* @"\01?Material_Texture2D_2@@3V?$Texture2D@V?$vector@M$03@@@@A" to %"class.Texture2D<vector<float, 4> >"*), !"Material_Texture2D_2", i32 0, i32 20, i32 1, i32 2, i32 0, !8}
!29 = !{i32 21, %"class.Texture2D<vector<float, 4> >"* bitcast (%dx.types.Handle* @"\01?Material_Texture2D_3@@3V?$Texture2D@V?$vector@M$03@@@@A" to %"class.Texture2D<vector<float, 4> >"*), !"Material_Texture2D_3", i32 0, i32 21, i32 1, i32 2, i32 0, !8}
!30 = !{i32 22, %"class.Texture2D<vector<float, 4> >"* bitcast (%dx.types.Handle* @"\01?Material_Texture2D_4@@3V?$Texture2D@V?$vector@M$03@@@@A" to %"class.Texture2D<vector<float, 4> >"*), !"Material_Texture2D_4", i32 0, i32 22, i32 1, i32 2, i32 0, !8}
!31 = !{i32 23, %"class.Texture2D<vector<float, 4> >"* bitcast (%dx.types.Handle* @"\01?Material_Texture2D_5@@3V?$Texture2D@V?$vector@M$03@@@@A" to %"class.Texture2D<vector<float, 4> >"*), !"Material_Texture2D_5", i32 0, i32 23, i32 1, i32 2, i32 0, !8}
!32 = !{i32 24, %"class.Texture2D<vector<float, 4> >"* bitcast (%dx.types.Handle* @"\01?Material_Texture2D_6@@3V?$Texture2D@V?$vector@M$03@@@@A" to %"class.Texture2D<vector<float, 4> >"*), !"Material_Texture2D_6", i32 0, i32 24, i32 1, i32 2, i32 0, !8}
!33 = !{i32 25, %"class.Texture2D<vector<float, 4> >"* bitcast (%dx.types.Handle* @"\01?Material_Texture2D_7@@3V?$Texture2D@V?$vector@M$03@@@@A" to %"class.Texture2D<vector<float, 4> >"*), !"Material_Texture2D_7", i32 0, i32 25, i32 1, i32 2, i32 0, !8}
!34 = !{i32 26, %"class.Texture2D<vector<float, 4> >"* bitcast (%dx.types.Handle* @"\01?Material_Texture2D_8@@3V?$Texture2D@V?$vector@M$03@@@@A" to %"class.Texture2D<vector<float, 4> >"*), !"Material_Texture2D_8", i32 0, i32 26, i32 1, i32 2, i32 0, !8}
!35 = !{i32 27, %"class.Texture2D<vector<float, 4> >"* bitcast (%dx.types.Handle* @"\01?Material_Texture2D_9@@3V?$Texture2D@V?$vector@M$03@@@@A" to %"class.Texture2D<vector<float, 4> >"*), !"Material_Texture2D_9", i32 0, i32 27, i32 1, i32 2, i32 0, !8}
!36 = !{i32 28, %"class.Texture2D<vector<float, 4> >"* bitcast (%dx.types.Handle* @"\01?Material_Texture2D_10@@3V?$Texture2D@V?$vector@M$03@@@@A" to %"class.Texture2D<vector<float, 4> >"*), !"Material_Texture2D_10", i32 0, i32 28, i32 1, i32 2, i32 0, !8}
!37 = !{i32 29, %"class.Texture2D<vector<float, 4> >"* bitcast (%dx.types.Handle* @"\01?Material_Texture2D_11@@3V?$Texture2D@V?$vector@M$03@@@@A" to %"class.Texture2D<vector<float, 4> >"*), !"Material_Texture2D_11", i32 0, i32 29, i32 1, i32 2, i32 0, !8}
!38 = !{i32 30, %"class.Texture2D<vector<float, 4> >"* bitcast (%dx.types.Handle* @"\01?Material_Texture2D_12@@3V?$Texture2D@V?$vector@M$03@@@@A" to %"class.Texture2D<vector<float, 4> >"*), !"Material_Texture2D_12", i32 0, i32 30, i32 1, i32 2, i32 0, !8}
!39 = !{i32 31, %"class.Texture2D<vector<float, 4> >"* bitcast (%dx.types.Handle* @"\01?Material_Texture2D_13@@3V?$Texture2D@V?$vector@M$03@@@@A" to %"class.Texture2D<vector<float, 4> >"*), !"Material_Texture2D_13", i32 0, i32 31, i32 1, i32 2, i32 0, !8}
!40 = !{i32 32, %"class.Texture2D<vector<float, 4> >"* bitcast (%dx.types.Handle* @"\01?Material_Texture2D_14@@3V?$Texture2D@V?$vector@M$03@@@@A" to %"class.Texture2D<vector<float, 4> >"*), !"Material_Texture2D_14", i32 0, i32 32, i32 1, i32 2, i32 0, !8}
!41 = !{i32 33, %"class.Texture2D<vector<float, 4> >"* bitcast (%dx.types.Handle* @"\01?Material_Texture2D_15@@3V?$Texture2D@V?$vector@M$03@@@@A" to %"class.Texture2D<vector<float, 4> >"*), !"Material_Texture2D_15", i32 0, i32 33, i32 1, i32 2, i32 0, !8}
!42 = !{i32 34, %"class.Texture2D<vector<float, 4> >"* bitcast (%dx.types.Handle* @"\01?Material_Texture2D_16@@3V?$Texture2D@V?$vector@M$03@@@@A" to %"class.Texture2D<vector<float, 4> >"*), !"Material_Texture2D_16", i32 0, i32 34, i32 1, i32 2, i32 0, !8}
!43 = !{i32 35, %struct.ByteAddressBuffer* bitcast (%dx.types.Handle* @"\01?HitGroupSystemIndexBuffer@@3UByteAddressBuffer@@A" to %struct.ByteAddressBuffer*), !"HitGroupSystemIndexBuffer", i32 2, i32 0, i32 1, i32 11, i32 0, null}
!44 = !{!45, !46, !47, !48, !49, !50}
!45 = !{i32 0, %UniformBufferConstants_View* bitcast (%dx.types.Handle* @UniformBufferConstants_View to %UniformBufferConstants_View*), !"UniformBufferConstants_View", i32 0, i32 0, i32 1, i32 5292, null}
!46 = !{i32 1, %UniformBufferConstants_LandscapeMVF* bitcast (%dx.types.Handle* @UniformBufferConstants_LandscapeMVF to %UniformBufferConstants_LandscapeMVF*), !"UniformBufferConstants_LandscapeMVF", i32 0, i32 1, i32 1, i32 8, null}
!47 = !{i32 2, %UniformBufferConstants_LandscapeContinuousLODParameters* bitcast (%dx.types.Handle* @UniformBufferConstants_LandscapeContinuousLODParameters to %UniformBufferConstants_LandscapeContinuousLODParameters*), !"UniformBufferConstants_LandscapeContinuousLODParameters", i32 0, i32 2, i32 1, i32 28, null}
!48 = !{i32 3, %UniformBufferConstants_LandscapeParameters* bitcast (%dx.types.Handle* @UniformBufferConstants_LandscapeParameters to %UniformBufferConstants_LandscapeParameters*), !"UniformBufferConstants_LandscapeParameters", i32 0, i32 3, i32 1, i32 236, null}
!49 = !{i32 4, %UniformBufferConstants_Material* bitcast (%dx.types.Handle* @UniformBufferConstants_Material to %UniformBufferConstants_Material*), !"UniformBufferConstants_Material", i32 0, i32 4, i32 1, i32 428, null}
!50 = !{i32 5, %HitGroupSystemRootConstants* bitcast (%dx.types.Handle* @HitGroupSystemRootConstants to %HitGroupSystemRootConstants*), !"HitGroupSystemRootConstants", i32 2, i32 0, i32 1, i32 24, null}
!51 = !{!52, !53, !54, !55, !56, !57, !58, !59, !60, !61, !62, !63, !64, !65, !66, !67, !68, !69, !70, !71}
!52 = !{i32 0, %struct.SamplerState* bitcast (%dx.types.Handle* @"\01?View_SharedBilinearClampedSampler@@3USamplerState@@A" to %struct.SamplerState*), !"View_SharedBilinearClampedSampler", i32 0, i32 0, i32 1, i32 0, null}
!53 = !{i32 1, %struct.SamplerState* bitcast (%dx.types.Handle* @"\01?View_LandscapeWeightmapSampler@@3USamplerState@@A" to %struct.SamplerState*), !"View_LandscapeWeightmapSampler", i32 0, i32 1, i32 1, i32 0, null}
!54 = !{i32 2, %struct.SamplerState* bitcast (%dx.types.Handle* @"\01?LandscapeParameters_HeightmapTextureSampler@@3USamplerState@@A" to %struct.SamplerState*), !"LandscapeParameters_HeightmapTextureSampler", i32 0, i32 2, i32 1, i32 0, null}
!55 = !{i32 3, %struct.SamplerState* bitcast (%dx.types.Handle* @"\01?LandscapeParameters_NormalmapTextureSampler@@3USamplerState@@A" to %struct.SamplerState*), !"LandscapeParameters_NormalmapTextureSampler", i32 0, i32 3, i32 1, i32 0, null}
!56 = !{i32 4, %struct.SamplerState* bitcast (%dx.types.Handle* @"\01?LandscapeParameters_XYOffsetmapTextureSampler@@3USamplerState@@A" to %struct.SamplerState*), !"LandscapeParameters_XYOffsetmapTextureSampler", i32 0, i32 4, i32 1, i32 0, null}
!57 = !{i32 5, %struct.SamplerState* bitcast (%dx.types.Handle* @"\01?Material_Texture2D_2Sampler@@3USamplerState@@A" to %struct.SamplerState*), !"Material_Texture2D_2Sampler", i32 0, i32 5, i32 1, i32 0, null}
!58 = !{i32 6, %struct.SamplerState* bitcast (%dx.types.Handle* @"\01?Material_Texture2D_3Sampler@@3USamplerState@@A" to %struct.SamplerState*), !"Material_Texture2D_3Sampler", i32 0, i32 6, i32 1, i32 0, null}
!59 = !{i32 7, %struct.SamplerState* bitcast (%dx.types.Handle* @"\01?Material_Texture2D_4Sampler@@3USamplerState@@A" to %struct.SamplerState*), !"Material_Texture2D_4Sampler", i32 0, i32 7, i32 1, i32 0, null}
!60 = !{i32 8, %struct.SamplerState* bitcast (%dx.types.Handle* @"\01?Material_Texture2D_5Sampler@@3USamplerState@@A" to %struct.SamplerState*), !"Material_Texture2D_5Sampler", i32 0, i32 8, i32 1, i32 0, null}
!61 = !{i32 9, %struct.SamplerState* bitcast (%dx.types.Handle* @"\01?Material_Texture2D_6Sampler@@3USamplerState@@A" to %struct.SamplerState*), !"Material_Texture2D_6Sampler", i32 0, i32 9, i32 1, i32 0, null}
!62 = !{i32 10, %struct.SamplerState* bitcast (%dx.types.Handle* @"\01?Material_Texture2D_7Sampler@@3USamplerState@@A" to %struct.SamplerState*), !"Material_Texture2D_7Sampler", i32 0, i32 10, i32 1, i32 0, null}
!63 = !{i32 11, %struct.SamplerState* bitcast (%dx.types.Handle* @"\01?Material_Texture2D_8Sampler@@3USamplerState@@A" to %struct.SamplerState*), !"Material_Texture2D_8Sampler", i32 0, i32 11, i32 1, i32 0, null}
!64 = !{i32 12, %struct.SamplerState* bitcast (%dx.types.Handle* @"\01?Material_Texture2D_9Sampler@@3USamplerState@@A" to %struct.SamplerState*), !"Material_Texture2D_9Sampler", i32 0, i32 12, i32 1, i32 0, null}
!65 = !{i32 13, %struct.SamplerState* bitcast (%dx.types.Handle* @"\01?Material_Texture2D_10Sampler@@3USamplerState@@A" to %struct.SamplerState*), !"Material_Texture2D_10Sampler", i32 0, i32 13, i32 1, i32 0, null}
!66 = !{i32 14, %struct.SamplerState* bitcast (%dx.types.Handle* @"\01?Material_Texture2D_11Sampler@@3USamplerState@@A" to %struct.SamplerState*), !"Material_Texture2D_11Sampler", i32 0, i32 14, i32 1, i32 0, null}
!67 = !{i32 15, %struct.SamplerState* bitcast (%dx.types.Handle* @"\01?Material_Texture2D_12Sampler@@3USamplerState@@A" to %struct.SamplerState*), !"Material_Texture2D_12Sampler", i32 0, i32 15, i32 1, i32 0, null}
!68 = !{i32 16, %struct.SamplerState* bitcast (%dx.types.Handle* @"\01?Material_Texture2D_13Sampler@@3USamplerState@@A" to %struct.SamplerState*), !"Material_Texture2D_13Sampler", i32 0, i32 16, i32 1, i32 0, null}
!69 = !{i32 17, %struct.SamplerState* bitcast (%dx.types.Handle* @"\01?Material_Texture2D_14Sampler@@3USamplerState@@A" to %struct.SamplerState*), !"Material_Texture2D_14Sampler", i32 0, i32 17, i32 1, i32 0, null}
!70 = !{i32 18, %struct.SamplerState* bitcast (%dx.types.Handle* @"\01?Material_Texture2D_15Sampler@@3USamplerState@@A" to %struct.SamplerState*), !"Material_Texture2D_15Sampler", i32 0, i32 18, i32 1, i32 0, null}
!71 = !{i32 19, %struct.SamplerState* bitcast (%dx.types.Handle* @"\01?Material_Texture2D_16Sampler@@3USamplerState@@A" to %struct.SamplerState*), !"Material_Texture2D_16Sampler", i32 0, i32 19, i32 1, i32 0, null}
!72 = !{null, !"", null, !3, !73}
!73 = !{i32 0, i64 8388624, i32 5, !74}
!74 = !{i32 0}
!75 = !{void (%struct.FPackedMaterialClosestHitPayload*, %struct.FRayTracingIntersectionAttributes*)* @"\01?MaterialCHS@@YAXUFPackedMaterialClosestHitPayload@@UFRayTracingIntersectionAttributes@@@Z", !"\01?MaterialCHS@@YAXUFPackedMaterialClosestHitPayload@@UFRayTracingIntersectionAttributes@@@Z", null, null, !76}
!76 = !{i32 8, i32 10, i32 6, i32 64, i32 7, i32 8, i32 5, !74}
!77 = !{!78, !80}
!78 = distinct !{!78, !79, !"\01?internal.CalcPixelMaterialInputs@@YAXUFMaterialPixelParameters@@UFPixelMaterialInputs@@@Z: %PixelMaterialInputs"}
!79 = distinct !{!79, !"\01?internal.CalcPixelMaterialInputs@@YAXUFMaterialPixelParameters@@UFPixelMaterialInputs@@@Z"}
!80 = distinct !{!80, !81, !"\01?internal.CalcMaterialParametersEx@@YAXUFMaterialPixelParameters@@UFPixelMaterialInputs@@V?$vector@M$03@@2_NV?$vector@M$02@@4@Z: %PixelMaterialInputs"}
!81 = distinct !{!81, !"\01?internal.CalcMaterialParametersEx@@YAXUFMaterialPixelParameters@@UFPixelMaterialInputs@@V?$vector@M$03@@2_NV?$vector@M$02@@4@Z"}
!82 = !{!83, !78, !80}
!83 = distinct !{!83, !79, !"\01?internal.CalcPixelMaterialInputs@@YAXUFMaterialPixelParameters@@UFPixelMaterialInputs@@@Z: %Parameters"}
!84 = !{!85, !87, !89, !90}
!85 = distinct !{!85, !86, !"\01?internal.GetVertexFactoryIntermediates@@YA?AUFVertexFactoryIntermediates@@UFVertexFactoryInput@@@Z: %agg.result"}
!86 = distinct !{!86, !"\01?internal.GetVertexFactoryIntermediates@@YA?AUFVertexFactoryIntermediates@@UFVertexFactoryInput@@@Z"}
!87 = distinct !{!87, !88, !"\01?internal.CalcInterpolants@@YAXUFRayCone@@UFRayTracingIntersectionAttributes@@UFVertexFactoryInterpolantsVSToPS@@AIAV?$vector@M$02@@@Z: %Interpolants"}
!88 = distinct !{!88, !"\01?internal.CalcInterpolants@@YAXUFRayCone@@UFRayTracingIntersectionAttributes@@UFVertexFactoryInterpolantsVSToPS@@AIAV?$vector@M$02@@@Z"}
!89 = distinct !{!89, !88, !"\01?internal.CalcInterpolants@@YAXUFRayCone@@UFRayTracingIntersectionAttributes@@UFVertexFactoryInterpolantsVSToPS@@AIAV?$vector@M$02@@@Z: %FaceNormal"}
!90 = distinct !{!90, !91, !"\01?internal.CalcInterpolants@@YAXUFRayCone@@UFRayTracingIntersectionAttributes@@UFVertexFactoryInterpolantsVSToPS@@@Z: %Interpolants"}
!91 = distinct !{!91, !"\01?internal.CalcInterpolants@@YAXUFRayCone@@UFRayTracingIntersectionAttributes@@UFVertexFactoryInterpolantsVSToPS@@@Z"}
!92 = !{!93, !83, !78, !80}
!93 = distinct !{!93, !94, !"\01?internal.GetMaterialSharedSampler@@YA?AUSamplerState@@U1@0@Z: %agg.result"}
!94 = distinct !{!94, !"\01?internal.GetMaterialSharedSampler@@YA?AUSamplerState@@U1@0@Z"}
!95 = !{!96, !98, !99, !101, !102, !103}
!96 = distinct !{!96, !97, !"\01?internal.GetSkyLighting@@YAXUFMaterialPixelParameters@@MV?$vector@M$02@@V?$vector@M$01@@I1I_NAIAV2@4@Z: %OutDiffuseLighting"}
!97 = distinct !{!97, !"\01?internal.GetSkyLighting@@YAXUFMaterialPixelParameters@@MV?$vector@M$02@@V?$vector@M$01@@I1I_NAIAV2@4@Z"}
!98 = distinct !{!98, !97, !"\01?internal.GetSkyLighting@@YAXUFMaterialPixelParameters@@MV?$vector@M$02@@V?$vector@M$01@@I1I_NAIAV2@4@Z: %OutSubsurfaceLighting"}
!99 = distinct !{!99, !100, !"\01?internal.GetPrecomputedIndirectLightingAndSkyLight@@YAXUFMaterialPixelParameters@@UFVertexFactoryInterpolantsVSToPS@@MV?$vector@M$02@@2I_NAIAV3@4AIAM@Z: %OutDiffuseLighting"}
!100 = distinct !{!100, !"\01?internal.GetPrecomputedIndirectLightingAndSkyLight@@YAXUFMaterialPixelParameters@@UFVertexFactoryInterpolantsVSToPS@@MV?$vector@M$02@@2I_NAIAV3@4AIAM@Z"}
!101 = distinct !{!101, !100, !"\01?internal.GetPrecomputedIndirectLightingAndSkyLight@@YAXUFMaterialPixelParameters@@UFVertexFactoryInterpolantsVSToPS@@MV?$vector@M$02@@2I_NAIAV3@4AIAM@Z: %OutSubsurfaceLighting"}
!102 = distinct !{!102, !100, !"\01?internal.GetPrecomputedIndirectLightingAndSkyLight@@YAXUFMaterialPixelParameters@@UFVertexFactoryInterpolantsVSToPS@@MV?$vector@M$02@@2I_NAIAV3@4AIAM@Z: %OutIndirectIrradiance"}
!103 = distinct !{!103, !104, !"\01?internal.GetMaterialPayload@@YAXUFPixelMaterialInputs@@UFMaterialPixelParameters@@UFVertexFactoryInterpolantsVSToPS@@_NUFMaterialClosestHitPayload@@@Z: %Payload"}
!104 = distinct !{!104, !"\01?internal.GetMaterialPayload@@YAXUFPixelMaterialInputs@@UFMaterialPixelParameters@@UFVertexFactoryInterpolantsVSToPS@@_NUFMaterialClosestHitPayload@@@Z"}
!105 = !{!106, !108, !110, !87, !89, !90}
!106 = distinct !{!106, !107, !"\01?internal.LoadTriangleBaseAttributes@@YA?AUFTriangleBaseAttributes@@UByteAddressBuffer@@II0III@Z: %agg.result"}
!107 = distinct !{!107, !"\01?internal.LoadTriangleBaseAttributes@@YA?AUFTriangleBaseAttributes@@UByteAddressBuffer@@II0III@Z"}
!108 = distinct !{!108, !109, !"\01?internal.LoadTriangleBaseAttributes@@YA?AUFTriangleBaseAttributes@@I@Z: %agg.result"}
!109 = distinct !{!109, !"\01?internal.LoadTriangleBaseAttributes@@YA?AUFTriangleBaseAttributes@@I@Z"}
!110 = distinct !{!110, !111, !"\01?internal.LoadVertexFactoryInputForHGS@@YA?AUFVertexFactoryInput@@IH@Z: %agg.result"}
!111 = distinct !{!111, !"\01?internal.LoadVertexFactoryInputForHGS@@YA?AUFVertexFactoryInput@@IH@Z"}
!112 = !{!113, !115, !85, !87, !89, !90}
!113 = distinct !{!113, !114, !"\01?internal.GetInstanceSceneData@@YA?AUFInstanceSceneData@@II_N@Z: %agg.result"}
!114 = distinct !{!114, !"\01?internal.GetInstanceSceneData@@YA?AUFInstanceSceneData@@II_N@Z"}
!115 = distinct !{!115, !116, !"\01?internal.GetSceneDataIntermediates@@YA?AUFSceneDataIntermediates@@II@Z: %agg.result"}
!116 = distinct !{!116, !"\01?internal.GetSceneDataIntermediates@@YA?AUFSceneDataIntermediates@@II@Z"}
!117 = !{!118, !99, !101, !102, !103}
!118 = distinct !{!118, !119, !"\01?internal.GetVolumetricLightmapSH3@@YA?AUFThreeBandSHVectorRGB@@V?$vector@M$02@@@Z: %agg.result"}
!119 = distinct !{!119, !"\01?internal.GetVolumetricLightmapSH3@@YA?AUFThreeBandSHVectorRGB@@V?$vector@M$02@@@Z"}
!120 = !{!121, !123, !124, !125, !118, !99, !101, !102, !103}
!121 = distinct !{!121, !122, !"\01?internal.GetVolumetricLightmapSHCoefficients0@@YAXV?$vector@M$02@@AIAV1@AIAV?$vector@M$03@@22@Z: %AmbientVector"}
!122 = distinct !{!122, !"\01?internal.GetVolumetricLightmapSHCoefficients0@@YAXV?$vector@M$02@@AIAV1@AIAV?$vector@M$03@@22@Z"}
!123 = distinct !{!123, !122, !"\01?internal.GetVolumetricLightmapSHCoefficients0@@YAXV?$vector@M$02@@AIAV1@AIAV?$vector@M$03@@22@Z: %SHCoefficients0Red"}
!124 = distinct !{!124, !122, !"\01?internal.GetVolumetricLightmapSHCoefficients0@@YAXV?$vector@M$02@@AIAV1@AIAV?$vector@M$03@@22@Z: %SHCoefficients0Green"}
!125 = distinct !{!125, !122, !"\01?internal.GetVolumetricLightmapSHCoefficients0@@YAXV?$vector@M$02@@AIAV1@AIAV?$vector@M$03@@22@Z: %SHCoefficients0Blue"}
!126 = !{!103}
!127 = !{!128, !128, i64 0}
!128 = !{!"float", !129, i64 0}
!129 = !{!"omnipotent char", !130, i64 0}
!130 = !{!"Simple C/C++ TBAA"}
!131 = !{!132, !132, i64 0}
!132 = !{!"int", !129, i64 0}
!133 = !{!134}
!134 = distinct !{!134, !135, !"\01?internal.LoadVertexFactoryInputForHGS@@YA?AUFVertexFactoryInput@@IH@Z: %agg.result"}
!135 = distinct !{!135, !"\01?internal.LoadVertexFactoryInputForHGS@@YA?AUFVertexFactoryInput@@IH@Z"}
!136 = distinct !{!136, !"dx.controlflow.hints", i32 1}
!137 = !{!138}
!138 = distinct !{!138, !139, !"\01?internal.GetVertexFactoryIntermediates@@YA?AUFVertexFactoryIntermediates@@UFVertexFactoryInput@@@Z: %agg.result"}
!139 = distinct !{!139, !"\01?internal.GetVertexFactoryIntermediates@@YA?AUFVertexFactoryIntermediates@@UFVertexFactoryInput@@@Z"}
!140 = !{!141}
!141 = distinct !{!141, !142, !"\01?internal.GetRayCone@FPackedMaterialClosestHitPayload@@QAA?AUFRayCone@@XZ: %agg.result"}
!142 = distinct !{!142, !"\01?internal.GetRayCone@FPackedMaterialClosestHitPayload@@QAA?AUFRayCone@@XZ"}
!143 = !{!87, !89, !90}
!144 = !{!110, !87, !89, !90}
!145 = distinct !{!145, !"dx.controlflow.hints", i32 1}
