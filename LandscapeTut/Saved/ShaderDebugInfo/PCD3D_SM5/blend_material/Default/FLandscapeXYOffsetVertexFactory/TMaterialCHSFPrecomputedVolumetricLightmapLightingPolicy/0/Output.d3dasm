; shader hash: 24327076604b36d10b94026f2cdca53a
;
; Buffer Definitions:
;
; cbuffer UniformBufferConstants_View
; {
;
;   struct UniformBufferConstants_View
;   {
;
;       row_major float4x4 View_TranslatedWorldToClip;; Offset:    0
;       row_major float4x4 View_TranslatedWorldToSubpixelClip;; Offset:   64
;       row_major float4x4 View_RelativeWorldToClip;  ; Offset:  128
;       row_major float4x4 View_ClipToRelativeWorld;  ; Offset:  192
;       row_major float4x4 View_TranslatedWorldToView;; Offset:  256
;       row_major float4x4 View_ViewToTranslatedWorld;; Offset:  320
;       row_major float4x4 View_TranslatedWorldToCameraView;; Offset:  384
;       row_major float4x4 View_CameraViewToTranslatedWorld;; Offset:  448
;       row_major float4x4 View_ViewToClip;           ; Offset:  512
;       row_major float4x4 View_ViewToClipNoAA;       ; Offset:  576
;       row_major float4x4 View_ClipToView;           ; Offset:  640
;       row_major float4x4 View_ClipToTranslatedWorld;; Offset:  704
;       row_major float4x4 View_SVPositionToTranslatedWorld;; Offset:  768
;       row_major float4x4 View_ScreenToRelativeWorld;; Offset:  832
;       row_major float4x4 View_ScreenToTranslatedWorld;; Offset:  896
;       row_major float4x4 View_MobileMultiviewShadowTransform;; Offset:  960
;       float3 View_ViewTilePosition;                 ; Offset: 1024
;       float PrePadding_View_1036;                   ; Offset: 1036
;       float3 View_MatrixTilePosition;               ; Offset: 1040
;       float PrePadding_View_1052;                   ; Offset: 1052
;       float3 View_ViewForward;                      ; Offset: 1056
;       float PrePadding_View_1068;                   ; Offset: 1068
;       float3 View_ViewUp;                           ; Offset: 1072
;       float PrePadding_View_1084;                   ; Offset: 1084
;       float3 View_ViewRight;                        ; Offset: 1088
;       float PrePadding_View_1100;                   ; Offset: 1100
;       float3 View_HMDViewNoRollUp;                  ; Offset: 1104
;       float PrePadding_View_1116;                   ; Offset: 1116
;       float3 View_HMDViewNoRollRight;               ; Offset: 1120
;       float PrePadding_View_1132;                   ; Offset: 1132
;       float4 View_InvDeviceZToWorldZTransform;      ; Offset: 1136
;       float4 View_ScreenPositionScaleBias;          ; Offset: 1152
;       float3 View_RelativeWorldCameraOrigin;        ; Offset: 1168
;       float PrePadding_View_1180;                   ; Offset: 1180
;       float3 View_TranslatedWorldCameraOrigin;      ; Offset: 1184
;       float PrePadding_View_1196;                   ; Offset: 1196
;       float3 View_RelativeWorldViewOrigin;          ; Offset: 1200
;       float PrePadding_View_1212;                   ; Offset: 1212
;       float3 View_RelativePreViewTranslation;       ; Offset: 1216
;       float PrePadding_View_1228;                   ; Offset: 1228
;       row_major float4x4 View_PrevViewToClip;       ; Offset: 1232
;       row_major float4x4 View_PrevClipToView;       ; Offset: 1296
;       row_major float4x4 View_PrevTranslatedWorldToClip;; Offset: 1360
;       row_major float4x4 View_PrevTranslatedWorldToView;; Offset: 1424
;       row_major float4x4 View_PrevViewToTranslatedWorld;; Offset: 1488
;       row_major float4x4 View_PrevTranslatedWorldToCameraView;; Offset: 1552
;       row_major float4x4 View_PrevCameraViewToTranslatedWorld;; Offset: 1616
;       float3 View_PrevTranslatedWorldCameraOrigin;  ; Offset: 1680
;       float PrePadding_View_1692;                   ; Offset: 1692
;       float3 View_PrevRelativeWorldCameraOrigin;    ; Offset: 1696
;       float PrePadding_View_1708;                   ; Offset: 1708
;       float3 View_PrevRelativeWorldViewOrigin;      ; Offset: 1712
;       float PrePadding_View_1724;                   ; Offset: 1724
;       float3 View_RelativePrevPreViewTranslation;   ; Offset: 1728
;       float PrePadding_View_1740;                   ; Offset: 1740
;       row_major float4x4 View_PrevClipToRelativeWorld;; Offset: 1744
;       row_major float4x4 View_PrevScreenToTranslatedWorld;; Offset: 1808
;       row_major float4x4 View_ClipToPrevClip;       ; Offset: 1872
;       row_major float4x4 View_ClipToPrevClipWithAA; ; Offset: 1936
;       float4 View_TemporalAAJitter;                 ; Offset: 2000
;       float4 View_GlobalClippingPlane;              ; Offset: 2016
;       float2 View_FieldOfViewWideAngles;            ; Offset: 2032
;       float2 View_PrevFieldOfViewWideAngles;        ; Offset: 2040
;       float4 View_ViewRectMin;                      ; Offset: 2048
;       float4 View_ViewSizeAndInvSize;               ; Offset: 2064
;       uint4 View_ViewRectMinAndSize;                ; Offset: 2080
;       float4 View_LightProbeSizeRatioAndInvSizeRatio;; Offset: 2096
;       float4 View_BufferSizeAndInvSize;             ; Offset: 2112
;       float4 View_BufferBilinearUVMinMax;           ; Offset: 2128
;       float4 View_ScreenToViewSpace;                ; Offset: 2144
;       float2 View_BufferToSceneTextureScale;        ; Offset: 2160
;       float2 View_ResolutionFractionAndInv;         ; Offset: 2168
;       int View_NumSceneColorMSAASamples;            ; Offset: 2176
;       float View_SeparateWaterMainDirLightLuminance;; Offset: 2180
;       float View_PreExposure;                       ; Offset: 2184
;       float View_OneOverPreExposure;                ; Offset: 2188
;       float4 View_DiffuseOverrideParameter;         ; Offset: 2192
;       float4 View_SpecularOverrideParameter;        ; Offset: 2208
;       float4 View_NormalOverrideParameter;          ; Offset: 2224
;       float2 View_RoughnessOverrideParameter;       ; Offset: 2240
;       float View_PrevFrameGameTime;                 ; Offset: 2248
;       float View_PrevFrameRealTime;                 ; Offset: 2252
;       float View_OutOfBoundsMask;                   ; Offset: 2256
;       float PrePadding_View_2260;                   ; Offset: 2260
;       float PrePadding_View_2264;                   ; Offset: 2264
;       float PrePadding_View_2268;                   ; Offset: 2268
;       float3 View_WorldCameraMovementSinceLastFrame;; Offset: 2272
;       float View_CullingSign;                       ; Offset: 2284
;       float View_NearPlane;                         ; Offset: 2288
;       float View_GameTime;                          ; Offset: 2292
;       float View_RealTime;                          ; Offset: 2296
;       float View_DeltaTime;                         ; Offset: 2300
;       float View_MaterialTextureMipBias;            ; Offset: 2304
;       float View_MaterialTextureDerivativeMultiply; ; Offset: 2308
;       uint View_Random;                             ; Offset: 2312
;       uint View_FrameNumber;                        ; Offset: 2316
;       uint View_StateFrameIndexMod8;                ; Offset: 2320
;       uint View_StateFrameIndex;                    ; Offset: 2324
;       uint View_DebugViewModeMask;                  ; Offset: 2328
;       float View_CameraCut;                         ; Offset: 2332
;       float View_UnlitViewmodeMask;                 ; Offset: 2336
;       float PrePadding_View_2340;                   ; Offset: 2340
;       float PrePadding_View_2344;                   ; Offset: 2344
;       float PrePadding_View_2348;                   ; Offset: 2348
;       float4 View_DirectionalLightColor;            ; Offset: 2352
;       float3 View_DirectionalLightDirection;        ; Offset: 2368
;       float PrePadding_View_2380;                   ; Offset: 2380
;       float4 View_TranslucencyLightingVolumeMin[2]; ; Offset: 2384
;       float4 View_TranslucencyLightingVolumeInvSize[2];; Offset: 2416
;       float4 View_TemporalAAParams;                 ; Offset: 2448
;       float4 View_CircleDOFParams;                  ; Offset: 2464
;       float View_DepthOfFieldSensorWidth;           ; Offset: 2480
;       float View_DepthOfFieldFocalDistance;         ; Offset: 2484
;       float View_DepthOfFieldScale;                 ; Offset: 2488
;       float View_DepthOfFieldFocalLength;           ; Offset: 2492
;       float View_DepthOfFieldFocalRegion;           ; Offset: 2496
;       float View_DepthOfFieldNearTransitionRegion;  ; Offset: 2500
;       float View_DepthOfFieldFarTransitionRegion;   ; Offset: 2504
;       float View_MotionBlurNormalizedToPixel;       ; Offset: 2508
;       float View_GeneralPurposeTweak;               ; Offset: 2512
;       float View_GeneralPurposeTweak2;              ; Offset: 2516
;       float View_DemosaicVposOffset;                ; Offset: 2520
;       float View_DecalDepthBias;                    ; Offset: 2524
;       float3 View_IndirectLightingColorScale;       ; Offset: 2528
;       float PrePadding_View_2540;                   ; Offset: 2540
;       float3 View_PrecomputedIndirectLightingColorScale;; Offset: 2544
;       float PrePadding_View_2556;                   ; Offset: 2556
;       float3 View_PrecomputedIndirectSpecularColorScale;; Offset: 2560
;       float PrePadding_View_2572;                   ; Offset: 2572
;       float4 View_AtmosphereLightDirection[2];      ; Offset: 2576
;       float4 View_AtmosphereLightIlluminanceOnGroundPostTransmittance[2];; Offset: 2608
;       float4 View_AtmosphereLightIlluminanceOuterSpace[2];; Offset: 2640
;       float4 View_AtmosphereLightDiscLuminance[2];  ; Offset: 2672
;       float4 View_AtmosphereLightDiscCosHalfApexAngle_PPTrans[2];; Offset: 2704
;       float4 View_SkyViewLutSizeAndInvSize;         ; Offset: 2736
;       float3 View_SkyCameraTranslatedWorldOrigin;   ; Offset: 2752
;       float PrePadding_View_2764;                   ; Offset: 2764
;       float4 View_SkyPlanetTranslatedWorldCenterAndViewHeight;; Offset: 2768
;       row_major float4x4 View_SkyViewLutReferential;; Offset: 2784
;       float4 View_SkyAtmosphereSkyLuminanceFactor;  ; Offset: 2848
;       float View_SkyAtmospherePresentInScene;       ; Offset: 2864
;       float View_SkyAtmosphereHeightFogContribution;; Offset: 2868
;       float View_SkyAtmosphereBottomRadiusKm;       ; Offset: 2872
;       float View_SkyAtmosphereTopRadiusKm;          ; Offset: 2876
;       float4 View_SkyAtmosphereCameraAerialPerspectiveVolumeSizeAndInvSize;; Offset: 2880
;       float View_SkyAtmosphereAerialPerspectiveStartDepthKm;; Offset: 2896
;       float View_SkyAtmosphereCameraAerialPerspectiveVolumeDepthResolution;; Offset: 2900
;       float View_SkyAtmosphereCameraAerialPerspectiveVolumeDepthResolutionInv;; Offset: 2904
;       float View_SkyAtmosphereCameraAerialPerspectiveVolumeDepthSliceLengthKm;; Offset: 2908
;       float View_SkyAtmosphereCameraAerialPerspectiveVolumeDepthSliceLengthKmInv;; Offset: 2912
;       float View_SkyAtmosphereApplyCameraAerialPerspectiveVolume;; Offset: 2916
;       float PrePadding_View_2920;                   ; Offset: 2920
;       float PrePadding_View_2924;                   ; Offset: 2924
;       float3 View_NormalCurvatureToRoughnessScaleBias;; Offset: 2928
;       float View_RenderingReflectionCaptureMask;    ; Offset: 2940
;       float View_RealTimeReflectionCapture;         ; Offset: 2944
;       float View_RealTimeReflectionCapturePreExposure;; Offset: 2948
;       float PrePadding_View_2952;                   ; Offset: 2952
;       float PrePadding_View_2956;                   ; Offset: 2956
;       float4 View_AmbientCubemapTint;               ; Offset: 2960
;       float View_AmbientCubemapIntensity;           ; Offset: 2976
;       float View_SkyLightApplyPrecomputedBentNormalShadowingFlag;; Offset: 2980
;       float View_SkyLightAffectReflectionFlag;      ; Offset: 2984
;       float View_SkyLightAffectGlobalIlluminationFlag;; Offset: 2988
;       float4 View_SkyLightColor;                    ; Offset: 2992
;       float4 View_MobileSkyIrradianceEnvironmentMap[8];; Offset: 3008
;       float View_MobilePreviewMode;                 ; Offset: 3136
;       float View_HMDEyePaddingOffset;               ; Offset: 3140
;       float View_ReflectionCubemapMaxMip;           ; Offset: 3144
;       float View_ShowDecalsMask;                    ; Offset: 3148
;       uint View_DistanceFieldAOSpecularOcclusionMode;; Offset: 3152
;       float View_IndirectCapsuleSelfShadowingIntensity;; Offset: 3156
;       float PrePadding_View_3160;                   ; Offset: 3160
;       float PrePadding_View_3164;                   ; Offset: 3164
;       float3 View_ReflectionEnvironmentRoughnessMixingScaleBiasAndLargestWeight;; Offset: 3168
;       int View_StereoPassIndex;                     ; Offset: 3180
;       float4 View_GlobalVolumeCenterAndExtent[6];   ; Offset: 3184
;       float4 View_GlobalVolumeWorldToUVAddAndMul[6];; Offset: 3280
;       float4 View_GlobalDistanceFieldMipWorldToUVScale[6];; Offset: 3376
;       float4 View_GlobalDistanceFieldMipWorldToUVBias[6];; Offset: 3472
;       float View_GlobalDistanceFieldMipFactor;      ; Offset: 3568
;       float View_GlobalDistanceFieldMipTransition;  ; Offset: 3572
;       int View_GlobalDistanceFieldClipmapSizeInPages;; Offset: 3576
;       int PrePadding_View_3580;                     ; Offset: 3580
;       float3 View_GlobalDistanceFieldInvPageAtlasSize;; Offset: 3584
;       float PrePadding_View_3596;                   ; Offset: 3596
;       float3 View_GlobalDistanceFieldInvCoverageAtlasSize;; Offset: 3600
;       float View_GlobalVolumeDimension;             ; Offset: 3612
;       float View_GlobalVolumeTexelSize;             ; Offset: 3616
;       float View_MaxGlobalDFAOConeDistance;         ; Offset: 3620
;       uint View_NumGlobalSDFClipmaps;               ; Offset: 3624
;       float View_CoveredExpandSurfaceScale;         ; Offset: 3628
;       float View_NotCoveredExpandSurfaceScale;      ; Offset: 3632
;       float View_NotCoveredMinStepScale;            ; Offset: 3636
;       float View_DitheredTransparencyStepThreshold; ; Offset: 3640
;       float View_DitheredTransparencyTraceThreshold;; Offset: 3644
;       int2 View_CursorPosition;                     ; Offset: 3648
;       float View_bCheckerboardSubsurfaceProfileRendering;; Offset: 3656
;       float PrePadding_View_3660;                   ; Offset: 3660
;       float3 View_VolumetricFogInvGridSize;         ; Offset: 3664
;       float PrePadding_View_3676;                   ; Offset: 3676
;       float3 View_VolumetricFogGridZParams;         ; Offset: 3680
;       float PrePadding_View_3692;                   ; Offset: 3692
;       float2 View_VolumetricFogSVPosToVolumeUV;     ; Offset: 3696
;       float View_VolumetricFogMaxDistance;          ; Offset: 3704
;       float PrePadding_View_3708;                   ; Offset: 3708
;       float3 View_VolumetricLightmapWorldToUVScale; ; Offset: 3712
;       float PrePadding_View_3724;                   ; Offset: 3724
;       float3 View_VolumetricLightmapWorldToUVAdd;   ; Offset: 3728
;       float PrePadding_View_3740;                   ; Offset: 3740
;       float3 View_VolumetricLightmapIndirectionTextureSize;; Offset: 3744
;       float View_VolumetricLightmapBrickSize;       ; Offset: 3756
;       float3 View_VolumetricLightmapBrickTexelSize; ; Offset: 3760
;       float View_IndirectLightingCacheShowFlag;     ; Offset: 3772
;       float View_EyeToPixelSpreadAngle;             ; Offset: 3776
;       float PrePadding_View_3780;                   ; Offset: 3780
;       float PrePadding_View_3784;                   ; Offset: 3784
;       float PrePadding_View_3788;                   ; Offset: 3788
;       float4 View_XRPassthroughCameraUVs[2];        ; Offset: 3792
;       float View_GlobalVirtualTextureMipBias;       ; Offset: 3824
;       uint View_VirtualTextureFeedbackShift;        ; Offset: 3828
;       uint View_VirtualTextureFeedbackMask;         ; Offset: 3832
;       uint View_VirtualTextureFeedbackStride;       ; Offset: 3836
;       uint View_VirtualTextureFeedbackJitterOffset; ; Offset: 3840
;       uint View_VirtualTextureFeedbackSampleOffset; ; Offset: 3844
;       uint PrePadding_View_3848;                    ; Offset: 3848
;       uint PrePadding_View_3852;                    ; Offset: 3852
;       float4 View_RuntimeVirtualTextureMipLevel;    ; Offset: 3856
;       float2 View_RuntimeVirtualTexturePackHeight;  ; Offset: 3872
;       float PrePadding_View_3880;                   ; Offset: 3880
;       float PrePadding_View_3884;                   ; Offset: 3884
;       float4 View_RuntimeVirtualTextureDebugParams; ; Offset: 3888
;       float View_OverrideLandscapeLOD;              ; Offset: 3904
;       int View_FarShadowStaticMeshLODBias;          ; Offset: 3908
;       float View_MinRoughness;                      ; Offset: 3912
;       float PrePadding_View_3916;                   ; Offset: 3916
;       float4 View_HairRenderInfo;                   ; Offset: 3920
;       uint View_EnableSkyLight;                     ; Offset: 3936
;       uint View_HairRenderInfoBits;                 ; Offset: 3940
;       uint View_HairComponents;                     ; Offset: 3944
;       float View_bSubsurfacePostprocessEnabled;     ; Offset: 3948
;       float4 View_SSProfilesTextureSizeAndInvSize;  ; Offset: 3952
;       float4 View_SSProfilesPreIntegratedTextureSizeAndInvSize;; Offset: 3968
;       float3 View_PhysicsFieldClipmapCenter;        ; Offset: 3984
;       float View_PhysicsFieldClipmapDistance;       ; Offset: 3996
;       int View_PhysicsFieldClipmapResolution;       ; Offset: 4000
;       int View_PhysicsFieldClipmapExponent;         ; Offset: 4004
;       int View_PhysicsFieldClipmapCount;            ; Offset: 4008
;       int View_PhysicsFieldTargetCount;             ; Offset: 4012
;       int4 View_PhysicsFieldTargets[32];            ; Offset: 4016
;       uint View_InstanceSceneDataSOAStride;         ; Offset: 4528
;       uint View_GPUSceneViewId;                     ; Offset: 4532
;       float View_ViewResolutionFraction;            ; Offset: 4536
;       float View_SubSurfaceColorAsTransmittanceAtDistanceInMeters;; Offset: 4540
;       uint BindlessSampler_View_MaterialTextureBilinearWrapedSampler;; Offset: 4544
;       uint PrePadding_View_4548;                    ; Offset: 4548
;       uint BindlessSampler_View_MaterialTextureBilinearClampedSampler;; Offset: 4552
;       uint PrePadding_View_4556;                    ; Offset: 4556
;       uint BindlessResource_View_VolumetricLightmapIndirectionTexture;; Offset: 4560
;       uint PrePadding_View_4564;                    ; Offset: 4564
;       uint BindlessResource_View_VolumetricLightmapBrickAmbientVector;; Offset: 4568
;       uint PrePadding_View_4572;                    ; Offset: 4572
;       uint BindlessResource_View_VolumetricLightmapBrickSHCoefficients0;; Offset: 4576
;       uint PrePadding_View_4580;                    ; Offset: 4580
;       uint BindlessResource_View_VolumetricLightmapBrickSHCoefficients1;; Offset: 4584
;       uint PrePadding_View_4588;                    ; Offset: 4588
;       uint BindlessResource_View_VolumetricLightmapBrickSHCoefficients2;; Offset: 4592
;       uint PrePadding_View_4596;                    ; Offset: 4596
;       uint BindlessResource_View_VolumetricLightmapBrickSHCoefficients3;; Offset: 4600
;       uint PrePadding_View_4604;                    ; Offset: 4604
;       uint BindlessResource_View_VolumetricLightmapBrickSHCoefficients4;; Offset: 4608
;       uint PrePadding_View_4612;                    ; Offset: 4612
;       uint BindlessResource_View_VolumetricLightmapBrickSHCoefficients5;; Offset: 4616
;       uint PrePadding_View_4620;                    ; Offset: 4620
;       uint BindlessResource_View_SkyBentNormalBrickTexture;; Offset: 4624
;       uint PrePadding_View_4628;                    ; Offset: 4628
;       uint BindlessResource_View_DirectionalLightShadowingBrickTexture;; Offset: 4632
;       uint PrePadding_View_4636;                    ; Offset: 4636
;       uint BindlessSampler_View_VolumetricLightmapBrickAmbientVectorSampler;; Offset: 4640
;       uint PrePadding_View_4644;                    ; Offset: 4644
;       uint BindlessSampler_View_VolumetricLightmapTextureSampler0;; Offset: 4648
;       uint PrePadding_View_4652;                    ; Offset: 4652
;       uint BindlessSampler_View_VolumetricLightmapTextureSampler1;; Offset: 4656
;       uint PrePadding_View_4660;                    ; Offset: 4660
;       uint BindlessSampler_View_VolumetricLightmapTextureSampler2;; Offset: 4664
;       uint PrePadding_View_4668;                    ; Offset: 4668
;       uint BindlessSampler_View_VolumetricLightmapTextureSampler3;; Offset: 4672
;       uint PrePadding_View_4676;                    ; Offset: 4676
;       uint BindlessSampler_View_VolumetricLightmapTextureSampler4;; Offset: 4680
;       uint PrePadding_View_4684;                    ; Offset: 4684
;       uint BindlessSampler_View_VolumetricLightmapTextureSampler5;; Offset: 4688
;       uint PrePadding_View_4692;                    ; Offset: 4692
;       uint BindlessSampler_View_SkyBentNormalTextureSampler;; Offset: 4696
;       uint PrePadding_View_4700;                    ; Offset: 4700
;       uint BindlessSampler_View_DirectionalLightShadowingTextureSampler;; Offset: 4704
;       uint PrePadding_View_4708;                    ; Offset: 4708
;       uint BindlessResource_View_GlobalDistanceFieldPageAtlasTexture;; Offset: 4712
;       uint PrePadding_View_4716;                    ; Offset: 4716
;       uint BindlessResource_View_GlobalDistanceFieldCoverageAtlasTexture;; Offset: 4720
;       uint PrePadding_View_4724;                    ; Offset: 4724
;       uint BindlessResource_View_GlobalDistanceFieldPageTableTexture;; Offset: 4728
;       uint PrePadding_View_4732;                    ; Offset: 4732
;       uint BindlessResource_View_GlobalDistanceFieldMipTexture;; Offset: 4736
;       uint PrePadding_View_4740;                    ; Offset: 4740
;       uint BindlessResource_View_AtmosphereTransmittanceTexture;; Offset: 4744
;       uint PrePadding_View_4748;                    ; Offset: 4748
;       uint BindlessSampler_View_AtmosphereTransmittanceTextureSampler;; Offset: 4752
;       uint PrePadding_View_4756;                    ; Offset: 4756
;       uint BindlessResource_View_AtmosphereIrradianceTexture;; Offset: 4760
;       uint PrePadding_View_4764;                    ; Offset: 4764
;       uint BindlessSampler_View_AtmosphereIrradianceTextureSampler;; Offset: 4768
;       uint PrePadding_View_4772;                    ; Offset: 4772
;       uint BindlessResource_View_AtmosphereInscatterTexture;; Offset: 4776
;       uint PrePadding_View_4780;                    ; Offset: 4780
;       uint BindlessSampler_View_AtmosphereInscatterTextureSampler;; Offset: 4784
;       uint PrePadding_View_4788;                    ; Offset: 4788
;       uint BindlessResource_View_PerlinNoiseGradientTexture;; Offset: 4792
;       uint PrePadding_View_4796;                    ; Offset: 4796
;       uint BindlessSampler_View_PerlinNoiseGradientTextureSampler;; Offset: 4800
;       uint PrePadding_View_4804;                    ; Offset: 4804
;       uint BindlessResource_View_PerlinNoise3DTexture;; Offset: 4808
;       uint PrePadding_View_4812;                    ; Offset: 4812
;       uint BindlessSampler_View_PerlinNoise3DTextureSampler;; Offset: 4816
;       uint PrePadding_View_4820;                    ; Offset: 4820
;       uint BindlessResource_View_SobolSamplingTexture;; Offset: 4824
;       uint PrePadding_View_4828;                    ; Offset: 4828
;       uint BindlessSampler_View_SharedPointWrappedSampler;; Offset: 4832
;       uint PrePadding_View_4836;                    ; Offset: 4836
;       uint BindlessSampler_View_SharedPointClampedSampler;; Offset: 4840
;       uint PrePadding_View_4844;                    ; Offset: 4844
;       uint BindlessSampler_View_SharedBilinearWrappedSampler;; Offset: 4848
;       uint PrePadding_View_4852;                    ; Offset: 4852
;       uint BindlessSampler_View_SharedBilinearClampedSampler;; Offset: 4856
;       uint PrePadding_View_4860;                    ; Offset: 4860
;       uint BindlessSampler_View_SharedBilinearAnisoClampedSampler;; Offset: 4864
;       uint PrePadding_View_4868;                    ; Offset: 4868
;       uint BindlessSampler_View_SharedTrilinearWrappedSampler;; Offset: 4872
;       uint PrePadding_View_4876;                    ; Offset: 4876
;       uint BindlessSampler_View_SharedTrilinearClampedSampler;; Offset: 4880
;       uint PrePadding_View_4884;                    ; Offset: 4884
;       uint BindlessResource_View_PreIntegratedBRDF; ; Offset: 4888
;       uint PrePadding_View_4892;                    ; Offset: 4892
;       uint BindlessSampler_View_PreIntegratedBRDFSampler;; Offset: 4896
;       uint PrePadding_View_4900;                    ; Offset: 4900
;       uint BindlessResource_View_PrimitiveSceneData;; Offset: 4904
;       uint PrePadding_View_4908;                    ; Offset: 4908
;       uint BindlessResource_View_InstanceSceneData; ; Offset: 4912
;       uint PrePadding_View_4916;                    ; Offset: 4916
;       uint BindlessResource_View_InstancePayloadData;; Offset: 4920
;       uint PrePadding_View_4924;                    ; Offset: 4924
;       uint BindlessResource_View_LightmapSceneData; ; Offset: 4928
;       uint PrePadding_View_4932;                    ; Offset: 4932
;       uint BindlessResource_View_SkyIrradianceEnvironmentMap;; Offset: 4936
;       uint PrePadding_View_4940;                    ; Offset: 4940
;       uint BindlessResource_View_TransmittanceLutTexture;; Offset: 4944
;       uint PrePadding_View_4948;                    ; Offset: 4948
;       uint BindlessSampler_View_TransmittanceLutTextureSampler;; Offset: 4952
;       uint PrePadding_View_4956;                    ; Offset: 4956
;       uint BindlessResource_View_SkyViewLutTexture; ; Offset: 4960
;       uint PrePadding_View_4964;                    ; Offset: 4964
;       uint BindlessSampler_View_SkyViewLutTextureSampler;; Offset: 4968
;       uint PrePadding_View_4972;                    ; Offset: 4972
;       uint BindlessResource_View_DistantSkyLightLutTexture;; Offset: 4976
;       uint PrePadding_View_4980;                    ; Offset: 4980
;       uint BindlessSampler_View_DistantSkyLightLutTextureSampler;; Offset: 4984
;       uint PrePadding_View_4988;                    ; Offset: 4988
;       uint BindlessResource_View_CameraAerialPerspectiveVolume;; Offset: 4992
;       uint PrePadding_View_4996;                    ; Offset: 4996
;       uint BindlessSampler_View_CameraAerialPerspectiveVolumeSampler;; Offset: 5000
;       uint PrePadding_View_5004;                    ; Offset: 5004
;       uint BindlessResource_View_HairScatteringLUTTexture;; Offset: 5008
;       uint PrePadding_View_5012;                    ; Offset: 5012
;       uint BindlessSampler_View_HairScatteringLUTSampler;; Offset: 5016
;       uint PrePadding_View_5020;                    ; Offset: 5020
;       uint BindlessResource_View_LTCMatTexture;     ; Offset: 5024
;       uint PrePadding_View_5028;                    ; Offset: 5028
;       uint BindlessSampler_View_LTCMatSampler;      ; Offset: 5032
;       uint PrePadding_View_5036;                    ; Offset: 5036
;       uint BindlessResource_View_LTCAmpTexture;     ; Offset: 5040
;       uint PrePadding_View_5044;                    ; Offset: 5044
;       uint BindlessSampler_View_LTCAmpSampler;      ; Offset: 5048
;       uint PrePadding_View_5052;                    ; Offset: 5052
;       uint View_bShadingEnergyConservation;         ; Offset: 5056
;       uint View_bShadingEnergyPreservation;         ; Offset: 5060
;       uint BindlessResource_View_ShadingEnergyGGXSpecTexture;; Offset: 5064
;       uint PrePadding_View_5068;                    ; Offset: 5068
;       uint BindlessResource_View_ShadingEnergyGGXGlassTexture;; Offset: 5072
;       uint PrePadding_View_5076;                    ; Offset: 5076
;       uint BindlessResource_View_ShadingEnergyClothSpecTexture;; Offset: 5080
;       uint PrePadding_View_5084;                    ; Offset: 5084
;       uint BindlessResource_View_ShadingEnergyDiffuseTexture;; Offset: 5088
;       uint PrePadding_View_5092;                    ; Offset: 5092
;       uint BindlessSampler_View_ShadingEnergySampler;; Offset: 5096
;       uint PrePadding_View_5100;                    ; Offset: 5100
;       uint BindlessResource_View_SSProfilesTexture; ; Offset: 5104
;       uint PrePadding_View_5108;                    ; Offset: 5108
;       uint BindlessSampler_View_SSProfilesSampler;  ; Offset: 5112
;       uint PrePadding_View_5116;                    ; Offset: 5116
;       uint BindlessSampler_View_SSProfilesTransmissionSampler;; Offset: 5120
;       uint PrePadding_View_5124;                    ; Offset: 5124
;       uint BindlessResource_View_SSProfilesPreIntegratedTexture;; Offset: 5128
;       uint PrePadding_View_5132;                    ; Offset: 5132
;       uint BindlessSampler_View_SSProfilesPreIntegratedSampler;; Offset: 5136
;       uint PrePadding_View_5140;                    ; Offset: 5140
;       uint BindlessResource_View_WaterIndirection;  ; Offset: 5144
;       uint PrePadding_View_5148;                    ; Offset: 5148
;       uint BindlessResource_View_WaterData;         ; Offset: 5152
;       uint PrePadding_View_5156;                    ; Offset: 5156
;       uint PrePadding_View_5160;                    ; Offset: 5160
;       uint PrePadding_View_5164;                    ; Offset: 5164
;       float4 View_RectLightAtlasSizeAndInvSize;     ; Offset: 5168
;       float View_RectLightAtlasMaxMipLevel;         ; Offset: 5184
;       float PrePadding_View_5188;                   ; Offset: 5188
;       uint BindlessResource_View_RectLightAtlasTexture;; Offset: 5192
;       uint PrePadding_View_5196;                    ; Offset: 5196
;       uint BindlessSampler_View_RectLightAtlasSampler;; Offset: 5200
;       uint PrePadding_View_5204;                    ; Offset: 5204
;       uint BindlessSampler_View_LandscapeWeightmapSampler;; Offset: 5208
;       uint PrePadding_View_5212;                    ; Offset: 5212
;       uint BindlessResource_View_LandscapeIndirection;; Offset: 5216
;       uint PrePadding_View_5220;                    ; Offset: 5220
;       uint BindlessResource_View_LandscapePerComponentData;; Offset: 5224
;       uint PrePadding_View_5228;                    ; Offset: 5228
;       uint BindlessResource_View_VTFeedbackBuffer;  ; Offset: 5232
;       uint PrePadding_View_5236;                    ; Offset: 5236
;       uint BindlessResource_View_EditorVisualizeLevelInstanceIds;; Offset: 5240
;       uint PrePadding_View_5244;                    ; Offset: 5244
;       uint BindlessResource_View_EditorSelectedHitProxyIds;; Offset: 5248
;       uint PrePadding_View_5252;                    ; Offset: 5252
;       uint BindlessResource_View_PhysicsFieldClipmapBuffer;; Offset: 5256
;       uint PrePadding_View_5260;                    ; Offset: 5260
;       float3 View_TLASRelativePreViewTranslation;   ; Offset: 5264
;       float PrePadding_View_5276;                   ; Offset: 5276
;       float3 View_TLASViewTilePosition;             ; Offset: 5280
;   
;   } UniformBufferConstants_View;                    ; Offset:    0 Size:  5292
;
; }
;
; cbuffer UniformBufferConstants_LandscapeMVF
; {
;
;   struct UniformBufferConstants_LandscapeMVF
;   {
;
;       int2 LandscapeMVF_SubXY;                      ; Offset:    0
;   
;   } UniformBufferConstants_LandscapeMVF;            ; Offset:    0 Size:     8
;
; }
;
; cbuffer UniformBufferConstants_LandscapeContinuousLODParameters
; {
;
;   struct UniformBufferConstants_LandscapeContinuousLODParameters
;   {
;
;       int LandscapeContinuousLODParameters_LandscapeIndex;; Offset:    0
;       int PrePadding_LandscapeContinuousLODParameters_4;; Offset:    4
;       int2 LandscapeContinuousLODParameters_Min;    ; Offset:    8
;       int2 LandscapeContinuousLODParameters_Size;   ; Offset:   16
;       uint BindlessResource_LandscapeContinuousLODParameters_SectionLODBias;; Offset:   24
;   
;   } UniformBufferConstants_LandscapeContinuousLODParameters;; Offset:    0 Size:    28
;
; }
;
; cbuffer UniformBufferConstants_LandscapeParameters
; {
;
;   struct UniformBufferConstants_LandscapeParameters
;   {
;
;       int LandscapeParameters_ComponentBaseX;       ; Offset:    0
;       int LandscapeParameters_ComponentBaseY;       ; Offset:    4
;       int LandscapeParameters_SubsectionSizeVerts;  ; Offset:    8
;       int LandscapeParameters_NumSubsections;       ; Offset:   12
;       int LandscapeParameters_LastLOD;              ; Offset:   16
;       int PrePadding_LandscapeParameters_20;        ; Offset:   20
;       int PrePadding_LandscapeParameters_24;        ; Offset:   24
;       int PrePadding_LandscapeParameters_28;        ; Offset:   28
;       float4 LandscapeParameters_HeightmapUVScaleBias;; Offset:   32
;       float4 LandscapeParameters_WeightmapUVScaleBias;; Offset:   48
;       float4 LandscapeParameters_LandscapeLightmapScaleBias;; Offset:   64
;       float4 LandscapeParameters_SubsectionSizeVertsLayerUVPan;; Offset:   80
;       float4 LandscapeParameters_SubsectionOffsetParams;; Offset:   96
;       float4 LandscapeParameters_LightmapSubsectionOffsetParams;; Offset:  112
;       row_major float4x4 LandscapeParameters_LocalToWorldNoScaling;; Offset:  128
;       uint BindlessResource_LandscapeParameters_HeightmapTexture;; Offset:  192
;       uint PrePadding_LandscapeParameters_196;      ; Offset:  196
;       uint BindlessSampler_LandscapeParameters_HeightmapTextureSampler;; Offset:  200
;       uint PrePadding_LandscapeParameters_204;      ; Offset:  204
;       uint BindlessResource_LandscapeParameters_NormalmapTexture;; Offset:  208
;       uint PrePadding_LandscapeParameters_212;      ; Offset:  212
;       uint BindlessSampler_LandscapeParameters_NormalmapTextureSampler;; Offset:  216
;       uint PrePadding_LandscapeParameters_220;      ; Offset:  220
;       uint BindlessResource_LandscapeParameters_XYOffsetmapTexture;; Offset:  224
;       uint PrePadding_LandscapeParameters_228;      ; Offset:  228
;       uint BindlessSampler_LandscapeParameters_XYOffsetmapTextureSampler;; Offset:  232
;   
;   } UniformBufferConstants_LandscapeParameters;     ; Offset:    0 Size:   236
;
; }
;
; cbuffer UniformBufferConstants_Material
; {
;
;   struct UniformBufferConstants_Material
;   {
;
;       float4 Material_PreshaderBuffer[7];           ; Offset:    0
;       uint BindlessResource_Material_Texture2D_0;   ; Offset:  112
;       uint PrePadding_Material_116;                 ; Offset:  116
;       uint BindlessSampler_Material_Texture2D_0Sampler;; Offset:  120
;       uint PrePadding_Material_124;                 ; Offset:  124
;       uint BindlessResource_Material_Texture2D_1;   ; Offset:  128
;       uint PrePadding_Material_132;                 ; Offset:  132
;       uint BindlessSampler_Material_Texture2D_1Sampler;; Offset:  136
;       uint PrePadding_Material_140;                 ; Offset:  140
;       uint BindlessResource_Material_Texture2D_2;   ; Offset:  144
;       uint PrePadding_Material_148;                 ; Offset:  148
;       uint BindlessSampler_Material_Texture2D_2Sampler;; Offset:  152
;       uint PrePadding_Material_156;                 ; Offset:  156
;       uint BindlessResource_Material_Texture2D_3;   ; Offset:  160
;       uint PrePadding_Material_164;                 ; Offset:  164
;       uint BindlessSampler_Material_Texture2D_3Sampler;; Offset:  168
;       uint PrePadding_Material_172;                 ; Offset:  172
;       uint BindlessResource_Material_Texture2D_4;   ; Offset:  176
;       uint PrePadding_Material_180;                 ; Offset:  180
;       uint BindlessSampler_Material_Texture2D_4Sampler;; Offset:  184
;       uint PrePadding_Material_188;                 ; Offset:  188
;       uint BindlessResource_Material_Texture2D_5;   ; Offset:  192
;       uint PrePadding_Material_196;                 ; Offset:  196
;       uint BindlessSampler_Material_Texture2D_5Sampler;; Offset:  200
;       uint PrePadding_Material_204;                 ; Offset:  204
;       uint BindlessResource_Material_Texture2D_6;   ; Offset:  208
;       uint PrePadding_Material_212;                 ; Offset:  212
;       uint BindlessSampler_Material_Texture2D_6Sampler;; Offset:  216
;       uint PrePadding_Material_220;                 ; Offset:  220
;       uint BindlessResource_Material_Texture2D_7;   ; Offset:  224
;       uint PrePadding_Material_228;                 ; Offset:  228
;       uint BindlessSampler_Material_Texture2D_7Sampler;; Offset:  232
;       uint PrePadding_Material_236;                 ; Offset:  236
;       uint BindlessResource_Material_Texture2D_8;   ; Offset:  240
;       uint PrePadding_Material_244;                 ; Offset:  244
;       uint BindlessSampler_Material_Texture2D_8Sampler;; Offset:  248
;       uint PrePadding_Material_252;                 ; Offset:  252
;       uint BindlessResource_Material_Texture2D_9;   ; Offset:  256
;       uint PrePadding_Material_260;                 ; Offset:  260
;       uint BindlessSampler_Material_Texture2D_9Sampler;; Offset:  264
;       uint PrePadding_Material_268;                 ; Offset:  268
;       uint BindlessResource_Material_Texture2D_10;  ; Offset:  272
;       uint PrePadding_Material_276;                 ; Offset:  276
;       uint BindlessSampler_Material_Texture2D_10Sampler;; Offset:  280
;       uint PrePadding_Material_284;                 ; Offset:  284
;       uint BindlessResource_Material_Texture2D_11;  ; Offset:  288
;       uint PrePadding_Material_292;                 ; Offset:  292
;       uint BindlessSampler_Material_Texture2D_11Sampler;; Offset:  296
;       uint PrePadding_Material_300;                 ; Offset:  300
;       uint BindlessResource_Material_Texture2D_12;  ; Offset:  304
;       uint PrePadding_Material_308;                 ; Offset:  308
;       uint BindlessSampler_Material_Texture2D_12Sampler;; Offset:  312
;       uint PrePadding_Material_316;                 ; Offset:  316
;       uint BindlessSampler_Material_Wrap_WorldGroupSettings;; Offset:  320
;       uint PrePadding_Material_324;                 ; Offset:  324
;       uint BindlessSampler_Material_Clamp_WorldGroupSettings;; Offset:  328
;   
;   } UniformBufferConstants_Material;                ; Offset:    0 Size:   332
;
; }
;
; cbuffer HitGroupSystemRootConstants
; {
;
;   struct HitGroupSystemRootConstants
;   {
;
;       struct struct.FHitGroupSystemRootConstants
;       {
;
;           uint Config;                              ; Offset:    0
;           uint IndexBufferOffsetInBytes;            ; Offset:    4
;           uint FirstPrimitive;                      ; Offset:    8
;           uint UserData;                            ; Offset:   12
;           uint BaseInstanceIndex;                   ; Offset:   16
;           uint Pad0;                                ; Offset:   20
;       
;       } HitGroupSystemRootConstants;                ; Offset:    0
;
;   
;   } HitGroupSystemRootConstants;                    ; Offset:    0 Size:    24
;
; }
;
; Resource bind info for View_PrimitiveSceneData
; {
;
;   float4 $Element;                                  ; Offset:    0 Size:    16
;
; }
;
; Resource bind info for View_InstanceSceneData
; {
;
;   float4 $Element;                                  ; Offset:    0 Size:    16
;
; }
;
; Resource bind info for View_SkyIrradianceEnvironmentMap
; {
;
;   float4 $Element;                                  ; Offset:    0 Size:    16
;
; }
;
;
; Resource Bindings:
;
; Name                                 Type  Format         Dim      ID      HLSL Bind  Count
; ------------------------------ ---------- ------- ----------- ------- -------------- ------
; UniformBufferConstants_View       cbuffer      NA          NA     CB0            cb0     1
; UniformBufferConstants_LandscapeMVF   cbuffer      NA          NA     CB1            cb1     1
; UniformBufferConstants_LandscapeContinuousLODParameters   cbuffer      NA          NA     CB2            cb2     1
; UniformBufferConstants_LandscapeParameters   cbuffer      NA          NA     CB3            cb3     1
; UniformBufferConstants_Material   cbuffer      NA          NA     CB4            cb4     1
; HitGroupSystemRootConstants       cbuffer      NA          NA     CB5     cb0,space2     1
; View_SharedBilinearClampedSampler   sampler      NA          NA      S0             s0     1
; View_LandscapeWeightmapSampler    sampler      NA          NA      S1             s1     1
; LandscapeParameters_HeightmapTextureSampler   sampler      NA          NA      S2             s2     1
; LandscapeParameters_NormalmapTextureSampler   sampler      NA          NA      S3             s3     1
; LandscapeParameters_XYOffsetmapTextureSampler   sampler      NA          NA      S4             s4     1
; Material_Texture2D_1Sampler       sampler      NA          NA      S5             s5     1
; Material_Texture2D_2Sampler       sampler      NA          NA      S6             s6     1
; Material_Texture2D_3Sampler       sampler      NA          NA      S7             s7     1
; Material_Texture2D_4Sampler       sampler      NA          NA      S8             s8     1
; Material_Texture2D_5Sampler       sampler      NA          NA      S9             s9     1
; Material_Texture2D_6Sampler       sampler      NA          NA     S10            s10     1
; Material_Texture2D_7Sampler       sampler      NA          NA     S11            s11     1
; Material_Texture2D_8Sampler       sampler      NA          NA     S12            s12     1
; Material_Texture2D_9Sampler       sampler      NA          NA     S13            s13     1
; Material_Texture2D_10Sampler      sampler      NA          NA     S14            s14     1
; Material_Texture2D_11Sampler      sampler      NA          NA     S15            s15     1
; Material_Texture2D_12Sampler      sampler      NA          NA     S16            s16     1
; View_VolumetricLightmapIndirectionTexture   texture     u32          3d      T0             t0     1
; View_VolumetricLightmapBrickAmbientVector   texture     f32          3d      T1             t1     1
; View_VolumetricLightmapBrickSHCoefficients0   texture     f32          3d      T2             t2     1
; View_VolumetricLightmapBrickSHCoefficients1   texture     f32          3d      T3             t3     1
; View_VolumetricLightmapBrickSHCoefficients2   texture     f32          3d      T4             t4     1
; View_VolumetricLightmapBrickSHCoefficients3   texture     f32          3d      T5             t5     1
; View_VolumetricLightmapBrickSHCoefficients4   texture     f32          3d      T6             t6     1
; View_VolumetricLightmapBrickSHCoefficients5   texture     f32          3d      T7             t7     1
; View_SkyBentNormalBrickTexture    texture     f32          3d      T8             t8     1
; View_PrimitiveSceneData           texture  struct         r/o      T9             t9     1
; View_InstanceSceneData            texture  struct         r/o     T10            t10     1
; View_SkyIrradianceEnvironmentMap   texture  struct         r/o     T11            t11     1
; View_LandscapeIndirection         texture     u32         buf     T12            t12     1
; View_LandscapePerComponentData    texture     f32         buf     T13            t13     1
; LandscapeContinuousLODParameters_SectionLODBias   texture     f32         buf     T14            t14     1
; LandscapeParameters_HeightmapTexture   texture     f32          2d     T15            t15     1
; LandscapeParameters_NormalmapTexture   texture     f32          2d     T16            t16     1
; LandscapeParameters_XYOffsetmapTexture   texture     f32          2d     T17            t17     1
; Material_Texture2D_0              texture     f32          2d     T18            t18     1
; Material_Texture2D_1              texture     f32          2d     T19            t19     1
; Material_Texture2D_2              texture     f32          2d     T20            t20     1
; Material_Texture2D_3              texture     f32          2d     T21            t21     1
; Material_Texture2D_4              texture     f32          2d     T22            t22     1
; Material_Texture2D_5              texture     f32          2d     T23            t23     1
; Material_Texture2D_6              texture     f32          2d     T24            t24     1
; Material_Texture2D_7              texture     f32          2d     T25            t25     1
; Material_Texture2D_8              texture     f32          2d     T26            t26     1
; Material_Texture2D_9              texture     f32          2d     T27            t27     1
; Material_Texture2D_10             texture     f32          2d     T28            t28     1
; Material_Texture2D_11             texture     f32          2d     T29            t29     1
; Material_Texture2D_12             texture     f32          2d     T30            t30     1
; HitGroupSystemIndexBuffer         texture    byte         r/o     T31      t0,space2     1
;
target datalayout = "e-m:e-p:32:32-i1:32-i8:8-i16:16-i32:32-i64:64-f16:16-f32:32-f64:64-n8:16:32:64"
target triple = "dxil-ms-dx"

%dx.types.Handle = type { i8* }
%struct.FPackedMaterialClosestHitPayload = type { %struct.FMinimalPayload, i32, float, [3 x i32], [2 x i32], i32, i32, [2 x i32], i32, [2 x i32], i32 }
%struct.FMinimalPayload = type { float }
%struct.FRayTracingIntersectionAttributes = type { <2 x i32> }
%dx.types.ResourceProperties = type { i32, i32 }
%dx.types.CBufRet.i32 = type { i32, i32, i32, i32 }
%dx.types.ResRet.i32 = type { i32, i32, i32, i32, i32 }
%dx.types.CBufRet.f32 = type { float, float, float, float }
%dx.types.ResRet.f32 = type { float, float, float, float, i32 }
%"class.Texture3D<vector<unsigned int, 4> >" = type { <4 x i32>, %"class.Texture3D<vector<unsigned int, 4> >::mips_type" }
%"class.Texture3D<vector<unsigned int, 4> >::mips_type" = type { i32 }
%"class.Texture3D<vector<float, 4> >" = type { <4 x float>, %"class.Texture3D<vector<float, 4> >::mips_type" }
%"class.Texture3D<vector<float, 4> >::mips_type" = type { i32 }
%"class.StructuredBuffer<vector<float, 4> >" = type { <4 x float> }
%"class.Buffer<unsigned int>" = type { i32 }
%"class.Buffer<float>" = type { float }
%"class.Texture2D<vector<float, 4> >" = type { <4 x float>, %"class.Texture2D<vector<float, 4> >::mips_type" }
%"class.Texture2D<vector<float, 4> >::mips_type" = type { i32 }
%struct.ByteAddressBuffer = type { i32 }
%UniformBufferConstants_View = type { %class.matrix.float.4.4, %class.matrix.float.4.4, %class.matrix.float.4.4, %class.matrix.float.4.4, %class.matrix.float.4.4, %class.matrix.float.4.4, %class.matrix.float.4.4, %class.matrix.float.4.4, %class.matrix.float.4.4, %class.matrix.float.4.4, %class.matrix.float.4.4, %class.matrix.float.4.4, %class.matrix.float.4.4, %class.matrix.float.4.4, %class.matrix.float.4.4, %class.matrix.float.4.4, <3 x float>, float, <3 x float>, float, <3 x float>, float, <3 x float>, float, <3 x float>, float, <3 x float>, float, <3 x float>, float, <4 x float>, <4 x float>, <3 x float>, float, <3 x float>, float, <3 x float>, float, <3 x float>, float, %class.matrix.float.4.4, %class.matrix.float.4.4, %class.matrix.float.4.4, %class.matrix.float.4.4, %class.matrix.float.4.4, %class.matrix.float.4.4, %class.matrix.float.4.4, <3 x float>, float, <3 x float>, float, <3 x float>, float, <3 x float>, float, %class.matrix.float.4.4, %class.matrix.float.4.4, %class.matrix.float.4.4, %class.matrix.float.4.4, <4 x float>, <4 x float>, <2 x float>, <2 x float>, <4 x float>, <4 x float>, <4 x i32>, <4 x float>, <4 x float>, <4 x float>, <4 x float>, <2 x float>, <2 x float>, i32, float, float, float, <4 x float>, <4 x float>, <4 x float>, <2 x float>, float, float, float, float, float, float, <3 x float>, float, float, float, float, float, float, float, i32, i32, i32, i32, i32, float, float, float, float, float, <4 x float>, <3 x float>, float, [2 x <4 x float>], [2 x <4 x float>], <4 x float>, <4 x float>, float, float, float, float, float, float, float, float, float, float, float, float, <3 x float>, float, <3 x float>, float, <3 x float>, float, [2 x <4 x float>], [2 x <4 x float>], [2 x <4 x float>], [2 x <4 x float>], [2 x <4 x float>], <4 x float>, <3 x float>, float, <4 x float>, %class.matrix.float.4.4, <4 x float>, float, float, float, float, <4 x float>, float, float, float, float, float, float, float, float, <3 x float>, float, float, float, float, float, <4 x float>, float, float, float, float, <4 x float>, [8 x <4 x float>], float, float, float, float, i32, float, float, float, <3 x float>, i32, [6 x <4 x float>], [6 x <4 x float>], [6 x <4 x float>], [6 x <4 x float>], float, float, i32, i32, <3 x float>, float, <3 x float>, float, float, float, i32, float, float, float, float, float, <2 x i32>, float, float, <3 x float>, float, <3 x float>, float, <2 x float>, float, float, <3 x float>, float, <3 x float>, float, <3 x float>, float, <3 x float>, float, float, float, float, float, [2 x <4 x float>], float, i32, i32, i32, i32, i32, i32, i32, <4 x float>, <2 x float>, float, float, <4 x float>, float, i32, float, float, <4 x float>, i32, i32, i32, float, <4 x float>, <4 x float>, <3 x float>, float, i32, i32, i32, i32, [32 x <4 x i32>], i32, i32, float, float, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, <4 x float>, float, float, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, <3 x float>, float, <3 x float> }
%class.matrix.float.4.4 = type { [4 x <4 x float>] }
%UniformBufferConstants_LandscapeMVF = type { <2 x i32> }
%UniformBufferConstants_LandscapeContinuousLODParameters = type { i32, i32, <2 x i32>, <2 x i32>, i32 }
%UniformBufferConstants_LandscapeParameters = type { i32, i32, i32, i32, i32, i32, i32, i32, <4 x float>, <4 x float>, <4 x float>, <4 x float>, <4 x float>, <4 x float>, %class.matrix.float.4.4, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%UniformBufferConstants_Material = type { [7 x <4 x float>], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%HitGroupSystemRootConstants = type { %struct.FHitGroupSystemRootConstants }
%struct.FHitGroupSystemRootConstants = type { i32, i32, i32, i32, i32, i32 }
%struct.SamplerState = type { i32 }

@"\01?View_VolumetricLightmapIndirectionTexture@@3V?$Texture3D@V?$vector@I$03@@@@A" = external constant %dx.types.Handle, align 4
@"\01?View_VolumetricLightmapBrickAmbientVector@@3V?$Texture3D@V?$vector@M$03@@@@A" = external constant %dx.types.Handle, align 4
@"\01?View_VolumetricLightmapBrickSHCoefficients0@@3V?$Texture3D@V?$vector@M$03@@@@A" = external constant %dx.types.Handle, align 4
@"\01?View_VolumetricLightmapBrickSHCoefficients1@@3V?$Texture3D@V?$vector@M$03@@@@A" = external constant %dx.types.Handle, align 4
@"\01?View_VolumetricLightmapBrickSHCoefficients2@@3V?$Texture3D@V?$vector@M$03@@@@A" = external constant %dx.types.Handle, align 4
@"\01?View_VolumetricLightmapBrickSHCoefficients3@@3V?$Texture3D@V?$vector@M$03@@@@A" = external constant %dx.types.Handle, align 4
@"\01?View_VolumetricLightmapBrickSHCoefficients4@@3V?$Texture3D@V?$vector@M$03@@@@A" = external constant %dx.types.Handle, align 4
@"\01?View_VolumetricLightmapBrickSHCoefficients5@@3V?$Texture3D@V?$vector@M$03@@@@A" = external constant %dx.types.Handle, align 4
@"\01?View_SkyBentNormalBrickTexture@@3V?$Texture3D@V?$vector@M$03@@@@A" = external constant %dx.types.Handle, align 4
@"\01?View_SharedBilinearClampedSampler@@3USamplerState@@A" = external constant %dx.types.Handle, align 4
@"\01?View_PrimitiveSceneData@@3V?$StructuredBuffer@V?$vector@M$03@@@@A" = external constant %dx.types.Handle, align 4
@"\01?View_InstanceSceneData@@3V?$StructuredBuffer@V?$vector@M$03@@@@A" = external constant %dx.types.Handle, align 4
@"\01?View_SkyIrradianceEnvironmentMap@@3V?$StructuredBuffer@V?$vector@M$03@@@@A" = external constant %dx.types.Handle, align 4
@"\01?View_LandscapeWeightmapSampler@@3USamplerState@@A" = external constant %dx.types.Handle, align 4
@"\01?View_LandscapeIndirection@@3V?$Buffer@I@@A" = external constant %dx.types.Handle, align 4
@"\01?View_LandscapePerComponentData@@3V?$Buffer@M@@A" = external constant %dx.types.Handle, align 4
@"\01?LandscapeContinuousLODParameters_SectionLODBias@@3V?$Buffer@M@@A" = external constant %dx.types.Handle, align 4
@"\01?LandscapeParameters_HeightmapTexture@@3V?$Texture2D@V?$vector@M$03@@@@A" = external constant %dx.types.Handle, align 4
@"\01?LandscapeParameters_HeightmapTextureSampler@@3USamplerState@@A" = external constant %dx.types.Handle, align 4
@"\01?LandscapeParameters_NormalmapTexture@@3V?$Texture2D@V?$vector@M$03@@@@A" = external constant %dx.types.Handle, align 4
@"\01?LandscapeParameters_NormalmapTextureSampler@@3USamplerState@@A" = external constant %dx.types.Handle, align 4
@"\01?LandscapeParameters_XYOffsetmapTexture@@3V?$Texture2D@V?$vector@M$03@@@@A" = external constant %dx.types.Handle, align 4
@"\01?LandscapeParameters_XYOffsetmapTextureSampler@@3USamplerState@@A" = external constant %dx.types.Handle, align 4
@"\01?Material_Texture2D_0@@3V?$Texture2D@V?$vector@M$03@@@@A" = external constant %dx.types.Handle, align 4
@"\01?Material_Texture2D_1@@3V?$Texture2D@V?$vector@M$03@@@@A" = external constant %dx.types.Handle, align 4
@"\01?Material_Texture2D_1Sampler@@3USamplerState@@A" = external constant %dx.types.Handle, align 4
@"\01?Material_Texture2D_2@@3V?$Texture2D@V?$vector@M$03@@@@A" = external constant %dx.types.Handle, align 4
@"\01?Material_Texture2D_2Sampler@@3USamplerState@@A" = external constant %dx.types.Handle, align 4
@"\01?Material_Texture2D_3@@3V?$Texture2D@V?$vector@M$03@@@@A" = external constant %dx.types.Handle, align 4
@"\01?Material_Texture2D_3Sampler@@3USamplerState@@A" = external constant %dx.types.Handle, align 4
@"\01?Material_Texture2D_4@@3V?$Texture2D@V?$vector@M$03@@@@A" = external constant %dx.types.Handle, align 4
@"\01?Material_Texture2D_4Sampler@@3USamplerState@@A" = external constant %dx.types.Handle, align 4
@"\01?Material_Texture2D_5@@3V?$Texture2D@V?$vector@M$03@@@@A" = external constant %dx.types.Handle, align 4
@"\01?Material_Texture2D_5Sampler@@3USamplerState@@A" = external constant %dx.types.Handle, align 4
@"\01?Material_Texture2D_6@@3V?$Texture2D@V?$vector@M$03@@@@A" = external constant %dx.types.Handle, align 4
@"\01?Material_Texture2D_6Sampler@@3USamplerState@@A" = external constant %dx.types.Handle, align 4
@"\01?Material_Texture2D_7@@3V?$Texture2D@V?$vector@M$03@@@@A" = external constant %dx.types.Handle, align 4
@"\01?Material_Texture2D_7Sampler@@3USamplerState@@A" = external constant %dx.types.Handle, align 4
@"\01?Material_Texture2D_8@@3V?$Texture2D@V?$vector@M$03@@@@A" = external constant %dx.types.Handle, align 4
@"\01?Material_Texture2D_8Sampler@@3USamplerState@@A" = external constant %dx.types.Handle, align 4
@"\01?Material_Texture2D_9@@3V?$Texture2D@V?$vector@M$03@@@@A" = external constant %dx.types.Handle, align 4
@"\01?Material_Texture2D_9Sampler@@3USamplerState@@A" = external constant %dx.types.Handle, align 4
@"\01?Material_Texture2D_10@@3V?$Texture2D@V?$vector@M$03@@@@A" = external constant %dx.types.Handle, align 4
@"\01?Material_Texture2D_10Sampler@@3USamplerState@@A" = external constant %dx.types.Handle, align 4
@"\01?Material_Texture2D_11@@3V?$Texture2D@V?$vector@M$03@@@@A" = external constant %dx.types.Handle, align 4
@"\01?Material_Texture2D_11Sampler@@3USamplerState@@A" = external constant %dx.types.Handle, align 4
@"\01?Material_Texture2D_12@@3V?$Texture2D@V?$vector@M$03@@@@A" = external constant %dx.types.Handle, align 4
@"\01?Material_Texture2D_12Sampler@@3USamplerState@@A" = external constant %dx.types.Handle, align 4
@"\01?HitGroupSystemIndexBuffer@@3UByteAddressBuffer@@A" = external constant %dx.types.Handle, align 4
@llvm.global_ctors = appending global [0 x { i32, void ()*, i8* }] zeroinitializer
@UniformBufferConstants_View = external constant %dx.types.Handle
@UniformBufferConstants_LandscapeMVF = external constant %dx.types.Handle
@UniformBufferConstants_LandscapeContinuousLODParameters = external constant %dx.types.Handle
@UniformBufferConstants_LandscapeParameters = external constant %dx.types.Handle
@UniformBufferConstants_Material = external constant %dx.types.Handle
@HitGroupSystemRootConstants = external constant %dx.types.Handle
@NeighborOffset.i.i.i.i.0.hca = internal unnamed_addr constant [4 x i32] [i32 0, i32 -1, i32 1, i32 0]
@NeighborOffset.i.i.i.i.1.hca = internal unnamed_addr constant [4 x i32] [i32 -1, i32 0, i32 0, i32 1]

; Function Attrs: nounwind
declare void @llvm.lifetime.start(i64, i8* nocapture) #0

; Function Attrs: nounwind
declare void @llvm.lifetime.end(i64, i8* nocapture) #0

; Function Attrs: nounwind
define void @"\01?MaterialCHS@@YAXUFPackedMaterialClosestHitPayload@@UFRayTracingIntersectionAttributes@@@Z"(%struct.FPackedMaterialClosestHitPayload* noalias %PackedPayload, %struct.FRayTracingIntersectionAttributes* nocapture readonly %Attributes) #0 {
  %1 = load %dx.types.Handle, %dx.types.Handle* @"\01?Material_Texture2D_12Sampler@@3USamplerState@@A", align 4, !noalias !70
  %2 = load %dx.types.Handle, %dx.types.Handle* @"\01?Material_Texture2D_11Sampler@@3USamplerState@@A", align 4, !noalias !70
  %3 = load %dx.types.Handle, %dx.types.Handle* @"\01?Material_Texture2D_10Sampler@@3USamplerState@@A", align 4, !noalias !70
  %4 = load %dx.types.Handle, %dx.types.Handle* @"\01?Material_Texture2D_9Sampler@@3USamplerState@@A", align 4, !noalias !70
  %5 = load %dx.types.Handle, %dx.types.Handle* @"\01?Material_Texture2D_8Sampler@@3USamplerState@@A", align 4, !noalias !70
  %6 = load %dx.types.Handle, %dx.types.Handle* @"\01?Material_Texture2D_7Sampler@@3USamplerState@@A", align 4, !noalias !70
  %7 = load %dx.types.Handle, %dx.types.Handle* @"\01?Material_Texture2D_6Sampler@@3USamplerState@@A", align 4, !noalias !70
  %8 = load %dx.types.Handle, %dx.types.Handle* @"\01?Material_Texture2D_5Sampler@@3USamplerState@@A", align 4, !noalias !70
  %9 = load %dx.types.Handle, %dx.types.Handle* @"\01?Material_Texture2D_4Sampler@@3USamplerState@@A", align 4, !noalias !75
  %10 = load %dx.types.Handle, %dx.types.Handle* @"\01?Material_Texture2D_3Sampler@@3USamplerState@@A", align 4, !noalias !75
  %11 = load %dx.types.Handle, %dx.types.Handle* @"\01?Material_Texture2D_2Sampler@@3USamplerState@@A", align 4, !noalias !75
  %12 = load %dx.types.Handle, %dx.types.Handle* @"\01?Material_Texture2D_1Sampler@@3USamplerState@@A", align 4, !noalias !75
  %13 = load %dx.types.Handle, %dx.types.Handle* @"\01?LandscapeParameters_XYOffsetmapTextureSampler@@3USamplerState@@A", align 4, !noalias !77
  %14 = load %dx.types.Handle, %dx.types.Handle* @"\01?LandscapeParameters_NormalmapTextureSampler@@3USamplerState@@A", align 4
  %15 = load %dx.types.Handle, %dx.types.Handle* @"\01?LandscapeParameters_HeightmapTextureSampler@@3USamplerState@@A", align 4, !noalias !77
  %16 = load %dx.types.Handle, %dx.types.Handle* @"\01?View_LandscapeWeightmapSampler@@3USamplerState@@A", align 4, !noalias !85
  %17 = load %dx.types.Handle, %dx.types.Handle* @"\01?View_SharedBilinearClampedSampler@@3USamplerState@@A", align 4, !noalias !88
  %18 = load %dx.types.Handle, %dx.types.Handle* @"\01?HitGroupSystemIndexBuffer@@3UByteAddressBuffer@@A", align 4, !noalias !98
  %19 = load %dx.types.Handle, %dx.types.Handle* @"\01?Material_Texture2D_12@@3V?$Texture2D@V?$vector@M$03@@@@A", align 4, !noalias !70
  %20 = load %dx.types.Handle, %dx.types.Handle* @"\01?Material_Texture2D_11@@3V?$Texture2D@V?$vector@M$03@@@@A", align 4, !noalias !70
  %21 = load %dx.types.Handle, %dx.types.Handle* @"\01?Material_Texture2D_10@@3V?$Texture2D@V?$vector@M$03@@@@A", align 4, !noalias !70
  %22 = load %dx.types.Handle, %dx.types.Handle* @"\01?Material_Texture2D_9@@3V?$Texture2D@V?$vector@M$03@@@@A", align 4, !noalias !70
  %23 = load %dx.types.Handle, %dx.types.Handle* @"\01?Material_Texture2D_8@@3V?$Texture2D@V?$vector@M$03@@@@A", align 4, !noalias !70
  %24 = load %dx.types.Handle, %dx.types.Handle* @"\01?Material_Texture2D_7@@3V?$Texture2D@V?$vector@M$03@@@@A", align 4, !noalias !70
  %25 = load %dx.types.Handle, %dx.types.Handle* @"\01?Material_Texture2D_6@@3V?$Texture2D@V?$vector@M$03@@@@A", align 4, !noalias !70
  %26 = load %dx.types.Handle, %dx.types.Handle* @"\01?Material_Texture2D_5@@3V?$Texture2D@V?$vector@M$03@@@@A", align 4, !noalias !70
  %27 = load %dx.types.Handle, %dx.types.Handle* @"\01?Material_Texture2D_4@@3V?$Texture2D@V?$vector@M$03@@@@A", align 4, !noalias !75
  %28 = load %dx.types.Handle, %dx.types.Handle* @"\01?Material_Texture2D_3@@3V?$Texture2D@V?$vector@M$03@@@@A", align 4, !noalias !75
  %29 = load %dx.types.Handle, %dx.types.Handle* @"\01?Material_Texture2D_2@@3V?$Texture2D@V?$vector@M$03@@@@A", align 4, !noalias !75
  %30 = load %dx.types.Handle, %dx.types.Handle* @"\01?Material_Texture2D_1@@3V?$Texture2D@V?$vector@M$03@@@@A", align 4, !noalias !75
  %31 = load %dx.types.Handle, %dx.types.Handle* @"\01?Material_Texture2D_0@@3V?$Texture2D@V?$vector@M$03@@@@A", align 4, !noalias !75
  %32 = load %dx.types.Handle, %dx.types.Handle* @"\01?LandscapeParameters_XYOffsetmapTexture@@3V?$Texture2D@V?$vector@M$03@@@@A", align 4, !noalias !77
  %33 = load %dx.types.Handle, %dx.types.Handle* @"\01?LandscapeParameters_NormalmapTexture@@3V?$Texture2D@V?$vector@M$03@@@@A", align 4
  %34 = load %dx.types.Handle, %dx.types.Handle* @"\01?LandscapeParameters_HeightmapTexture@@3V?$Texture2D@V?$vector@M$03@@@@A", align 4, !noalias !77
  %35 = load %dx.types.Handle, %dx.types.Handle* @"\01?LandscapeContinuousLODParameters_SectionLODBias@@3V?$Buffer@M@@A", align 4, !noalias !77
  %36 = load %dx.types.Handle, %dx.types.Handle* @"\01?View_LandscapePerComponentData@@3V?$Buffer@M@@A", align 4, !noalias !77
  %37 = load %dx.types.Handle, %dx.types.Handle* @"\01?View_LandscapeIndirection@@3V?$Buffer@I@@A", align 4, !noalias !77
  %38 = load %dx.types.Handle, %dx.types.Handle* @"\01?View_SkyIrradianceEnvironmentMap@@3V?$StructuredBuffer@V?$vector@M$03@@@@A", align 4, !noalias !88
  %39 = load %dx.types.Handle, %dx.types.Handle* @"\01?View_InstanceSceneData@@3V?$StructuredBuffer@V?$vector@M$03@@@@A", align 4, !noalias !105
  %40 = load %dx.types.Handle, %dx.types.Handle* @"\01?View_PrimitiveSceneData@@3V?$StructuredBuffer@V?$vector@M$03@@@@A", align 4
  %41 = load %dx.types.Handle, %dx.types.Handle* @"\01?View_SkyBentNormalBrickTexture@@3V?$Texture3D@V?$vector@M$03@@@@A", align 4, !noalias !88
  %42 = load %dx.types.Handle, %dx.types.Handle* @"\01?View_VolumetricLightmapBrickSHCoefficients5@@3V?$Texture3D@V?$vector@M$03@@@@A", align 4, !noalias !110
  %43 = load %dx.types.Handle, %dx.types.Handle* @"\01?View_VolumetricLightmapBrickSHCoefficients4@@3V?$Texture3D@V?$vector@M$03@@@@A", align 4, !noalias !113
  %44 = load %dx.types.Handle, %dx.types.Handle* @"\01?View_VolumetricLightmapBrickSHCoefficients3@@3V?$Texture3D@V?$vector@M$03@@@@A", align 4, !noalias !110
  %45 = load %dx.types.Handle, %dx.types.Handle* @"\01?View_VolumetricLightmapBrickSHCoefficients2@@3V?$Texture3D@V?$vector@M$03@@@@A", align 4, !noalias !113
  %46 = load %dx.types.Handle, %dx.types.Handle* @"\01?View_VolumetricLightmapBrickSHCoefficients1@@3V?$Texture3D@V?$vector@M$03@@@@A", align 4, !noalias !110
  %47 = load %dx.types.Handle, %dx.types.Handle* @"\01?View_VolumetricLightmapBrickSHCoefficients0@@3V?$Texture3D@V?$vector@M$03@@@@A", align 4, !noalias !113
  %48 = load %dx.types.Handle, %dx.types.Handle* @"\01?View_VolumetricLightmapBrickAmbientVector@@3V?$Texture3D@V?$vector@M$03@@@@A", align 4, !noalias !113
  %49 = load %dx.types.Handle, %dx.types.Handle* @"\01?View_VolumetricLightmapIndirectionTexture@@3V?$Texture3D@V?$vector@I$03@@@@A", align 4, !noalias !119
  %50 = load %dx.types.Handle, %dx.types.Handle* @HitGroupSystemRootConstants, align 4
  %51 = load %dx.types.Handle, %dx.types.Handle* @UniformBufferConstants_Material, align 4
  %52 = load %dx.types.Handle, %dx.types.Handle* @UniformBufferConstants_LandscapeParameters, align 4
  %53 = load %dx.types.Handle, %dx.types.Handle* @UniformBufferConstants_LandscapeContinuousLODParameters, align 4
  %54 = load %dx.types.Handle, %dx.types.Handle* @UniformBufferConstants_LandscapeMVF, align 4
  %55 = load %dx.types.Handle, %dx.types.Handle* @UniformBufferConstants_View, align 4
  %56 = alloca [3 x float], align 4
  %57 = alloca [3 x float], align 4
  %58 = alloca [3 x float], align 4
  %59 = alloca [3 x i32], align 4
  %60 = alloca [3 x i32], align 4
  %61 = alloca [4 x float], align 4
  %62 = alloca [3 x float], align 4
  %63 = alloca [4 x float], align 4
  %64 = call %dx.types.Handle @dx.op.createHandleForLib.dx.types.Handle(i32 160, %dx.types.Handle %50)  ; CreateHandleForLib(Resource)
  %65 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %64, %dx.types.ResourceProperties { i32 13, i32 24 })  ; AnnotateHandle(res,props)  resource: CBuffer
  %66 = call %dx.types.Handle @dx.op.createHandleForLib.dx.types.Handle(i32 160, %dx.types.Handle %51)  ; CreateHandleForLib(Resource)
  %67 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %66, %dx.types.ResourceProperties { i32 13, i32 332 })  ; AnnotateHandle(res,props)  resource: CBuffer
  %68 = call %dx.types.Handle @dx.op.createHandleForLib.dx.types.Handle(i32 160, %dx.types.Handle %52)  ; CreateHandleForLib(Resource)
  %69 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %68, %dx.types.ResourceProperties { i32 13, i32 236 })  ; AnnotateHandle(res,props)  resource: CBuffer
  %70 = call %dx.types.Handle @dx.op.createHandleForLib.dx.types.Handle(i32 160, %dx.types.Handle %53)  ; CreateHandleForLib(Resource)
  %71 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %70, %dx.types.ResourceProperties { i32 13, i32 28 })  ; AnnotateHandle(res,props)  resource: CBuffer
  %72 = call %dx.types.Handle @dx.op.createHandleForLib.dx.types.Handle(i32 160, %dx.types.Handle %54)  ; CreateHandleForLib(Resource)
  %73 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %72, %dx.types.ResourceProperties { i32 13, i32 8 })  ; AnnotateHandle(res,props)  resource: CBuffer
  %74 = call %dx.types.Handle @dx.op.createHandleForLib.dx.types.Handle(i32 160, %dx.types.Handle %55)  ; CreateHandleForLib(Resource)
  %75 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %74, %dx.types.ResourceProperties { i32 13, i32 5292 })  ; AnnotateHandle(res,props)  resource: CBuffer
  %76 = call float @dx.op.rayTCurrent.f32(i32 154)  ; RayTCurrent()
  %77 = getelementptr inbounds %struct.FPackedMaterialClosestHitPayload, %struct.FPackedMaterialClosestHitPayload* %PackedPayload, i32 0, i32 0, i32 0
  store float %76, float* %77, align 4, !tbaa !120
  %78 = getelementptr inbounds %struct.FPackedMaterialClosestHitPayload, %struct.FPackedMaterialClosestHitPayload* %PackedPayload, i32 0, i32 6
  %79 = load i32, i32* %78, align 4, !tbaa !124
  %80 = and i32 %79, 33554432
  %81 = icmp ne i32 %80, 0
  br i1 %81, label %82, label %722

; <label>:82                                      ; preds = %0
  %83 = bitcast [3 x float]* %56 to i8*
  call void @llvm.lifetime.start(i64 12, i8* %83) #0
  %84 = bitcast [3 x float]* %57 to i8*
  call void @llvm.lifetime.start(i64 12, i8* %84) #0
  %85 = bitcast [3 x float]* %58 to i8*
  call void @llvm.lifetime.start(i64 12, i8* %85) #0
  %86 = getelementptr inbounds [4 x float], [4 x float]* %63, i32 0, i32 0
  br label %87

; <label>:87                                      ; preds = %426, %82
  %88 = phi i32 [ 0, %82 ], [ %638, %426 ]
  %89 = call i32 @dx.op.primitiveIndex.i32(i32 161)  ; PrimitiveIndex()
  %90 = call %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32 59, %dx.types.Handle %69, i32 0)  ; CBufferLoadLegacy(handle,regIndex)
  %91 = extractvalue %dx.types.CBufRet.i32 %90, 1
  %92 = call %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32 59, %dx.types.Handle %71, i32 0)  ; CBufferLoadLegacy(handle,regIndex)
  %93 = extractvalue %dx.types.CBufRet.i32 %92, 3
  %94 = sub nsw i32 %91, %93
  %95 = call %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32 59, %dx.types.Handle %71, i32 1)  ; CBufferLoadLegacy(handle,regIndex)
  %96 = extractvalue %dx.types.CBufRet.i32 %95, 0
  %97 = mul nsw i32 %94, %96
  %98 = extractvalue %dx.types.CBufRet.i32 %90, 0
  %99 = extractvalue %dx.types.CBufRet.i32 %92, 2
  %100 = call %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32 59, %dx.types.Handle %69, i32 1)  ; CBufferLoadLegacy(handle,regIndex)
  %101 = extractvalue %dx.types.CBufRet.i32 %100, 0
  %102 = sitofp i32 %101 to float
  %103 = extractvalue %dx.types.CBufRet.i32 %92, 0
  %104 = call %dx.types.Handle @dx.op.createHandleForLib.dx.types.Handle(i32 160, %dx.types.Handle %37)  ; CreateHandleForLib(Resource)
  %105 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %104, %dx.types.ResourceProperties { i32 10, i32 261 })  ; AnnotateHandle(res,props)  resource: TypedBuffer<U32>
  %106 = call %dx.types.ResRet.i32 @dx.op.bufferLoad.i32(i32 68, %dx.types.Handle %105, i32 %103, i32 undef)  ; BufferLoad(srv,index,wot)
  %107 = extractvalue %dx.types.ResRet.i32 %106, 0
  %108 = add i32 %97, %98
  %109 = sub i32 %108, %99
  %110 = add i32 %109, %107
  %111 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %75, i32 244)  ; CBufferLoadLegacy(handle,regIndex)
  %112 = extractvalue %dx.types.CBufRet.f32 %111, 0
  %113 = fcmp fast oge float %112, 0.000000e+00
  %114 = call %dx.types.Handle @dx.op.createHandleForLib.dx.types.Handle(i32 160, %dx.types.Handle %36)  ; CreateHandleForLib(Resource)
  %115 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %114, %dx.types.ResourceProperties { i32 10, i32 265 })  ; AnnotateHandle(res,props)  resource: TypedBuffer<F32>
  %116 = call %dx.types.ResRet.f32 @dx.op.bufferLoad.f32(i32 68, %dx.types.Handle %115, i32 %110, i32 undef)  ; BufferLoad(srv,index,wot)
  %117 = extractvalue %dx.types.ResRet.f32 %116, 0
  %118 = select i1 %113, float %112, float %117
  %119 = call %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32 59, %dx.types.Handle %75, i32 244)  ; CBufferLoadLegacy(handle,regIndex)
  %120 = extractvalue %dx.types.CBufRet.i32 %119, 1
  %121 = sitofp i32 %120 to float
  %122 = fadd fast float %121, %118
  %123 = call float @dx.op.binary.f32(i32 36, float %122, float %102)  ; FMin(a,b)
  %124 = call float @dx.op.unary.f32(i32 27, float %123)  ; Round_ni(value)
  %125 = fptoui float %124 to i32
  %126 = extractvalue %dx.types.CBufRet.i32 %90, 2
  %127 = and i32 %125, 31
  %128 = ashr i32 %126, %127
  %129 = add nsw i32 %128, -1
  %130 = sitofp i32 %129 to float
  %131 = fadd fast float %130, 1.000000e+00
  %132 = fptoui float %131 to i32
  %133 = bitcast [3 x i32]* %59 to i8*
  call void @llvm.lifetime.start(i64 12, i8* %133) #0
  %134 = call %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32 59, %dx.types.Handle %65, i32 0)  ; CBufferLoadLegacy(handle,regIndex)
  %135 = extractvalue %dx.types.CBufRet.i32 %134, 1
  %136 = extractvalue %dx.types.CBufRet.i32 %134, 0
  %137 = and i32 %136, 255
  %138 = mul i32 %89, 3
  %139 = icmp eq i32 %137, 0
  br i1 %139, label %140, label %143

; <label>:140                                     ; preds = %87
  %141 = add i32 %138, 1
  %142 = add i32 %138, 2
  br label %168

; <label>:143                                     ; preds = %87
  %144 = icmp eq i32 %137, 2
  %145 = call %dx.types.Handle @dx.op.createHandleForLib.dx.types.Handle(i32 160, %dx.types.Handle %18)  ; CreateHandleForLib(Resource)
  %146 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %145, %dx.types.ResourceProperties { i32 11, i32 0 })  ; AnnotateHandle(res,props)  resource: ByteAddressBuffer
  br i1 %144, label %147, label %161

; <label>:147                                     ; preds = %143
  %148 = mul i32 %89, 6
  %149 = add i32 %148, %135
  %150 = and i32 %149, -4
  %151 = call %dx.types.ResRet.i32 @dx.op.rawBufferLoad.i32(i32 139, %dx.types.Handle %146, i32 %150, i32 undef, i8 3, i32 4)  ; RawBufferLoad(srv,index,elementOffset,mask,alignment)
  %152 = extractvalue %dx.types.ResRet.i32 %151, 0
  %153 = extractvalue %dx.types.ResRet.i32 %151, 1
  %154 = icmp eq i32 %150, %149
  %155 = lshr i32 %152, 16
  %156 = and i32 %153, 65535
  br i1 %154, label %157, label %159

; <label>:157                                     ; preds = %147
  %158 = and i32 %152, 65535
  br label %168

; <label>:159                                     ; preds = %147
  %160 = lshr i32 %153, 16
  br label %168

; <label>:161                                     ; preds = %143
  %162 = mul i32 %137, %138
  %163 = add i32 %162, %135
  %164 = call %dx.types.ResRet.i32 @dx.op.rawBufferLoad.i32(i32 139, %dx.types.Handle %146, i32 %163, i32 undef, i8 7, i32 4)  ; RawBufferLoad(srv,index,elementOffset,mask,alignment)
  %165 = extractvalue %dx.types.ResRet.i32 %164, 0
  %166 = extractvalue %dx.types.ResRet.i32 %164, 1
  %167 = extractvalue %dx.types.ResRet.i32 %164, 2
  br label %168

; <label>:168                                     ; preds = %161, %159, %157, %140
  %169 = phi i32 [ %138, %140 ], [ %165, %161 ], [ %158, %157 ], [ %155, %159 ]
  %170 = phi i32 [ %141, %140 ], [ %166, %161 ], [ %155, %157 ], [ %156, %159 ]
  %171 = phi i32 [ %142, %140 ], [ %167, %161 ], [ %156, %157 ], [ %160, %159 ]
  %172 = getelementptr inbounds [3 x i32], [3 x i32]* %59, i32 0, i32 0
  store i32 %169, i32* %172, align 4
  %173 = getelementptr inbounds [3 x i32], [3 x i32]* %59, i32 0, i32 1
  store i32 %170, i32* %173, align 4
  %174 = getelementptr inbounds [3 x i32], [3 x i32]* %59, i32 0, i32 2
  store i32 %171, i32* %174, align 4
  %175 = getelementptr [3 x i32], [3 x i32]* %59, i32 0, i32 %88
  %176 = load i32, i32* %175, align 4, !tbaa !124, !noalias !126
  %177 = call i32 @dx.op.instanceID.i32(i32 141)  ; InstanceID()
  %178 = urem i32 %176, %132
  %179 = uitofp i32 %178 to float
  %180 = udiv i32 %176, %132
  %181 = uitofp i32 %180 to float
  %182 = call %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32 59, %dx.types.Handle %73, i32 0)  ; CBufferLoadLegacy(handle,regIndex)
  %183 = extractvalue %dx.types.CBufRet.i32 %182, 0
  %184 = sitofp i32 %183 to float
  %185 = extractvalue %dx.types.CBufRet.i32 %182, 1
  %186 = sitofp i32 %185 to float
  call void @llvm.lifetime.end(i64 12, i8* %133) #0
  %187 = and i32 %177, 2147483647
  %188 = mul i32 %187, 42
  %189 = call %dx.types.Handle @dx.op.createHandleForLib.dx.types.Handle(i32 160, %dx.types.Handle %40)  ; CreateHandleForLib(Resource)
  %190 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %189, %dx.types.ResourceProperties { i32 12, i32 16 })  ; AnnotateHandle(res,props)  resource: StructuredBuffer<stride=16>
  %191 = call %dx.types.ResRet.f32 @dx.op.rawBufferLoad.f32(i32 139, %dx.types.Handle %190, i32 %188, i32 0, i8 15, i32 4)  ; RawBufferLoad(srv,index,elementOffset,mask,alignment)
  %192 = extractvalue %dx.types.ResRet.f32 %191, 1
  %193 = bitcast float %192 to i32
  %194 = call %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32 59, %dx.types.Handle %75, i32 283)  ; CBufferLoadLegacy(handle,regIndex)
  %195 = extractvalue %dx.types.CBufRet.i32 %194, 0
  %196 = call %dx.types.Handle @dx.op.createHandleForLib.dx.types.Handle(i32 160, %dx.types.Handle %39)  ; CreateHandleForLib(Resource)
  %197 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %196, %dx.types.ResourceProperties { i32 12, i32 16 })  ; AnnotateHandle(res,props)  resource: StructuredBuffer<stride=16>
  %198 = call %dx.types.ResRet.f32 @dx.op.rawBufferLoad.f32(i32 139, %dx.types.Handle %197, i32 %193, i32 0, i8 15, i32 4)  ; RawBufferLoad(srv,index,elementOffset,mask,alignment)
  %199 = extractvalue %dx.types.ResRet.f32 %198, 0
  %200 = bitcast float %199 to i32
  %201 = and i32 %200, 1048575
  %202 = icmp eq i32 %201, 1048575
  br i1 %202, label %311, label %203, !dx.controlflow.hints !129

; <label>:203                                     ; preds = %168
  %204 = mul nuw nsw i32 %201, 42
  %205 = or i32 %204, 1
  %206 = call %dx.types.ResRet.f32 @dx.op.rawBufferLoad.f32(i32 139, %dx.types.Handle %190, i32 %205, i32 0, i8 15, i32 4)  ; RawBufferLoad(srv,index,elementOffset,mask,alignment)
  %207 = extractvalue %dx.types.ResRet.f32 %206, 0
  %208 = extractvalue %dx.types.ResRet.f32 %206, 1
  %209 = extractvalue %dx.types.ResRet.f32 %206, 2
  %210 = add i32 %195, %193
  %211 = call %dx.types.ResRet.f32 @dx.op.rawBufferLoad.f32(i32 139, %dx.types.Handle %197, i32 %210, i32 0, i8 15, i32 4)  ; RawBufferLoad(srv,index,elementOffset,mask,alignment)
  %212 = extractvalue %dx.types.ResRet.f32 %211, 0
  %213 = extractvalue %dx.types.ResRet.f32 %211, 1
  %214 = extractvalue %dx.types.ResRet.f32 %211, 2
  %215 = extractvalue %dx.types.ResRet.f32 %211, 3
  %216 = bitcast float %212 to i32
  %217 = bitcast float %213 to i32
  %218 = bitcast float %214 to i32
  %219 = bitcast float %215 to i32
  %220 = shl i32 %195, 1
  %221 = add i32 %220, %193
  %222 = call %dx.types.ResRet.f32 @dx.op.rawBufferLoad.f32(i32 139, %dx.types.Handle %197, i32 %221, i32 0, i8 15, i32 4)  ; RawBufferLoad(srv,index,elementOffset,mask,alignment)
  %223 = extractvalue %dx.types.ResRet.f32 %222, 0
  %224 = extractvalue %dx.types.ResRet.f32 %222, 1
  %225 = extractvalue %dx.types.ResRet.f32 %222, 2
  %226 = and i32 %216, 65535
  %227 = uitofp i32 %226 to float
  %228 = lshr i32 %216, 16
  %229 = uitofp i32 %228 to float
  %230 = and i32 %217, 32767
  %231 = uitofp i32 %230 to float
  %232 = fadd fast float %227, -3.276800e+04
  %233 = fadd fast float %229, -3.276800e+04
  %234 = fadd fast float %231, -1.638400e+04
  %235 = fmul fast float %234, 0x3F06A0F8E0000000
  %236 = and i32 %217, 32768
  %237 = icmp ne i32 %236, 0
  %238 = fadd fast float %232, %233
  %239 = fmul fast float %238, 0x3F00002000000000
  %240 = fsub fast float %232, %233
  %241 = fmul fast float %240, 0x3F00002000000000
  %242 = call float @dx.op.unary.f32(i32 6, float %239)  ; FAbs(value)
  %243 = call float @dx.op.unary.f32(i32 6, float %241)  ; FAbs(value)
  %244 = call float @dx.op.dot2.f32(i32 54, float 1.000000e+00, float 1.000000e+00, float %242, float %243)  ; Dot2(ax,ay,bx,by)
  %245 = fsub fast float 2.000000e+00, %244
  %246 = call float @dx.op.dot3.f32(i32 55, float %239, float %241, float %245, float %239, float %241, float %245)  ; Dot3(ax,ay,az,bx,by,bz)
  %247 = call float @dx.op.unary.f32(i32 25, float %246)  ; Rsqrt(value)
  %248 = fmul fast float %247, %239
  %249 = fmul fast float %247, %241
  %250 = fmul fast float %247, %245
  %251 = fadd fast float %250, 1.000000e+00
  %252 = fdiv fast float 1.000000e+00, %251
  %253 = fmul fast float %249, %248
  %254 = fmul fast float %253, %252
  %255 = fsub fast float -0.000000e+00, %254
  %256 = fmul fast float %248, %248
  %257 = fmul fast float %256, %252
  %258 = fsub fast float 1.000000e+00, %257
  %259 = fmul fast float %249, %249
  %260 = fmul fast float %259, %252
  %261 = fsub fast float 1.000000e+00, %260
  %262 = fmul fast float %235, %235
  %263 = fsub fast float 1.000000e+00, %262
  %264 = call float @dx.op.unary.f32(i32 24, float %263)  ; Sqrt(value)
  %265 = select i1 %237, float %235, float %264
  %266 = select i1 %237, float %264, float %235
  %267 = fmul fast float %258, %265
  %268 = fmul fast float %265, %255
  %269 = fmul fast float %265, %248
  %270 = fmul fast float %266, %255
  %271 = fmul fast float %261, %266
  %272 = fmul fast float %249, %266
  %273 = fsub fast float -0.000000e+00, %272
  %274 = fadd fast float %267, %270
  %275 = fadd fast float %268, %271
  %276 = fsub fast float %273, %269
  %277 = fmul fast float %276, %249
  %278 = fmul fast float %275, %250
  %279 = fsub fast float %277, %278
  %280 = fmul fast float %274, %250
  %281 = fmul fast float %276, %248
  %282 = fsub fast float %280, %281
  %283 = fmul fast float %275, %248
  %284 = fmul fast float %274, %249
  %285 = fsub fast float %283, %284
  %286 = lshr i32 %219, 16
  %287 = shl i32 %286, 23
  %288 = add i32 %287, -125829120
  %289 = bitcast i32 %288 to float
  %290 = lshr i32 %218, 16
  %291 = and i32 %218, 65535
  %292 = and i32 %219, 65535
  %293 = uitofp i32 %291 to float
  %294 = uitofp i32 %290 to float
  %295 = uitofp i32 %292 to float
  %296 = fadd fast float %293, -3.276800e+04
  %297 = fadd fast float %294, -3.276800e+04
  %298 = fadd fast float %295, -3.276800e+04
  %299 = fmul fast float %289, %296
  %300 = fmul fast float %289, %297
  %301 = fmul fast float %289, %298
  %302 = fmul fast float %274, %299
  %303 = fmul fast float %275, %299
  %304 = fmul fast float %276, %299
  %305 = fmul fast float %279, %300
  %306 = fmul fast float %282, %300
  %307 = fmul fast float %285, %300
  %308 = fmul fast float %248, %301
  %309 = fmul fast float %249, %301
  %310 = fmul fast float %250, %301
  br label %311

; <label>:311                                     ; preds = %203, %168
  %312 = phi float [ %207, %203 ], [ 0.000000e+00, %168 ]
  %313 = phi float [ %208, %203 ], [ 0.000000e+00, %168 ]
  %314 = phi float [ %209, %203 ], [ 0.000000e+00, %168 ]
  %315 = phi float [ %302, %203 ], [ 0.000000e+00, %168 ]
  %316 = phi float [ %303, %203 ], [ 0.000000e+00, %168 ]
  %317 = phi float [ %304, %203 ], [ 0.000000e+00, %168 ]
  %318 = phi float [ %305, %203 ], [ 0.000000e+00, %168 ]
  %319 = phi float [ %306, %203 ], [ 0.000000e+00, %168 ]
  %320 = phi float [ %307, %203 ], [ 0.000000e+00, %168 ]
  %321 = phi float [ %308, %203 ], [ 0.000000e+00, %168 ]
  %322 = phi float [ %309, %203 ], [ 0.000000e+00, %168 ]
  %323 = phi float [ %310, %203 ], [ 0.000000e+00, %168 ]
  %324 = phi float [ %223, %203 ], [ 0.000000e+00, %168 ]
  %325 = phi float [ %224, %203 ], [ 0.000000e+00, %168 ]
  %326 = phi float [ %225, %203 ], [ 0.000000e+00, %168 ]
  %327 = sub nsw i32 %98, %99
  %328 = add nsw i32 %327, %97
  %329 = add i32 %107, %328
  %330 = call %dx.types.ResRet.f32 @dx.op.bufferLoad.f32(i32 68, %dx.types.Handle %115, i32 %329, i32 undef)  ; BufferLoad(srv,index,wot)
  %331 = extractvalue %dx.types.ResRet.f32 %330, 0
  %332 = select i1 %113, float %112, float %331
  %333 = fadd fast float %121, %332
  %334 = call float @dx.op.binary.f32(i32 36, float %333, float %102)  ; FMin(a,b)
  %335 = call float @dx.op.unary.f32(i32 27, float %334)  ; Round_ni(value)
  %336 = fptoui float %335 to i32
  %337 = and i32 %336, 31
  %338 = ashr i32 %126, %337
  %339 = add nsw i32 %338, -1
  %340 = sitofp i32 %339 to float
  %341 = fdiv fast float 1.000000e+00, %340
  %342 = call %dx.types.Handle @dx.op.createHandleForLib.dx.types.Handle(i32 160, %dx.types.Handle %35)  ; CreateHandleForLib(Resource)
  %343 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %342, %dx.types.ResourceProperties { i32 10, i32 265 })  ; AnnotateHandle(res,props)  resource: TypedBuffer<F32>
  %344 = call %dx.types.ResRet.f32 @dx.op.bufferLoad.f32(i32 68, %dx.types.Handle %343, i32 %328, i32 undef)  ; BufferLoad(srv,index,wot)
  %345 = fmul fast float %341, %179
  %346 = fmul fast float %341, %181
  %347 = fadd fast float %345, %184
  %348 = fadd fast float %346, %186
  %349 = extractvalue %dx.types.CBufRet.i32 %90, 3
  %350 = sitofp i32 %349 to float
  %351 = fdiv fast float %347, %350
  %352 = fdiv fast float %348, %350
  %353 = fsub fast float 1.000000e+00, %351
  %354 = fmul fast float %352, 2.000000e+00
  %355 = fmul fast float %353, 2.000000e+00
  %356 = fmul fast float %334, %354
  %357 = fmul fast float %334, %355
  %358 = fsub fast float 1.000000e+00, %354
  %359 = fsub fast float 1.000000e+00, %355
  call void @llvm.lifetime.start(i64 16, i8* bitcast ([4 x i32]* @NeighborOffset.i.i.i.i.0.hca to i8*)) #0
  call void @llvm.lifetime.start(i64 16, i8* bitcast ([4 x i32]* @NeighborOffset.i.i.i.i.1.hca to i8*)) #0
  %360 = bitcast [4 x float]* %63 to i8*
  call void @llvm.lifetime.start(i64 16, i8* %360) #0, !noalias !130
  br label %361

; <label>:361                                     ; preds = %421, %311
  %362 = phi i32 [ -1, %311 ], [ %425, %421 ]
  %363 = phi i32 [ 0, %311 ], [ %423, %421 ]
  %364 = phi i32 [ 0, %311 ], [ %419, %421 ]
  %365 = call %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32 59, %dx.types.Handle %69, i32 0)  ; CBufferLoadLegacy(handle,regIndex)
  %366 = extractvalue %dx.types.CBufRet.i32 %365, 0
  %367 = extractvalue %dx.types.CBufRet.i32 %365, 1
  %368 = add i32 %366, %363
  %369 = add i32 %367, %362
  %370 = call %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32 59, %dx.types.Handle %71, i32 0)  ; CBufferLoadLegacy(handle,regIndex)
  %371 = extractvalue %dx.types.CBufRet.i32 %370, 2
  %372 = extractvalue %dx.types.CBufRet.i32 %370, 3
  %373 = call i32 @dx.op.binary.i32(i32 37, i32 %371, i32 %368)  ; IMax(a,b)
  %374 = call i32 @dx.op.binary.i32(i32 37, i32 %372, i32 %369)  ; IMax(a,b)
  %375 = call %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32 59, %dx.types.Handle %71, i32 1)  ; CBufferLoadLegacy(handle,regIndex)
  %376 = extractvalue %dx.types.CBufRet.i32 %375, 0
  %377 = extractvalue %dx.types.CBufRet.i32 %375, 1
  %378 = add i32 %371, -1
  %379 = add i32 %378, %376
  %380 = add i32 %372, -1
  %381 = add i32 %380, %377
  %382 = call i32 @dx.op.binary.i32(i32 38, i32 %379, i32 %373)  ; IMin(a,b)
  %383 = call i32 @dx.op.binary.i32(i32 38, i32 %381, i32 %374)  ; IMin(a,b)
  %384 = sub nsw i32 %383, %372
  %385 = mul nsw i32 %384, %376
  %386 = sub i32 %382, %371
  %387 = add nsw i32 %386, %385
  %388 = extractvalue %dx.types.CBufRet.i32 %370, 0
  %389 = call %dx.types.Handle @dx.op.createHandleForLib.dx.types.Handle(i32 160, %dx.types.Handle %37)  ; CreateHandleForLib(Resource)
  %390 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %389, %dx.types.ResourceProperties { i32 10, i32 261 })  ; AnnotateHandle(res,props)  resource: TypedBuffer<U32>
  %391 = call %dx.types.ResRet.i32 @dx.op.bufferLoad.i32(i32 68, %dx.types.Handle %390, i32 %388, i32 undef)  ; BufferLoad(srv,index,wot)
  %392 = extractvalue %dx.types.ResRet.i32 %391, 0
  %393 = add i32 %387, %392
  %394 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %75, i32 244)  ; CBufferLoadLegacy(handle,regIndex)
  %395 = extractvalue %dx.types.CBufRet.f32 %394, 0
  %396 = fcmp fast oge float %395, 0.000000e+00
  %397 = call %dx.types.Handle @dx.op.createHandleForLib.dx.types.Handle(i32 160, %dx.types.Handle %36)  ; CreateHandleForLib(Resource)
  %398 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %397, %dx.types.ResourceProperties { i32 10, i32 265 })  ; AnnotateHandle(res,props)  resource: TypedBuffer<F32>
  %399 = call %dx.types.ResRet.f32 @dx.op.bufferLoad.f32(i32 68, %dx.types.Handle %398, i32 %393, i32 undef)  ; BufferLoad(srv,index,wot)
  %400 = extractvalue %dx.types.ResRet.f32 %399, 0
  %401 = select i1 %396, float %395, float %400
  %402 = call %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32 59, %dx.types.Handle %69, i32 1)  ; CBufferLoadLegacy(handle,regIndex)
  %403 = extractvalue %dx.types.CBufRet.i32 %402, 0
  %404 = sitofp i32 %403 to float
  %405 = add i32 %392, %328
  %406 = call %dx.types.ResRet.f32 @dx.op.bufferLoad.f32(i32 68, %dx.types.Handle %398, i32 %405, i32 undef)  ; BufferLoad(srv,index,wot)
  %407 = extractvalue %dx.types.ResRet.f32 %406, 0
  %408 = select i1 %396, float %395, float %407
  %409 = call %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32 59, %dx.types.Handle %75, i32 244)  ; CBufferLoadLegacy(handle,regIndex)
  %410 = extractvalue %dx.types.CBufRet.i32 %409, 1
  %411 = sitofp i32 %410 to float
  %412 = fadd fast float %411, %408
  %413 = call float @dx.op.binary.f32(i32 36, float %412, float %404)  ; FMin(a,b)
  %414 = call float @dx.op.binary.f32(i32 35, float %401, float %413)  ; FMax(a,b)
  %415 = getelementptr inbounds [4 x float], [4 x float]* %63, i32 0, i32 %364
  %416 = fadd fast float %411, %414
  %417 = select i1 %396, float %395, float %416
  %418 = call float @dx.op.binary.f32(i32 36, float %417, float %404)  ; FMin(a,b)
  store float %418, float* %415, align 4, !tbaa !120, !noalias !130
  %419 = add nuw nsw i32 %364, 1
  %420 = icmp eq i32 %419, 4
  br i1 %420, label %426, label %421

; <label>:421                                     ; preds = %361
  %422 = getelementptr [4 x i32], [4 x i32]* @NeighborOffset.i.i.i.i.0.hca, i32 0, i32 %419
  %423 = load i32, i32* %422, align 4
  %424 = getelementptr [4 x i32], [4 x i32]* @NeighborOffset.i.i.i.i.1.hca, i32 0, i32 %419
  %425 = load i32, i32* %424, align 4
  br label %361

; <label>:426                                     ; preds = %361
  %427 = uitofp i32 %336 to float
  %428 = extractvalue %dx.types.ResRet.f32 %344, 0
  %429 = fsub fast float 1.000000e+00, %352
  %430 = fmul fast float %351, 2.000000e+00
  %431 = fmul fast float %429, 2.000000e+00
  %432 = fmul fast float %334, %430
  %433 = fmul fast float %334, %431
  %434 = fsub fast float 1.000000e+00, %430
  %435 = fsub fast float 1.000000e+00, %431
  %436 = load float, float* %86, align 4, !tbaa !120, !noalias !130
  %437 = getelementptr inbounds [4 x float], [4 x float]* %63, i32 0, i32 1
  %438 = load float, float* %437, align 4, !tbaa !120, !noalias !130
  %439 = getelementptr inbounds [4 x float], [4 x float]* %63, i32 0, i32 2
  %440 = load float, float* %439, align 4, !tbaa !120, !noalias !130
  %441 = getelementptr inbounds [4 x float], [4 x float]* %63, i32 0, i32 3
  %442 = load float, float* %441, align 4, !tbaa !120, !noalias !130
  call void @llvm.lifetime.end(i64 16, i8* %360) #0, !noalias !130
  call void @llvm.lifetime.end(i64 16, i8* bitcast ([4 x i32]* @NeighborOffset.i.i.i.i.0.hca to i8*)) #0
  call void @llvm.lifetime.end(i64 16, i8* bitcast ([4 x i32]* @NeighborOffset.i.i.i.i.1.hca to i8*)) #0
  %443 = fmul fast float %436, %358
  %444 = fmul fast float %438, %434
  %445 = fmul fast float %440, %359
  %446 = fmul fast float %442, %435
  %447 = fadd fast float %443, %356
  %448 = fadd fast float %444, %432
  %449 = fadd fast float %445, %357
  %450 = fadd fast float %446, %433
  %451 = fadd fast float %347, %348
  %452 = fdiv fast float %451, %350
  %453 = fcmp fast ogt float %452, 1.000000e+00
  %454 = fcmp fast olt float %351, %352
  %455 = select i1 %454, float %450, float %449
  %456 = select i1 %454, float %448, float %447
  %457 = select i1 %453, float %455, float %456
  %458 = call float @dx.op.unary.f32(i32 27, float %457)  ; Round_ni(value)
  %459 = fsub fast float %457, %458
  %460 = fsub fast float %458, %427
  %461 = fsub fast float -0.000000e+00, %460
  %462 = call float @dx.op.unary.f32(i32 21, float %461)  ; Exp(value)
  %463 = fmul fast float %462, %179
  %464 = fmul fast float %462, %181
  %465 = call float @dx.op.unary.f32(i32 27, float %463)  ; Round_ni(value)
  %466 = call float @dx.op.unary.f32(i32 27, float %464)  ; Round_ni(value)
  %467 = fsub fast float -0.000000e+00, %458
  %468 = call float @dx.op.unary.f32(i32 21, float %467)  ; Exp(value)
  %469 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %69, i32 5)  ; CBufferLoadLegacy(handle,regIndex)
  %470 = extractvalue %dx.types.CBufRet.f32 %469, 0
  %471 = fmul fast float %470, %468
  %472 = fadd fast float %471, -1.000000e+00
  %473 = fmul fast float %468, 5.000000e-01
  %474 = fmul fast float %473, %470
  %475 = call float @dx.op.binary.f32(i32 35, float %474, float 2.000000e+00)  ; FMax(a,b)
  %476 = fadd fast float %475, -1.000000e+00
  %477 = extractvalue %dx.types.CBufRet.f32 %469, 1
  %478 = fmul fast float %477, %472
  %479 = fmul fast float %477, %476
  %480 = fdiv fast float %465, %478
  %481 = fdiv fast float %466, %478
  %482 = fmul fast float %465, 5.000000e-01
  %483 = fmul fast float %466, 5.000000e-01
  %484 = call float @dx.op.unary.f32(i32 27, float %482)  ; Round_ni(value)
  %485 = call float @dx.op.unary.f32(i32 27, float %483)  ; Round_ni(value)
  %486 = fdiv fast float %484, %479
  %487 = fdiv fast float %485, %479
  %488 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %69, i32 2)  ; CBufferLoadLegacy(handle,regIndex)
  %489 = extractvalue %dx.types.CBufRet.f32 %488, 0
  %490 = extractvalue %dx.types.CBufRet.f32 %488, 1
  %491 = fmul fast float %489, %480
  %492 = fmul fast float %490, %481
  %493 = extractvalue %dx.types.CBufRet.f32 %488, 2
  %494 = extractvalue %dx.types.CBufRet.f32 %488, 3
  %495 = fadd fast float %491, %493
  %496 = fadd fast float %492, %494
  %497 = fmul fast float %489, 5.000000e-01
  %498 = fmul fast float %490, 5.000000e-01
  %499 = fadd fast float %495, %497
  %500 = fadd fast float %496, %498
  %501 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %69, i32 6)  ; CBufferLoadLegacy(handle,regIndex)
  %502 = extractvalue %dx.types.CBufRet.f32 %501, 0
  %503 = extractvalue %dx.types.CBufRet.f32 %501, 1
  %504 = fmul fast float %502, %184
  %505 = fmul fast float %503, %186
  %506 = fadd fast float %499, %504
  %507 = fadd fast float %500, %505
  %508 = fsub fast float %458, %428
  %509 = call %dx.types.Handle @dx.op.createHandleForLib.dx.types.Handle(i32 160, %dx.types.Handle %34)  ; CreateHandleForLib(Resource)
  %510 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %509, %dx.types.ResourceProperties { i32 2, i32 1033 })  ; AnnotateHandle(res,props)  resource: Texture2D<4xF32>
  %511 = call %dx.types.Handle @dx.op.createHandleForLib.dx.types.Handle(i32 160, %dx.types.Handle %15)  ; CreateHandleForLib(Resource)
  %512 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %511, %dx.types.ResourceProperties { i32 14, i32 0 })  ; AnnotateHandle(res,props)  resource: SamplerState
  %513 = call %dx.types.ResRet.f32 @dx.op.sampleLevel.f32(i32 62, %dx.types.Handle %510, %dx.types.Handle %512, float %506, float %507, float undef, float undef, i32 0, i32 0, i32 undef, float %508)  ; SampleLevel(srv,sampler,coord0,coord1,coord2,coord3,offset0,offset1,offset2,LOD)
  %514 = extractvalue %dx.types.ResRet.f32 %513, 0
  %515 = extractvalue %dx.types.ResRet.f32 %513, 1
  %516 = fmul fast float %514, 6.528000e+04
  %517 = fmul fast float %515, 2.550000e+02
  %518 = fadd fast float %517, -3.276800e+04
  %519 = fadd fast float %518, %516
  %520 = fmul fast float %489, %486
  %521 = fmul fast float %490, %487
  %522 = fadd fast float %520, %493
  %523 = fadd fast float %521, %494
  %524 = fadd fast float %522, %497
  %525 = fadd fast float %523, %498
  %526 = fadd fast float %524, %504
  %527 = fadd fast float %525, %505
  %528 = fsub fast float 1.000000e+00, %428
  %529 = fadd fast float %528, %458
  %530 = call %dx.types.ResRet.f32 @dx.op.sampleLevel.f32(i32 62, %dx.types.Handle %510, %dx.types.Handle %512, float %526, float %527, float undef, float undef, i32 0, i32 0, i32 undef, float %529)  ; SampleLevel(srv,sampler,coord0,coord1,coord2,coord3,offset0,offset1,offset2,LOD)
  %531 = extractvalue %dx.types.ResRet.f32 %530, 0
  %532 = extractvalue %dx.types.ResRet.f32 %530, 1
  %533 = fmul fast float %531, 6.528000e+04
  %534 = fmul fast float %532, 2.550000e+02
  %535 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %69, i32 3)  ; CBufferLoadLegacy(handle,regIndex)
  %536 = extractvalue %dx.types.CBufRet.f32 %535, 0
  %537 = extractvalue %dx.types.CBufRet.f32 %535, 1
  %538 = fmul fast float %536, %480
  %539 = fmul fast float %537, %481
  %540 = extractvalue %dx.types.CBufRet.f32 %535, 2
  %541 = extractvalue %dx.types.CBufRet.f32 %535, 3
  %542 = fadd fast float %538, %540
  %543 = fadd fast float %539, %541
  %544 = extractvalue %dx.types.CBufRet.f32 %501, 2
  %545 = fmul fast float %544, %184
  %546 = fmul fast float %544, %186
  %547 = fadd fast float %542, %545
  %548 = fadd fast float %543, %546
  %549 = call %dx.types.Handle @dx.op.createHandleForLib.dx.types.Handle(i32 160, %dx.types.Handle %32)  ; CreateHandleForLib(Resource)
  %550 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %549, %dx.types.ResourceProperties { i32 2, i32 1033 })  ; AnnotateHandle(res,props)  resource: Texture2D<4xF32>
  %551 = call %dx.types.Handle @dx.op.createHandleForLib.dx.types.Handle(i32 160, %dx.types.Handle %13)  ; CreateHandleForLib(Resource)
  %552 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %551, %dx.types.ResourceProperties { i32 14, i32 0 })  ; AnnotateHandle(res,props)  resource: SamplerState
  %553 = call %dx.types.ResRet.f32 @dx.op.sampleLevel.f32(i32 62, %dx.types.Handle %550, %dx.types.Handle %552, float %547, float %548, float undef, float undef, i32 0, i32 0, i32 undef, float %458)  ; SampleLevel(srv,sampler,coord0,coord1,coord2,coord3,offset0,offset1,offset2,LOD)
  %554 = extractvalue %dx.types.ResRet.f32 %553, 0
  %555 = extractvalue %dx.types.ResRet.f32 %553, 1
  %556 = extractvalue %dx.types.ResRet.f32 %553, 2
  %557 = extractvalue %dx.types.ResRet.f32 %553, 3
  %558 = fmul fast float %536, %486
  %559 = fmul fast float %537, %487
  %560 = fadd fast float %558, %540
  %561 = fadd fast float %559, %541
  %562 = fadd fast float %560, %545
  %563 = fadd fast float %561, %546
  %564 = fadd fast float %458, 1.000000e+00
  %565 = call %dx.types.ResRet.f32 @dx.op.sampleLevel.f32(i32 62, %dx.types.Handle %550, %dx.types.Handle %552, float %562, float %563, float undef, float undef, i32 0, i32 0, i32 undef, float %564)  ; SampleLevel(srv,sampler,coord0,coord1,coord2,coord3,offset0,offset1,offset2,LOD)
  %566 = extractvalue %dx.types.ResRet.f32 %565, 0
  %567 = extractvalue %dx.types.ResRet.f32 %565, 1
  %568 = extractvalue %dx.types.ResRet.f32 %565, 2
  %569 = extractvalue %dx.types.ResRet.f32 %565, 3
  %570 = fmul fast float %554, 6.528000e+04
  %571 = fmul fast float %555, 2.550000e+02
  %572 = fadd fast float %571, -3.276800e+04
  %573 = fadd fast float %572, %570
  %574 = fmul fast float %573, 3.906250e-03
  %575 = fmul fast float %556, 6.528000e+04
  %576 = fmul fast float %557, 2.550000e+02
  %577 = fadd fast float %576, -3.276800e+04
  %578 = fadd fast float %577, %575
  %579 = fmul fast float %578, 3.906250e-03
  %580 = fmul fast float %566, 6.528000e+04
  %581 = fmul fast float %567, 2.550000e+02
  %582 = fadd fast float %581, -3.276800e+04
  %583 = fadd fast float %582, %580
  %584 = fmul fast float %583, 3.906250e-03
  %585 = fmul fast float %568, 6.528000e+04
  %586 = fmul fast float %569, 2.550000e+02
  %587 = fadd fast float %586, -3.276800e+04
  %588 = fadd fast float %587, %585
  %589 = fmul fast float %588, 3.906250e-03
  %590 = fadd fast float %574, %480
  %591 = fadd fast float %579, %481
  %592 = fsub fast float %486, %590
  %593 = fadd fast float %592, %584
  %594 = fsub fast float %487, %591
  %595 = fadd fast float %594, %589
  %596 = fsub fast float -3.276800e+04, %519
  %597 = fadd fast float %596, %534
  %598 = fadd fast float %597, %533
  %599 = fmul fast float %593, %459
  %600 = fmul fast float %595, %459
  %601 = fmul fast float %598, %459
  %602 = fadd fast float %601, %519
  %603 = fmul fast float %602, 7.812500e-03
  %604 = extractvalue %dx.types.CBufRet.f32 %501, 3
  %605 = fmul fast float %604, %184
  %606 = fmul fast float %604, %186
  %607 = fadd fast float %605, %590
  %608 = fadd fast float %607, %599
  %609 = fadd fast float %606, %591
  %610 = fadd fast float %609, %600
  %611 = fmul fast float %608, %315
  %612 = fmul fast float %608, %316
  %613 = fmul fast float %608, %317
  %614 = fmul fast float %610, %318
  %615 = fmul fast float %610, %319
  %616 = fmul fast float %610, %320
  %617 = fmul fast float %603, %321
  %618 = fmul fast float %603, %322
  %619 = fmul fast float %603, %323
  %620 = fmul fast float %312, 2.097152e+06
  %621 = fmul fast float %313, 2.097152e+06
  %622 = fmul fast float %314, 2.097152e+06
  %623 = fadd fast float %324, %620
  %624 = fadd fast float %623, %617
  %625 = fadd fast float %624, %614
  %626 = fadd fast float %625, %611
  %627 = fadd fast float %325, %621
  %628 = fadd fast float %627, %618
  %629 = fadd fast float %628, %615
  %630 = fadd fast float %629, %612
  %631 = fadd fast float %326, %622
  %632 = fadd fast float %631, %619
  %633 = fadd fast float %632, %616
  %634 = fadd fast float %633, %613
  %635 = getelementptr [3 x float], [3 x float]* %56, i32 0, i32 %88
  %636 = getelementptr [3 x float], [3 x float]* %57, i32 0, i32 %88
  %637 = getelementptr [3 x float], [3 x float]* %58, i32 0, i32 %88
  store float %626, float* %635, align 4
  store float %630, float* %636, align 4
  store float %634, float* %637, align 4
  %638 = add nuw nsw i32 %88, 1
  %639 = icmp eq i32 %638, 3
  br i1 %639, label %640, label %87

; <label>:640                                     ; preds = %426
  %641 = getelementptr [3 x float], [3 x float]* %56, i32 0, i32 1
  %642 = getelementptr [3 x float], [3 x float]* %57, i32 0, i32 1
  %643 = getelementptr [3 x float], [3 x float]* %58, i32 0, i32 1
  %644 = load float, float* %641, align 4
  %645 = load float, float* %642, align 4
  %646 = load float, float* %643, align 4
  %647 = getelementptr [3 x float], [3 x float]* %56, i32 0, i32 0
  %648 = getelementptr [3 x float], [3 x float]* %57, i32 0, i32 0
  %649 = getelementptr [3 x float], [3 x float]* %58, i32 0, i32 0
  %650 = load float, float* %647, align 4
  %651 = load float, float* %648, align 4
  %652 = load float, float* %649, align 4
  %653 = fsub fast float %644, %650
  %654 = fsub fast float %645, %651
  %655 = fsub fast float %646, %652
  %656 = getelementptr [3 x float], [3 x float]* %56, i32 0, i32 2
  %657 = getelementptr [3 x float], [3 x float]* %57, i32 0, i32 2
  %658 = getelementptr [3 x float], [3 x float]* %58, i32 0, i32 2
  %659 = load float, float* %656, align 4
  %660 = load float, float* %657, align 4
  %661 = load float, float* %658, align 4
  %662 = fsub fast float %659, %650
  %663 = fsub fast float %660, %651
  %664 = fsub fast float %661, %652
  %665 = fmul fast float %663, %655
  %666 = fmul fast float %664, %654
  %667 = fsub fast float %665, %666
  %668 = fmul fast float %664, %653
  %669 = fmul fast float %662, %655
  %670 = fsub fast float %668, %669
  %671 = fmul fast float %662, %654
  %672 = fmul fast float %663, %653
  %673 = fsub fast float %671, %672
  %674 = call float @dx.op.dot3.f32(i32 55, float %667, float %670, float %673, float %667, float %670, float %673)  ; Dot3(ax,ay,az,bx,by,bz)
  %675 = fcmp fast oeq float %674, 0.000000e+00
  %676 = uitofp i1 %675 to float
  %677 = call float @dx.op.worldRayDirection.f32(i32 148, i8 0)  ; WorldRayDirection(col)
  %678 = call float @dx.op.worldRayDirection.f32(i32 148, i8 1)  ; WorldRayDirection(col)
  %679 = call float @dx.op.worldRayDirection.f32(i32 148, i8 2)  ; WorldRayDirection(col)
  %680 = fsub fast float -0.000000e+00, %677
  %681 = fsub fast float -0.000000e+00, %678
  %682 = fsub fast float -0.000000e+00, %679
  %683 = call float @dx.op.unary.f32(i32 25, float %674)  ; Rsqrt(value)
  %684 = fmul fast float %683, %667
  %685 = fmul fast float %683, %670
  %686 = fmul fast float %683, %673
  %687 = fsub fast float %680, %684
  %688 = fsub fast float %681, %685
  %689 = fsub fast float %682, %686
  %690 = fmul fast float %687, %676
  %691 = fmul fast float %688, %676
  %692 = fmul fast float %689, %676
  %693 = fadd fast float %690, %684
  %694 = fadd fast float %691, %685
  %695 = fadd fast float %692, %686
  call void @llvm.lifetime.end(i64 12, i8* %83) #0
  call void @llvm.lifetime.end(i64 12, i8* %84) #0
  call void @llvm.lifetime.end(i64 12, i8* %85) #0
  %696 = call i32 @dx.op.instanceIndex.i32(i32 142)  ; InstanceIndex()
  %697 = call %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32 59, %dx.types.Handle %65, i32 1)  ; CBufferLoadLegacy(handle,regIndex)
  %698 = extractvalue %dx.types.CBufRet.i32 %697, 0
  %699 = sub i32 %696, %698
  %700 = call i32 @dx.op.legacyF32ToF16(i32 130, float %693)  ; LegacyF32ToF16(value)
  %701 = shl i32 %700, 16
  %702 = getelementptr inbounds %struct.FPackedMaterialClosestHitPayload, %struct.FPackedMaterialClosestHitPayload* %PackedPayload, i32 0, i32 3, i32 1
  %703 = load i32, i32* %702, align 4, !tbaa !124
  %704 = or i32 %703, %701
  store i32 %704, i32* %702, align 4, !tbaa !124
  %705 = call i32 @dx.op.legacyF32ToF16(i32 130, float %694)  ; LegacyF32ToF16(value)
  %706 = call i32 @dx.op.legacyF32ToF16(i32 130, float %695)  ; LegacyF32ToF16(value)
  %707 = shl i32 %706, 16
  %708 = getelementptr inbounds %struct.FPackedMaterialClosestHitPayload, %struct.FPackedMaterialClosestHitPayload* %PackedPayload, i32 0, i32 3, i32 2
  %709 = or i32 %707, %705
  store i32 %709, i32* %708, align 4, !tbaa !124
  %710 = mul i32 %177, 42
  %711 = call %dx.types.Handle @dx.op.createHandleForLib.dx.types.Handle(i32 160, %dx.types.Handle %40)  ; CreateHandleForLib(Resource)
  %712 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %711, %dx.types.ResourceProperties { i32 12, i32 16 })  ; AnnotateHandle(res,props)  resource: StructuredBuffer<stride=16>
  %713 = call %dx.types.ResRet.f32 @dx.op.rawBufferLoad.f32(i32 139, %dx.types.Handle %712, i32 %710, i32 0, i8 15, i32 4)  ; RawBufferLoad(srv,index,elementOffset,mask,alignment)
  %714 = extractvalue %dx.types.ResRet.f32 %713, 2
  %715 = bitcast float %714 to i32
  %716 = icmp eq i32 %715, 1
  %717 = select i1 %716, i32 0, i32 %699
  %718 = extractvalue %dx.types.ResRet.f32 %713, 1
  %719 = bitcast float %718 to i32
  %720 = add i32 %719, %717
  %721 = getelementptr inbounds %struct.FPackedMaterialClosestHitPayload, %struct.FPackedMaterialClosestHitPayload* %PackedPayload, i32 0, i32 9, i32 1
  store i32 %720, i32* %721, align 4, !tbaa !124
  br label %722

; <label>:722                                     ; preds = %640, %0
  %723 = and i32 %79, 8388608
  %724 = icmp eq i32 %723, 0
  br i1 %724, label %725, label %1990

; <label>:725                                     ; preds = %722
  %726 = getelementptr inbounds %struct.FPackedMaterialClosestHitPayload, %struct.FPackedMaterialClosestHitPayload* %PackedPayload, i32 0, i32 2
  %727 = load float, float* %726, align 4, !tbaa !120
  %728 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %75, i32 64)  ; CBufferLoadLegacy(handle,regIndex)
  %729 = extractvalue %dx.types.CBufRet.f32 %728, 1
  %730 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %75, i32 76)  ; CBufferLoadLegacy(handle,regIndex)
  %731 = extractvalue %dx.types.CBufRet.f32 %730, 1
  %732 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %75, i32 139)  ; CBufferLoadLegacy(handle,regIndex)
  %733 = extractvalue %dx.types.CBufRet.f32 %732, 0
  %734 = extractvalue %dx.types.CBufRet.f32 %732, 2
  %735 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %75, i32 140)  ; CBufferLoadLegacy(handle,regIndex)
  %736 = extractvalue %dx.types.CBufRet.f32 %735, 0
  %737 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %75, i32 187)  ; CBufferLoadLegacy(handle,regIndex)
  %738 = extractvalue %dx.types.CBufRet.f32 %737, 1
  %739 = getelementptr inbounds %struct.FPackedMaterialClosestHitPayload, %struct.FPackedMaterialClosestHitPayload* %PackedPayload, i32 0, i32 1
  %740 = load i32, i32* %739, align 4, !tbaa !124, !noalias !133
  %741 = and i32 %740, 65535
  %742 = lshr i32 %740, 16
  %743 = call float @dx.op.legacyF16ToF32(i32 131, i32 %742)  ; LegacyF16ToF32(value)
  %744 = call float @dx.op.rayTCurrent.f32(i32 154)  ; RayTCurrent()
  %745 = fmul fast float %744, %743
  %746 = getelementptr inbounds %struct.FRayTracingIntersectionAttributes, %struct.FRayTracingIntersectionAttributes* %Attributes, i32 0, i32 0
  %747 = load <2 x i32>, <2 x i32>* %746, align 4
  %748 = extractelement <2 x i32> %747, i32 0
  %749 = extractelement <2 x i32> %747, i32 1
  %750 = bitcast i32 %748 to float
  %751 = bitcast i32 %749 to float
  %752 = bitcast [3 x float]* %62 to i8*
  call void @llvm.lifetime.start(i64 12, i8* %752) #0, !noalias !136
  %753 = fsub fast float 1.000000e+00, %750
  %754 = fsub fast float %753, %751
  %755 = getelementptr inbounds [3 x float], [3 x float]* %62, i32 0, i32 0
  store float %754, float* %755, align 4
  %756 = getelementptr inbounds [3 x float], [3 x float]* %62, i32 0, i32 1
  %757 = bitcast float* %756 to i32*
  store i32 %748, i32* %757, align 4
  %758 = getelementptr inbounds [3 x float], [3 x float]* %62, i32 0, i32 2
  %759 = bitcast float* %758 to i32*
  store i32 %749, i32* %759, align 4
  br label %760

; <label>:760                                     ; preds = %974, %725
  %761 = phi float [ 0.000000e+00, %725 ], [ %1146, %974 ]
  %762 = phi float [ 0.000000e+00, %725 ], [ %1147, %974 ]
  %763 = phi float [ 0.000000e+00, %725 ], [ %1148, %974 ]
  %764 = phi float [ 0.000000e+00, %725 ], [ %1149, %974 ]
  %765 = phi float [ 0.000000e+00, %725 ], [ %1140, %974 ]
  %766 = phi float [ 0.000000e+00, %725 ], [ %1141, %974 ]
  %767 = phi i32 [ 0, %725 ], [ %1150, %974 ]
  %768 = call i32 @dx.op.primitiveIndex.i32(i32 161)  ; PrimitiveIndex()
  %769 = call %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32 59, %dx.types.Handle %69, i32 0)  ; CBufferLoadLegacy(handle,regIndex)
  %770 = extractvalue %dx.types.CBufRet.i32 %769, 1
  %771 = call %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32 59, %dx.types.Handle %71, i32 0)  ; CBufferLoadLegacy(handle,regIndex)
  %772 = extractvalue %dx.types.CBufRet.i32 %771, 3
  %773 = sub nsw i32 %770, %772
  %774 = call %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32 59, %dx.types.Handle %71, i32 1)  ; CBufferLoadLegacy(handle,regIndex)
  %775 = extractvalue %dx.types.CBufRet.i32 %774, 0
  %776 = mul nsw i32 %773, %775
  %777 = extractvalue %dx.types.CBufRet.i32 %769, 0
  %778 = extractvalue %dx.types.CBufRet.i32 %771, 2
  %779 = call %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32 59, %dx.types.Handle %69, i32 1)  ; CBufferLoadLegacy(handle,regIndex)
  %780 = extractvalue %dx.types.CBufRet.i32 %779, 0
  %781 = sitofp i32 %780 to float
  %782 = extractvalue %dx.types.CBufRet.i32 %771, 0
  %783 = call %dx.types.Handle @dx.op.createHandleForLib.dx.types.Handle(i32 160, %dx.types.Handle %37)  ; CreateHandleForLib(Resource)
  %784 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %783, %dx.types.ResourceProperties { i32 10, i32 261 })  ; AnnotateHandle(res,props)  resource: TypedBuffer<U32>
  %785 = call %dx.types.ResRet.i32 @dx.op.bufferLoad.i32(i32 68, %dx.types.Handle %784, i32 %782, i32 undef)  ; BufferLoad(srv,index,wot)
  %786 = extractvalue %dx.types.ResRet.i32 %785, 0
  %787 = add i32 %776, %777
  %788 = sub i32 %787, %778
  %789 = add i32 %788, %786
  %790 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %75, i32 244)  ; CBufferLoadLegacy(handle,regIndex)
  %791 = extractvalue %dx.types.CBufRet.f32 %790, 0
  %792 = fcmp fast oge float %791, 0.000000e+00
  %793 = call %dx.types.Handle @dx.op.createHandleForLib.dx.types.Handle(i32 160, %dx.types.Handle %36)  ; CreateHandleForLib(Resource)
  %794 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %793, %dx.types.ResourceProperties { i32 10, i32 265 })  ; AnnotateHandle(res,props)  resource: TypedBuffer<F32>
  %795 = call %dx.types.ResRet.f32 @dx.op.bufferLoad.f32(i32 68, %dx.types.Handle %794, i32 %789, i32 undef)  ; BufferLoad(srv,index,wot)
  %796 = extractvalue %dx.types.ResRet.f32 %795, 0
  %797 = select i1 %792, float %791, float %796
  %798 = call %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32 59, %dx.types.Handle %75, i32 244)  ; CBufferLoadLegacy(handle,regIndex)
  %799 = extractvalue %dx.types.CBufRet.i32 %798, 1
  %800 = sitofp i32 %799 to float
  %801 = fadd fast float %800, %797
  %802 = call float @dx.op.binary.f32(i32 36, float %801, float %781)  ; FMin(a,b)
  %803 = call float @dx.op.unary.f32(i32 27, float %802)  ; Round_ni(value)
  %804 = fptoui float %803 to i32
  %805 = extractvalue %dx.types.CBufRet.i32 %769, 2
  %806 = and i32 %804, 31
  %807 = ashr i32 %805, %806
  %808 = add nsw i32 %807, -1
  %809 = sitofp i32 %808 to float
  %810 = fadd fast float %809, 1.000000e+00
  %811 = fptoui float %810 to i32
  %812 = bitcast [3 x i32]* %60 to i8*
  call void @llvm.lifetime.start(i64 12, i8* %812) #0
  %813 = call %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32 59, %dx.types.Handle %65, i32 0)  ; CBufferLoadLegacy(handle,regIndex)
  %814 = extractvalue %dx.types.CBufRet.i32 %813, 1
  %815 = extractvalue %dx.types.CBufRet.i32 %813, 0
  %816 = and i32 %815, 255
  %817 = mul i32 %768, 3
  %818 = icmp eq i32 %816, 0
  br i1 %818, label %819, label %822

; <label>:819                                     ; preds = %760
  %820 = add i32 %817, 1
  %821 = add i32 %817, 2
  br label %847

; <label>:822                                     ; preds = %760
  %823 = icmp eq i32 %816, 2
  %824 = call %dx.types.Handle @dx.op.createHandleForLib.dx.types.Handle(i32 160, %dx.types.Handle %18)  ; CreateHandleForLib(Resource)
  %825 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %824, %dx.types.ResourceProperties { i32 11, i32 0 })  ; AnnotateHandle(res,props)  resource: ByteAddressBuffer
  br i1 %823, label %826, label %840

; <label>:826                                     ; preds = %822
  %827 = mul i32 %768, 6
  %828 = add i32 %827, %814
  %829 = and i32 %828, -4
  %830 = call %dx.types.ResRet.i32 @dx.op.rawBufferLoad.i32(i32 139, %dx.types.Handle %825, i32 %829, i32 undef, i8 3, i32 4)  ; RawBufferLoad(srv,index,elementOffset,mask,alignment)
  %831 = extractvalue %dx.types.ResRet.i32 %830, 0
  %832 = extractvalue %dx.types.ResRet.i32 %830, 1
  %833 = icmp eq i32 %829, %828
  %834 = lshr i32 %831, 16
  %835 = and i32 %832, 65535
  br i1 %833, label %836, label %838

; <label>:836                                     ; preds = %826
  %837 = and i32 %831, 65535
  br label %847

; <label>:838                                     ; preds = %826
  %839 = lshr i32 %832, 16
  br label %847

; <label>:840                                     ; preds = %822
  %841 = mul i32 %816, %817
  %842 = add i32 %841, %814
  %843 = call %dx.types.ResRet.i32 @dx.op.rawBufferLoad.i32(i32 139, %dx.types.Handle %825, i32 %842, i32 undef, i8 7, i32 4)  ; RawBufferLoad(srv,index,elementOffset,mask,alignment)
  %844 = extractvalue %dx.types.ResRet.i32 %843, 0
  %845 = extractvalue %dx.types.ResRet.i32 %843, 1
  %846 = extractvalue %dx.types.ResRet.i32 %843, 2
  br label %847

; <label>:847                                     ; preds = %840, %838, %836, %819
  %848 = phi i32 [ %817, %819 ], [ %844, %840 ], [ %837, %836 ], [ %834, %838 ]
  %849 = phi i32 [ %820, %819 ], [ %845, %840 ], [ %834, %836 ], [ %835, %838 ]
  %850 = phi i32 [ %821, %819 ], [ %846, %840 ], [ %835, %836 ], [ %839, %838 ]
  %851 = getelementptr inbounds [3 x i32], [3 x i32]* %60, i32 0, i32 0
  store i32 %848, i32* %851, align 4
  %852 = getelementptr inbounds [3 x i32], [3 x i32]* %60, i32 0, i32 1
  store i32 %849, i32* %852, align 4
  %853 = getelementptr inbounds [3 x i32], [3 x i32]* %60, i32 0, i32 2
  store i32 %850, i32* %853, align 4
  %854 = getelementptr [3 x i32], [3 x i32]* %60, i32 0, i32 %767
  %855 = load i32, i32* %854, align 4, !tbaa !124, !noalias !137
  %856 = call i32 @dx.op.instanceID.i32(i32 141)  ; InstanceID()
  %857 = urem i32 %855, %811
  %858 = uitofp i32 %857 to float
  %859 = udiv i32 %855, %811
  %860 = uitofp i32 %859 to float
  %861 = call %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32 59, %dx.types.Handle %73, i32 0)  ; CBufferLoadLegacy(handle,regIndex)
  %862 = extractvalue %dx.types.CBufRet.i32 %861, 0
  %863 = sitofp i32 %862 to float
  %864 = extractvalue %dx.types.CBufRet.i32 %861, 1
  %865 = sitofp i32 %864 to float
  call void @llvm.lifetime.end(i64 12, i8* %812) #0
  %866 = and i32 %856, 2147483647
  %867 = mul i32 %866, 42
  %868 = call %dx.types.Handle @dx.op.createHandleForLib.dx.types.Handle(i32 160, %dx.types.Handle %40)  ; CreateHandleForLib(Resource)
  %869 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %868, %dx.types.ResourceProperties { i32 12, i32 16 })  ; AnnotateHandle(res,props)  resource: StructuredBuffer<stride=16>
  %870 = call %dx.types.ResRet.f32 @dx.op.rawBufferLoad.f32(i32 139, %dx.types.Handle %869, i32 %867, i32 0, i8 15, i32 4)  ; RawBufferLoad(srv,index,elementOffset,mask,alignment)
  %871 = extractvalue %dx.types.ResRet.f32 %870, 1
  %872 = bitcast float %871 to i32
  %873 = call %dx.types.Handle @dx.op.createHandleForLib.dx.types.Handle(i32 160, %dx.types.Handle %39)  ; CreateHandleForLib(Resource)
  %874 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %873, %dx.types.ResourceProperties { i32 12, i32 16 })  ; AnnotateHandle(res,props)  resource: StructuredBuffer<stride=16>
  %875 = call %dx.types.ResRet.f32 @dx.op.rawBufferLoad.f32(i32 139, %dx.types.Handle %874, i32 %872, i32 0, i8 15, i32 4)  ; RawBufferLoad(srv,index,elementOffset,mask,alignment)
  %876 = extractvalue %dx.types.ResRet.f32 %875, 0
  %877 = bitcast float %876 to i32
  %878 = sub nsw i32 %777, %778
  %879 = add nsw i32 %878, %776
  %880 = add i32 %786, %879
  %881 = call %dx.types.ResRet.f32 @dx.op.bufferLoad.f32(i32 68, %dx.types.Handle %794, i32 %880, i32 undef)  ; BufferLoad(srv,index,wot)
  %882 = extractvalue %dx.types.ResRet.f32 %881, 0
  %883 = select i1 %792, float %791, float %882
  %884 = fadd fast float %800, %883
  %885 = call float @dx.op.binary.f32(i32 36, float %884, float %781)  ; FMin(a,b)
  %886 = call float @dx.op.unary.f32(i32 27, float %885)  ; Round_ni(value)
  %887 = fptoui float %886 to i32
  %888 = and i32 %887, 31
  %889 = ashr i32 %805, %888
  %890 = add nsw i32 %889, -1
  %891 = sitofp i32 %890 to float
  %892 = fdiv fast float 1.000000e+00, %891
  %893 = fmul fast float %892, %858
  %894 = fmul fast float %892, %860
  %895 = fadd fast float %893, %863
  %896 = fadd fast float %894, %865
  %897 = extractvalue %dx.types.CBufRet.i32 %769, 3
  %898 = sitofp i32 %897 to float
  %899 = fdiv fast float %895, %898
  %900 = fdiv fast float %896, %898
  %901 = fsub fast float 1.000000e+00, %899
  %902 = fmul fast float %900, 2.000000e+00
  %903 = fmul fast float %901, 2.000000e+00
  %904 = fmul fast float %885, %902
  %905 = fmul fast float %885, %903
  %906 = fsub fast float 1.000000e+00, %902
  %907 = fsub fast float 1.000000e+00, %903
  call void @llvm.lifetime.start(i64 16, i8* bitcast ([4 x i32]* @NeighborOffset.i.i.i.i.0.hca to i8*)) #0
  call void @llvm.lifetime.start(i64 16, i8* bitcast ([4 x i32]* @NeighborOffset.i.i.i.i.1.hca to i8*)) #0
  %908 = bitcast [4 x float]* %61 to i8*
  call void @llvm.lifetime.start(i64 16, i8* %908) #0, !noalias !77
  br label %909

; <label>:909                                     ; preds = %969, %847
  %910 = phi i32 [ -1, %847 ], [ %973, %969 ]
  %911 = phi i32 [ 0, %847 ], [ %971, %969 ]
  %912 = phi i32 [ 0, %847 ], [ %967, %969 ]
  %913 = call %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32 59, %dx.types.Handle %69, i32 0)  ; CBufferLoadLegacy(handle,regIndex)
  %914 = extractvalue %dx.types.CBufRet.i32 %913, 0
  %915 = extractvalue %dx.types.CBufRet.i32 %913, 1
  %916 = add i32 %914, %911
  %917 = add i32 %915, %910
  %918 = call %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32 59, %dx.types.Handle %71, i32 0)  ; CBufferLoadLegacy(handle,regIndex)
  %919 = extractvalue %dx.types.CBufRet.i32 %918, 2
  %920 = extractvalue %dx.types.CBufRet.i32 %918, 3
  %921 = call i32 @dx.op.binary.i32(i32 37, i32 %919, i32 %916)  ; IMax(a,b)
  %922 = call i32 @dx.op.binary.i32(i32 37, i32 %920, i32 %917)  ; IMax(a,b)
  %923 = call %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32 59, %dx.types.Handle %71, i32 1)  ; CBufferLoadLegacy(handle,regIndex)
  %924 = extractvalue %dx.types.CBufRet.i32 %923, 0
  %925 = extractvalue %dx.types.CBufRet.i32 %923, 1
  %926 = add i32 %919, -1
  %927 = add i32 %926, %924
  %928 = add i32 %920, -1
  %929 = add i32 %928, %925
  %930 = call i32 @dx.op.binary.i32(i32 38, i32 %927, i32 %921)  ; IMin(a,b)
  %931 = call i32 @dx.op.binary.i32(i32 38, i32 %929, i32 %922)  ; IMin(a,b)
  %932 = sub nsw i32 %931, %920
  %933 = mul nsw i32 %932, %924
  %934 = sub i32 %930, %919
  %935 = add nsw i32 %934, %933
  %936 = extractvalue %dx.types.CBufRet.i32 %918, 0
  %937 = call %dx.types.Handle @dx.op.createHandleForLib.dx.types.Handle(i32 160, %dx.types.Handle %37)  ; CreateHandleForLib(Resource)
  %938 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %937, %dx.types.ResourceProperties { i32 10, i32 261 })  ; AnnotateHandle(res,props)  resource: TypedBuffer<U32>
  %939 = call %dx.types.ResRet.i32 @dx.op.bufferLoad.i32(i32 68, %dx.types.Handle %938, i32 %936, i32 undef)  ; BufferLoad(srv,index,wot)
  %940 = extractvalue %dx.types.ResRet.i32 %939, 0
  %941 = add i32 %935, %940
  %942 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %75, i32 244)  ; CBufferLoadLegacy(handle,regIndex)
  %943 = extractvalue %dx.types.CBufRet.f32 %942, 0
  %944 = fcmp fast oge float %943, 0.000000e+00
  %945 = call %dx.types.Handle @dx.op.createHandleForLib.dx.types.Handle(i32 160, %dx.types.Handle %36)  ; CreateHandleForLib(Resource)
  %946 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %945, %dx.types.ResourceProperties { i32 10, i32 265 })  ; AnnotateHandle(res,props)  resource: TypedBuffer<F32>
  %947 = call %dx.types.ResRet.f32 @dx.op.bufferLoad.f32(i32 68, %dx.types.Handle %946, i32 %941, i32 undef)  ; BufferLoad(srv,index,wot)
  %948 = extractvalue %dx.types.ResRet.f32 %947, 0
  %949 = select i1 %944, float %943, float %948
  %950 = call %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32 59, %dx.types.Handle %69, i32 1)  ; CBufferLoadLegacy(handle,regIndex)
  %951 = extractvalue %dx.types.CBufRet.i32 %950, 0
  %952 = sitofp i32 %951 to float
  %953 = add i32 %940, %879
  %954 = call %dx.types.ResRet.f32 @dx.op.bufferLoad.f32(i32 68, %dx.types.Handle %946, i32 %953, i32 undef)  ; BufferLoad(srv,index,wot)
  %955 = extractvalue %dx.types.ResRet.f32 %954, 0
  %956 = select i1 %944, float %943, float %955
  %957 = call %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32 59, %dx.types.Handle %75, i32 244)  ; CBufferLoadLegacy(handle,regIndex)
  %958 = extractvalue %dx.types.CBufRet.i32 %957, 1
  %959 = sitofp i32 %958 to float
  %960 = fadd fast float %959, %956
  %961 = call float @dx.op.binary.f32(i32 36, float %960, float %952)  ; FMin(a,b)
  %962 = call float @dx.op.binary.f32(i32 35, float %949, float %961)  ; FMax(a,b)
  %963 = getelementptr inbounds [4 x float], [4 x float]* %61, i32 0, i32 %912
  %964 = fadd fast float %959, %962
  %965 = select i1 %944, float %943, float %964
  %966 = call float @dx.op.binary.f32(i32 36, float %965, float %952)  ; FMin(a,b)
  store float %966, float* %963, align 4, !tbaa !120, !noalias !77
  %967 = add nuw nsw i32 %912, 1
  %968 = icmp eq i32 %967, 4
  br i1 %968, label %974, label %969

; <label>:969                                     ; preds = %909
  %970 = getelementptr [4 x i32], [4 x i32]* @NeighborOffset.i.i.i.i.0.hca, i32 0, i32 %967
  %971 = load i32, i32* %970, align 4
  %972 = getelementptr [4 x i32], [4 x i32]* @NeighborOffset.i.i.i.i.1.hca, i32 0, i32 %967
  %973 = load i32, i32* %972, align 4
  br label %909

; <label>:974                                     ; preds = %909
  %975 = uitofp i32 %887 to float
  %976 = fsub fast float 1.000000e+00, %900
  %977 = fmul fast float %899, 2.000000e+00
  %978 = fmul fast float %976, 2.000000e+00
  %979 = fmul fast float %885, %977
  %980 = fmul fast float %885, %978
  %981 = fsub fast float 1.000000e+00, %977
  %982 = fsub fast float 1.000000e+00, %978
  %983 = getelementptr inbounds [4 x float], [4 x float]* %61, i32 0, i32 0
  %984 = load float, float* %983, align 4, !tbaa !120, !noalias !77
  %985 = getelementptr inbounds [4 x float], [4 x float]* %61, i32 0, i32 1
  %986 = load float, float* %985, align 4, !tbaa !120, !noalias !77
  %987 = getelementptr inbounds [4 x float], [4 x float]* %61, i32 0, i32 2
  %988 = load float, float* %987, align 4, !tbaa !120, !noalias !77
  %989 = getelementptr inbounds [4 x float], [4 x float]* %61, i32 0, i32 3
  %990 = load float, float* %989, align 4, !tbaa !120, !noalias !77
  call void @llvm.lifetime.end(i64 16, i8* %908) #0, !noalias !77
  call void @llvm.lifetime.end(i64 16, i8* bitcast ([4 x i32]* @NeighborOffset.i.i.i.i.0.hca to i8*)) #0
  call void @llvm.lifetime.end(i64 16, i8* bitcast ([4 x i32]* @NeighborOffset.i.i.i.i.1.hca to i8*)) #0
  %991 = fmul fast float %984, %906
  %992 = fmul fast float %986, %981
  %993 = fmul fast float %988, %907
  %994 = fmul fast float %990, %982
  %995 = fadd fast float %991, %904
  %996 = fadd fast float %992, %979
  %997 = fadd fast float %993, %905
  %998 = fadd fast float %994, %980
  %999 = fadd fast float %895, %896
  %1000 = fdiv fast float %999, %898
  %1001 = fcmp fast ogt float %1000, 1.000000e+00
  %1002 = fcmp fast olt float %899, %900
  %1003 = select i1 %1002, float %998, float %997
  %1004 = select i1 %1002, float %996, float %995
  %1005 = select i1 %1001, float %1003, float %1004
  %1006 = call float @dx.op.unary.f32(i32 27, float %1005)  ; Round_ni(value)
  %1007 = fsub fast float %1005, %1006
  %1008 = fsub fast float %1006, %975
  %1009 = fsub fast float -0.000000e+00, %1008
  %1010 = call float @dx.op.unary.f32(i32 21, float %1009)  ; Exp(value)
  %1011 = fmul fast float %1010, %858
  %1012 = fmul fast float %1010, %860
  %1013 = call float @dx.op.unary.f32(i32 27, float %1011)  ; Round_ni(value)
  %1014 = call float @dx.op.unary.f32(i32 27, float %1012)  ; Round_ni(value)
  %1015 = fsub fast float -0.000000e+00, %1006
  %1016 = call float @dx.op.unary.f32(i32 21, float %1015)  ; Exp(value)
  %1017 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %69, i32 5)  ; CBufferLoadLegacy(handle,regIndex)
  %1018 = extractvalue %dx.types.CBufRet.f32 %1017, 0
  %1019 = fmul fast float %1018, %1016
  %1020 = fadd fast float %1019, -1.000000e+00
  %1021 = fmul fast float %1016, 5.000000e-01
  %1022 = fmul fast float %1021, %1018
  %1023 = call float @dx.op.binary.f32(i32 35, float %1022, float 2.000000e+00)  ; FMax(a,b)
  %1024 = fadd fast float %1023, -1.000000e+00
  %1025 = extractvalue %dx.types.CBufRet.f32 %1017, 1
  %1026 = fmul fast float %1025, %1020
  %1027 = fmul fast float %1025, %1024
  %1028 = fdiv fast float %1013, %1026
  %1029 = fdiv fast float %1014, %1026
  %1030 = fmul fast float %1013, 5.000000e-01
  %1031 = fmul fast float %1014, 5.000000e-01
  %1032 = call float @dx.op.unary.f32(i32 27, float %1030)  ; Round_ni(value)
  %1033 = call float @dx.op.unary.f32(i32 27, float %1031)  ; Round_ni(value)
  %1034 = fdiv fast float %1032, %1027
  %1035 = fdiv fast float %1033, %1027
  %1036 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %69, i32 3)  ; CBufferLoadLegacy(handle,regIndex)
  %1037 = extractvalue %dx.types.CBufRet.f32 %1036, 0
  %1038 = extractvalue %dx.types.CBufRet.f32 %1036, 1
  %1039 = fmul fast float %1037, %1028
  %1040 = fmul fast float %1038, %1029
  %1041 = extractvalue %dx.types.CBufRet.f32 %1036, 2
  %1042 = extractvalue %dx.types.CBufRet.f32 %1036, 3
  %1043 = fadd fast float %1039, %1041
  %1044 = fadd fast float %1040, %1042
  %1045 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %69, i32 6)  ; CBufferLoadLegacy(handle,regIndex)
  %1046 = extractvalue %dx.types.CBufRet.f32 %1045, 2
  %1047 = fmul fast float %1046, %863
  %1048 = fmul fast float %1046, %865
  %1049 = fadd fast float %1043, %1047
  %1050 = fadd fast float %1044, %1048
  %1051 = call %dx.types.Handle @dx.op.createHandleForLib.dx.types.Handle(i32 160, %dx.types.Handle %32)  ; CreateHandleForLib(Resource)
  %1052 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %1051, %dx.types.ResourceProperties { i32 2, i32 1033 })  ; AnnotateHandle(res,props)  resource: Texture2D<4xF32>
  %1053 = call %dx.types.Handle @dx.op.createHandleForLib.dx.types.Handle(i32 160, %dx.types.Handle %13)  ; CreateHandleForLib(Resource)
  %1054 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %1053, %dx.types.ResourceProperties { i32 14, i32 0 })  ; AnnotateHandle(res,props)  resource: SamplerState
  %1055 = call %dx.types.ResRet.f32 @dx.op.sampleLevel.f32(i32 62, %dx.types.Handle %1052, %dx.types.Handle %1054, float %1049, float %1050, float undef, float undef, i32 0, i32 0, i32 undef, float %1006)  ; SampleLevel(srv,sampler,coord0,coord1,coord2,coord3,offset0,offset1,offset2,LOD)
  %1056 = extractvalue %dx.types.ResRet.f32 %1055, 0
  %1057 = extractvalue %dx.types.ResRet.f32 %1055, 1
  %1058 = extractvalue %dx.types.ResRet.f32 %1055, 2
  %1059 = extractvalue %dx.types.ResRet.f32 %1055, 3
  %1060 = fmul fast float %1037, %1034
  %1061 = fmul fast float %1038, %1035
  %1062 = fadd fast float %1060, %1041
  %1063 = fadd fast float %1061, %1042
  %1064 = fadd fast float %1062, %1047
  %1065 = fadd fast float %1063, %1048
  %1066 = fadd fast float %1006, 1.000000e+00
  %1067 = call %dx.types.ResRet.f32 @dx.op.sampleLevel.f32(i32 62, %dx.types.Handle %1052, %dx.types.Handle %1054, float %1064, float %1065, float undef, float undef, i32 0, i32 0, i32 undef, float %1066)  ; SampleLevel(srv,sampler,coord0,coord1,coord2,coord3,offset0,offset1,offset2,LOD)
  %1068 = extractvalue %dx.types.ResRet.f32 %1067, 0
  %1069 = extractvalue %dx.types.ResRet.f32 %1067, 1
  %1070 = extractvalue %dx.types.ResRet.f32 %1067, 2
  %1071 = extractvalue %dx.types.ResRet.f32 %1067, 3
  %1072 = fmul fast float %1056, 6.528000e+04
  %1073 = fmul fast float %1057, 2.550000e+02
  %1074 = fadd fast float %1073, -3.276800e+04
  %1075 = fadd fast float %1074, %1072
  %1076 = fmul fast float %1075, 3.906250e-03
  %1077 = fmul fast float %1058, 6.528000e+04
  %1078 = fmul fast float %1059, 2.550000e+02
  %1079 = fadd fast float %1078, -3.276800e+04
  %1080 = fadd fast float %1079, %1077
  %1081 = fmul fast float %1080, 3.906250e-03
  %1082 = fmul fast float %1068, 6.528000e+04
  %1083 = fmul fast float %1069, 2.550000e+02
  %1084 = fadd fast float %1083, -3.276800e+04
  %1085 = fadd fast float %1084, %1082
  %1086 = fmul fast float %1085, 3.906250e-03
  %1087 = fmul fast float %1070, 6.528000e+04
  %1088 = fmul fast float %1071, 2.550000e+02
  %1089 = fadd fast float %1088, -3.276800e+04
  %1090 = fadd fast float %1089, %1087
  %1091 = fadd fast float %1076, %1028
  %1092 = fadd fast float %1081, %1029
  %1093 = fsub fast float %1034, %1091
  %1094 = fadd fast float %1093, %1086
  %1095 = fsub fast float %1035, %1092
  %1096 = fmul fast float %1094, %1007
  %1097 = fadd fast float %1096, %1091
  %1098 = extractvalue %dx.types.CBufRet.f32 %1017, 2
  %1099 = extractvalue %dx.types.CBufRet.f32 %1017, 3
  %1100 = extractvalue %dx.types.CBufRet.f32 %1045, 3
  %1101 = fmul fast float %1100, %863
  %1102 = fmul fast float %1100, %865
  %1103 = fadd fast float %1101, %1098
  %1104 = fadd fast float %1102, %1099
  %1105 = fmul fast float %1097, %1037
  %1106 = fadd fast float %1047, %1041
  %1107 = fadd fast float %1048, %1042
  %1108 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %69, i32 2)  ; CBufferLoadLegacy(handle,regIndex)
  %1109 = extractvalue %dx.types.CBufRet.f32 %1108, 0
  %1110 = fmul fast float %1097, %1109
  %1111 = extractvalue %dx.types.CBufRet.f32 %1108, 2
  %1112 = fadd fast float %1110, %1111
  %1113 = fmul fast float %1109, 5.000000e-01
  %1114 = fadd fast float %1112, %1113
  %1115 = extractvalue %dx.types.CBufRet.f32 %1045, 0
  %1116 = fmul fast float %1115, %863
  %1117 = fadd fast float %1114, %1116
  %1118 = fmul fast float %1090, 3.906250e-03
  %1119 = fadd fast float %1095, %1118
  %1120 = fmul fast float %1119, %1007
  %1121 = fadd fast float %1120, %1092
  %1122 = fadd fast float %1103, %1097
  %1123 = fadd fast float %1104, %1121
  %1124 = fmul fast float %1121, %1038
  %1125 = fadd fast float %1106, %1105
  %1126 = fadd fast float %1107, %1124
  %1127 = extractvalue %dx.types.CBufRet.f32 %1108, 1
  %1128 = fmul fast float %1121, %1127
  %1129 = extractvalue %dx.types.CBufRet.f32 %1108, 3
  %1130 = fadd fast float %1128, %1129
  %1131 = fmul fast float %1127, 5.000000e-01
  %1132 = fadd fast float %1130, %1131
  %1133 = extractvalue %dx.types.CBufRet.f32 %1045, 1
  %1134 = fmul fast float %1133, %865
  %1135 = fadd fast float %1132, %1134
  %1136 = getelementptr [3 x float], [3 x float]* %62, i32 0, i32 %767
  %1137 = load float, float* %1136, align 4, !tbaa !120, !noalias !136
  %1138 = fmul fast float %1137, %1122
  %1139 = fmul fast float %1137, %1123
  %1140 = fadd fast float %1138, %765
  %1141 = fadd fast float %1139, %766
  %1142 = fmul fast float %1137, %1125
  %1143 = fmul fast float %1137, %1126
  %1144 = fmul fast float %1137, %1117
  %1145 = fmul fast float %1137, %1135
  %1146 = fadd fast float %1142, %761
  %1147 = fadd fast float %1143, %762
  %1148 = fadd fast float %1144, %763
  %1149 = fadd fast float %1145, %764
  %1150 = add nuw nsw i32 %767, 1
  %1151 = icmp eq i32 %1150, 3
  br i1 %1151, label %1152, label %760

; <label>:1152                                    ; preds = %974
  %1153 = and i32 %877, 1048575
  %1154 = extractvalue %dx.types.CBufRet.f32 %728, 0
  %1155 = extractvalue %dx.types.CBufRet.f32 %728, 2
  %1156 = extractvalue %dx.types.CBufRet.f32 %730, 0
  %1157 = extractvalue %dx.types.CBufRet.f32 %730, 2
  %1158 = extractvalue %dx.types.CBufRet.f32 %732, 1
  %1159 = extractvalue %dx.types.CBufRet.f32 %732, 3
  %1160 = extractvalue %dx.types.CBufRet.f32 %735, 1
  %1161 = extractvalue %dx.types.CBufRet.f32 %737, 0
  %1162 = extractvalue %dx.types.CBufRet.f32 %737, 2
  %1163 = call float @dx.op.legacyF16ToF32(i32 131, i32 %741)  ; LegacyF16ToF32(value)
  %1164 = fadd fast float %745, %1163
  call void @llvm.lifetime.end(i64 12, i8* %752) #0, !noalias !136
  %1165 = call %dx.types.Handle @dx.op.createHandleForLib.dx.types.Handle(i32 160, %dx.types.Handle %33)  ; CreateHandleForLib(Resource)
  %1166 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %1165, %dx.types.ResourceProperties { i32 2, i32 1033 })  ; AnnotateHandle(res,props)  resource: Texture2D<4xF32>
  %1167 = call %dx.types.Handle @dx.op.createHandleForLib.dx.types.Handle(i32 160, %dx.types.Handle %14)  ; CreateHandleForLib(Resource)
  %1168 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %1167, %dx.types.ResourceProperties { i32 14, i32 0 })  ; AnnotateHandle(res,props)  resource: SamplerState
  %1169 = call %dx.types.ResRet.f32 @dx.op.sampleLevel.f32(i32 62, %dx.types.Handle %1166, %dx.types.Handle %1168, float %1148, float %1149, float undef, float undef, i32 0, i32 0, i32 undef, float %727)  ; SampleLevel(srv,sampler,coord0,coord1,coord2,coord3,offset0,offset1,offset2,LOD)
  %1170 = extractvalue %dx.types.ResRet.f32 %1169, 2
  %1171 = extractvalue %dx.types.ResRet.f32 %1169, 3
  %1172 = fmul fast float %1170, 2.000000e+00
  %1173 = fmul fast float %1171, 2.000000e+00
  %1174 = fadd fast float %1172, -1.000000e+00
  %1175 = fadd fast float %1173, -1.000000e+00
  %1176 = call float @dx.op.dot2.f32(i32 54, float %1174, float %1175, float %1174, float %1175)  ; Dot2(ax,ay,bx,by)
  %1177 = fsub fast float 1.000000e+00, %1176
  %1178 = call float @dx.op.binary.f32(i32 35, float %1177, float 0.000000e+00)  ; FMax(a,b)
  %1179 = call float @dx.op.unary.f32(i32 24, float %1178)  ; Sqrt(value)
  %1180 = fsub fast float -0.000000e+00, %1174
  %1181 = call float @dx.op.dot3.f32(i32 55, float %1179, float 0.000000e+00, float %1180, float %1179, float 0.000000e+00, float %1180)  ; Dot3(ax,ay,az,bx,by,bz)
  %1182 = call float @dx.op.unary.f32(i32 25, float %1181)  ; Rsqrt(value)
  %1183 = fmul fast float %1182, %1179
  %1184 = fmul fast float %1182, %1180
  %1185 = fmul fast float %1184, %1175
  %1186 = fmul fast float %1183, %1179
  %1187 = fmul fast float %1184, %1174
  %1188 = fsub fast float %1186, %1187
  %1189 = fmul fast float %1175, %1183
  %1190 = fsub fast float -0.000000e+00, %1189
  %1191 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %69, i32 8)  ; CBufferLoadLegacy(handle,regIndex)
  %1192 = extractvalue %dx.types.CBufRet.f32 %1191, 0
  %1193 = extractvalue %dx.types.CBufRet.f32 %1191, 1
  %1194 = extractvalue %dx.types.CBufRet.f32 %1191, 2
  %1195 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %69, i32 9)  ; CBufferLoadLegacy(handle,regIndex)
  %1196 = extractvalue %dx.types.CBufRet.f32 %1195, 0
  %1197 = extractvalue %dx.types.CBufRet.f32 %1195, 1
  %1198 = extractvalue %dx.types.CBufRet.f32 %1195, 2
  %1199 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %69, i32 10)  ; CBufferLoadLegacy(handle,regIndex)
  %1200 = extractvalue %dx.types.CBufRet.f32 %1199, 0
  %1201 = extractvalue %dx.types.CBufRet.f32 %1199, 1
  %1202 = extractvalue %dx.types.CBufRet.f32 %1199, 2
  %1203 = fmul fast float %1192, %1183
  %1204 = call float @dx.op.tertiary.f32(i32 46, float %1184, float %1200, float %1203)  ; FMad(a,b,c)
  %1205 = fmul fast float %1193, %1183
  %1206 = call float @dx.op.tertiary.f32(i32 46, float %1184, float %1201, float %1205)  ; FMad(a,b,c)
  %1207 = fmul fast float %1194, %1183
  %1208 = call float @dx.op.tertiary.f32(i32 46, float %1184, float %1202, float %1207)  ; FMad(a,b,c)
  %1209 = fmul fast float %1185, %1192
  %1210 = call float @dx.op.tertiary.f32(i32 46, float %1188, float %1196, float %1209)  ; FMad(a,b,c)
  %1211 = call float @dx.op.tertiary.f32(i32 46, float %1190, float %1200, float %1210)  ; FMad(a,b,c)
  %1212 = fmul fast float %1185, %1193
  %1213 = call float @dx.op.tertiary.f32(i32 46, float %1188, float %1197, float %1212)  ; FMad(a,b,c)
  %1214 = call float @dx.op.tertiary.f32(i32 46, float %1190, float %1201, float %1213)  ; FMad(a,b,c)
  %1215 = fmul fast float %1185, %1194
  %1216 = call float @dx.op.tertiary.f32(i32 46, float %1188, float %1198, float %1215)  ; FMad(a,b,c)
  %1217 = call float @dx.op.tertiary.f32(i32 46, float %1190, float %1202, float %1216)  ; FMad(a,b,c)
  %1218 = fmul fast float %1192, %1174
  %1219 = call float @dx.op.tertiary.f32(i32 46, float %1175, float %1196, float %1218)  ; FMad(a,b,c)
  %1220 = call float @dx.op.tertiary.f32(i32 46, float %1179, float %1200, float %1219)  ; FMad(a,b,c)
  %1221 = fmul fast float %1193, %1174
  %1222 = call float @dx.op.tertiary.f32(i32 46, float %1175, float %1197, float %1221)  ; FMad(a,b,c)
  %1223 = call float @dx.op.tertiary.f32(i32 46, float %1179, float %1201, float %1222)  ; FMad(a,b,c)
  %1224 = fmul fast float %1194, %1174
  %1225 = call float @dx.op.tertiary.f32(i32 46, float %1175, float %1198, float %1224)  ; FMad(a,b,c)
  %1226 = call float @dx.op.tertiary.f32(i32 46, float %1179, float %1202, float %1225)  ; FMad(a,b,c)
  %1227 = call float @dx.op.worldRayOrigin.f32(i32 147, i8 0)  ; WorldRayOrigin(col)
  %1228 = call float @dx.op.worldRayOrigin.f32(i32 147, i8 1)  ; WorldRayOrigin(col)
  %1229 = call float @dx.op.worldRayOrigin.f32(i32 147, i8 2)  ; WorldRayOrigin(col)
  %1230 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %75, i32 329)  ; CBufferLoadLegacy(handle,regIndex)
  %1231 = extractvalue %dx.types.CBufRet.f32 %1230, 0
  %1232 = extractvalue %dx.types.CBufRet.f32 %1230, 1
  %1233 = extractvalue %dx.types.CBufRet.f32 %1230, 2
  %1234 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %75, i32 330)  ; CBufferLoadLegacy(handle,regIndex)
  %1235 = extractvalue %dx.types.CBufRet.f32 %1234, 0
  %1236 = extractvalue %dx.types.CBufRet.f32 %1234, 1
  %1237 = extractvalue %dx.types.CBufRet.f32 %1234, 2
  %1238 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %75, i32 64)  ; CBufferLoadLegacy(handle,regIndex)
  %1239 = extractvalue %dx.types.CBufRet.f32 %1238, 0
  %1240 = extractvalue %dx.types.CBufRet.f32 %1238, 1
  %1241 = extractvalue %dx.types.CBufRet.f32 %1238, 2
  %1242 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %75, i32 76)  ; CBufferLoadLegacy(handle,regIndex)
  %1243 = extractvalue %dx.types.CBufRet.f32 %1242, 0
  %1244 = extractvalue %dx.types.CBufRet.f32 %1242, 1
  %1245 = extractvalue %dx.types.CBufRet.f32 %1242, 2
  %1246 = fsub fast float %1235, %1239
  %1247 = fsub fast float %1236, %1240
  %1248 = fsub fast float %1237, %1241
  %1249 = call float @dx.op.worldRayDirection.f32(i32 148, i8 0)  ; WorldRayDirection(col)
  %1250 = call float @dx.op.worldRayDirection.f32(i32 148, i8 1)  ; WorldRayDirection(col)
  %1251 = call float @dx.op.worldRayDirection.f32(i32 148, i8 2)  ; WorldRayDirection(col)
  %1252 = call float @dx.op.rayTCurrent.f32(i32 154)  ; RayTCurrent()
  %1253 = fmul fast float %1252, %1249
  %1254 = fmul fast float %1252, %1250
  %1255 = fmul fast float %1252, %1251
  %1256 = call i32 @dx.op.hitKind.i32(i32 143)  ; HitKind()
  %1257 = icmp eq i32 %1256, 254
  %1258 = select i1 %1257, float 1.000000e+00, float -1.000000e+00
  %1259 = call %dx.types.Handle @dx.op.createHandleForLib.dx.types.Handle(i32 160, %dx.types.Handle %31)  ; CreateHandleForLib(Resource)
  %1260 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %1259, %dx.types.ResourceProperties { i32 2, i32 1033 })  ; AnnotateHandle(res,props)  resource: Texture2D<4xF32>
  %1261 = call %dx.types.Handle @dx.op.createHandleForLib.dx.types.Handle(i32 160, %dx.types.Handle %16)  ; CreateHandleForLib(Resource)
  %1262 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %1261, %dx.types.ResourceProperties { i32 14, i32 0 })  ; AnnotateHandle(res,props)  resource: SamplerState
  %1263 = call %dx.types.ResRet.f32 @dx.op.sampleLevel.f32(i32 62, %dx.types.Handle %1260, %dx.types.Handle %1262, float %1146, float %1147, float undef, float undef, i32 0, i32 0, i32 undef, float %727)  ; SampleLevel(srv,sampler,coord0,coord1,coord2,coord3,offset0,offset1,offset2,LOD)
  %1264 = extractvalue %dx.types.ResRet.f32 %1263, 0
  %1265 = extractvalue %dx.types.ResRet.f32 %1263, 1
  %1266 = extractvalue %dx.types.ResRet.f32 %1263, 2
  %1267 = extractvalue %dx.types.ResRet.f32 %1263, 3
  %1268 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %67, i32 1)  ; CBufferLoadLegacy(handle,regIndex)
  %1269 = extractvalue %dx.types.CBufRet.f32 %1268, 0
  %1270 = extractvalue %dx.types.CBufRet.f32 %1268, 1
  %1271 = extractvalue %dx.types.CBufRet.f32 %1268, 2
  %1272 = extractvalue %dx.types.CBufRet.f32 %1268, 3
  %1273 = call float @dx.op.dot4.f32(i32 56, float %1264, float %1265, float %1266, float %1267, float %1269, float %1270, float %1271, float %1272)  ; Dot4(ax,ay,az,aw,bx,by,bz,bw)
  %1274 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %67, i32 2)  ; CBufferLoadLegacy(handle,regIndex)
  %1275 = extractvalue %dx.types.CBufRet.f32 %1274, 0
  %1276 = extractvalue %dx.types.CBufRet.f32 %1274, 1
  %1277 = extractvalue %dx.types.CBufRet.f32 %1274, 2
  %1278 = extractvalue %dx.types.CBufRet.f32 %1274, 3
  %1279 = call float @dx.op.dot4.f32(i32 56, float %1264, float %1265, float %1266, float %1267, float %1275, float %1276, float %1277, float %1278)  ; Dot4(ax,ay,az,aw,bx,by,bz,bw)
  %1280 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %67, i32 3)  ; CBufferLoadLegacy(handle,regIndex)
  %1281 = extractvalue %dx.types.CBufRet.f32 %1280, 0
  %1282 = extractvalue %dx.types.CBufRet.f32 %1280, 1
  %1283 = extractvalue %dx.types.CBufRet.f32 %1280, 2
  %1284 = extractvalue %dx.types.CBufRet.f32 %1280, 3
  %1285 = call float @dx.op.dot4.f32(i32 56, float %1264, float %1265, float %1266, float %1267, float %1281, float %1282, float %1283, float %1284)  ; Dot4(ax,ay,az,aw,bx,by,bz,bw)
  %1286 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %67, i32 4)  ; CBufferLoadLegacy(handle,regIndex)
  %1287 = extractvalue %dx.types.CBufRet.f32 %1286, 0
  %1288 = extractvalue %dx.types.CBufRet.f32 %1286, 1
  %1289 = extractvalue %dx.types.CBufRet.f32 %1286, 2
  %1290 = extractvalue %dx.types.CBufRet.f32 %1286, 3
  %1291 = call float @dx.op.dot4.f32(i32 56, float %1264, float %1265, float %1266, float %1267, float %1287, float %1288, float %1289, float %1290)  ; Dot4(ax,ay,az,aw,bx,by,bz,bw)
  %1292 = call float @dx.op.dot2.f32(i32 54, float %1140, float %1141, float -0.000000e+00, float 1.000000e+00)  ; Dot2(ax,ay,bx,by)
  %1293 = call float @dx.op.dot2.f32(i32 54, float %1140, float %1141, float 1.000000e+00, float 0.000000e+00)  ; Dot2(ax,ay,bx,by)
  %1294 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %67, i32 5)  ; CBufferLoadLegacy(handle,regIndex)
  %1295 = extractvalue %dx.types.CBufRet.f32 %1294, 0
  %1296 = fmul fast float %1295, %1293
  %1297 = fmul fast float %1295, %1292
  %1298 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %75, i32 144)  ; CBufferLoadLegacy(handle,regIndex)
  %1299 = extractvalue %dx.types.CBufRet.f32 %1298, 0
  %1300 = fadd fast float %1299, %727
  %1301 = call %dx.types.Handle @dx.op.createHandleForLib.dx.types.Handle(i32 160, %dx.types.Handle %30)  ; CreateHandleForLib(Resource)
  %1302 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %1301, %dx.types.ResourceProperties { i32 2, i32 1033 })  ; AnnotateHandle(res,props)  resource: Texture2D<4xF32>
  %1303 = call %dx.types.Handle @dx.op.createHandleForLib.dx.types.Handle(i32 160, %dx.types.Handle %12)  ; CreateHandleForLib(Resource)
  %1304 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %1303, %dx.types.ResourceProperties { i32 14, i32 0 })  ; AnnotateHandle(res,props)  resource: SamplerState
  %1305 = call %dx.types.ResRet.f32 @dx.op.sampleLevel.f32(i32 62, %dx.types.Handle %1302, %dx.types.Handle %1304, float %1296, float %1297, float undef, float undef, i32 0, i32 0, i32 undef, float %1300)  ; SampleLevel(srv,sampler,coord0,coord1,coord2,coord3,offset0,offset1,offset2,LOD)
  %1306 = extractvalue %dx.types.ResRet.f32 %1305, 0
  %1307 = extractvalue %dx.types.ResRet.f32 %1305, 1
  %1308 = fmul fast float %1306, 2.000000e+00
  %1309 = fmul fast float %1307, 2.000000e+00
  %1310 = fadd fast float %1308, -1.000000e+00
  %1311 = fadd fast float %1309, -1.000000e+00
  %1312 = call float @dx.op.dot2.f32(i32 54, float %1310, float %1311, float %1310, float %1311)  ; Dot2(ax,ay,bx,by)
  %1313 = fsub fast float 1.000000e+00, %1312
  %1314 = call float @dx.op.unary.f32(i32 7, float %1313)  ; Saturate(value)
  %1315 = call float @dx.op.unary.f32(i32 24, float %1314)  ; Sqrt(value)
  %1316 = fmul fast float %1310, %1273
  %1317 = fmul fast float %1311, %1273
  %1318 = fmul fast float %1315, %1273
  %1319 = extractvalue %dx.types.CBufRet.f32 %1294, 1
  %1320 = fmul fast float %1319, %1293
  %1321 = fmul fast float %1319, %1292
  %1322 = call %dx.types.Handle @dx.op.createHandleForLib.dx.types.Handle(i32 160, %dx.types.Handle %29)  ; CreateHandleForLib(Resource)
  %1323 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %1322, %dx.types.ResourceProperties { i32 2, i32 1033 })  ; AnnotateHandle(res,props)  resource: Texture2D<4xF32>
  %1324 = call %dx.types.Handle @dx.op.createHandleForLib.dx.types.Handle(i32 160, %dx.types.Handle %11)  ; CreateHandleForLib(Resource)
  %1325 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %1324, %dx.types.ResourceProperties { i32 14, i32 0 })  ; AnnotateHandle(res,props)  resource: SamplerState
  %1326 = call %dx.types.ResRet.f32 @dx.op.sampleLevel.f32(i32 62, %dx.types.Handle %1323, %dx.types.Handle %1325, float %1320, float %1321, float undef, float undef, i32 0, i32 0, i32 undef, float %1300)  ; SampleLevel(srv,sampler,coord0,coord1,coord2,coord3,offset0,offset1,offset2,LOD)
  %1327 = extractvalue %dx.types.ResRet.f32 %1326, 0
  %1328 = extractvalue %dx.types.ResRet.f32 %1326, 1
  %1329 = fmul fast float %1327, 2.000000e+00
  %1330 = fmul fast float %1328, 2.000000e+00
  %1331 = fadd fast float %1329, -1.000000e+00
  %1332 = fadd fast float %1330, -1.000000e+00
  %1333 = call float @dx.op.dot2.f32(i32 54, float %1331, float %1332, float %1331, float %1332)  ; Dot2(ax,ay,bx,by)
  %1334 = fsub fast float 1.000000e+00, %1333
  %1335 = call float @dx.op.unary.f32(i32 7, float %1334)  ; Saturate(value)
  %1336 = call float @dx.op.unary.f32(i32 24, float %1335)  ; Sqrt(value)
  %1337 = fmul fast float %1331, %1279
  %1338 = fmul fast float %1332, %1279
  %1339 = fmul fast float %1336, %1279
  %1340 = fadd fast float %1337, %1316
  %1341 = fadd fast float %1338, %1317
  %1342 = fadd fast float %1339, %1318
  %1343 = extractvalue %dx.types.CBufRet.f32 %1294, 2
  %1344 = fmul fast float %1343, %1293
  %1345 = fmul fast float %1343, %1292
  %1346 = call %dx.types.Handle @dx.op.createHandleForLib.dx.types.Handle(i32 160, %dx.types.Handle %28)  ; CreateHandleForLib(Resource)
  %1347 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %1346, %dx.types.ResourceProperties { i32 2, i32 1033 })  ; AnnotateHandle(res,props)  resource: Texture2D<4xF32>
  %1348 = call %dx.types.Handle @dx.op.createHandleForLib.dx.types.Handle(i32 160, %dx.types.Handle %10)  ; CreateHandleForLib(Resource)
  %1349 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %1348, %dx.types.ResourceProperties { i32 14, i32 0 })  ; AnnotateHandle(res,props)  resource: SamplerState
  %1350 = call %dx.types.ResRet.f32 @dx.op.sampleLevel.f32(i32 62, %dx.types.Handle %1347, %dx.types.Handle %1349, float %1344, float %1345, float undef, float undef, i32 0, i32 0, i32 undef, float %1300)  ; SampleLevel(srv,sampler,coord0,coord1,coord2,coord3,offset0,offset1,offset2,LOD)
  %1351 = extractvalue %dx.types.ResRet.f32 %1350, 0
  %1352 = extractvalue %dx.types.ResRet.f32 %1350, 1
  %1353 = fmul fast float %1351, 2.000000e+00
  %1354 = fmul fast float %1352, 2.000000e+00
  %1355 = fadd fast float %1353, -1.000000e+00
  %1356 = fadd fast float %1354, -1.000000e+00
  %1357 = call float @dx.op.dot2.f32(i32 54, float %1355, float %1356, float %1355, float %1356)  ; Dot2(ax,ay,bx,by)
  %1358 = fsub fast float 1.000000e+00, %1357
  %1359 = call float @dx.op.unary.f32(i32 7, float %1358)  ; Saturate(value)
  %1360 = call float @dx.op.unary.f32(i32 24, float %1359)  ; Sqrt(value)
  %1361 = fmul fast float %1355, %1285
  %1362 = fmul fast float %1356, %1285
  %1363 = fmul fast float %1360, %1285
  %1364 = fadd fast float %1340, %1361
  %1365 = fadd fast float %1341, %1362
  %1366 = fadd fast float %1342, %1363
  %1367 = extractvalue %dx.types.CBufRet.f32 %1294, 3
  %1368 = fmul fast float %1367, %1293
  %1369 = fmul fast float %1367, %1292
  %1370 = call %dx.types.Handle @dx.op.createHandleForLib.dx.types.Handle(i32 160, %dx.types.Handle %27)  ; CreateHandleForLib(Resource)
  %1371 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %1370, %dx.types.ResourceProperties { i32 2, i32 1033 })  ; AnnotateHandle(res,props)  resource: Texture2D<4xF32>
  %1372 = call %dx.types.Handle @dx.op.createHandleForLib.dx.types.Handle(i32 160, %dx.types.Handle %9)  ; CreateHandleForLib(Resource)
  %1373 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %1372, %dx.types.ResourceProperties { i32 14, i32 0 })  ; AnnotateHandle(res,props)  resource: SamplerState
  %1374 = call %dx.types.ResRet.f32 @dx.op.sampleLevel.f32(i32 62, %dx.types.Handle %1371, %dx.types.Handle %1373, float %1368, float %1369, float undef, float undef, i32 0, i32 0, i32 undef, float %1300)  ; SampleLevel(srv,sampler,coord0,coord1,coord2,coord3,offset0,offset1,offset2,LOD)
  %1375 = extractvalue %dx.types.ResRet.f32 %1374, 0
  %1376 = extractvalue %dx.types.ResRet.f32 %1374, 1
  %1377 = fmul fast float %1375, 2.000000e+00
  %1378 = fmul fast float %1376, 2.000000e+00
  %1379 = fadd fast float %1377, -1.000000e+00
  %1380 = fadd fast float %1378, -1.000000e+00
  %1381 = call float @dx.op.dot2.f32(i32 54, float %1379, float %1380, float %1379, float %1380)  ; Dot2(ax,ay,bx,by)
  %1382 = fsub fast float 1.000000e+00, %1381
  %1383 = call float @dx.op.unary.f32(i32 7, float %1382)  ; Saturate(value)
  %1384 = call float @dx.op.unary.f32(i32 24, float %1383)  ; Sqrt(value)
  %1385 = fmul fast float %1379, %1291
  %1386 = fmul fast float %1380, %1291
  %1387 = fmul fast float %1384, %1291
  %1388 = fadd fast float %1364, %1385
  %1389 = fadd fast float %1365, %1386
  %1390 = fadd fast float %1366, %1387
  %1391 = fmul fast float %1388, %1159
  %1392 = fmul fast float %1389, %1159
  %1393 = fmul fast float %1390, %1159
  %1394 = fadd fast float %1391, %733
  %1395 = fadd fast float %1392, %1158
  %1396 = fadd fast float %1393, %734
  %1397 = call float @dx.op.dot3.f32(i32 55, float %1394, float %1395, float %1396, float %1394, float %1395, float %1396)  ; Dot3(ax,ay,az,bx,by,bz)
  %1398 = call float @dx.op.unary.f32(i32 25, float %1397)  ; Rsqrt(value)
  %1399 = fmul fast float %1394, %1398
  %1400 = fmul fast float %1395, %1398
  %1401 = fmul fast float %1396, %1398
  %1402 = fmul fast float %1399, %1204
  %1403 = call float @dx.op.tertiary.f32(i32 46, float %1400, float %1211, float %1402)  ; FMad(a,b,c)
  %1404 = call float @dx.op.tertiary.f32(i32 46, float %1401, float %1220, float %1403)  ; FMad(a,b,c)
  %1405 = fmul fast float %1399, %1206
  %1406 = call float @dx.op.tertiary.f32(i32 46, float %1400, float %1214, float %1405)  ; FMad(a,b,c)
  %1407 = call float @dx.op.tertiary.f32(i32 46, float %1401, float %1223, float %1406)  ; FMad(a,b,c)
  %1408 = fmul fast float %1399, %1208
  %1409 = call float @dx.op.tertiary.f32(i32 46, float %1400, float %1217, float %1408)  ; FMad(a,b,c)
  %1410 = call float @dx.op.tertiary.f32(i32 46, float %1401, float %1226, float %1409)  ; FMad(a,b,c)
  %1411 = call float @dx.op.dot3.f32(i32 55, float %1404, float %1407, float %1410, float %1404, float %1407, float %1410)  ; Dot3(ax,ay,az,bx,by,bz)
  %1412 = call float @dx.op.unary.f32(i32 25, float %1411)  ; Rsqrt(value)
  %1413 = fmul fast float %1404, %1258
  %1414 = fmul fast float %1413, %1412
  %1415 = fmul fast float %1407, %1258
  %1416 = fmul fast float %1415, %1412
  %1417 = fmul fast float %1410, %1258
  %1418 = fmul fast float %1417, %1412
  %1419 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %67, i32 6)  ; CBufferLoadLegacy(handle,regIndex)
  %1420 = extractvalue %dx.types.CBufRet.f32 %1419, 0
  %1421 = extractvalue %dx.types.CBufRet.f32 %1419, 1
  %1422 = extractvalue %dx.types.CBufRet.f32 %1419, 2
  %1423 = extractvalue %dx.types.CBufRet.f32 %1419, 3
  %1424 = fmul fast float %1421, %1420
  %1425 = fmul fast float %1422, %1420
  %1426 = fmul fast float %1423, %1420
  %1427 = call %dx.types.Handle @dx.op.createHandleForLib.dx.types.Handle(i32 160, %dx.types.Handle %26)  ; CreateHandleForLib(Resource)
  %1428 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %1427, %dx.types.ResourceProperties { i32 2, i32 1033 })  ; AnnotateHandle(res,props)  resource: Texture2D<4xF32>
  %1429 = call %dx.types.Handle @dx.op.createHandleForLib.dx.types.Handle(i32 160, %dx.types.Handle %8)  ; CreateHandleForLib(Resource)
  %1430 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %1429, %dx.types.ResourceProperties { i32 14, i32 0 })  ; AnnotateHandle(res,props)  resource: SamplerState
  %1431 = call %dx.types.ResRet.f32 @dx.op.sampleLevel.f32(i32 62, %dx.types.Handle %1428, %dx.types.Handle %1430, float %1296, float %1297, float undef, float undef, i32 0, i32 0, i32 undef, float %1300)  ; SampleLevel(srv,sampler,coord0,coord1,coord2,coord3,offset0,offset1,offset2,LOD)
  %1432 = extractvalue %dx.types.ResRet.f32 %1431, 0
  %1433 = extractvalue %dx.types.ResRet.f32 %1431, 1
  %1434 = extractvalue %dx.types.ResRet.f32 %1431, 2
  %1435 = fmul fast float %1432, %1273
  %1436 = fmul fast float %1433, %1273
  %1437 = fmul fast float %1434, %1273
  %1438 = call %dx.types.Handle @dx.op.createHandleForLib.dx.types.Handle(i32 160, %dx.types.Handle %25)  ; CreateHandleForLib(Resource)
  %1439 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %1438, %dx.types.ResourceProperties { i32 2, i32 1033 })  ; AnnotateHandle(res,props)  resource: Texture2D<4xF32>
  %1440 = call %dx.types.Handle @dx.op.createHandleForLib.dx.types.Handle(i32 160, %dx.types.Handle %7)  ; CreateHandleForLib(Resource)
  %1441 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %1440, %dx.types.ResourceProperties { i32 14, i32 0 })  ; AnnotateHandle(res,props)  resource: SamplerState
  %1442 = call %dx.types.ResRet.f32 @dx.op.sampleLevel.f32(i32 62, %dx.types.Handle %1439, %dx.types.Handle %1441, float %1320, float %1321, float undef, float undef, i32 0, i32 0, i32 undef, float %1300)  ; SampleLevel(srv,sampler,coord0,coord1,coord2,coord3,offset0,offset1,offset2,LOD)
  %1443 = extractvalue %dx.types.ResRet.f32 %1442, 0
  %1444 = extractvalue %dx.types.ResRet.f32 %1442, 1
  %1445 = extractvalue %dx.types.ResRet.f32 %1442, 2
  %1446 = fmul fast float %1443, %1279
  %1447 = fmul fast float %1444, %1279
  %1448 = fmul fast float %1445, %1279
  %1449 = fadd fast float %1446, %1435
  %1450 = fadd fast float %1447, %1436
  %1451 = fadd fast float %1448, %1437
  %1452 = call %dx.types.Handle @dx.op.createHandleForLib.dx.types.Handle(i32 160, %dx.types.Handle %24)  ; CreateHandleForLib(Resource)
  %1453 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %1452, %dx.types.ResourceProperties { i32 2, i32 1033 })  ; AnnotateHandle(res,props)  resource: Texture2D<4xF32>
  %1454 = call %dx.types.Handle @dx.op.createHandleForLib.dx.types.Handle(i32 160, %dx.types.Handle %6)  ; CreateHandleForLib(Resource)
  %1455 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %1454, %dx.types.ResourceProperties { i32 14, i32 0 })  ; AnnotateHandle(res,props)  resource: SamplerState
  %1456 = call %dx.types.ResRet.f32 @dx.op.sampleLevel.f32(i32 62, %dx.types.Handle %1453, %dx.types.Handle %1455, float %1344, float %1345, float undef, float undef, i32 0, i32 0, i32 undef, float %1300)  ; SampleLevel(srv,sampler,coord0,coord1,coord2,coord3,offset0,offset1,offset2,LOD)
  %1457 = extractvalue %dx.types.ResRet.f32 %1456, 0
  %1458 = extractvalue %dx.types.ResRet.f32 %1456, 1
  %1459 = extractvalue %dx.types.ResRet.f32 %1456, 2
  %1460 = fmul fast float %1457, %1285
  %1461 = fmul fast float %1458, %1285
  %1462 = fmul fast float %1459, %1285
  %1463 = fadd fast float %1449, %1460
  %1464 = fadd fast float %1450, %1461
  %1465 = fadd fast float %1451, %1462
  %1466 = call %dx.types.Handle @dx.op.createHandleForLib.dx.types.Handle(i32 160, %dx.types.Handle %23)  ; CreateHandleForLib(Resource)
  %1467 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %1466, %dx.types.ResourceProperties { i32 2, i32 1033 })  ; AnnotateHandle(res,props)  resource: Texture2D<4xF32>
  %1468 = call %dx.types.Handle @dx.op.createHandleForLib.dx.types.Handle(i32 160, %dx.types.Handle %5)  ; CreateHandleForLib(Resource)
  %1469 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %1468, %dx.types.ResourceProperties { i32 14, i32 0 })  ; AnnotateHandle(res,props)  resource: SamplerState
  %1470 = call %dx.types.ResRet.f32 @dx.op.sampleLevel.f32(i32 62, %dx.types.Handle %1467, %dx.types.Handle %1469, float %1368, float %1369, float undef, float undef, i32 0, i32 0, i32 undef, float %1300)  ; SampleLevel(srv,sampler,coord0,coord1,coord2,coord3,offset0,offset1,offset2,LOD)
  %1471 = extractvalue %dx.types.ResRet.f32 %1470, 0
  %1472 = extractvalue %dx.types.ResRet.f32 %1470, 1
  %1473 = extractvalue %dx.types.ResRet.f32 %1470, 2
  %1474 = fmul fast float %1471, %1291
  %1475 = fmul fast float %1472, %1291
  %1476 = fmul fast float %1473, %1291
  %1477 = fadd fast float %1463, %1474
  %1478 = fadd fast float %1464, %1475
  %1479 = fadd fast float %1465, %1476
  %1480 = call %dx.types.Handle @dx.op.createHandleForLib.dx.types.Handle(i32 160, %dx.types.Handle %22)  ; CreateHandleForLib(Resource)
  %1481 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %1480, %dx.types.ResourceProperties { i32 2, i32 1033 })  ; AnnotateHandle(res,props)  resource: Texture2D<4xF32>
  %1482 = call %dx.types.Handle @dx.op.createHandleForLib.dx.types.Handle(i32 160, %dx.types.Handle %4)  ; CreateHandleForLib(Resource)
  %1483 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %1482, %dx.types.ResourceProperties { i32 14, i32 0 })  ; AnnotateHandle(res,props)  resource: SamplerState
  %1484 = call %dx.types.ResRet.f32 @dx.op.sampleLevel.f32(i32 62, %dx.types.Handle %1481, %dx.types.Handle %1483, float %1296, float %1297, float undef, float undef, i32 0, i32 0, i32 undef, float %1300)  ; SampleLevel(srv,sampler,coord0,coord1,coord2,coord3,offset0,offset1,offset2,LOD)
  %1485 = extractvalue %dx.types.ResRet.f32 %1484, 0
  %1486 = fmul fast float %1485, %1273
  %1487 = call %dx.types.Handle @dx.op.createHandleForLib.dx.types.Handle(i32 160, %dx.types.Handle %21)  ; CreateHandleForLib(Resource)
  %1488 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %1487, %dx.types.ResourceProperties { i32 2, i32 1033 })  ; AnnotateHandle(res,props)  resource: Texture2D<4xF32>
  %1489 = call %dx.types.Handle @dx.op.createHandleForLib.dx.types.Handle(i32 160, %dx.types.Handle %3)  ; CreateHandleForLib(Resource)
  %1490 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %1489, %dx.types.ResourceProperties { i32 14, i32 0 })  ; AnnotateHandle(res,props)  resource: SamplerState
  %1491 = call %dx.types.ResRet.f32 @dx.op.sampleLevel.f32(i32 62, %dx.types.Handle %1488, %dx.types.Handle %1490, float %1320, float %1321, float undef, float undef, i32 0, i32 0, i32 undef, float %1300)  ; SampleLevel(srv,sampler,coord0,coord1,coord2,coord3,offset0,offset1,offset2,LOD)
  %1492 = extractvalue %dx.types.ResRet.f32 %1491, 0
  %1493 = fmul fast float %1492, %1279
  %1494 = fadd fast float %1493, %1486
  %1495 = call %dx.types.Handle @dx.op.createHandleForLib.dx.types.Handle(i32 160, %dx.types.Handle %20)  ; CreateHandleForLib(Resource)
  %1496 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %1495, %dx.types.ResourceProperties { i32 2, i32 1033 })  ; AnnotateHandle(res,props)  resource: Texture2D<4xF32>
  %1497 = call %dx.types.Handle @dx.op.createHandleForLib.dx.types.Handle(i32 160, %dx.types.Handle %2)  ; CreateHandleForLib(Resource)
  %1498 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %1497, %dx.types.ResourceProperties { i32 14, i32 0 })  ; AnnotateHandle(res,props)  resource: SamplerState
  %1499 = call %dx.types.ResRet.f32 @dx.op.sampleLevel.f32(i32 62, %dx.types.Handle %1496, %dx.types.Handle %1498, float %1344, float %1345, float undef, float undef, i32 0, i32 0, i32 undef, float %1300)  ; SampleLevel(srv,sampler,coord0,coord1,coord2,coord3,offset0,offset1,offset2,LOD)
  %1500 = extractvalue %dx.types.ResRet.f32 %1499, 0
  %1501 = fmul fast float %1500, %1285
  %1502 = fadd fast float %1494, %1501
  %1503 = call %dx.types.Handle @dx.op.createHandleForLib.dx.types.Handle(i32 160, %dx.types.Handle %19)  ; CreateHandleForLib(Resource)
  %1504 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %1503, %dx.types.ResourceProperties { i32 2, i32 1033 })  ; AnnotateHandle(res,props)  resource: Texture2D<4xF32>
  %1505 = call %dx.types.Handle @dx.op.createHandleForLib.dx.types.Handle(i32 160, %dx.types.Handle %1)  ; CreateHandleForLib(Resource)
  %1506 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %1505, %dx.types.ResourceProperties { i32 14, i32 0 })  ; AnnotateHandle(res,props)  resource: SamplerState
  %1507 = call %dx.types.ResRet.f32 @dx.op.sampleLevel.f32(i32 62, %dx.types.Handle %1504, %dx.types.Handle %1506, float %1368, float %1369, float undef, float undef, i32 0, i32 0, i32 undef, float %1300)  ; SampleLevel(srv,sampler,coord0,coord1,coord2,coord3,offset0,offset1,offset2,LOD)
  %1508 = extractvalue %dx.types.ResRet.f32 %1507, 0
  %1509 = fmul fast float %1508, %1291
  %1510 = fadd fast float %1502, %1509
  %1511 = mul nuw nsw i32 %1153, 42
  %1512 = call %dx.types.ResRet.f32 @dx.op.rawBufferLoad.f32(i32 139, %dx.types.Handle %869, i32 %1511, i32 0, i8 15, i32 4)  ; RawBufferLoad(srv,index,elementOffset,mask,alignment)
  %1513 = extractvalue %dx.types.ResRet.f32 %1512, 0
  %1514 = bitcast float %1513 to i32
  %1515 = zext i1 %1257 to i32
  %1516 = and i32 %79, 16777216
  %1517 = icmp eq i32 %1516, 0
  %1518 = call float @dx.op.unary.f32(i32 7, float %1477)  ; Saturate(value)
  %1519 = call float @dx.op.unary.f32(i32 7, float %1478)  ; Saturate(value)
  %1520 = call float @dx.op.unary.f32(i32 7, float %1479)  ; Saturate(value)
  %1521 = call float @dx.op.unary.f32(i32 7, float %1510)  ; Saturate(value)
  %1522 = fmul fast float %1521, %1160
  %1523 = fadd fast float %1522, %736
  %1524 = call float @dx.op.dot3.f32(i32 55, float %1414, float %1416, float %1418, float %1414, float %1416, float %1418)  ; Dot3(ax,ay,az,bx,by,bz)
  %1525 = call float @dx.op.unary.f32(i32 25, float %1524)  ; Rsqrt(value)
  %1526 = fmul fast float %1525, %1414
  %1527 = fmul fast float %1525, %1416
  %1528 = fmul fast float %1525, %1418
  %1529 = call float @dx.op.binary.f32(i32 35, float %1424, float 0.000000e+00)  ; FMax(a,b)
  %1530 = call float @dx.op.binary.f32(i32 35, float %1425, float 0.000000e+00)  ; FMax(a,b)
  %1531 = call float @dx.op.binary.f32(i32 35, float %1426, float 0.000000e+00)  ; FMax(a,b)
  %1532 = fadd fast float %1246, %1154
  %1533 = fmul fast float %1532, 2.097152e+06
  %1534 = fsub fast float %1227, %1156
  %1535 = fsub fast float %1534, %1231
  %1536 = fadd fast float %1535, %1243
  %1537 = fadd fast float %1536, %1253
  %1538 = fadd fast float %1537, %1533
  %1539 = fadd fast float %1247, %729
  %1540 = fmul fast float %1539, 2.097152e+06
  %1541 = fsub fast float %1228, %731
  %1542 = fsub fast float %1541, %1232
  %1543 = fadd fast float %1542, %1244
  %1544 = fadd fast float %1543, %1254
  %1545 = fadd fast float %1544, %1540
  %1546 = fadd fast float %1248, %1155
  %1547 = fmul fast float %1546, 2.097152e+06
  %1548 = fsub fast float %1229, %1157
  %1549 = fsub fast float %1548, %1233
  %1550 = fadd fast float %1549, %1245
  %1551 = fadd fast float %1550, %1255
  %1552 = fadd fast float %1551, %1547
  %1553 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %75, i32 232)  ; CBufferLoadLegacy(handle,regIndex)
  %1554 = extractvalue %dx.types.CBufRet.f32 %1553, 0
  %1555 = extractvalue %dx.types.CBufRet.f32 %1553, 1
  %1556 = extractvalue %dx.types.CBufRet.f32 %1553, 2
  %1557 = fmul fast float %1554, %1538
  %1558 = fmul fast float %1555, %1545
  %1559 = fmul fast float %1556, %1552
  %1560 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %75, i32 233)  ; CBufferLoadLegacy(handle,regIndex)
  %1561 = extractvalue %dx.types.CBufRet.f32 %1560, 0
  %1562 = extractvalue %dx.types.CBufRet.f32 %1560, 1
  %1563 = extractvalue %dx.types.CBufRet.f32 %1560, 2
  %1564 = fadd fast float %1557, %1561
  %1565 = fadd fast float %1558, %1562
  %1566 = fadd fast float %1559, %1563
  %1567 = call float @dx.op.binary.f32(i32 35, float %1564, float 0.000000e+00)  ; FMax(a,b)
  %1568 = call float @dx.op.binary.f32(i32 35, float %1565, float 0.000000e+00)  ; FMax(a,b)
  %1569 = call float @dx.op.binary.f32(i32 35, float %1566, float 0.000000e+00)  ; FMax(a,b)
  %1570 = call float @dx.op.binary.f32(i32 36, float %1567, float 0x3FEFAE1480000000)  ; FMin(a,b)
  %1571 = call float @dx.op.binary.f32(i32 36, float %1568, float 0x3FEFAE1480000000)  ; FMin(a,b)
  %1572 = call float @dx.op.binary.f32(i32 36, float %1569, float 0x3FEFAE1480000000)  ; FMin(a,b)
  %1573 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %75, i32 234)  ; CBufferLoadLegacy(handle,regIndex)
  %1574 = extractvalue %dx.types.CBufRet.f32 %1573, 0
  %1575 = extractvalue %dx.types.CBufRet.f32 %1573, 1
  %1576 = extractvalue %dx.types.CBufRet.f32 %1573, 2
  %1577 = fmul fast float %1574, %1570
  %1578 = fmul fast float %1575, %1571
  %1579 = fmul fast float %1576, %1572
  %1580 = fptosi float %1577 to i32
  %1581 = fptosi float %1578 to i32
  %1582 = fptosi float %1579 to i32
  %1583 = call %dx.types.Handle @dx.op.createHandleForLib.dx.types.Handle(i32 160, %dx.types.Handle %49)  ; CreateHandleForLib(Resource)
  %1584 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %1583, %dx.types.ResourceProperties { i32 4, i32 1029 })  ; AnnotateHandle(res,props)  resource: Texture3D<4xU32>
  %1585 = call %dx.types.ResRet.i32 @dx.op.textureLoad.i32(i32 66, %dx.types.Handle %1584, i32 0, i32 %1580, i32 %1581, i32 %1582, i32 undef, i32 undef, i32 undef)  ; TextureLoad(srv,mipLevelOrSampleCount,coord0,coord1,coord2,offset0,offset1,offset2)
  %1586 = extractvalue %dx.types.ResRet.i32 %1585, 0
  %1587 = extractvalue %dx.types.ResRet.i32 %1585, 1
  %1588 = extractvalue %dx.types.ResRet.i32 %1585, 2
  %1589 = extractvalue %dx.types.ResRet.i32 %1585, 3
  %1590 = uitofp i32 %1586 to float
  %1591 = uitofp i32 %1587 to float
  %1592 = uitofp i32 %1588 to float
  %1593 = uitofp i32 %1589 to float
  %1594 = extractvalue %dx.types.CBufRet.f32 %1573, 3
  %1595 = fadd fast float %1594, 1.000000e+00
  %1596 = fmul fast float %1595, %1590
  %1597 = fmul fast float %1595, %1591
  %1598 = fmul fast float %1595, %1592
  %1599 = fdiv fast float %1577, %1593
  %1600 = fdiv fast float %1578, %1593
  %1601 = fdiv fast float %1579, %1593
  %1602 = call float @dx.op.unary.f32(i32 22, float %1599)  ; Frc(value)
  %1603 = call float @dx.op.unary.f32(i32 22, float %1600)  ; Frc(value)
  %1604 = call float @dx.op.unary.f32(i32 22, float %1601)  ; Frc(value)
  %1605 = fmul fast float %1594, %1602
  %1606 = fmul fast float %1594, %1603
  %1607 = fmul fast float %1594, %1604
  %1608 = fadd fast float %1596, 5.000000e-01
  %1609 = fadd fast float %1608, %1605
  %1610 = fadd fast float %1597, 5.000000e-01
  %1611 = fadd fast float %1610, %1606
  %1612 = fadd fast float %1598, 5.000000e-01
  %1613 = fadd fast float %1612, %1607
  %1614 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %75, i32 235)  ; CBufferLoadLegacy(handle,regIndex)
  %1615 = extractvalue %dx.types.CBufRet.f32 %1614, 0
  %1616 = extractvalue %dx.types.CBufRet.f32 %1614, 1
  %1617 = extractvalue %dx.types.CBufRet.f32 %1614, 2
  %1618 = fmul fast float %1609, %1615
  %1619 = fmul fast float %1611, %1616
  %1620 = fmul fast float %1613, %1617
  %1621 = call %dx.types.Handle @dx.op.createHandleForLib.dx.types.Handle(i32 160, %dx.types.Handle %48)  ; CreateHandleForLib(Resource)
  %1622 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %1621, %dx.types.ResourceProperties { i32 4, i32 1033 })  ; AnnotateHandle(res,props)  resource: Texture3D<4xF32>
  %1623 = call %dx.types.Handle @dx.op.createHandleForLib.dx.types.Handle(i32 160, %dx.types.Handle %17)  ; CreateHandleForLib(Resource)
  %1624 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %1623, %dx.types.ResourceProperties { i32 14, i32 0 })  ; AnnotateHandle(res,props)  resource: SamplerState
  %1625 = call %dx.types.ResRet.f32 @dx.op.sampleLevel.f32(i32 62, %dx.types.Handle %1622, %dx.types.Handle %1624, float %1618, float %1619, float %1620, float undef, i32 0, i32 0, i32 0, float 0.000000e+00)  ; SampleLevel(srv,sampler,coord0,coord1,coord2,coord3,offset0,offset1,offset2,LOD)
  %1626 = extractvalue %dx.types.ResRet.f32 %1625, 0
  %1627 = extractvalue %dx.types.ResRet.f32 %1625, 1
  %1628 = extractvalue %dx.types.ResRet.f32 %1625, 2
  %1629 = call %dx.types.Handle @dx.op.createHandleForLib.dx.types.Handle(i32 160, %dx.types.Handle %47)  ; CreateHandleForLib(Resource)
  %1630 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %1629, %dx.types.ResourceProperties { i32 4, i32 1033 })  ; AnnotateHandle(res,props)  resource: Texture3D<4xF32>
  %1631 = call %dx.types.ResRet.f32 @dx.op.sampleLevel.f32(i32 62, %dx.types.Handle %1630, %dx.types.Handle %1624, float %1618, float %1619, float %1620, float undef, i32 0, i32 0, i32 0, float 0.000000e+00)  ; SampleLevel(srv,sampler,coord0,coord1,coord2,coord3,offset0,offset1,offset2,LOD)
  %1632 = extractvalue %dx.types.ResRet.f32 %1631, 0
  %1633 = extractvalue %dx.types.ResRet.f32 %1631, 1
  %1634 = extractvalue %dx.types.ResRet.f32 %1631, 2
  %1635 = extractvalue %dx.types.ResRet.f32 %1631, 3
  %1636 = fmul fast float %1632, 2.000000e+00
  %1637 = fmul fast float %1633, 2.000000e+00
  %1638 = fmul fast float %1634, 2.000000e+00
  %1639 = fmul fast float %1635, 2.000000e+00
  %1640 = fadd fast float %1636, -1.000000e+00
  %1641 = fadd fast float %1637, -1.000000e+00
  %1642 = fadd fast float %1638, -1.000000e+00
  %1643 = fadd fast float %1639, -1.000000e+00
  %1644 = call %dx.types.Handle @dx.op.createHandleForLib.dx.types.Handle(i32 160, %dx.types.Handle %45)  ; CreateHandleForLib(Resource)
  %1645 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %1644, %dx.types.ResourceProperties { i32 4, i32 1033 })  ; AnnotateHandle(res,props)  resource: Texture3D<4xF32>
  %1646 = call %dx.types.ResRet.f32 @dx.op.sampleLevel.f32(i32 62, %dx.types.Handle %1645, %dx.types.Handle %1624, float %1618, float %1619, float %1620, float undef, i32 0, i32 0, i32 0, float 0.000000e+00)  ; SampleLevel(srv,sampler,coord0,coord1,coord2,coord3,offset0,offset1,offset2,LOD)
  %1647 = extractvalue %dx.types.ResRet.f32 %1646, 0
  %1648 = extractvalue %dx.types.ResRet.f32 %1646, 1
  %1649 = extractvalue %dx.types.ResRet.f32 %1646, 2
  %1650 = extractvalue %dx.types.ResRet.f32 %1646, 3
  %1651 = fmul fast float %1647, 2.000000e+00
  %1652 = fmul fast float %1648, 2.000000e+00
  %1653 = fmul fast float %1649, 2.000000e+00
  %1654 = fmul fast float %1650, 2.000000e+00
  %1655 = fadd fast float %1651, -1.000000e+00
  %1656 = fadd fast float %1652, -1.000000e+00
  %1657 = fadd fast float %1653, -1.000000e+00
  %1658 = fadd fast float %1654, -1.000000e+00
  %1659 = call %dx.types.Handle @dx.op.createHandleForLib.dx.types.Handle(i32 160, %dx.types.Handle %43)  ; CreateHandleForLib(Resource)
  %1660 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %1659, %dx.types.ResourceProperties { i32 4, i32 1033 })  ; AnnotateHandle(res,props)  resource: Texture3D<4xF32>
  %1661 = call %dx.types.ResRet.f32 @dx.op.sampleLevel.f32(i32 62, %dx.types.Handle %1660, %dx.types.Handle %1624, float %1618, float %1619, float %1620, float undef, i32 0, i32 0, i32 0, float 0.000000e+00)  ; SampleLevel(srv,sampler,coord0,coord1,coord2,coord3,offset0,offset1,offset2,LOD)
  %1662 = extractvalue %dx.types.ResRet.f32 %1661, 0
  %1663 = extractvalue %dx.types.ResRet.f32 %1661, 1
  %1664 = extractvalue %dx.types.ResRet.f32 %1661, 2
  %1665 = extractvalue %dx.types.ResRet.f32 %1661, 3
  %1666 = fmul fast float %1662, 2.000000e+00
  %1667 = fmul fast float %1663, 2.000000e+00
  %1668 = fmul fast float %1664, 2.000000e+00
  %1669 = fmul fast float %1665, 2.000000e+00
  %1670 = fadd fast float %1666, -1.000000e+00
  %1671 = fadd fast float %1667, -1.000000e+00
  %1672 = fadd fast float %1668, -1.000000e+00
  %1673 = fadd fast float %1669, -1.000000e+00
  %1674 = fmul fast float %1626, 0x3FFBB67B80000000
  %1675 = fmul fast float %1674, %1640
  %1676 = fmul fast float %1674, %1641
  %1677 = fmul fast float %1674, %1642
  %1678 = fmul fast float %1626, 0x400EFBDC80000000
  %1679 = fmul fast float %1678, %1643
  %1680 = fmul fast float %1627, 0x3FFBB67B80000000
  %1681 = fmul fast float %1680, %1655
  %1682 = fmul fast float %1680, %1656
  %1683 = fmul fast float %1680, %1657
  %1684 = fmul fast float %1627, 0x400EFBDC80000000
  %1685 = fmul fast float %1684, %1658
  %1686 = fmul fast float %1628, 0x3FFBB67B80000000
  %1687 = fmul fast float %1686, %1670
  %1688 = fmul fast float %1686, %1671
  %1689 = fmul fast float %1686, %1672
  %1690 = fmul fast float %1628, 0x400EFBDC80000000
  %1691 = fmul fast float %1690, %1673
  %1692 = call %dx.types.Handle @dx.op.createHandleForLib.dx.types.Handle(i32 160, %dx.types.Handle %46)  ; CreateHandleForLib(Resource)
  %1693 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %1692, %dx.types.ResourceProperties { i32 4, i32 1033 })  ; AnnotateHandle(res,props)  resource: Texture3D<4xF32>
  %1694 = call %dx.types.ResRet.f32 @dx.op.sampleLevel.f32(i32 62, %dx.types.Handle %1693, %dx.types.Handle %1624, float %1618, float %1619, float %1620, float undef, i32 0, i32 0, i32 0, float 0.000000e+00)  ; SampleLevel(srv,sampler,coord0,coord1,coord2,coord3,offset0,offset1,offset2,LOD)
  %1695 = extractvalue %dx.types.ResRet.f32 %1694, 0
  %1696 = extractvalue %dx.types.ResRet.f32 %1694, 1
  %1697 = extractvalue %dx.types.ResRet.f32 %1694, 2
  %1698 = extractvalue %dx.types.ResRet.f32 %1694, 3
  %1699 = fmul fast float %1695, 2.000000e+00
  %1700 = fmul fast float %1696, 2.000000e+00
  %1701 = fmul fast float %1697, 2.000000e+00
  %1702 = fmul fast float %1698, 2.000000e+00
  %1703 = fadd fast float %1699, -1.000000e+00
  %1704 = fadd fast float %1700, -1.000000e+00
  %1705 = fadd fast float %1701, -1.000000e+00
  %1706 = fadd fast float %1702, -1.000000e+00
  %1707 = call %dx.types.Handle @dx.op.createHandleForLib.dx.types.Handle(i32 160, %dx.types.Handle %44)  ; CreateHandleForLib(Resource)
  %1708 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %1707, %dx.types.ResourceProperties { i32 4, i32 1033 })  ; AnnotateHandle(res,props)  resource: Texture3D<4xF32>
  %1709 = call %dx.types.ResRet.f32 @dx.op.sampleLevel.f32(i32 62, %dx.types.Handle %1708, %dx.types.Handle %1624, float %1618, float %1619, float %1620, float undef, i32 0, i32 0, i32 0, float 0.000000e+00)  ; SampleLevel(srv,sampler,coord0,coord1,coord2,coord3,offset0,offset1,offset2,LOD)
  %1710 = extractvalue %dx.types.ResRet.f32 %1709, 0
  %1711 = extractvalue %dx.types.ResRet.f32 %1709, 1
  %1712 = extractvalue %dx.types.ResRet.f32 %1709, 2
  %1713 = extractvalue %dx.types.ResRet.f32 %1709, 3
  %1714 = fmul fast float %1710, 2.000000e+00
  %1715 = fmul fast float %1711, 2.000000e+00
  %1716 = fmul fast float %1712, 2.000000e+00
  %1717 = fmul fast float %1713, 2.000000e+00
  %1718 = fadd fast float %1714, -1.000000e+00
  %1719 = fadd fast float %1715, -1.000000e+00
  %1720 = fadd fast float %1716, -1.000000e+00
  %1721 = fadd fast float %1717, -1.000000e+00
  %1722 = call %dx.types.Handle @dx.op.createHandleForLib.dx.types.Handle(i32 160, %dx.types.Handle %42)  ; CreateHandleForLib(Resource)
  %1723 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %1722, %dx.types.ResourceProperties { i32 4, i32 1033 })  ; AnnotateHandle(res,props)  resource: Texture3D<4xF32>
  %1724 = call %dx.types.ResRet.f32 @dx.op.sampleLevel.f32(i32 62, %dx.types.Handle %1723, %dx.types.Handle %1624, float %1618, float %1619, float %1620, float undef, i32 0, i32 0, i32 0, float 0.000000e+00)  ; SampleLevel(srv,sampler,coord0,coord1,coord2,coord3,offset0,offset1,offset2,LOD)
  %1725 = extractvalue %dx.types.ResRet.f32 %1724, 0
  %1726 = extractvalue %dx.types.ResRet.f32 %1724, 1
  %1727 = extractvalue %dx.types.ResRet.f32 %1724, 2
  %1728 = extractvalue %dx.types.ResRet.f32 %1724, 3
  %1729 = fmul fast float %1725, 2.000000e+00
  %1730 = fmul fast float %1726, 2.000000e+00
  %1731 = fmul fast float %1727, 2.000000e+00
  %1732 = fmul fast float %1728, 2.000000e+00
  %1733 = fadd fast float %1729, -1.000000e+00
  %1734 = fadd fast float %1730, -1.000000e+00
  %1735 = fadd fast float %1731, -1.000000e+00
  %1736 = fadd fast float %1732, -1.000000e+00
  %1737 = fmul fast float %1678, %1703
  %1738 = fmul fast float %1626, 0x4011E37860000000
  %1739 = fmul fast float %1738, %1704
  %1740 = fmul fast float %1678, %1705
  %1741 = fmul fast float %1684, %1718
  %1742 = fmul fast float %1627, 0x4011E37860000000
  %1743 = fmul fast float %1742, %1719
  %1744 = fmul fast float %1684, %1720
  %1745 = fmul fast float %1690, %1733
  %1746 = fmul fast float %1628, 0x4011E37860000000
  %1747 = fmul fast float %1746, %1734
  %1748 = fmul fast float %1690, %1735
  %1749 = fmul fast float %1526, %1526
  %1750 = fmul fast float %1527, %1527
  %1751 = fsub fast float %1749, %1750
  %1752 = fmul fast float %1527, 0xBFF05F8CE0000000
  %1753 = fmul fast float %1528, 0x3FF05F8CE0000000
  %1754 = fmul fast float %1526, 0xBFF05F8CE0000000
  %1755 = fmul fast float %1526, 0x3FEB756F20000000
  %1756 = fmul fast float %1755, %1527
  %1757 = fmul fast float %1527, 0xBFEB756F20000000
  %1758 = fmul fast float %1757, %1528
  %1759 = fmul fast float %1528, %1528
  %1760 = fmul fast float %1759, 0x3FE7C7ADC0000000
  %1761 = fadd fast float %1760, 0xBFCFB4E7C0000000
  %1762 = fmul fast float %1526, 0xBFEB756F20000000
  %1763 = fmul fast float %1762, %1528
  %1764 = call float @dx.op.dot4.f32(i32 56, float %1626, float %1675, float %1676, float %1677, float 0x3FEC5BF9E0000000, float %1752, float %1753, float %1754)  ; Dot4(ax,ay,az,aw,bx,by,bz,bw)
  %1765 = call float @dx.op.dot4.f32(i32 56, float %1679, float %1737, float %1739, float %1740, float %1756, float %1758, float %1761, float %1763)  ; Dot4(ax,ay,az,aw,bx,by,bz,bw)
  %1766 = fmul fast float %1751, 0x3FFA963680000000
  %1767 = fmul fast float %1766, %1626
  %1768 = fmul fast float %1767, %1706
  %1769 = fadd fast float %1764, %1768
  %1770 = fadd fast float %1769, %1765
  %1771 = call float @dx.op.dot4.f32(i32 56, float %1627, float %1681, float %1682, float %1683, float 0x3FEC5BF9E0000000, float %1752, float %1753, float %1754)  ; Dot4(ax,ay,az,aw,bx,by,bz,bw)
  %1772 = call float @dx.op.dot4.f32(i32 56, float %1685, float %1741, float %1743, float %1744, float %1756, float %1758, float %1761, float %1763)  ; Dot4(ax,ay,az,aw,bx,by,bz,bw)
  %1773 = fmul fast float %1766, %1627
  %1774 = fmul fast float %1773, %1721
  %1775 = fadd fast float %1771, %1774
  %1776 = fadd fast float %1775, %1772
  %1777 = call float @dx.op.dot4.f32(i32 56, float %1628, float %1687, float %1688, float %1689, float 0x3FEC5BF9E0000000, float %1752, float %1753, float %1754)  ; Dot4(ax,ay,az,aw,bx,by,bz,bw)
  %1778 = call float @dx.op.dot4.f32(i32 56, float %1691, float %1745, float %1747, float %1748, float %1756, float %1758, float %1761, float %1763)  ; Dot4(ax,ay,az,aw,bx,by,bz,bw)
  %1779 = fadd fast float %1778, %1777
  %1780 = fmul fast float %1766, %1628
  %1781 = fmul fast float %1780, %1736
  %1782 = fadd fast float %1779, %1781
  %1783 = call float @dx.op.binary.f32(i32 35, float 0.000000e+00, float %1770)  ; FMax(a,b)
  %1784 = call float @dx.op.binary.f32(i32 35, float 0.000000e+00, float %1776)  ; FMax(a,b)
  %1785 = call float @dx.op.binary.f32(i32 35, float 0.000000e+00, float %1782)  ; FMax(a,b)
  %1786 = fmul fast float %1783, 0x3FD45F3060000000
  %1787 = fmul fast float %1784, 0x3FD45F3060000000
  %1788 = fmul fast float %1785, 0x3FD45F3060000000
  %1789 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %75, i32 159)  ; CBufferLoadLegacy(handle,regIndex)
  %1790 = extractvalue %dx.types.CBufRet.f32 %1789, 0
  %1791 = extractvalue %dx.types.CBufRet.f32 %1789, 1
  %1792 = extractvalue %dx.types.CBufRet.f32 %1789, 2
  %1793 = fmul fast float %1786, %1790
  %1794 = fmul fast float %1787, %1791
  %1795 = fmul fast float %1788, %1792
  br i1 %1517, label %1914, label %1796

; <label>:1796                                    ; preds = %1152
  %1797 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %75, i32 186)  ; CBufferLoadLegacy(handle,regIndex)
  %1798 = extractvalue %dx.types.CBufRet.f32 %1797, 1
  %1799 = fcmp fast une float %1798, 0.000000e+00
  br i1 %1799, label %1800, label %1840, !dx.controlflow.hints !138

; <label>:1800                                    ; preds = %1796
  %1801 = call %dx.types.Handle @dx.op.createHandleForLib.dx.types.Handle(i32 160, %dx.types.Handle %41)  ; CreateHandleForLib(Resource)
  %1802 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %1801, %dx.types.ResourceProperties { i32 4, i32 1033 })  ; AnnotateHandle(res,props)  resource: Texture3D<4xF32>
  %1803 = call %dx.types.ResRet.f32 @dx.op.sampleLevel.f32(i32 62, %dx.types.Handle %1802, %dx.types.Handle %1624, float %1618, float %1619, float %1620, float undef, i32 0, i32 0, i32 0, float 0.000000e+00)  ; SampleLevel(srv,sampler,coord0,coord1,coord2,coord3,offset0,offset1,offset2,LOD)
  %1804 = extractvalue %dx.types.ResRet.f32 %1803, 0
  %1805 = extractvalue %dx.types.ResRet.f32 %1803, 1
  %1806 = extractvalue %dx.types.ResRet.f32 %1803, 2
  %1807 = fmul fast float %1804, 2.000000e+00
  %1808 = fmul fast float %1805, 2.000000e+00
  %1809 = fmul fast float %1806, 2.000000e+00
  %1810 = fadd fast float %1807, -1.000000e+00
  %1811 = fadd fast float %1808, -1.000000e+00
  %1812 = fadd fast float %1809, -1.000000e+00
  %1813 = fmul fast float %1810, %1810
  %1814 = fmul fast float %1811, %1811
  %1815 = fadd fast float %1813, %1814
  %1816 = fmul fast float %1812, %1812
  %1817 = fadd fast float %1815, %1816
  %1818 = call float @dx.op.unary.f32(i32 24, float %1817)  ; Sqrt(value)
  %1819 = call float @dx.op.binary.f32(i32 35, float %1818, float 0x3F1A36E2E0000000)  ; FMax(a,b)
  %1820 = fdiv fast float %1810, %1819
  %1821 = fdiv fast float %1811, %1819
  %1822 = fdiv fast float %1812, %1819
  %1823 = fsub fast float 1.000000e+00, %1818
  %1824 = fmul fast float %1823, %1823
  %1825 = fsub fast float 1.000000e+00, %1824
  %1826 = fsub fast float %1526, %1820
  %1827 = fsub fast float %1527, %1821
  %1828 = fsub fast float %1528, %1822
  %1829 = fmul fast float %1825, %1826
  %1830 = fmul fast float %1827, %1825
  %1831 = fmul fast float %1828, %1825
  %1832 = fadd fast float %1829, %1820
  %1833 = fadd fast float %1830, %1821
  %1834 = fadd fast float %1831, %1822
  %1835 = call float @dx.op.dot3.f32(i32 55, float %1820, float %1821, float %1822, float %1526, float %1527, float %1528)  ; Dot3(ax,ay,az,bx,by,bz)
  %1836 = call float @dx.op.unary.f32(i32 7, float %1835)  ; Saturate(value)
  %1837 = fsub fast float 1.000000e+00, %1836
  %1838 = fmul fast float %1837, %1825
  %1839 = fadd fast float %1838, %1836
  br label %1840

; <label>:1840                                    ; preds = %1800, %1796
  %1841 = phi float [ %1818, %1800 ], [ 1.000000e+00, %1796 ]
  %1842 = phi float [ %1839, %1800 ], [ 1.000000e+00, %1796 ]
  %1843 = phi float [ %1832, %1800 ], [ %1526, %1796 ]
  %1844 = phi float [ %1833, %1800 ], [ %1527, %1796 ]
  %1845 = phi float [ %1834, %1800 ], [ %1528, %1796 ]
  %1846 = call %dx.types.Handle @dx.op.createHandleForLib.dx.types.Handle(i32 160, %dx.types.Handle %38)  ; CreateHandleForLib(Resource)
  %1847 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %1846, %dx.types.ResourceProperties { i32 12, i32 16 })  ; AnnotateHandle(res,props)  resource: StructuredBuffer<stride=16>
  %1848 = call %dx.types.ResRet.f32 @dx.op.rawBufferLoad.f32(i32 139, %dx.types.Handle %1847, i32 0, i32 0, i8 15, i32 4)  ; RawBufferLoad(srv,index,elementOffset,mask,alignment)
  %1849 = extractvalue %dx.types.ResRet.f32 %1848, 0
  %1850 = extractvalue %dx.types.ResRet.f32 %1848, 1
  %1851 = extractvalue %dx.types.ResRet.f32 %1848, 2
  %1852 = extractvalue %dx.types.ResRet.f32 %1848, 3
  %1853 = call float @dx.op.dot4.f32(i32 56, float %1849, float %1850, float %1851, float %1852, float %1843, float %1844, float %1845, float 1.000000e+00)  ; Dot4(ax,ay,az,aw,bx,by,bz,bw)
  %1854 = call %dx.types.ResRet.f32 @dx.op.rawBufferLoad.f32(i32 139, %dx.types.Handle %1847, i32 1, i32 0, i8 15, i32 4)  ; RawBufferLoad(srv,index,elementOffset,mask,alignment)
  %1855 = extractvalue %dx.types.ResRet.f32 %1854, 0
  %1856 = extractvalue %dx.types.ResRet.f32 %1854, 1
  %1857 = extractvalue %dx.types.ResRet.f32 %1854, 2
  %1858 = extractvalue %dx.types.ResRet.f32 %1854, 3
  %1859 = call float @dx.op.dot4.f32(i32 56, float %1855, float %1856, float %1857, float %1858, float %1843, float %1844, float %1845, float 1.000000e+00)  ; Dot4(ax,ay,az,aw,bx,by,bz,bw)
  %1860 = call %dx.types.ResRet.f32 @dx.op.rawBufferLoad.f32(i32 139, %dx.types.Handle %1847, i32 2, i32 0, i8 15, i32 4)  ; RawBufferLoad(srv,index,elementOffset,mask,alignment)
  %1861 = extractvalue %dx.types.ResRet.f32 %1860, 0
  %1862 = extractvalue %dx.types.ResRet.f32 %1860, 1
  %1863 = extractvalue %dx.types.ResRet.f32 %1860, 2
  %1864 = extractvalue %dx.types.ResRet.f32 %1860, 3
  %1865 = call float @dx.op.dot4.f32(i32 56, float %1861, float %1862, float %1863, float %1864, float %1843, float %1844, float %1845, float 1.000000e+00)  ; Dot4(ax,ay,az,aw,bx,by,bz,bw)
  %1866 = fmul fast float %1844, %1843
  %1867 = fmul fast float %1845, %1844
  %1868 = fmul fast float %1845, %1845
  %1869 = fmul fast float %1845, %1843
  %1870 = call %dx.types.ResRet.f32 @dx.op.rawBufferLoad.f32(i32 139, %dx.types.Handle %1847, i32 3, i32 0, i8 15, i32 4)  ; RawBufferLoad(srv,index,elementOffset,mask,alignment)
  %1871 = extractvalue %dx.types.ResRet.f32 %1870, 0
  %1872 = extractvalue %dx.types.ResRet.f32 %1870, 1
  %1873 = extractvalue %dx.types.ResRet.f32 %1870, 2
  %1874 = extractvalue %dx.types.ResRet.f32 %1870, 3
  %1875 = call float @dx.op.dot4.f32(i32 56, float %1871, float %1872, float %1873, float %1874, float %1866, float %1867, float %1868, float %1869)  ; Dot4(ax,ay,az,aw,bx,by,bz,bw)
  %1876 = call %dx.types.ResRet.f32 @dx.op.rawBufferLoad.f32(i32 139, %dx.types.Handle %1847, i32 4, i32 0, i8 15, i32 4)  ; RawBufferLoad(srv,index,elementOffset,mask,alignment)
  %1877 = extractvalue %dx.types.ResRet.f32 %1876, 0
  %1878 = extractvalue %dx.types.ResRet.f32 %1876, 1
  %1879 = extractvalue %dx.types.ResRet.f32 %1876, 2
  %1880 = extractvalue %dx.types.ResRet.f32 %1876, 3
  %1881 = call float @dx.op.dot4.f32(i32 56, float %1877, float %1878, float %1879, float %1880, float %1866, float %1867, float %1868, float %1869)  ; Dot4(ax,ay,az,aw,bx,by,bz,bw)
  %1882 = call %dx.types.ResRet.f32 @dx.op.rawBufferLoad.f32(i32 139, %dx.types.Handle %1847, i32 5, i32 0, i8 15, i32 4)  ; RawBufferLoad(srv,index,elementOffset,mask,alignment)
  %1883 = extractvalue %dx.types.ResRet.f32 %1882, 0
  %1884 = extractvalue %dx.types.ResRet.f32 %1882, 1
  %1885 = extractvalue %dx.types.ResRet.f32 %1882, 2
  %1886 = extractvalue %dx.types.ResRet.f32 %1882, 3
  %1887 = call float @dx.op.dot4.f32(i32 56, float %1883, float %1884, float %1885, float %1886, float %1866, float %1867, float %1868, float %1869)  ; Dot4(ax,ay,az,aw,bx,by,bz,bw)
  %1888 = fmul fast float %1843, %1843
  %1889 = fmul fast float %1844, %1844
  %1890 = fsub fast float %1888, %1889
  %1891 = call %dx.types.ResRet.f32 @dx.op.rawBufferLoad.f32(i32 139, %dx.types.Handle %1847, i32 6, i32 0, i8 15, i32 4)  ; RawBufferLoad(srv,index,elementOffset,mask,alignment)
  %1892 = extractvalue %dx.types.ResRet.f32 %1891, 0
  %1893 = extractvalue %dx.types.ResRet.f32 %1891, 1
  %1894 = extractvalue %dx.types.ResRet.f32 %1891, 2
  %1895 = fmul fast float %1892, %1890
  %1896 = fmul fast float %1893, %1890
  %1897 = fmul fast float %1894, %1890
  %1898 = fadd fast float %1875, %1853
  %1899 = fadd fast float %1881, %1859
  %1900 = fadd fast float %1887, %1865
  %1901 = fadd fast float %1898, %1895
  %1902 = fadd fast float %1899, %1896
  %1903 = fadd fast float %1900, %1897
  %1904 = call float @dx.op.binary.f32(i32 35, float 0.000000e+00, float %1901)  ; FMax(a,b)
  %1905 = call float @dx.op.binary.f32(i32 35, float 0.000000e+00, float %1902)  ; FMax(a,b)
  %1906 = call float @dx.op.binary.f32(i32 35, float 0.000000e+00, float %1903)  ; FMax(a,b)
  %1907 = fmul fast float %1842, %1841
  %1908 = fmul fast float %1907, %1161
  %1909 = fmul fast float %1908, %1904
  %1910 = fmul fast float %1907, %738
  %1911 = fmul fast float %1910, %1905
  %1912 = fmul fast float %1907, %1162
  %1913 = fmul fast float %1912, %1906
  br label %1914

; <label>:1914                                    ; preds = %1840, %1152
  %1915 = phi float [ %1909, %1840 ], [ 0.000000e+00, %1152 ]
  %1916 = phi float [ %1911, %1840 ], [ 0.000000e+00, %1152 ]
  %1917 = phi float [ %1913, %1840 ], [ 0.000000e+00, %1152 ]
  %1918 = fadd fast float %1915, %1793
  %1919 = fadd fast float %1916, %1794
  %1920 = fadd fast float %1917, %1795
  %1921 = call i32 @dx.op.legacyF32ToF16(i32 130, float %1164)  ; LegacyF32ToF16(value)
  %1922 = call i32 @dx.op.legacyF32ToF16(i32 130, float %743)  ; LegacyF32ToF16(value)
  %1923 = shl i32 %1922, 16
  %1924 = or i32 %1923, %1921
  %1925 = call i32 @dx.op.legacyF32ToF16(i32 130, float %1529)  ; LegacyF32ToF16(value)
  %1926 = call i32 @dx.op.legacyF32ToF16(i32 130, float %1530)  ; LegacyF32ToF16(value)
  %1927 = shl i32 %1926, 16
  %1928 = or i32 %1927, %1925
  %1929 = call i32 @dx.op.legacyF32ToF16(i32 130, float %1531)  ; LegacyF32ToF16(value)
  %1930 = call i32 @dx.op.legacyF32ToF16(i32 130, float %1526)  ; LegacyF32ToF16(value)
  %1931 = shl i32 %1930, 16
  %1932 = or i32 %1931, %1929
  %1933 = call i32 @dx.op.legacyF32ToF16(i32 130, float %1527)  ; LegacyF32ToF16(value)
  %1934 = call i32 @dx.op.legacyF32ToF16(i32 130, float %1528)  ; LegacyF32ToF16(value)
  %1935 = shl i32 %1934, 16
  %1936 = or i32 %1935, %1933
  %1937 = call i32 @dx.op.legacyF32ToF16(i32 130, float %1518)  ; LegacyF32ToF16(value)
  %1938 = call i32 @dx.op.legacyF32ToF16(i32 130, float %1519)  ; LegacyF32ToF16(value)
  %1939 = shl i32 %1938, 16
  %1940 = or i32 %1939, %1937
  %1941 = call i32 @dx.op.legacyF32ToF16(i32 130, float %1520)  ; LegacyF32ToF16(value)
  %1942 = call i32 @dx.op.legacyF32ToF16(i32 130, float 1.000000e+00)  ; LegacyF32ToF16(value)
  %1943 = shl i32 %1942, 16
  %1944 = or i32 %1943, %1941
  %1945 = call i32 @dx.op.legacyF32ToF16(i32 130, float %1523)  ; LegacyF32ToF16(value)
  %1946 = shl i32 %1945, 16
  %1947 = or i32 %1946, 32768
  %1948 = shl nuw nsw i32 %1515, 23
  %1949 = shl i32 %1514, 19
  %1950 = and i32 %1949, -536870912
  %1951 = or i32 %1948, %1950
  %1952 = or i32 %1951, %1942
  %1953 = or i32 %1952, 65536
  %1954 = call i32 @dx.op.legacyF32ToF16(i32 130, float %1918)  ; LegacyF32ToF16(value)
  %1955 = call i32 @dx.op.legacyF32ToF16(i32 130, float %1919)  ; LegacyF32ToF16(value)
  %1956 = shl i32 %1955, 16
  %1957 = or i32 %1956, %1954
  %1958 = call i32 @dx.op.legacyF32ToF16(i32 130, float %1920)  ; LegacyF32ToF16(value)
  %1959 = call i32 @dx.op.legacyF32ToF16(i32 130, float 0.000000e+00)  ; LegacyF32ToF16(value)
  %1960 = shl i32 %1959, 16
  %1961 = or i32 %1960, %1959
  store float %1252, float* %77, align 4
  store i32 %1924, i32* %739, align 4
  store float 0.000000e+00, float* %726, align 4
  %1962 = getelementptr inbounds %struct.FPackedMaterialClosestHitPayload, %struct.FPackedMaterialClosestHitPayload* %PackedPayload, i32 0, i32 3, i32 0
  store i32 %1928, i32* %1962, align 4
  %1963 = getelementptr inbounds %struct.FPackedMaterialClosestHitPayload, %struct.FPackedMaterialClosestHitPayload* %PackedPayload, i32 0, i32 3, i32 1
  store i32 %1932, i32* %1963, align 4
  %1964 = getelementptr inbounds %struct.FPackedMaterialClosestHitPayload, %struct.FPackedMaterialClosestHitPayload* %PackedPayload, i32 0, i32 3, i32 2
  store i32 %1936, i32* %1964, align 4
  %1965 = getelementptr inbounds %struct.FPackedMaterialClosestHitPayload, %struct.FPackedMaterialClosestHitPayload* %PackedPayload, i32 0, i32 4, i32 0
  store i32 %1940, i32* %1965, align 4
  %1966 = getelementptr inbounds %struct.FPackedMaterialClosestHitPayload, %struct.FPackedMaterialClosestHitPayload* %PackedPayload, i32 0, i32 4, i32 1
  store i32 %1944, i32* %1966, align 4
  %1967 = getelementptr inbounds %struct.FPackedMaterialClosestHitPayload, %struct.FPackedMaterialClosestHitPayload* %PackedPayload, i32 0, i32 5
  store i32 %1947, i32* %1967, align 4
  store i32 %1953, i32* %78, align 4
  %1968 = getelementptr inbounds %struct.FPackedMaterialClosestHitPayload, %struct.FPackedMaterialClosestHitPayload* %PackedPayload, i32 0, i32 7, i32 0
  store i32 %1957, i32* %1968, align 4
  %1969 = getelementptr inbounds %struct.FPackedMaterialClosestHitPayload, %struct.FPackedMaterialClosestHitPayload* %PackedPayload, i32 0, i32 7, i32 1
  store i32 %1958, i32* %1969, align 4
  %1970 = getelementptr inbounds %struct.FPackedMaterialClosestHitPayload, %struct.FPackedMaterialClosestHitPayload* %PackedPayload, i32 0, i32 8
  store i32 6911, i32* %1970, align 4
  %1971 = getelementptr inbounds %struct.FPackedMaterialClosestHitPayload, %struct.FPackedMaterialClosestHitPayload* %PackedPayload, i32 0, i32 9, i32 0
  store i32 %1961, i32* %1971, align 4
  %1972 = getelementptr inbounds %struct.FPackedMaterialClosestHitPayload, %struct.FPackedMaterialClosestHitPayload* %PackedPayload, i32 0, i32 9, i32 1
  store i32 %1961, i32* %1972, align 4
  %1973 = getelementptr inbounds %struct.FPackedMaterialClosestHitPayload, %struct.FPackedMaterialClosestHitPayload* %PackedPayload, i32 0, i32 10
  store i32 0, i32* %1973, align 4
  br i1 %81, label %1974, label %1990

; <label>:1974                                    ; preds = %1914
  %1975 = call i32 @dx.op.instanceIndex.i32(i32 142)  ; InstanceIndex()
  %1976 = call %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32 59, %dx.types.Handle %65, i32 1)  ; CBufferLoadLegacy(handle,regIndex)
  %1977 = extractvalue %dx.types.CBufRet.i32 %1976, 0
  %1978 = sub i32 %1975, %1977
  %1979 = mul i32 %856, 42
  %1980 = call %dx.types.Handle @dx.op.createHandleForLib.dx.types.Handle(i32 160, %dx.types.Handle %40)  ; CreateHandleForLib(Resource)
  %1981 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %1980, %dx.types.ResourceProperties { i32 12, i32 16 })  ; AnnotateHandle(res,props)  resource: StructuredBuffer<stride=16>
  %1982 = call %dx.types.ResRet.f32 @dx.op.rawBufferLoad.f32(i32 139, %dx.types.Handle %1981, i32 %1979, i32 0, i8 15, i32 4)  ; RawBufferLoad(srv,index,elementOffset,mask,alignment)
  %1983 = extractvalue %dx.types.ResRet.f32 %1982, 2
  %1984 = bitcast float %1983 to i32
  %1985 = icmp eq i32 %1984, 1
  %1986 = select i1 %1985, i32 0, i32 %1978
  %1987 = extractvalue %dx.types.ResRet.f32 %1982, 1
  %1988 = bitcast float %1987 to i32
  %1989 = add i32 %1988, %1986
  store i32 %1989, i32* %1972, align 4, !tbaa !124
  br label %1990

; <label>:1990                                    ; preds = %1974, %1914, %722
  ret void
}

; Function Attrs: nounwind readnone
declare float @dx.op.binary.f32(i32, float, float) #1

; Function Attrs: nounwind readnone
declare float @dx.op.unary.f32(i32, float) #1

; Function Attrs: nounwind readnone
declare i32 @dx.op.instanceID.i32(i32) #1

; Function Attrs: nounwind readnone
declare i32 @dx.op.primitiveIndex.i32(i32) #1

; Function Attrs: nounwind readnone
declare i32 @dx.op.hitKind.i32(i32) #1

; Function Attrs: nounwind readnone
declare i32 @dx.op.instanceIndex.i32(i32) #1

; Function Attrs: nounwind readnone
declare float @dx.op.dot3.f32(i32, float, float, float, float, float, float) #1

; Function Attrs: nounwind readnone
declare i32 @dx.op.legacyF32ToF16(i32, float) #1

; Function Attrs: nounwind readnone
declare float @dx.op.tertiary.f32(i32, float, float, float) #1

; Function Attrs: nounwind readonly
declare %dx.types.ResRet.f32 @dx.op.sampleLevel.f32(i32, %dx.types.Handle, %dx.types.Handle, float, float, float, float, i32, i32, i32, float) #2

; Function Attrs: nounwind readnone
declare float @dx.op.dot2.f32(i32, float, float, float, float) #1

; Function Attrs: nounwind readnone
declare float @dx.op.dot4.f32(i32, float, float, float, float, float, float, float, float) #1

; Function Attrs: nounwind readnone
declare float @dx.op.legacyF16ToF32(i32, i32) #1

; Function Attrs: nounwind readnone
declare float @dx.op.worldRayOrigin.f32(i32, i8) #1

; Function Attrs: nounwind readnone
declare float @dx.op.worldRayDirection.f32(i32, i8) #1

; Function Attrs: nounwind readonly
declare %dx.types.ResRet.i32 @dx.op.rawBufferLoad.i32(i32, %dx.types.Handle, i32, i32, i8, i32) #2

; Function Attrs: nounwind readonly
declare %dx.types.ResRet.f32 @dx.op.bufferLoad.f32(i32, %dx.types.Handle, i32, i32) #2

; Function Attrs: nounwind readonly
declare %dx.types.ResRet.f32 @dx.op.rawBufferLoad.f32(i32, %dx.types.Handle, i32, i32, i8, i32) #2

; Function Attrs: nounwind readonly
declare %dx.types.ResRet.i32 @dx.op.bufferLoad.i32(i32, %dx.types.Handle, i32, i32) #2

; Function Attrs: nounwind readnone
declare i32 @dx.op.binary.i32(i32, i32, i32) #1

; Function Attrs: nounwind readonly
declare %dx.types.ResRet.i32 @dx.op.textureLoad.i32(i32, %dx.types.Handle, i32, i32, i32, i32, i32, i32, i32) #2

; Function Attrs: nounwind readonly
declare float @dx.op.rayTCurrent.f32(i32) #2

; Function Attrs: nounwind readonly
declare %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32, %dx.types.Handle, i32) #2

; Function Attrs: nounwind readonly
declare %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32, %dx.types.Handle, i32) #2

; Function Attrs: nounwind readnone
declare %dx.types.Handle @dx.op.annotateHandle(i32, %dx.types.Handle, %dx.types.ResourceProperties) #1

; Function Attrs: nounwind readonly
declare %dx.types.Handle @dx.op.createHandleForLib.dx.types.Handle(i32, %dx.types.Handle) #2

attributes #0 = { nounwind }
attributes #1 = { nounwind readnone }
attributes #2 = { nounwind readonly }

!llvm.ident = !{!0}
!dx.version = !{!1}
!dx.valver = !{!1}
!dx.shaderModel = !{!2}
!dx.resources = !{!3}
!dx.entryPoints = !{!65, !68}

!0 = !{!"clang version 3.7.0 (tags/RELEASE_370/final)"}
!1 = !{i32 1, i32 6}
!2 = !{!"lib", i32 6, i32 6}
!3 = !{!4, null, !40, !47}
!4 = !{!5, !7, !9, !10, !11, !12, !13, !14, !15, !16, !18, !19, !20, !21, !22, !23, !24, !25, !26, !27, !28, !29, !30, !31, !32, !33, !34, !35, !36, !37, !38, !39}
!5 = !{i32 0, %"class.Texture3D<vector<unsigned int, 4> >"* bitcast (%dx.types.Handle* @"\01?View_VolumetricLightmapIndirectionTexture@@3V?$Texture3D@V?$vector@I$03@@@@A" to %"class.Texture3D<vector<unsigned int, 4> >"*), !"View_VolumetricLightmapIndirectionTexture", i32 0, i32 0, i32 1, i32 4, i32 0, !6}
!6 = !{i32 0, i32 5}
!7 = !{i32 1, %"class.Texture3D<vector<float, 4> >"* bitcast (%dx.types.Handle* @"\01?View_VolumetricLightmapBrickAmbientVector@@3V?$Texture3D@V?$vector@M$03@@@@A" to %"class.Texture3D<vector<float, 4> >"*), !"View_VolumetricLightmapBrickAmbientVector", i32 0, i32 1, i32 1, i32 4, i32 0, !8}
!8 = !{i32 0, i32 9}
!9 = !{i32 2, %"class.Texture3D<vector<float, 4> >"* bitcast (%dx.types.Handle* @"\01?View_VolumetricLightmapBrickSHCoefficients0@@3V?$Texture3D@V?$vector@M$03@@@@A" to %"class.Texture3D<vector<float, 4> >"*), !"View_VolumetricLightmapBrickSHCoefficients0", i32 0, i32 2, i32 1, i32 4, i32 0, !8}
!10 = !{i32 3, %"class.Texture3D<vector<float, 4> >"* bitcast (%dx.types.Handle* @"\01?View_VolumetricLightmapBrickSHCoefficients1@@3V?$Texture3D@V?$vector@M$03@@@@A" to %"class.Texture3D<vector<float, 4> >"*), !"View_VolumetricLightmapBrickSHCoefficients1", i32 0, i32 3, i32 1, i32 4, i32 0, !8}
!11 = !{i32 4, %"class.Texture3D<vector<float, 4> >"* bitcast (%dx.types.Handle* @"\01?View_VolumetricLightmapBrickSHCoefficients2@@3V?$Texture3D@V?$vector@M$03@@@@A" to %"class.Texture3D<vector<float, 4> >"*), !"View_VolumetricLightmapBrickSHCoefficients2", i32 0, i32 4, i32 1, i32 4, i32 0, !8}
!12 = !{i32 5, %"class.Texture3D<vector<float, 4> >"* bitcast (%dx.types.Handle* @"\01?View_VolumetricLightmapBrickSHCoefficients3@@3V?$Texture3D@V?$vector@M$03@@@@A" to %"class.Texture3D<vector<float, 4> >"*), !"View_VolumetricLightmapBrickSHCoefficients3", i32 0, i32 5, i32 1, i32 4, i32 0, !8}
!13 = !{i32 6, %"class.Texture3D<vector<float, 4> >"* bitcast (%dx.types.Handle* @"\01?View_VolumetricLightmapBrickSHCoefficients4@@3V?$Texture3D@V?$vector@M$03@@@@A" to %"class.Texture3D<vector<float, 4> >"*), !"View_VolumetricLightmapBrickSHCoefficients4", i32 0, i32 6, i32 1, i32 4, i32 0, !8}
!14 = !{i32 7, %"class.Texture3D<vector<float, 4> >"* bitcast (%dx.types.Handle* @"\01?View_VolumetricLightmapBrickSHCoefficients5@@3V?$Texture3D@V?$vector@M$03@@@@A" to %"class.Texture3D<vector<float, 4> >"*), !"View_VolumetricLightmapBrickSHCoefficients5", i32 0, i32 7, i32 1, i32 4, i32 0, !8}
!15 = !{i32 8, %"class.Texture3D<vector<float, 4> >"* bitcast (%dx.types.Handle* @"\01?View_SkyBentNormalBrickTexture@@3V?$Texture3D@V?$vector@M$03@@@@A" to %"class.Texture3D<vector<float, 4> >"*), !"View_SkyBentNormalBrickTexture", i32 0, i32 8, i32 1, i32 4, i32 0, !8}
!16 = !{i32 9, %"class.StructuredBuffer<vector<float, 4> >"* bitcast (%dx.types.Handle* @"\01?View_PrimitiveSceneData@@3V?$StructuredBuffer@V?$vector@M$03@@@@A" to %"class.StructuredBuffer<vector<float, 4> >"*), !"View_PrimitiveSceneData", i32 0, i32 9, i32 1, i32 12, i32 0, !17}
!17 = !{i32 1, i32 16}
!18 = !{i32 10, %"class.StructuredBuffer<vector<float, 4> >"* bitcast (%dx.types.Handle* @"\01?View_InstanceSceneData@@3V?$StructuredBuffer@V?$vector@M$03@@@@A" to %"class.StructuredBuffer<vector<float, 4> >"*), !"View_InstanceSceneData", i32 0, i32 10, i32 1, i32 12, i32 0, !17}
!19 = !{i32 11, %"class.StructuredBuffer<vector<float, 4> >"* bitcast (%dx.types.Handle* @"\01?View_SkyIrradianceEnvironmentMap@@3V?$StructuredBuffer@V?$vector@M$03@@@@A" to %"class.StructuredBuffer<vector<float, 4> >"*), !"View_SkyIrradianceEnvironmentMap", i32 0, i32 11, i32 1, i32 12, i32 0, !17}
!20 = !{i32 12, %"class.Buffer<unsigned int>"* bitcast (%dx.types.Handle* @"\01?View_LandscapeIndirection@@3V?$Buffer@I@@A" to %"class.Buffer<unsigned int>"*), !"View_LandscapeIndirection", i32 0, i32 12, i32 1, i32 10, i32 0, !6}
!21 = !{i32 13, %"class.Buffer<float>"* bitcast (%dx.types.Handle* @"\01?View_LandscapePerComponentData@@3V?$Buffer@M@@A" to %"class.Buffer<float>"*), !"View_LandscapePerComponentData", i32 0, i32 13, i32 1, i32 10, i32 0, !8}
!22 = !{i32 14, %"class.Buffer<float>"* bitcast (%dx.types.Handle* @"\01?LandscapeContinuousLODParameters_SectionLODBias@@3V?$Buffer@M@@A" to %"class.Buffer<float>"*), !"LandscapeContinuousLODParameters_SectionLODBias", i32 0, i32 14, i32 1, i32 10, i32 0, !8}
!23 = !{i32 15, %"class.Texture2D<vector<float, 4> >"* bitcast (%dx.types.Handle* @"\01?LandscapeParameters_HeightmapTexture@@3V?$Texture2D@V?$vector@M$03@@@@A" to %"class.Texture2D<vector<float, 4> >"*), !"LandscapeParameters_HeightmapTexture", i32 0, i32 15, i32 1, i32 2, i32 0, !8}
!24 = !{i32 16, %"class.Texture2D<vector<float, 4> >"* bitcast (%dx.types.Handle* @"\01?LandscapeParameters_NormalmapTexture@@3V?$Texture2D@V?$vector@M$03@@@@A" to %"class.Texture2D<vector<float, 4> >"*), !"LandscapeParameters_NormalmapTexture", i32 0, i32 16, i32 1, i32 2, i32 0, !8}
!25 = !{i32 17, %"class.Texture2D<vector<float, 4> >"* bitcast (%dx.types.Handle* @"\01?LandscapeParameters_XYOffsetmapTexture@@3V?$Texture2D@V?$vector@M$03@@@@A" to %"class.Texture2D<vector<float, 4> >"*), !"LandscapeParameters_XYOffsetmapTexture", i32 0, i32 17, i32 1, i32 2, i32 0, !8}
!26 = !{i32 18, %"class.Texture2D<vector<float, 4> >"* bitcast (%dx.types.Handle* @"\01?Material_Texture2D_0@@3V?$Texture2D@V?$vector@M$03@@@@A" to %"class.Texture2D<vector<float, 4> >"*), !"Material_Texture2D_0", i32 0, i32 18, i32 1, i32 2, i32 0, !8}
!27 = !{i32 19, %"class.Texture2D<vector<float, 4> >"* bitcast (%dx.types.Handle* @"\01?Material_Texture2D_1@@3V?$Texture2D@V?$vector@M$03@@@@A" to %"class.Texture2D<vector<float, 4> >"*), !"Material_Texture2D_1", i32 0, i32 19, i32 1, i32 2, i32 0, !8}
!28 = !{i32 20, %"class.Texture2D<vector<float, 4> >"* bitcast (%dx.types.Handle* @"\01?Material_Texture2D_2@@3V?$Texture2D@V?$vector@M$03@@@@A" to %"class.Texture2D<vector<float, 4> >"*), !"Material_Texture2D_2", i32 0, i32 20, i32 1, i32 2, i32 0, !8}
!29 = !{i32 21, %"class.Texture2D<vector<float, 4> >"* bitcast (%dx.types.Handle* @"\01?Material_Texture2D_3@@3V?$Texture2D@V?$vector@M$03@@@@A" to %"class.Texture2D<vector<float, 4> >"*), !"Material_Texture2D_3", i32 0, i32 21, i32 1, i32 2, i32 0, !8}
!30 = !{i32 22, %"class.Texture2D<vector<float, 4> >"* bitcast (%dx.types.Handle* @"\01?Material_Texture2D_4@@3V?$Texture2D@V?$vector@M$03@@@@A" to %"class.Texture2D<vector<float, 4> >"*), !"Material_Texture2D_4", i32 0, i32 22, i32 1, i32 2, i32 0, !8}
!31 = !{i32 23, %"class.Texture2D<vector<float, 4> >"* bitcast (%dx.types.Handle* @"\01?Material_Texture2D_5@@3V?$Texture2D@V?$vector@M$03@@@@A" to %"class.Texture2D<vector<float, 4> >"*), !"Material_Texture2D_5", i32 0, i32 23, i32 1, i32 2, i32 0, !8}
!32 = !{i32 24, %"class.Texture2D<vector<float, 4> >"* bitcast (%dx.types.Handle* @"\01?Material_Texture2D_6@@3V?$Texture2D@V?$vector@M$03@@@@A" to %"class.Texture2D<vector<float, 4> >"*), !"Material_Texture2D_6", i32 0, i32 24, i32 1, i32 2, i32 0, !8}
!33 = !{i32 25, %"class.Texture2D<vector<float, 4> >"* bitcast (%dx.types.Handle* @"\01?Material_Texture2D_7@@3V?$Texture2D@V?$vector@M$03@@@@A" to %"class.Texture2D<vector<float, 4> >"*), !"Material_Texture2D_7", i32 0, i32 25, i32 1, i32 2, i32 0, !8}
!34 = !{i32 26, %"class.Texture2D<vector<float, 4> >"* bitcast (%dx.types.Handle* @"\01?Material_Texture2D_8@@3V?$Texture2D@V?$vector@M$03@@@@A" to %"class.Texture2D<vector<float, 4> >"*), !"Material_Texture2D_8", i32 0, i32 26, i32 1, i32 2, i32 0, !8}
!35 = !{i32 27, %"class.Texture2D<vector<float, 4> >"* bitcast (%dx.types.Handle* @"\01?Material_Texture2D_9@@3V?$Texture2D@V?$vector@M$03@@@@A" to %"class.Texture2D<vector<float, 4> >"*), !"Material_Texture2D_9", i32 0, i32 27, i32 1, i32 2, i32 0, !8}
!36 = !{i32 28, %"class.Texture2D<vector<float, 4> >"* bitcast (%dx.types.Handle* @"\01?Material_Texture2D_10@@3V?$Texture2D@V?$vector@M$03@@@@A" to %"class.Texture2D<vector<float, 4> >"*), !"Material_Texture2D_10", i32 0, i32 28, i32 1, i32 2, i32 0, !8}
!37 = !{i32 29, %"class.Texture2D<vector<float, 4> >"* bitcast (%dx.types.Handle* @"\01?Material_Texture2D_11@@3V?$Texture2D@V?$vector@M$03@@@@A" to %"class.Texture2D<vector<float, 4> >"*), !"Material_Texture2D_11", i32 0, i32 29, i32 1, i32 2, i32 0, !8}
!38 = !{i32 30, %"class.Texture2D<vector<float, 4> >"* bitcast (%dx.types.Handle* @"\01?Material_Texture2D_12@@3V?$Texture2D@V?$vector@M$03@@@@A" to %"class.Texture2D<vector<float, 4> >"*), !"Material_Texture2D_12", i32 0, i32 30, i32 1, i32 2, i32 0, !8}
!39 = !{i32 31, %struct.ByteAddressBuffer* bitcast (%dx.types.Handle* @"\01?HitGroupSystemIndexBuffer@@3UByteAddressBuffer@@A" to %struct.ByteAddressBuffer*), !"HitGroupSystemIndexBuffer", i32 2, i32 0, i32 1, i32 11, i32 0, null}
!40 = !{!41, !42, !43, !44, !45, !46}
!41 = !{i32 0, %UniformBufferConstants_View* bitcast (%dx.types.Handle* @UniformBufferConstants_View to %UniformBufferConstants_View*), !"UniformBufferConstants_View", i32 0, i32 0, i32 1, i32 5292, null}
!42 = !{i32 1, %UniformBufferConstants_LandscapeMVF* bitcast (%dx.types.Handle* @UniformBufferConstants_LandscapeMVF to %UniformBufferConstants_LandscapeMVF*), !"UniformBufferConstants_LandscapeMVF", i32 0, i32 1, i32 1, i32 8, null}
!43 = !{i32 2, %UniformBufferConstants_LandscapeContinuousLODParameters* bitcast (%dx.types.Handle* @UniformBufferConstants_LandscapeContinuousLODParameters to %UniformBufferConstants_LandscapeContinuousLODParameters*), !"UniformBufferConstants_LandscapeContinuousLODParameters", i32 0, i32 2, i32 1, i32 28, null}
!44 = !{i32 3, %UniformBufferConstants_LandscapeParameters* bitcast (%dx.types.Handle* @UniformBufferConstants_LandscapeParameters to %UniformBufferConstants_LandscapeParameters*), !"UniformBufferConstants_LandscapeParameters", i32 0, i32 3, i32 1, i32 236, null}
!45 = !{i32 4, %UniformBufferConstants_Material* bitcast (%dx.types.Handle* @UniformBufferConstants_Material to %UniformBufferConstants_Material*), !"UniformBufferConstants_Material", i32 0, i32 4, i32 1, i32 332, null}
!46 = !{i32 5, %HitGroupSystemRootConstants* bitcast (%dx.types.Handle* @HitGroupSystemRootConstants to %HitGroupSystemRootConstants*), !"HitGroupSystemRootConstants", i32 2, i32 0, i32 1, i32 24, null}
!47 = !{!48, !49, !50, !51, !52, !53, !54, !55, !56, !57, !58, !59, !60, !61, !62, !63, !64}
!48 = !{i32 0, %struct.SamplerState* bitcast (%dx.types.Handle* @"\01?View_SharedBilinearClampedSampler@@3USamplerState@@A" to %struct.SamplerState*), !"View_SharedBilinearClampedSampler", i32 0, i32 0, i32 1, i32 0, null}
!49 = !{i32 1, %struct.SamplerState* bitcast (%dx.types.Handle* @"\01?View_LandscapeWeightmapSampler@@3USamplerState@@A" to %struct.SamplerState*), !"View_LandscapeWeightmapSampler", i32 0, i32 1, i32 1, i32 0, null}
!50 = !{i32 2, %struct.SamplerState* bitcast (%dx.types.Handle* @"\01?LandscapeParameters_HeightmapTextureSampler@@3USamplerState@@A" to %struct.SamplerState*), !"LandscapeParameters_HeightmapTextureSampler", i32 0, i32 2, i32 1, i32 0, null}
!51 = !{i32 3, %struct.SamplerState* bitcast (%dx.types.Handle* @"\01?LandscapeParameters_NormalmapTextureSampler@@3USamplerState@@A" to %struct.SamplerState*), !"LandscapeParameters_NormalmapTextureSampler", i32 0, i32 3, i32 1, i32 0, null}
!52 = !{i32 4, %struct.SamplerState* bitcast (%dx.types.Handle* @"\01?LandscapeParameters_XYOffsetmapTextureSampler@@3USamplerState@@A" to %struct.SamplerState*), !"LandscapeParameters_XYOffsetmapTextureSampler", i32 0, i32 4, i32 1, i32 0, null}
!53 = !{i32 5, %struct.SamplerState* bitcast (%dx.types.Handle* @"\01?Material_Texture2D_1Sampler@@3USamplerState@@A" to %struct.SamplerState*), !"Material_Texture2D_1Sampler", i32 0, i32 5, i32 1, i32 0, null}
!54 = !{i32 6, %struct.SamplerState* bitcast (%dx.types.Handle* @"\01?Material_Texture2D_2Sampler@@3USamplerState@@A" to %struct.SamplerState*), !"Material_Texture2D_2Sampler", i32 0, i32 6, i32 1, i32 0, null}
!55 = !{i32 7, %struct.SamplerState* bitcast (%dx.types.Handle* @"\01?Material_Texture2D_3Sampler@@3USamplerState@@A" to %struct.SamplerState*), !"Material_Texture2D_3Sampler", i32 0, i32 7, i32 1, i32 0, null}
!56 = !{i32 8, %struct.SamplerState* bitcast (%dx.types.Handle* @"\01?Material_Texture2D_4Sampler@@3USamplerState@@A" to %struct.SamplerState*), !"Material_Texture2D_4Sampler", i32 0, i32 8, i32 1, i32 0, null}
!57 = !{i32 9, %struct.SamplerState* bitcast (%dx.types.Handle* @"\01?Material_Texture2D_5Sampler@@3USamplerState@@A" to %struct.SamplerState*), !"Material_Texture2D_5Sampler", i32 0, i32 9, i32 1, i32 0, null}
!58 = !{i32 10, %struct.SamplerState* bitcast (%dx.types.Handle* @"\01?Material_Texture2D_6Sampler@@3USamplerState@@A" to %struct.SamplerState*), !"Material_Texture2D_6Sampler", i32 0, i32 10, i32 1, i32 0, null}
!59 = !{i32 11, %struct.SamplerState* bitcast (%dx.types.Handle* @"\01?Material_Texture2D_7Sampler@@3USamplerState@@A" to %struct.SamplerState*), !"Material_Texture2D_7Sampler", i32 0, i32 11, i32 1, i32 0, null}
!60 = !{i32 12, %struct.SamplerState* bitcast (%dx.types.Handle* @"\01?Material_Texture2D_8Sampler@@3USamplerState@@A" to %struct.SamplerState*), !"Material_Texture2D_8Sampler", i32 0, i32 12, i32 1, i32 0, null}
!61 = !{i32 13, %struct.SamplerState* bitcast (%dx.types.Handle* @"\01?Material_Texture2D_9Sampler@@3USamplerState@@A" to %struct.SamplerState*), !"Material_Texture2D_9Sampler", i32 0, i32 13, i32 1, i32 0, null}
!62 = !{i32 14, %struct.SamplerState* bitcast (%dx.types.Handle* @"\01?Material_Texture2D_10Sampler@@3USamplerState@@A" to %struct.SamplerState*), !"Material_Texture2D_10Sampler", i32 0, i32 14, i32 1, i32 0, null}
!63 = !{i32 15, %struct.SamplerState* bitcast (%dx.types.Handle* @"\01?Material_Texture2D_11Sampler@@3USamplerState@@A" to %struct.SamplerState*), !"Material_Texture2D_11Sampler", i32 0, i32 15, i32 1, i32 0, null}
!64 = !{i32 16, %struct.SamplerState* bitcast (%dx.types.Handle* @"\01?Material_Texture2D_12Sampler@@3USamplerState@@A" to %struct.SamplerState*), !"Material_Texture2D_12Sampler", i32 0, i32 16, i32 1, i32 0, null}
!65 = !{null, !"", null, !3, !66}
!66 = !{i32 0, i64 8388624, i32 5, !67}
!67 = !{i32 0}
!68 = !{void (%struct.FPackedMaterialClosestHitPayload*, %struct.FRayTracingIntersectionAttributes*)* @"\01?MaterialCHS@@YAXUFPackedMaterialClosestHitPayload@@UFRayTracingIntersectionAttributes@@@Z", !"\01?MaterialCHS@@YAXUFPackedMaterialClosestHitPayload@@UFRayTracingIntersectionAttributes@@@Z", null, null, !69}
!69 = !{i32 8, i32 10, i32 6, i32 64, i32 7, i32 8, i32 5, !67}
!70 = !{!71, !73}
!71 = distinct !{!71, !72, !"\01?internal.CalcPixelMaterialInputs@@YAXUFMaterialPixelParameters@@UFPixelMaterialInputs@@@Z: %PixelMaterialInputs"}
!72 = distinct !{!72, !"\01?internal.CalcPixelMaterialInputs@@YAXUFMaterialPixelParameters@@UFPixelMaterialInputs@@@Z"}
!73 = distinct !{!73, !74, !"\01?internal.CalcMaterialParametersEx@@YAXUFMaterialPixelParameters@@UFPixelMaterialInputs@@V?$vector@M$03@@2_NV?$vector@M$02@@4@Z: %PixelMaterialInputs"}
!74 = distinct !{!74, !"\01?internal.CalcMaterialParametersEx@@YAXUFMaterialPixelParameters@@UFPixelMaterialInputs@@V?$vector@M$03@@2_NV?$vector@M$02@@4@Z"}
!75 = !{!76, !71, !73}
!76 = distinct !{!76, !72, !"\01?internal.CalcPixelMaterialInputs@@YAXUFMaterialPixelParameters@@UFPixelMaterialInputs@@@Z: %Parameters"}
!77 = !{!78, !80, !82, !83}
!78 = distinct !{!78, !79, !"\01?internal.GetVertexFactoryIntermediates@@YA?AUFVertexFactoryIntermediates@@UFVertexFactoryInput@@@Z: %agg.result"}
!79 = distinct !{!79, !"\01?internal.GetVertexFactoryIntermediates@@YA?AUFVertexFactoryIntermediates@@UFVertexFactoryInput@@@Z"}
!80 = distinct !{!80, !81, !"\01?internal.CalcInterpolants@@YAXUFRayCone@@UFRayTracingIntersectionAttributes@@UFVertexFactoryInterpolantsVSToPS@@AIAV?$vector@M$02@@@Z: %Interpolants"}
!81 = distinct !{!81, !"\01?internal.CalcInterpolants@@YAXUFRayCone@@UFRayTracingIntersectionAttributes@@UFVertexFactoryInterpolantsVSToPS@@AIAV?$vector@M$02@@@Z"}
!82 = distinct !{!82, !81, !"\01?internal.CalcInterpolants@@YAXUFRayCone@@UFRayTracingIntersectionAttributes@@UFVertexFactoryInterpolantsVSToPS@@AIAV?$vector@M$02@@@Z: %FaceNormal"}
!83 = distinct !{!83, !84, !"\01?internal.CalcInterpolants@@YAXUFRayCone@@UFRayTracingIntersectionAttributes@@UFVertexFactoryInterpolantsVSToPS@@@Z: %Interpolants"}
!84 = distinct !{!84, !"\01?internal.CalcInterpolants@@YAXUFRayCone@@UFRayTracingIntersectionAttributes@@UFVertexFactoryInterpolantsVSToPS@@@Z"}
!85 = !{!86, !76, !71, !73}
!86 = distinct !{!86, !87, !"\01?internal.GetMaterialSharedSampler@@YA?AUSamplerState@@U1@0@Z: %agg.result"}
!87 = distinct !{!87, !"\01?internal.GetMaterialSharedSampler@@YA?AUSamplerState@@U1@0@Z"}
!88 = !{!89, !91, !92, !94, !95, !96}
!89 = distinct !{!89, !90, !"\01?internal.GetSkyLighting@@YAXUFMaterialPixelParameters@@MV?$vector@M$02@@V?$vector@M$01@@I1I_NAIAV2@4@Z: %OutDiffuseLighting"}
!90 = distinct !{!90, !"\01?internal.GetSkyLighting@@YAXUFMaterialPixelParameters@@MV?$vector@M$02@@V?$vector@M$01@@I1I_NAIAV2@4@Z"}
!91 = distinct !{!91, !90, !"\01?internal.GetSkyLighting@@YAXUFMaterialPixelParameters@@MV?$vector@M$02@@V?$vector@M$01@@I1I_NAIAV2@4@Z: %OutSubsurfaceLighting"}
!92 = distinct !{!92, !93, !"\01?internal.GetPrecomputedIndirectLightingAndSkyLight@@YAXUFMaterialPixelParameters@@UFVertexFactoryInterpolantsVSToPS@@MV?$vector@M$02@@2I_NAIAV3@4AIAM@Z: %OutDiffuseLighting"}
!93 = distinct !{!93, !"\01?internal.GetPrecomputedIndirectLightingAndSkyLight@@YAXUFMaterialPixelParameters@@UFVertexFactoryInterpolantsVSToPS@@MV?$vector@M$02@@2I_NAIAV3@4AIAM@Z"}
!94 = distinct !{!94, !93, !"\01?internal.GetPrecomputedIndirectLightingAndSkyLight@@YAXUFMaterialPixelParameters@@UFVertexFactoryInterpolantsVSToPS@@MV?$vector@M$02@@2I_NAIAV3@4AIAM@Z: %OutSubsurfaceLighting"}
!95 = distinct !{!95, !93, !"\01?internal.GetPrecomputedIndirectLightingAndSkyLight@@YAXUFMaterialPixelParameters@@UFVertexFactoryInterpolantsVSToPS@@MV?$vector@M$02@@2I_NAIAV3@4AIAM@Z: %OutIndirectIrradiance"}
!96 = distinct !{!96, !97, !"\01?internal.GetMaterialPayload@@YAXUFPixelMaterialInputs@@UFMaterialPixelParameters@@UFVertexFactoryInterpolantsVSToPS@@_NUFMaterialClosestHitPayload@@@Z: %Payload"}
!97 = distinct !{!97, !"\01?internal.GetMaterialPayload@@YAXUFPixelMaterialInputs@@UFMaterialPixelParameters@@UFVertexFactoryInterpolantsVSToPS@@_NUFMaterialClosestHitPayload@@@Z"}
!98 = !{!99, !101, !103, !80, !82, !83}
!99 = distinct !{!99, !100, !"\01?internal.LoadTriangleBaseAttributes@@YA?AUFTriangleBaseAttributes@@UByteAddressBuffer@@II0III@Z: %agg.result"}
!100 = distinct !{!100, !"\01?internal.LoadTriangleBaseAttributes@@YA?AUFTriangleBaseAttributes@@UByteAddressBuffer@@II0III@Z"}
!101 = distinct !{!101, !102, !"\01?internal.LoadTriangleBaseAttributes@@YA?AUFTriangleBaseAttributes@@I@Z: %agg.result"}
!102 = distinct !{!102, !"\01?internal.LoadTriangleBaseAttributes@@YA?AUFTriangleBaseAttributes@@I@Z"}
!103 = distinct !{!103, !104, !"\01?internal.LoadVertexFactoryInputForHGS@@YA?AUFVertexFactoryInput@@IH@Z: %agg.result"}
!104 = distinct !{!104, !"\01?internal.LoadVertexFactoryInputForHGS@@YA?AUFVertexFactoryInput@@IH@Z"}
!105 = !{!106, !108, !78, !80, !82, !83}
!106 = distinct !{!106, !107, !"\01?internal.GetInstanceSceneData@@YA?AUFInstanceSceneData@@II_N@Z: %agg.result"}
!107 = distinct !{!107, !"\01?internal.GetInstanceSceneData@@YA?AUFInstanceSceneData@@II_N@Z"}
!108 = distinct !{!108, !109, !"\01?internal.GetSceneDataIntermediates@@YA?AUFSceneDataIntermediates@@II@Z: %agg.result"}
!109 = distinct !{!109, !"\01?internal.GetSceneDataIntermediates@@YA?AUFSceneDataIntermediates@@II@Z"}
!110 = !{!111, !92, !94, !95, !96}
!111 = distinct !{!111, !112, !"\01?internal.GetVolumetricLightmapSH3@@YA?AUFThreeBandSHVectorRGB@@V?$vector@M$02@@@Z: %agg.result"}
!112 = distinct !{!112, !"\01?internal.GetVolumetricLightmapSH3@@YA?AUFThreeBandSHVectorRGB@@V?$vector@M$02@@@Z"}
!113 = !{!114, !116, !117, !118, !111, !92, !94, !95, !96}
!114 = distinct !{!114, !115, !"\01?internal.GetVolumetricLightmapSHCoefficients0@@YAXV?$vector@M$02@@AIAV1@AIAV?$vector@M$03@@22@Z: %AmbientVector"}
!115 = distinct !{!115, !"\01?internal.GetVolumetricLightmapSHCoefficients0@@YAXV?$vector@M$02@@AIAV1@AIAV?$vector@M$03@@22@Z"}
!116 = distinct !{!116, !115, !"\01?internal.GetVolumetricLightmapSHCoefficients0@@YAXV?$vector@M$02@@AIAV1@AIAV?$vector@M$03@@22@Z: %SHCoefficients0Red"}
!117 = distinct !{!117, !115, !"\01?internal.GetVolumetricLightmapSHCoefficients0@@YAXV?$vector@M$02@@AIAV1@AIAV?$vector@M$03@@22@Z: %SHCoefficients0Green"}
!118 = distinct !{!118, !115, !"\01?internal.GetVolumetricLightmapSHCoefficients0@@YAXV?$vector@M$02@@AIAV1@AIAV?$vector@M$03@@22@Z: %SHCoefficients0Blue"}
!119 = !{!96}
!120 = !{!121, !121, i64 0}
!121 = !{!"float", !122, i64 0}
!122 = !{!"omnipotent char", !123, i64 0}
!123 = !{!"Simple C/C++ TBAA"}
!124 = !{!125, !125, i64 0}
!125 = !{!"int", !122, i64 0}
!126 = !{!127}
!127 = distinct !{!127, !128, !"\01?internal.LoadVertexFactoryInputForHGS@@YA?AUFVertexFactoryInput@@IH@Z: %agg.result"}
!128 = distinct !{!128, !"\01?internal.LoadVertexFactoryInputForHGS@@YA?AUFVertexFactoryInput@@IH@Z"}
!129 = distinct !{!129, !"dx.controlflow.hints", i32 1}
!130 = !{!131}
!131 = distinct !{!131, !132, !"\01?internal.GetVertexFactoryIntermediates@@YA?AUFVertexFactoryIntermediates@@UFVertexFactoryInput@@@Z: %agg.result"}
!132 = distinct !{!132, !"\01?internal.GetVertexFactoryIntermediates@@YA?AUFVertexFactoryIntermediates@@UFVertexFactoryInput@@@Z"}
!133 = !{!134}
!134 = distinct !{!134, !135, !"\01?internal.GetRayCone@FPackedMaterialClosestHitPayload@@QAA?AUFRayCone@@XZ: %agg.result"}
!135 = distinct !{!135, !"\01?internal.GetRayCone@FPackedMaterialClosestHitPayload@@QAA?AUFRayCone@@XZ"}
!136 = !{!80, !82, !83}
!137 = !{!103, !80, !82, !83}
!138 = distinct !{!138, !"dx.controlflow.hints", i32 1}
